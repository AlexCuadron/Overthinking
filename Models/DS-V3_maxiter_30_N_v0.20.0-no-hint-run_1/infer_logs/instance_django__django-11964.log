2025-01-14 15:33:19,766 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_q3bmxm3tgkgvwthh_qroup3d3os79ipoo
2025-01-14 15:33:19,769 - INFO - [runtime 2866f0b8-2f34-4cf5-b26d-379d6c3d1de2-14af2d096dace977] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_q3bmxm3tgkgvwthh_qroup3d3os79ipoo
2025-01-14 15:33:20,826 - INFO - [runtime 2866f0b8-2f34-4cf5-b26d-379d6c3d1de2-14af2d096dace977] Container started: openhands-runtime-2866f0b8-2f34-4cf5-b26d-379d6c3d1de2-14af2d096dace977. VSCode URL: None
2025-01-14 15:33:20,827 - INFO - [runtime 2866f0b8-2f34-4cf5-b26d-379d6c3d1de2-14af2d096dace977] Waiting for client to become ready at http://localhost:37447...
2025-01-14 15:34:40,662 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_q3bmxm3tgkgvwthh_qroup3d3os79ipoo
2025-01-14 15:34:40,664 - INFO - [runtime ed847cf5-64db-41d2-a455-cbff85082153-77934a474ceadaca] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_q3bmxm3tgkgvwthh_qroup3d3os79ipoo
2025-01-14 15:34:42,024 - INFO - [runtime ed847cf5-64db-41d2-a455-cbff85082153-77934a474ceadaca] Container started: openhands-runtime-ed847cf5-64db-41d2-a455-cbff85082153-77934a474ceadaca. VSCode URL: None
2025-01-14 15:34:42,025 - INFO - [runtime ed847cf5-64db-41d2-a455-cbff85082153-77934a474ceadaca] Waiting for client to become ready at http://localhost:32179...
2025-01-14 15:35:12,128 - INFO - [runtime ed847cf5-64db-41d2-a455-cbff85082153-77934a474ceadaca] Runtime is ready.
2025-01-14 15:35:12,267 - INFO - ------------------------------
2025-01-14 15:35:12,267 - INFO - BEGIN Runtime Initialization Fn
2025-01-14 15:35:12,267 - INFO - ------------------------------
2025-01-14 15:35:12,267 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-11964' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-14 15:35:12,895 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:12,896 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-14 15:35:13,520 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:13,521 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-14 15:35:14,148 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:14,161 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-14 15:35:14,815 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=django__django-11964
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:14,816 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-14 15:35:15,446 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:15,447 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-14 15:35:15,447 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-14 15:35:21,710 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__3.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:21,740 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.1
2025-01-14 15:35:22,402 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:22,402 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-14 15:35:23,542 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at fc2b1cc926 Fixed #30904 -- Doc'd caveat about using filtered queryset with select_for_update() on MySQL.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:23,543 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-14 15:35:24,169 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:24,170 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-14 15:35:24,831 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:24,831 - INFO - ------------------------------
2025-01-14 15:35:24,831 - INFO - END Runtime Initialization Fn
2025-01-14 15:35:24,831 - INFO - ------------------------------
2025-01-14 15:35:24,833 - INFO - Function calling not enabled for model deepseek/deepseek-chat. Mocking function calling via prompting.
2025-01-14 15:35:24,849 - INFO - [runtime ed847cf5-64db-41d2-a455-cbff85082153-77934a474ceadaca] Found 0 local microagents.
2025-01-14 15:35:24,882 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-14 15:35:24,883 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-14 15:35:28,877 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-14 15:35:35,086 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-14 15:35:42,589 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-14 15:35:51,388 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-14 15:35:59,203 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-14 15:36:08,548 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-14 15:36:18,480 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-14 15:36:24,484 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-14 15:36:30,820 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-14 15:36:41,553 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-14 15:36:50,001 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-14 15:36:54,085 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-14 15:36:58,907 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-14 15:37:06,714 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-14 15:37:11,772 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-14 15:37:18,540 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-14 15:37:24,883 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-14 15:37:37,017 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-14 15:37:47,225 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-14 15:37:52,096 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-14 15:38:02,124 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-14 15:38:07,671 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-14 15:38:17,486 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-14 15:38:22,729 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-14 15:38:31,842 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-14 15:38:39,906 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-14 15:38:44,669 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-14 15:38:55,378 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-14 15:39:00,661 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-14 15:39:09,646 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-14 15:39:09,646 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-14 15:39:09,647 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-14 15:39:09,647 - WARNING - Stopping agent due to traffic control
2025-01-14 15:39:09,647 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-14 15:39:10,101 - INFO - ------------------------------
2025-01-14 15:39:10,101 - INFO - BEGIN Runtime Completion Fn
2025-01-14 15:39:10,101 - INFO - ------------------------------
2025-01-14 15:39:10,101 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.1
2025-01-14 15:39:10,729 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:39:10,729 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-14 15:39:11,357 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:39:11,357 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-14 15:39:11,987 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:39:11,988 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached fc2b1cc926e34041953738e58fa6ad3053059b22
2025-01-14 15:39:12,617 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "efa8fde604db",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/django/db/models/enums.py b/django/db/models/enums.py
index bbe362a6ab..ed6a54256b 100644
--- a/django/db/models/enums.py
+++ b/django/db/models/enums.py
@@ -60,7 +60,8 @@ class ChoicesMeta(enum.EnumMeta):

 class Choices(enum.Enum, metaclass=ChoicesMeta):
     """Class for creating enumerated choices."""
-    pass
+    def __str__(self):
+        return str(self.value)


 class IntegerChoices(int, Choices):
@@ -73,3 +74,20 @@ class TextChoices(str, Choices):

     def _generate_next_value_(name, start, count, last_values):
         return name
+
+    def __str__(self):
+        return str(self.value)
+
+    def __format__(self, format_spec):
+        return format(str(self.value), format_spec)
+
+    def __eq__(self, other):
+        if isinstance(other, str):
+            return str(self.value) == other
+        return super().__eq__(other)
+
+    def __str__(self):
+        return str(self.value)
+
+    def __format__(self, format_spec):
+        return format(str(self.value), format_spec)
diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index d610dc86f0..2453381880 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -972,6 +972,22 @@ class CharField(Field):
         super().__init__(*args, **kwargs)
         self.validators.append(validators.MaxLengthValidator(self.max_length))

+    def to_python(self, value):
+        value = super().to_python(value)
+        if value is None:
+            return value
+        if hasattr(value, 'value'):  # Handle enum values
+            return str(value.value)
+        return str(value)
+
+    def get_prep_value(self, value):
+        value = super().get_prep_value(value)
+        if value is None:
+            return value
+        if hasattr(value, 'value'):  # Handle enum values
+            return str(value.value)
+        return str(value)
+
     def check(self, **kwargs):
         return [
             *super().check(**kwargs),
diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py
index 189fb4fa44..e7844299d6 100644
--- a/django/db/models/query_utils.py
+++ b/django/db/models/query_utils.py
@@ -128,6 +128,11 @@ class DeferredAttribute:
             return self
         data = instance.__dict__
         field_name = self.field.attname
+        if field_name in data:
+            value = data[field_name]
+            if hasattr(value, 'value'):  # Handle enum values
+                return str(value.value)
+            return value
         if data.get(field_name, self) is self:
             # Let's see if the field is part of the parent chain. If so we
             # might be able to reuse the already loaded value. Refs #18343.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:39:12,617 - INFO - ------------------------------
2025-01-14 15:39:12,617 - INFO - END Runtime Completion Fn
2025-01-14 15:39:12,617 - INFO - ------------------------------
2025-01-14 15:39:12,617 - INFO - Got git diff for instance django__django-11964:
--------
diff --git a/django/db/models/enums.py b/django/db/models/enums.py
index bbe362a6ab..ed6a54256b 100644
--- a/django/db/models/enums.py
+++ b/django/db/models/enums.py
@@ -60,7 +60,8 @@ class ChoicesMeta(enum.EnumMeta):

 class Choices(enum.Enum, metaclass=ChoicesMeta):
     """Class for creating enumerated choices."""
-    pass
+    def __str__(self):
+        return str(self.value)


 class IntegerChoices(int, Choices):
@@ -73,3 +74,20 @@ class TextChoices(str, Choices):

     def _generate_next_value_(name, start, count, last_values):
         return name
+
+    def __str__(self):
+        return str(self.value)
+
+    def __format__(self, format_spec):
+        return format(str(self.value), format_spec)
+
+    def __eq__(self, other):
+        if isinstance(other, str):
+            return str(self.value) == other
+        return super().__eq__(other)
+
+    def __str__(self):
+        return str(self.value)
+
+    def __format__(self, format_spec):
+        return format(str(self.value), format_spec)
diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index d610dc86f0..2453381880 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -972,6 +972,22 @@ class CharField(Field):
         super().__init__(*args, **kwargs)
         self.validators.append(validators.MaxLengthValidator(self.max_length))

+    def to_python(self, value):
+        value = super().to_python(value)
+        if value is None:
+            return value
+        if hasattr(value, 'value'):  # Handle enum values
+            return str(value.value)
+        return str(value)
+
+    def get_prep_value(self, value):
+        value = super().get_prep_value(value)
+        if value is None:
+            return value
+        if hasattr(value, 'value'):  # Handle enum values
+            return str(value.value)
+        return str(value)
+
     def check(self, **kwargs):
         return [
             *super().check(**kwargs),
diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py
index 189fb4fa44..e7844299d6 100644
--- a/django/db/models/query_utils.py
+++ b/django/db/models/query_utils.py
@@ -128,6 +128,11 @@ class DeferredAttribute:
             return self
         data = instance.__dict__
         field_name = self.field.attname
+        if field_name in data:
+            value = data[field_name]
+            if hasattr(value, 'value'):  # Handle enum values
+                return str(value.value)
+            return value
         if data.get(field_name, self) is self:
             # Let's see if the field is part of the parent chain. If so we
             # might be able to reuse the already loaded value. Refs #18343.
--------
2025-01-14 15:39:14,471 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.django_s_django-14915. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-14 15:39:14,471 - INFO - Logging LLM completions for instance django__django-14915 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/django__django-14915
