2025-01-14 15:46:16,423 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_sy78xyat261506kx_qroup3d3os79ipoo
2025-01-14 15:46:16,426 - INFO - [runtime 0a1f499f-6ba1-42f3-830a-819a57133466-dc999196a94117b5] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_sy78xyat261506kx_qroup3d3os79ipoo
2025-01-14 15:46:17,091 - INFO - [runtime 0a1f499f-6ba1-42f3-830a-819a57133466-dc999196a94117b5] Container started: openhands-runtime-0a1f499f-6ba1-42f3-830a-819a57133466-dc999196a94117b5. VSCode URL: None
2025-01-14 15:46:17,092 - INFO - [runtime 0a1f499f-6ba1-42f3-830a-819a57133466-dc999196a94117b5] Waiting for client to become ready at http://localhost:30353...
2025-01-14 15:46:39,161 - INFO - [runtime 0a1f499f-6ba1-42f3-830a-819a57133466-dc999196a94117b5] Runtime is ready.
2025-01-14 15:46:39,803 - INFO - ------------------------------
2025-01-14 15:46:39,803 - INFO - BEGIN Runtime Initialization Fn
2025-01-14 15:46:39,803 - INFO - ------------------------------
2025-01-14 15:46:39,803 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sympy__sympy-13031' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-14 15:46:40,435 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:46:40,435 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-14 15:46:41,062 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:46:41,062 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-14 15:46:41,697 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:46:41,706 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-14 15:46:42,360 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=sympy__sympy-13031
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:46:42,360 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-14 15:46:42,988 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:46:42,989 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-14 15:46:42,989 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-14 15:46:45,126 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sympy__sympy__1.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:46:45,127 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sympy__sympy__1.1
2025-01-14 15:46:45,753 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:46:45,754 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-14 15:46:46,380 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 2dfa7457f2 Fix rever commands in the release README
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:46:46,381 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-14 15:46:47,012 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:46:47,012 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-14 15:46:47,639 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:46:47,640 - INFO - ------------------------------
2025-01-14 15:46:47,640 - INFO - END Runtime Initialization Fn
2025-01-14 15:46:47,640 - INFO - ------------------------------
2025-01-14 15:46:47,641 - INFO - Function calling not enabled for model deepseek/deepseek-chat. Mocking function calling via prompting.
2025-01-14 15:46:47,658 - INFO - [runtime 0a1f499f-6ba1-42f3-830a-819a57133466-dc999196a94117b5] Found 0 local microagents.
2025-01-14 15:46:47,661 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-14 15:46:47,662 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-14 15:46:51,293 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-14 15:46:59,302 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-14 15:47:04,126 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-14 15:47:09,524 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-14 15:47:12,824 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-14 15:47:17,858 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-14 15:47:23,320 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-14 15:47:36,223 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-14 15:47:40,664 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-14 15:47:54,634 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-14 15:47:58,327 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-14 15:48:03,323 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-14 15:48:19,363 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-14 15:48:25,552 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-14 15:48:41,223 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-14 15:48:48,431 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-14 15:48:53,361 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-14 15:49:02,274 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-14 15:49:07,159 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-14 15:49:25,545 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-14 15:49:30,617 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-14 15:49:35,929 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-14 15:49:41,486 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-14 15:49:48,077 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-14 15:50:14,379 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-14 15:50:20,498 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-14 15:50:25,437 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-14 15:50:47,217 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-14 15:50:52,406 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-14 15:51:12,976 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-14 15:51:12,976 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-14 15:51:12,977 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-14 15:51:12,977 - WARNING - Stopping agent due to traffic control
2025-01-14 15:51:12,978 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-14 15:51:13,919 - INFO - ------------------------------
2025-01-14 15:51:13,919 - INFO - BEGIN Runtime Completion Fn
2025-01-14 15:51:13,919 - INFO - ------------------------------
2025-01-14 15:51:13,920 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sympy__sympy__1.1
2025-01-14 15:51:14,547 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:51:14,548 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-14 15:51:15,174 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:51:15,174 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-14 15:51:15,798 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:51:15,798 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 2dfa7457f20ee187fbb09b5b6a1631da4458388c
2025-01-14 15:51:16,424 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "ee5591a04598",
  "working_dir": "/workspace/sympy__sympy__1.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py
index 7ef51bc847..cf52c93cd9 100644
--- a/sympy/matrices/common.py
+++ b/sympy/matrices/common.py
@@ -147,6 +147,10 @@ def _eval_row_insert(self, pos, other):
         return self._new(self.rows + other.rows, self.cols, entries)

     def _eval_row_join(self, other):
+        # Handle zero-row matrices
+        if self.rows == 0 or other.rows == 0:
+            return classof(self, other)._new(0, self.cols + other.cols, [])
+
         cols = self.cols

         def entry(i, j):
@@ -377,8 +381,27 @@ def hstack(cls, *args):
         if len(args) == 0:
             return cls._new()

-        kls = type(args[0])
-        return reduce(kls.row_join, args)
+        # Handle zero-row matrices specially
+        if any(arg.rows == 0 for arg in args):
+            # For zero-row matrices, return matrix with sum of columns
+            # but only if all matrices have zero rows
+            if all(arg.rows == 0 for arg in args):
+                total_cols = sum(arg.cols for arg in args)
+                return cls._new(0, total_cols, [])
+            else:
+                # If some matrices have zero rows and others don't,
+                # return matrix with zero rows and minimum number of columns
+                min_cols = min(arg.cols for arg in args)
+                return cls._new(0, min_cols, [])
+
+        # If all matrices have the same number of rows, proceed normally
+        if len(set(arg.rows for arg in args)) == 1:
+            kls = type(args[0])
+            return reduce(kls.row_join, args)
+
+        # If matrices have different number of rows, return zero-row matrix
+        total_cols = sum(arg.cols for arg in args)
+        return cls._new(0, total_cols, [])

     def reshape(self, rows, cols):
         """Reshape the matrix. Total number of elements must remain the same.
@@ -475,6 +498,19 @@ def row_join(self, other):
         row
         col_join
         """
+        # Handle zero-row matrices specially
+        if self.rows == 0 or other.rows == 0:
+            # For zero-row matrices, return matrix with sum of columns
+            # but only if both matrices have zero rows
+            if self.rows == 0 and other.rows == 0:
+                total_cols = self.cols + other.cols
+                return self._new(0, total_cols, [])
+            else:
+                # If one matrix has zero rows and the other doesn't,
+                # return matrix with zero rows and minimum number of columns
+                min_cols = min(self.cols, other.cols)
+                return self._new(0, min_cols, [])
+
         # A null matrix can always be stacked (see  #10770)
         if self.cols == 0 and self.rows != other.rows:
             return self._new(other.rows, 0, []).row_join(other)
diff --git a/test_hstack.py b/test_hstack.py
new file mode 100644
index 0000000000..8ee07ec412
--- /dev/null
+++ b/test_hstack.py
@@ -0,0 +1,13 @@
+import sympy as sy
+
+M1 = sy.Matrix.zeros(0, 0)
+M2 = sy.Matrix.zeros(0, 1)
+M3 = sy.Matrix.zeros(0, 2)
+M4 = sy.Matrix.zeros(0, 3)
+print("Shape with zero rows:", sy.Matrix.hstack(M1, M2, M3, M4).shape)
+
+M1 = sy.Matrix.zeros(1, 0)
+M2 = sy.Matrix.zeros(1, 1)
+M3 = sy.Matrix.zeros(1, 2)
+M4 = sy.Matrix.zeros(1, 3)
+print("Shape with one row:", sy.Matrix.hstack(M1, M2, M3, M4).shape)
\ No newline at end of file
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:51:16,425 - INFO - ------------------------------
2025-01-14 15:51:16,425 - INFO - END Runtime Completion Fn
2025-01-14 15:51:16,425 - INFO - ------------------------------
2025-01-14 15:51:16,425 - INFO - Got git diff for instance sympy__sympy-13031:
--------
diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py
index 7ef51bc847..cf52c93cd9 100644
--- a/sympy/matrices/common.py
+++ b/sympy/matrices/common.py
@@ -147,6 +147,10 @@ def _eval_row_insert(self, pos, other):
         return self._new(self.rows + other.rows, self.cols, entries)

     def _eval_row_join(self, other):
+        # Handle zero-row matrices
+        if self.rows == 0 or other.rows == 0:
+            return classof(self, other)._new(0, self.cols + other.cols, [])
+
         cols = self.cols

         def entry(i, j):
@@ -377,8 +381,27 @@ def hstack(cls, *args):
         if len(args) == 0:
             return cls._new()

-        kls = type(args[0])
-        return reduce(kls.row_join, args)
+        # Handle zero-row matrices specially
+        if any(arg.rows == 0 for arg in args):
+            # For zero-row matrices, return matrix with sum of columns
+            # but only if all matrices have zero rows
+            if all(arg.rows == 0 for arg in args):
+                total_cols = sum(arg.cols for arg in args)
+                return cls._new(0, total_cols, [])
+            else:
+                # If some matrices have zero rows and others don't,
+                # return matrix with zero rows and minimum number of columns
+                min_cols = min(arg.cols for arg in args)
+                return cls._new(0, min_cols, [])
+
+        # If all matrices have the same number of rows, proceed normally
+        if len(set(arg.rows for arg in args)) == 1:
+            kls = type(args[0])
+            return reduce(kls.row_join, args)
+
+        # If matrices have different number of rows, return zero-row matrix
+        total_cols = sum(arg.cols for arg in args)
+        return cls._new(0, total_cols, [])

     def reshape(self, rows, cols):
         """Reshape the matrix. Total number of elements must remain the same.
@@ -475,6 +498,19 @@ def row_join(self, other):
         row
         col_join
         """
+        # Handle zero-row matrices specially
+        if self.rows == 0 or other.rows == 0:
+            # For zero-row matrices, return matrix with sum of columns
+            # but only if both matrices have zero rows
+            if self.rows == 0 and other.rows == 0:
+                total_cols = self.cols + other.cols
+                return self._new(0, total_cols, [])
+            else:
+                # If one matrix has zero rows and the other doesn't,
+                # return matrix with zero rows and minimum number of columns
+                min_cols = min(self.cols, other.cols)
+                return self._new(0, min_cols, [])
+
         # A null matrix can always be stacked (see  #10770)
         if self.cols == 0 and self.rows != other.rows:
             return self._new(other.rows, 0, []).row_join(other)
diff --git a/test_hstack.py b/test_hstack.py
new file mode 100644
index 0000000000..8ee07ec412
--- /dev/null
+++ b/test_hstack.py
@@ -0,0 +1,13 @@
+import sympy as sy
+
+M1 = sy.Matrix.zeros(0, 0)
+M2 = sy.Matrix.zeros(0, 1)
+M3 = sy.Matrix.zeros(0, 2)
+M4 = sy.Matrix.zeros(0, 3)
+print("Shape with zero rows:", sy.Matrix.hstack(M1, M2, M3, M4).shape)
+
+M1 = sy.Matrix.zeros(1, 0)
+M2 = sy.Matrix.zeros(1, 1)
+M3 = sy.Matrix.zeros(1, 2)
+M4 = sy.Matrix.zeros(1, 3)
+print("Shape with one row:", sy.Matrix.hstack(M1, M2, M3, M4).shape)
\ No newline at end of file
--------
