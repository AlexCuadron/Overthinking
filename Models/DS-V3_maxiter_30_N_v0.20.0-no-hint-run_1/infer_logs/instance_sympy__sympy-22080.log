2025-01-15 17:07:25,384 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_s9lg19ey9yjwi4q3_ddt2mlbw5vupuuj5
2025-01-15 17:09:54,293 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_s9lg19ey9yjwi4q3_ddt2mlbw5vupuuj5] build finished.
2025-01-15 17:09:54,309 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_s9lg19ey9yjwi4q3_ddt2mlbw5vupuuj5] with more generic tag [oh_v0.20.0_s9lg19ey9yjwi4q3]
2025-01-15 17:09:54,311 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_s9lg19ey9yjwi4q3_ddt2mlbw5vupuuj5, oh_v0.20.0_s9lg19ey9yjwi4q3] built successfully
2025-01-15 17:09:54,319 - INFO - [runtime cbfbe228-7039-4c4f-9b16-49846553f90f-4e74184c06d6a7d5] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_s9lg19ey9yjwi4q3_ddt2mlbw5vupuuj5
2025-01-15 17:09:55,643 - INFO - [runtime cbfbe228-7039-4c4f-9b16-49846553f90f-4e74184c06d6a7d5] Container started: openhands-runtime-cbfbe228-7039-4c4f-9b16-49846553f90f-4e74184c06d6a7d5. VSCode URL: None
2025-01-15 17:09:55,643 - INFO - [runtime cbfbe228-7039-4c4f-9b16-49846553f90f-4e74184c06d6a7d5] Waiting for client to become ready at http://localhost:36944...
2025-01-15 17:10:21,720 - INFO - [runtime cbfbe228-7039-4c4f-9b16-49846553f90f-4e74184c06d6a7d5] Runtime is ready.
2025-01-15 17:10:22,357 - INFO - ------------------------------
2025-01-15 17:10:22,358 - INFO - BEGIN Runtime Initialization Fn
2025-01-15 17:10:22,358 - INFO - ------------------------------
2025-01-15 17:10:22,358 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sympy__sympy-22080' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-15 17:10:22,981 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:10:22,981 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-15 17:10:23,607 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:10:23,607 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-15 17:10:24,234 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:10:24,242 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-15 17:10:24,866 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=sympy__sympy-22080
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:10:24,866 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-15 17:10:25,490 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:10:25,490 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-15 17:10:25,490 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-15 17:10:26,121 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sympy__sympy__1.10
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:10:26,121 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sympy__sympy__1.10
2025-01-15 17:10:26,743 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace/sympy__sympy__1.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:10:26,743 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-15 17:10:27,366 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace/sympy__sympy__1.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 3f8c8c2377 Merge pull request #22064 from oscargus/utilitiescleanup2
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:10:27,367 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-15 17:10:27,991 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace/sympy__sympy__1.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:10:27,991 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-15 17:10:28,616 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace/sympy__sympy__1.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:10:28,616 - INFO - ------------------------------
2025-01-15 17:10:28,616 - INFO - END Runtime Initialization Fn
2025-01-15 17:10:28,617 - INFO - ------------------------------
2025-01-15 17:10:28,618 - INFO - Function calling not enabled for model deepseek/deepseek-chat. Mocking function calling via prompting.
2025-01-15 17:10:28,630 - INFO - [runtime cbfbe228-7039-4c4f-9b16-49846553f90f-4e74184c06d6a7d5] Found 0 local microagents.
2025-01-15 17:10:28,631 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-15 17:10:28,632 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-15 17:10:32,267 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-15 17:10:41,970 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-15 17:10:49,028 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-15 17:10:59,201 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-15 17:11:03,017 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-15 17:11:09,073 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-15 17:11:17,474 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-15 17:11:22,862 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-15 17:11:41,780 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-15 17:11:51,020 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-15 17:12:02,162 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-15 17:12:07,638 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-15 17:12:19,573 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-15 17:12:36,320 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-15 17:12:48,268 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-15 17:13:00,831 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-15 17:13:05,374 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-15 17:13:23,902 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-15 17:13:29,113 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-15 17:13:41,977 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-15 17:13:50,041 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-15 17:13:55,787 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-15 17:14:09,471 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-15 17:14:19,970 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-15 17:14:28,298 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-15 17:14:34,420 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-15 17:14:47,334 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-15 17:14:55,278 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-15 17:15:03,374 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-15 17:15:07,674 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-15 17:15:07,674 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-15 17:15:07,675 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-15 17:15:07,675 - WARNING - Stopping agent due to traffic control
2025-01-15 17:15:07,675 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-15 17:15:07,897 - INFO - ------------------------------
2025-01-15 17:15:07,897 - INFO - BEGIN Runtime Completion Fn
2025-01-15 17:15:07,897 - INFO - ------------------------------
2025-01-15 17:15:07,897 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sympy__sympy__1.10
2025-01-15 17:15:08,519 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace/sympy__sympy__1.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:15:08,519 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-15 17:15:09,141 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace/sympy__sympy__1.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:15:09,141 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-15 17:15:09,765 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace/sympy__sympy__1.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:15:09,765 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 3f8c8c2377cb8e0daaf8073e8d03ac7d87580813
2025-01-15 17:15:10,389 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5ffe9f70ac1b",
  "working_dir": "/workspace/sympy__sympy__1.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/sympy/core/mod.py b/sympy/core/mod.py
index ebe7862aef..cdf26be028 100644
--- a/sympy/core/mod.py
+++ b/sympy/core/mod.py
@@ -132,37 +132,8 @@ def doit(p, q):
                 return cls(net, q)

         elif isinstance(p, Mul):
-            # separating into modulus and non modulus
-            both_l = non_mod_l, mod_l = [], []
-            for arg in p.args:
-                both_l[isinstance(arg, cls)].append(arg)
-
-            if mod_l and all(inner.args[1] == q for inner in mod_l):
-                # finding distributive term
-                non_mod_l = [cls(x, q) for x in non_mod_l]
-                mod = []
-                non_mod = []
-                for j in non_mod_l:
-                    if isinstance(j, cls):
-                        mod.append(j.args[0])
-                    else:
-                        non_mod.append(j)
-                prod_mod = Mul(*mod)
-                prod_non_mod = Mul(*non_mod)
-                prod_mod1 = Mul(*[i.args[0] for i in mod_l])
-                net = prod_mod1*prod_mod
-                return prod_non_mod*cls(net, q)
-
-            if q.is_Integer and q is not S.One:
-                _ = []
-                for i in non_mod_l:
-                    if i.is_Integer and (i % q is not S.Zero):
-                        _.append(i%q)
-                    else:
-                        _.append(i)
-                non_mod_l = _
-
-            p = Mul(*(non_mod_l + mod_l))
+            # Don't distribute multiplication into Mod
+            return cls(p, q, evaluate=False)

         # XXX other possibilities?

diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py
index 0ed6ce2eb1..1a5ed6911a 100644
--- a/sympy/utilities/lambdify.py
+++ b/sympy/utilities/lambdify.py
@@ -43,6 +43,10 @@
 SYMPY = SYMPY_DEFAULT.copy()
 NUMEXPR = NUMEXPR_DEFAULT.copy()

+# Add Mod function to empty modules namespace
+if modules == []:
+    namespace['Mod'] = lambda x, y: x % y
+

 # Mappings between sympy and other modules function names.
 MATH_TRANSLATIONS = {
@@ -127,6 +131,12 @@ def _import(module, reload=False):
     except KeyError:
         raise NameError(
             "'%s' module can't be used for lambdification" % module)
+
+    # Special handling for Mod function when using empty modules
+    if module == []:
+        from sympy.core.mod import Mod as sympy_Mod
+        namespace['Mod'] = sympy_Mod
+        namespace['_Mod'] = sympy_Mod

     # Clear namespace or exit
     if namespace != namespace_default:
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 17:15:10,390 - INFO - ------------------------------
2025-01-15 17:15:10,390 - INFO - END Runtime Completion Fn
2025-01-15 17:15:10,390 - INFO - ------------------------------
2025-01-15 17:15:10,390 - INFO - Got git diff for instance sympy__sympy-22080:
--------
diff --git a/sympy/core/mod.py b/sympy/core/mod.py
index ebe7862aef..cdf26be028 100644
--- a/sympy/core/mod.py
+++ b/sympy/core/mod.py
@@ -132,37 +132,8 @@ def doit(p, q):
                 return cls(net, q)

         elif isinstance(p, Mul):
-            # separating into modulus and non modulus
-            both_l = non_mod_l, mod_l = [], []
-            for arg in p.args:
-                both_l[isinstance(arg, cls)].append(arg)
-
-            if mod_l and all(inner.args[1] == q for inner in mod_l):
-                # finding distributive term
-                non_mod_l = [cls(x, q) for x in non_mod_l]
-                mod = []
-                non_mod = []
-                for j in non_mod_l:
-                    if isinstance(j, cls):
-                        mod.append(j.args[0])
-                    else:
-                        non_mod.append(j)
-                prod_mod = Mul(*mod)
-                prod_non_mod = Mul(*non_mod)
-                prod_mod1 = Mul(*[i.args[0] for i in mod_l])
-                net = prod_mod1*prod_mod
-                return prod_non_mod*cls(net, q)
-
-            if q.is_Integer and q is not S.One:
-                _ = []
-                for i in non_mod_l:
-                    if i.is_Integer and (i % q is not S.Zero):
-                        _.append(i%q)
-                    else:
-                        _.append(i)
-                non_mod_l = _
-
-            p = Mul(*(non_mod_l + mod_l))
+            # Don't distribute multiplication into Mod
+            return cls(p, q, evaluate=False)

         # XXX other possibilities?

diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py
index 0ed6ce2eb1..1a5ed6911a 100644
--- a/sympy/utilities/lambdify.py
+++ b/sympy/utilities/lambdify.py
@@ -43,6 +43,10 @@
 SYMPY = SYMPY_DEFAULT.copy()
 NUMEXPR = NUMEXPR_DEFAULT.copy()

+# Add Mod function to empty modules namespace
+if modules == []:
+    namespace['Mod'] = lambda x, y: x % y
+

 # Mappings between sympy and other modules function names.
 MATH_TRANSLATIONS = {
@@ -127,6 +131,12 @@ def _import(module, reload=False):
     except KeyError:
         raise NameError(
             "'%s' module can't be used for lambdification" % module)
+
+    # Special handling for Mod function when using empty modules
+    if module == []:
+        from sympy.core.mod import Mod as sympy_Mod
+        namespace['Mod'] = sympy_Mod
+        namespace['_Mod'] = sympy_Mod

     # Clear namespace or exit
     if namespace != namespace_default:
--------
