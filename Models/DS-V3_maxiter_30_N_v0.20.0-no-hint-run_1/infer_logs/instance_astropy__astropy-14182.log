2025-01-14 15:33:19,765 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_s0s1vc0ydu1v4kx0_qroup3d3os79ipoo
2025-01-14 15:33:19,768 - INFO - [runtime c689a580-758c-448e-888f-1f4d133d3ac2-dc107c33940cb71a] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_s0s1vc0ydu1v4kx0_qroup3d3os79ipoo
2025-01-14 15:33:20,744 - INFO - [runtime c689a580-758c-448e-888f-1f4d133d3ac2-dc107c33940cb71a] Container started: openhands-runtime-c689a580-758c-448e-888f-1f4d133d3ac2-dc107c33940cb71a. VSCode URL: None
2025-01-14 15:33:20,745 - INFO - [runtime c689a580-758c-448e-888f-1f4d133d3ac2-dc107c33940cb71a] Waiting for client to become ready at http://localhost:32399...
2025-01-14 15:34:40,670 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_s0s1vc0ydu1v4kx0_qroup3d3os79ipoo
2025-01-14 15:34:40,673 - INFO - [runtime 33d2ea4b-c608-47c7-9b49-2c6732500fde-9500d9d9c182ec7d] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_s0s1vc0ydu1v4kx0_qroup3d3os79ipoo
2025-01-14 15:34:41,389 - INFO - [runtime 33d2ea4b-c608-47c7-9b49-2c6732500fde-9500d9d9c182ec7d] Container started: openhands-runtime-33d2ea4b-c608-47c7-9b49-2c6732500fde-9500d9d9c182ec7d. VSCode URL: None
2025-01-14 15:34:41,389 - INFO - [runtime 33d2ea4b-c608-47c7-9b49-2c6732500fde-9500d9d9c182ec7d] Waiting for client to become ready at http://localhost:36398...
2025-01-14 15:35:11,485 - INFO - [runtime 33d2ea4b-c608-47c7-9b49-2c6732500fde-9500d9d9c182ec7d] Runtime is ready.
2025-01-14 15:35:12,121 - INFO - ------------------------------
2025-01-14 15:35:12,121 - INFO - BEGIN Runtime Initialization Fn
2025-01-14 15:35:12,121 - INFO - ------------------------------
2025-01-14 15:35:12,121 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=astropy__astropy-14182' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-14 15:35:12,749 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:12,750 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-14 15:35:13,374 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:13,374 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-14 15:35:14,001 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:14,020 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-14 15:35:14,657 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=astropy__astropy-14182
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:14,657 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-14 15:35:15,308 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:15,308 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-14 15:35:15,308 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-14 15:35:18,993 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: astropy__astropy__5.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:18,993 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/astropy__astropy__5.1
2025-01-14 15:35:19,624 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:19,624 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-14 15:35:20,255 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at a5917978be Merge pull request #14172 from astropy/pre-commit-ci-update-config
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:20,256 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-14 15:35:20,922 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:20,922 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-14 15:35:21,546 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:35:21,547 - INFO - ------------------------------
2025-01-14 15:35:21,547 - INFO - END Runtime Initialization Fn
2025-01-14 15:35:21,547 - INFO - ------------------------------
2025-01-14 15:35:21,549 - INFO - Function calling not enabled for model deepseek/deepseek-chat. Mocking function calling via prompting.
2025-01-14 15:35:21,602 - INFO - [runtime 33d2ea4b-c608-47c7-9b49-2c6732500fde-9500d9d9c182ec7d] Found 0 local microagents.
2025-01-14 15:35:21,605 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-14 15:35:21,606 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-14 15:35:25,698 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-14 15:35:32,429 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-14 15:35:39,061 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-14 15:35:42,818 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-14 15:36:00,748 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-14 15:36:05,274 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-14 15:36:16,266 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-14 15:36:20,213 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-14 15:36:30,790 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-14 15:36:34,554 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-14 15:36:54,822 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-14 15:36:58,851 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-14 15:37:04,658 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-14 15:37:16,279 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-14 15:37:20,466 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-14 15:37:27,169 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-14 15:37:32,081 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-14 15:37:43,593 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-14 15:37:48,050 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-14 15:38:09,541 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-14 15:38:14,124 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-14 15:38:25,788 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-14 15:38:30,280 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-14 15:38:42,429 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-14 15:38:47,695 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-14 15:39:00,011 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-14 15:39:04,153 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-14 15:39:16,901 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-14 15:39:24,303 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-14 15:39:36,969 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-14 15:39:36,969 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-14 15:39:36,970 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-14 15:39:36,970 - WARNING - Stopping agent due to traffic control
2025-01-14 15:39:36,970 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-14 15:39:37,863 - INFO - ------------------------------
2025-01-14 15:39:37,863 - INFO - BEGIN Runtime Completion Fn
2025-01-14 15:39:37,863 - INFO - ------------------------------
2025-01-14 15:39:37,863 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/astropy__astropy__5.1
2025-01-14 15:39:38,490 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:39:38,490 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-14 15:39:39,119 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:39:39,120 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-14 15:39:39,757 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:39:39,757 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached a5917978be39d13cd90b517e1de4e7a539ffaa48
2025-01-14 15:39:40,391 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "59a1db409a97",
  "working_dir": "/workspace/astropy__astropy__5.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/astropy/io/ascii/core.py b/astropy/io/ascii/core.py
index 381b5b13db..abcab1db7f 100644
--- a/astropy/io/ascii/core.py
+++ b/astropy/io/ascii/core.py
@@ -1712,6 +1712,35 @@ def _get_reader(Reader, Inputter=None, Outputter=None, **kwargs):
             reader.data.splitter = BaseSplitter()
         reader.header.splitter.delimiter = kwargs["delimiter"]
         reader.data.splitter.delimiter = kwargs["delimiter"]
+    # Handle header_rows parameter for RST writer
+    if "header_rows" in kwargs and Writer._format_name == "rst":
+        writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
+    # Handle writer-specific parameters
+    if Writer._format_name == "rst":
+        if "header_rows" in kwargs:
+            writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
+    # Handle writer-specific parameters
+    if Writer._format_name == "rst" and "header_rows" in kwargs:
+        writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
+    # Handle writer-specific parameters
+    if Writer._format_name == "rst" and "header_rows" in kwargs:
+        writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
+    # Handle writer-specific parameters
+    if Writer._format_name == "rst" and "header_rows" in kwargs:
+        writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
+    # Handle writer-specific parameters
+    if Writer._format_name == "rst" and "header_rows" in kwargs:
+        writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
+    # Handle writer-specific parameters
+    if Writer._format_name == "rst" and "header_rows" in kwargs:
+        writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
     if "comment" in kwargs:
         reader.header.comment = kwargs["comment"]
         reader.data.comment = kwargs["comment"]
diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py
index abdeba8efb..aae2ec8a0a 100644
--- a/astropy/io/ascii/rst.py
+++ b/astropy/io/ascii/rst.py
@@ -57,10 +57,30 @@ class RST(FixedWidth):
     data_class = SimpleRSTData
     header_class = SimpleRSTHeader

-    def __init__(self):
-        super().__init__(delimiter_pad=None, bookend=False)
-
-    def write(self, lines):
+    def __init__(self, **kwargs):
+        self.header_rows = kwargs.pop('header_rows', [])
+        super().__init__(delimiter_pad=None, bookend=False, **kwargs)
+
+    def write(self, lines, **kwargs):
+        # Get header_rows from kwargs or instance
+        header_rows = kwargs.get('header_rows', self.header_rows)
+
+        # First generate the basic table
         lines = super().write(lines)
+
+        # If we have header rows, modify the header formatting
+        if header_rows:
+            # Split the existing header line
+            header_lines = lines[1].split('\n')
+
+            # Add additional header rows
+            for row in header_rows:
+                header_lines.insert(1, row)
+
+            # Join the header lines back together
+            lines[1] = '\n'.join(header_lines)
+
+        # Add the top and bottom borders
         lines = [lines[1]] + lines + [lines[1]]
+
         return lines
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 15:39:40,392 - INFO - ------------------------------
2025-01-14 15:39:40,392 - INFO - END Runtime Completion Fn
2025-01-14 15:39:40,392 - INFO - ------------------------------
2025-01-14 15:39:40,392 - INFO - Got git diff for instance astropy__astropy-14182:
--------
diff --git a/astropy/io/ascii/core.py b/astropy/io/ascii/core.py
index 381b5b13db..abcab1db7f 100644
--- a/astropy/io/ascii/core.py
+++ b/astropy/io/ascii/core.py
@@ -1712,6 +1712,35 @@ def _get_reader(Reader, Inputter=None, Outputter=None, **kwargs):
             reader.data.splitter = BaseSplitter()
         reader.header.splitter.delimiter = kwargs["delimiter"]
         reader.data.splitter.delimiter = kwargs["delimiter"]
+    # Handle header_rows parameter for RST writer
+    if "header_rows" in kwargs and Writer._format_name == "rst":
+        writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
+    # Handle writer-specific parameters
+    if Writer._format_name == "rst":
+        if "header_rows" in kwargs:
+            writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
+    # Handle writer-specific parameters
+    if Writer._format_name == "rst" and "header_rows" in kwargs:
+        writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
+    # Handle writer-specific parameters
+    if Writer._format_name == "rst" and "header_rows" in kwargs:
+        writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
+    # Handle writer-specific parameters
+    if Writer._format_name == "rst" and "header_rows" in kwargs:
+        writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
+    # Handle writer-specific parameters
+    if Writer._format_name == "rst" and "header_rows" in kwargs:
+        writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
+    # Handle writer-specific parameters
+    if Writer._format_name == "rst" and "header_rows" in kwargs:
+        writer_kwargs["header_rows"] = kwargs.pop("header_rows")
+
     if "comment" in kwargs:
         reader.header.comment = kwargs["comment"]
         reader.data.comment = kwargs["comment"]
diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py
index abdeba8efb..aae2ec8a0a 100644
--- a/astropy/io/ascii/rst.py
+++ b/astropy/io/ascii/rst.py
@@ -57,10 +57,30 @@ class RST(FixedWidth):
     data_class = SimpleRSTData
     header_class = SimpleRSTHeader

-    def __init__(self):
-        super().__init__(delimiter_pad=None, bookend=False)
-
-    def write(self, lines):
+    def __init__(self, **kwargs):
+        self.header_rows = kwargs.pop('header_rows', [])
+        super().__init__(delimiter_pad=None, bookend=False, **kwargs)
+
+    def write(self, lines, **kwargs):
+        # Get header_rows from kwargs or instance
+        header_rows = kwargs.get('header_rows', self.header_rows)
+
+        # First generate the basic table
         lines = super().write(lines)
+
+        # If we have header rows, modify the header formatting
+        if header_rows:
+            # Split the existing header line
+            header_lines = lines[1].split('\n')
+
+            # Add additional header rows
+            for row in header_rows:
+                header_lines.insert(1, row)
+
+            # Join the header lines back together
+            lines[1] = '\n'.join(header_lines)
+
+        # Add the top and bottom borders
         lines = [lines[1]] + lines + [lines[1]]
+
         return lines
--------
2025-01-14 15:39:40,466 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.django_s_django-15851. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-14 15:39:40,466 - INFO - Logging LLM completions for instance django__django-15851 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-chat_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/django__django-15851
