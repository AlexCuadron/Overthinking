diff --git a/sympy/physics/quantum/dagger.py b/sympy/physics/quantum/dagger.py
index 17da3cfd2c..f0c2a43744 100644
--- a/sympy/physics/quantum/dagger.py
+++ b/sympy/physics/quantum/dagger.py
@@ -85,5 +85,13 @@ def __new__(cls, arg):
             return obj
         return Expr.__new__(cls, arg)

+    def __mul__(self, other):
+        from sympy.physics.quantum.operator import IdentityOperator
+
+        if isinstance(other, IdentityOperator):
+            return self
+
+        return super(Dagger, self).__mul__(other)
+
 adjoint.__name__ = "Dagger"
 adjoint._sympyrepr = lambda a, b: "Dagger(%s)" % b._print(a.args[0])
diff --git a/sympy/physics/quantum/operator.py b/sympy/physics/quantum/operator.py
index 306bfee64f..355939291a 100644
--- a/sympy/physics/quantum/operator.py
+++ b/sympy/physics/quantum/operator.py
@@ -177,10 +177,17 @@ def _eval_inverse(self):
         return self**(-1)

     def __mul__(self, other):
+        from sympy.physics.quantum.dagger import Dagger

         if isinstance(other, IdentityOperator):
+            if hasattr(self, '_operator') or isinstance(self, Dagger):
+                return self
             return self

+        if isinstance(other, Dagger):
+            if isinstance(self, IdentityOperator):
+                return other
+
         return Mul(self, other)


@@ -306,8 +313,11 @@ def _print_contents_latex(self, printer, *args):
         return r'{\mathcal{I}}'

     def __mul__(self, other):
+        from sympy.physics.quantum.dagger import Dagger

         if isinstance(other, Operator):
+            if isinstance(other, Dagger):
+                return other
             return other

         return Mul(self, other)
diff --git a/test_dagger_identity.py b/test_dagger_identity.py
new file mode 100644
index 0000000000..ff383afb53
--- /dev/null
+++ b/test_dagger_identity.py
@@ -0,0 +1,9 @@
+from sympy.physics.quantum.dagger import Dagger
+from sympy.physics.quantum.operator import Operator
+from sympy.physics.quantum import IdentityOperator
+
+A = Operator('A')
+Identity = IdentityOperator()
+print("A * Identity:", A * Identity)
+B = Dagger(A)
+print("B * Identity:", B * Identity)
\ No newline at end of file
