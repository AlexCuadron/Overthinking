diff --git a/django/db/models/query.py b/django/db/models/query.py
index d9c9b0db04..17d2598c9a 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -15,7 +15,7 @@ from django.db import (
     DJANGO_VERSION_PICKLE_KEY, IntegrityError, NotSupportedError, connections,
     router, transaction,
 )
-from django.db.models import AutoField, DateField, DateTimeField, sql
+from django.db.models import AutoField, DateField, DateTimeField, sql, models
 from django.db.models.constants import LOOKUP_SEP
 from django.db.models.deletion import Collector
 from django.db.models.expressions import Case, Expression, F, Value, When
@@ -689,8 +689,21 @@ class QuerySet:
         """
         assert not self.query.is_sliced, \
             "Cannot use 'limit' or 'offset' with in_bulk"
-        if field_name != 'pk' and not self.model._meta.get_field(field_name).unique:
-            raise ValueError("in_bulk()'s field_name must be a unique field but %r isn't." % field_name)
+        if field_name != 'pk':
+            field = self.model._meta.get_field(field_name)
+            if not field.unique:
+                # Check if field is unique through constraints or field properties
+                is_unique = (
+                    field.unique or
+                    field._unique or
+                    any(
+                        field.name in constraint.fields
+                        for constraint in self.model._meta.constraints
+                        if isinstance(constraint, models.UniqueConstraint)
+                    )
+                )
+                if not is_unique:
+                    raise ValueError("in_bulk()'s field_name must be a unique field but %r isn't." % field_name)
         if id_list is not None:
             if not id_list:
                 return {}
