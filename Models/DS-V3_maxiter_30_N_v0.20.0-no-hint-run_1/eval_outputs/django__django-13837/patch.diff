diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py
index b8efb9f881..ee55aa3452 100644
--- a/django/utils/autoreload.py
+++ b/django/utils/autoreload.py
@@ -216,19 +216,26 @@ def get_child_arguments():
     executable is reported to not have the .exe extension which can cause bugs
     on reloading.
     """
-    import django.__main__
-    django_main_path = Path(django.__main__.__file__)
-    py_script = Path(sys.argv[0])
-
     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]
-    if py_script == django_main_path:
-        # The server was started with `python -m django runserver`.
-        args += ['-m', 'django']
-        args += sys.argv[1:]
-    elif not py_script.exists():
-        # sys.argv[0] may not exist for several reasons on Windows.
-        # It may exist with a .exe extension or have a -script.py suffix.
-        exe_entrypoint = py_script.with_suffix('.exe')
+
+    if hasattr(sys.modules['__main__'], '__spec__') and sys.modules['__main__'].__spec__ is not None:
+        # Python was started with -m or as a directory/zipfile
+        if sys.modules['__main__'].__spec__.parent:
+            # Python was started with -m pkg
+            args += ['-m', sys.modules['__main__'].__spec__.parent]
+            args += sys.argv[1:]
+            return args
+
+    # Handle direct script execution
+    if len(sys.argv) > 0:
+        if sys.argv[0] == '-m':
+            # Handle -m case separately
+            return [sys.executable] + ['-m'] + sys.argv[1:]
+        py_script = Path(sys.argv[0])
+        if not py_script.exists():
+            # sys.argv[0] may not exist for several reasons on Windows.
+            # It may exist with a .exe extension or have a -script.py suffix.
+            exe_entrypoint = py_script.with_suffix('.exe')
         if exe_entrypoint.exists():
             # Should be executed directly, ignoring sys.executable.
             # TODO: Remove str() when dropping support for PY37.
