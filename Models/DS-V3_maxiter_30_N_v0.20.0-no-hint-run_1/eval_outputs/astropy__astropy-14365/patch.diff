diff --git a/astropy/io/ascii/qdp.py b/astropy/io/ascii/qdp.py
index 83a4f004aa..9fe9057c98 100644
--- a/astropy/io/ascii/qdp.py
+++ b/astropy/io/ascii/qdp.py
@@ -60,16 +60,16 @@ def _line_type(line, delimiter=None):
     ValueError: Unrecognized QDP line...
     """
     _decimal_re = r"[+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?"
-    _command_re = r"READ [TS]ERR(\s+[0-9]+)+"
+    _command_re = r"^\s*read\s+(serr|terr)(\s+[0-9]+)+\s*$"

     sep = delimiter
     if delimiter is None:
         sep = r"\s+"
     _new_re = rf"NO({sep}NO)+"
     _data_re = rf"({_decimal_re}|NO|[-+]?nan)({sep}({_decimal_re}|NO|[-+]?nan))*)"
-    _type_re = rf"^\s*((?P<command>{_command_re})|(?P<new>{_new_re})|(?P<data>{_data_re})?\s*(\!(?P<comment>.*))?\s*$"
+    _type_re = rf"^\s*((?P<command>{_command_re})|(?P<new>{_new_re})|(?P<data>{_data_re})?)\s*(\!(?P<comment>.*))?\s*$"
     _line_type_re = re.compile(_type_re)
-    line = line.strip()
+    line = line.strip().lower()
     if not line:
         return "comment"
     match = _line_type_re.match(line)
@@ -293,11 +293,11 @@ def _get_tables_from_qdp_file(qdp_file, input_colnames=None, delimiter=None):
             # The first time I find data, I define err_specs
             if err_specs == {} and command_lines != "":
                 for cline in command_lines.strip().split("\n"):
-                    command = cline.strip().split()
+                    command = cline.strip().lower().split()
                     # This should never happen, but just in case.
                     if len(command) < 3:
                         continue
-                    err_specs[command[1].lower()] = [int(c) for c in command[2:]]
+                    err_specs[command[1]] = [int(c) for c in command[2:]]
             if colnames is None:
                 colnames = _interpret_err_lines(err_specs, ncol, names=input_colnames)

diff --git a/test.qdp b/test.qdp
new file mode 100644
index 0000000000..b5750561d5
--- /dev/null
+++ b/test.qdp
@@ -0,0 +1,2 @@
+read serr 1 2
+1 0.5 1 0.5
