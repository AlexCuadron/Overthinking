diff --git a/django/utils/formats.py b/django/utils/formats.py
index 3f38322d84..f9f51a1fa1 100644
--- a/django/utils/formats.py
+++ b/django/utils/formats.py
@@ -106,6 +106,23 @@ def get_format(format_type, lang=None, use_l10n=None):
     If use_l10n is provided and is not None, it forces the value to
     be localized (or not), overriding the value of settings.USE_L10N.
     """
+    from django.utils.encoding import force_str
+    # Ensure format_type is a string
+    if hasattr(format_type, '_proxy____cast'):
+        format_type = format_type._proxy____cast()
+    format_type = str(format_type)
+    if not isinstance(format_type, str):
+        format_type = force_str(format_type)
+    if not isinstance(format_type, str):
+        raise TypeError("format_type must be a string")
+    # Ensure format_type is a string before any attribute access
+    format_type = str(format_type)
+    # Ensure format_type is a string before any attribute access
+    format_type = str(format_type)
+    # Ensure format_type is a string before any attribute access
+    format_type = str(format_type)
+    # Ensure format_type is a string before any attribute access
+    format_type = str(format_type)
     if use_l10n is None:
         try:
             use_l10n = settings._USE_L10N_INTERNAL
@@ -125,7 +142,7 @@ def get_format(format_type, lang=None, use_l10n=None):
     val = None
     if use_l10n:
         for module in get_format_modules(lang):
-            val = getattr(module, format_type, None)
+            val = getattr(module, str(format_type), None)
             if val is not None:
                 break
     if val is None:
