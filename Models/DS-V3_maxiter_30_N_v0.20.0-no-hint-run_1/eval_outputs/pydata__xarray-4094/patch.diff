diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 00000000..95024a1a
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,11 @@
+import numpy as np
+import xarray as xr
+
+arr = xr.DataArray(
+    np.arange(3),
+    coords=[("x", [0, 1, 2])],
+)
+data = xr.Dataset({"a": arr, "b": arr})
+stacked = data.to_stacked_array('y', sample_dims=['x'])
+unstacked = stacked.to_unstacked_dataset('y')
+print(unstacked)
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 00000000..185a0830
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,35 @@
+import numpy as np
+import xarray as xr
+
+# Test empty dataset
+empty_data = xr.Dataset()
+try:
+    empty_stacked = empty_data.to_stacked_array('y', sample_dims=[])
+    empty_unstacked = empty_stacked.to_unstacked_dataset('y')
+    print("Empty dataset test passed")
+except Exception as e:
+    print(f"Empty dataset test failed: {e}")
+
+# Test mixed dimensions
+mixed_data = xr.Dataset({
+    'a': xr.DataArray(np.arange(3), coords=[('x', [0, 1, 2])]),
+    'b': xr.DataArray(np.arange(6).reshape(2, 3), coords=[('y', [0, 1]), ('x', [0, 1, 2])])
+})
+try:
+    mixed_stacked = mixed_data.to_stacked_array('z', sample_dims=['x'])
+    mixed_unstacked = mixed_stacked.to_unstacked_dataset('z')
+    print("Mixed dimensions test passed")
+except Exception as e:
+    print(f"Mixed dimensions test failed: {e}")
+
+# Test non-numeric coordinates
+non_numeric_data = xr.Dataset({
+    'a': xr.DataArray(np.arange(3), coords=[('x', ['a', 'b', 'c'])]),
+    'b': xr.DataArray(np.arange(3), coords=[('x', ['a', 'b', 'c'])])
+})
+try:
+    non_numeric_stacked = non_numeric_data.to_stacked_array('y', sample_dims=['x'])
+    non_numeric_unstacked = non_numeric_stacked.to_unstacked_dataset('y')
+    print("Non-numeric coordinates test passed")
+except Exception as e:
+    print(f"Non-numeric coordinates test failed: {e}")
\ No newline at end of file
diff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py
index b0df8749..072687c8 100644
--- a/xarray/core/dataarray.py
+++ b/xarray/core/dataarray.py
@@ -1961,10 +1961,15 @@ class DataArray(AbstractArray, DataWithCoords):
         # pull variables out of datarray
         data_dict = {}
         for k in variables:
-            data_dict[k] = self.sel({variable_dim: k}).squeeze(drop=True)
-
-        # unstacked dataset
-        return Dataset(data_dict)
+            var = self.sel({variable_dim: k})
+            # Only squeeze if there are multiple dimensions
+            if len(var.dims) > 1:
+                var = var.squeeze(drop=True)
+            data_dict[k] = var
+
+        # unstacked dataset with compat='override' to handle single-dim variables
+        from xarray.core.merge import merge
+        return merge([Dataset({k: v}) for k, v in data_dict.items()], compat='override')

     def transpose(self, *dims: Hashable, transpose_coords: bool = True) -> "DataArray":
         """Return a new DataArray object with transposed dimensions.
