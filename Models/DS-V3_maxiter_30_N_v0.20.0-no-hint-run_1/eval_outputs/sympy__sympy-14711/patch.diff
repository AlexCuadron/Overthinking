diff --git a/sympy/physics/vector/vector.py b/sympy/physics/vector/vector.py
index a048ee57f1..9abbeac5df 100644
--- a/sympy/physics/vector/vector.py
+++ b/sympy/physics/vector/vector.py
@@ -57,8 +57,48 @@ def __hash__(self):

     def __add__(self, other):
         """The add operator for Vector. """
-        other = _check_vector(other)
+        if other == 0 or other == 0.0 or other is 0:
+            return self
+        try:
+            other = _check_vector(other)
+        except TypeError:
+            if other == 0 or other == 0.0 or other is 0:
+                return self
+            raise
         return Vector(self.args + other.args)
+
+    def __radd__(self, other):
+        """Reverse add operator for Vector. """
+        if other == 0 or other == 0.0 or other is 0:
+            return self
+        try:
+            return self.__add__(other)
+        except TypeError:
+            if other == 0 or other == 0.0 or other is 0:
+                return self
+            raise
+
+    def __radd__(self, other):
+        """Reverse add operator for Vector. """
+        if other == 0 or other == 0.0 or other is 0:
+            return self
+        try:
+            return self.__add__(other)
+        except TypeError:
+            if other == 0 or other == 0.0 or other is 0:
+                return self
+            raise
+
+    def __radd__(self, other):
+        """Reverse add operator for Vector. """
+        if other == 0 or other == 0.0 or other is 0:
+            return self
+        try:
+            return self.__add__(other)
+        except TypeError:
+            if other == 0 or other == 0.0 or other is 0:
+                return self
+            raise

     def __and__(self, other):
         """Dot product of two vectors.
@@ -721,6 +761,8 @@ def __init__(self, other, want):


 def _check_vector(other):
+    if other == 0 or other == 0.0 or other is 0:
+        return Vector([])
     if not isinstance(other, Vector):
         raise TypeError('A Vector must be supplied')
     return other
