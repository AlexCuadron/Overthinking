diff --git a/django/db/models/query.py b/django/db/models/query.py
index 07d6ffd4ca..e8a4743155 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -991,9 +991,13 @@ class QuerySet:
         # Clear limits and ordering so they can be reapplied
         clone.query.clear_ordering(True)
         clone.query.clear_limits()
-        clone.query.combined_queries = (self.query,) + tuple(qs.query for qs in other_qs)
-        clone.query.combinator = combinator
-        clone.query.combinator_all = all
+        # Check if any query is empty
+        if self.query.is_empty() or any(qs.query.is_empty() for qs in other_qs):
+            clone.query.set_empty()
+        else:
+            clone.query.combined_queries = (self.query,) + tuple(qs.query for qs in other_qs)
+            clone.query.combinator = combinator
+            clone.query.combinator_all = all
         return clone

     def union(self, *other_qs, all=False):
diff --git a/temp.py b/temp.py
new file mode 100644
index 0000000000..fca93ac3f2
--- /dev/null
+++ b/temp.py
@@ -0,0 +1,34 @@
+import django; django.setup()
+from django import forms
+from django.db import models
+
+class Publication(models.Model):
+    pass
+
+class Article(models.Model):
+    publications = models.ManyToManyField(to=Publication, blank=True, null=True)
+
+class ArticleForm(forms.ModelForm):
+    publications = forms.ModelMultipleChoiceField(
+        Publication.objects.filter(id__lt=2).union(
+            Publication.objects.filter(id__gt=5)
+        ),
+        required=False,
+    )
+    class Meta:
+        model = Article
+        fields = ["publications"]
+
+# Create some test publications
+for i in range(1, 11):
+    Publication.objects.create(id=i)
+
+# Test empty form submission
+form = ArticleForm(data={'publications': []})
+if form.is_valid():
+    article = Article.objects.create()
+    form.save(commit=False)
+    article.publications.set(form.cleaned_data['publications'])
+    print("Selected publications:", article.publications.count())
+else:
+    print("Form errors:", form.errors)
\ No newline at end of file
