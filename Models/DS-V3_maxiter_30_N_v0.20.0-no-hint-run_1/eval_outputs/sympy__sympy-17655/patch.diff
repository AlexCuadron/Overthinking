diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py
index 7c978c47be..f3924d8280 100644
--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -213,6 +213,41 @@ def __add__(self, other):
         sympy.geometry.point.Point.translate

         """
+        from sympy.core.mul import Mul
+
+        # Handle case where other is a multiplication involving a Point
+        if isinstance(other, Mul):
+            # Find the Point in the multiplication
+            point = None
+            scalar = 1
+            for arg in other.args:
+                if isinstance(arg, Point):
+                    point = arg
+                else:
+                    scalar *= arg
+            if point is not None:
+                # Create new Point with scaled coordinates
+                scaled_coords = [coord * scalar for coord in point.args]
+                other = Point(scaled_coords, evaluate=False)
+            else:
+                # If no Point found, try to convert other to a Point
+                try:
+                    other = Point(other, evaluate=False)
+                except TypeError:
+                    raise GeometryError("Don't know how to add {} and a Point object".format(other))
+        elif isinstance(other, (int, float)):
+            # Handle case where other is a number
+            other = Point([coord * other for coord in self.args], evaluate=False)
+        elif isinstance(other, Point):
+            # Handle case where other is already a Point
+            pass
+        else:
+            # Handle case where other is not a Point, Mul, or number
+            try:
+                other = Point(other, evaluate=False)
+            except TypeError:
+                raise GeometryError("Don't know how to add {} and a Point object".format(other))
+
         try:
             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))
         except TypeError:
