diff --git a/sympy/core/add.py b/sympy/core/add.py
index 83a5f2aedc..00183a5400 100644
--- a/sympy/core/add.py
+++ b/sympy/core/add.py
@@ -548,8 +548,22 @@ def _eval_is_zero(self):
                     return
             elif a.is_imaginary:
                 im = True
+                nz.append(a)
             elif (S.ImaginaryUnit*a).is_real:
                 im_or_z = True
+                nz.append(a)
+            elif a.is_complex:
+                # Handle general complex numbers by checking if they simplify to zero
+                simplified = a.simplify()
+                if simplified.is_zero:
+                    z += 1
+                else:
+                    re, im_part = a.as_real_imag()
+                    if not re.is_zero:
+                        nz.append(re)
+                    if not im_part.is_zero:
+                        nz.append(S.ImaginaryUnit*im_part)
+                        im = True
             else:
                 return
         if z == len(self.args):
@@ -557,11 +571,20 @@ def _eval_is_zero(self):
         if len(nz) == len(self.args):
             return None
         b = self.func(*nz)
+        # Handle complex numbers by checking both real and imaginary parts
         if b.is_zero:
             if not im_or_z and not im:
                 return True
             if im and not im_or_z:
                 return False
+        elif im:
+            # For complex numbers, check if both real and imaginary parts are zero
+            simplified = self.simplify()
+            if simplified.is_zero:
+                return True
+            re, im = simplified.as_real_imag()
+            if re.is_zero and im.is_zero:
+                return True
         if b.is_zero is False:
             return False
