diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py
index 8743723ea0..50c87746e0 100644
--- a/sympy/printing/latex.py
+++ b/sympy/printing/latex.py
@@ -705,6 +705,12 @@ def _print_Subs(self, subs):
             e[0] + '=' + e[1] for e in zip(latex_old, latex_new))
         return r'\left. %s \right|_{\substack{ %s }}' % (latex_expr,
                                                          latex_subs)
+from sympy.core.mul import Mul
+        # Add parentheses if expression is part of a multiplication
+        if any(isinstance(arg, Mul) for arg in subs.args):
+            return r'\left. \left(%s\right) \right|_{\substack{ %s }}' % (latex_expr, latex_subs)
+        else:
+            return r'\left. %s \right|_{\substack{ %s }}' % (latex_expr, latex_subs)

     def _print_Integral(self, expr):
         tex, symbols = "", []
diff --git a/test_subs_latex.py b/test_subs_latex.py
new file mode 100644
index 0000000000..e093de0604
--- /dev/null
+++ b/test_subs_latex.py
@@ -0,0 +1,6 @@
+from sympy import Subs
+from sympy.abc import x, y
+from sympy.printing.latex import latex
+
+expr = 3*Subs(-x + y, (x,), (1,))
+print(latex(expr))
\ No newline at end of file
