diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py
index c6b511f206..abb3080eaa 100644
--- a/sympy/simplify/simplify.py
+++ b/sympy/simplify/simplify.py
@@ -251,8 +251,24 @@ def posify(eq):
             eq[i] = e.subs(reps)
         return f(eq), {r: s for s, r in reps.items()}

-    reps = {s: Dummy(s.name, positive=True)
-                 for s in eq.free_symbols if s.is_positive is None}
+    reps = {}
+for s in eq.free_symbols:
+    if s.is_positive is None:
+        # Create a copy of the original assumptions
+        assumptions = dict(s.assumptions0)
+        # Force positive=True while preserving other assumptions
+        assumptions['positive'] = True
+        # Ensure finite assumption is properly handled
+        if hasattr(s, 'is_finite') and s.is_finite is not None:
+            assumptions['finite'] = s.is_finite
+            assumptions['infinite'] = not s.is_finite
+        # Create new symbol with all preserved assumptions
+        new_symbol = Dummy(s.name, **assumptions)
+        # Explicitly set assumptions that might not be properly handled
+        if hasattr(s, 'is_finite') and s.is_finite is not None:
+            new_symbol._assumptions['finite'] = s.is_finite
+            new_symbol._assumptions['infinite'] = not s.is_finite
+        reps[s] = new_symbol
     eq = eq.subs(reps)
     return eq, {r: s for s, r in reps.items()}
