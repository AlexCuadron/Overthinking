diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py
index ad4d7d9613..b0c62f17ed 100644
--- a/sympy/printing/latex.py
+++ b/sympy/printing/latex.py
@@ -149,18 +149,26 @@ def __init__(self, settings=None):
                 self._settings['mode'] == 'inline':
             self._settings['fold_short_frac'] = True

-        mul_symbol_table = {
-            None: r" ",
-            "ldot": r" \,.\, ",
-            "dot": r" \cdot ",
-            "times": r" \times "
-        }
-
-        self._settings['mul_symbol_latex'] = \
-            mul_symbol_table[self._settings['mul_symbol']]
-
-        self._settings['mul_symbol_latex_numbers'] = \
-            mul_symbol_table[self._settings['mul_symbol'] or 'dot']
+        # Handle multiplication symbols
+        requested_symbol = self._settings.get('mul_symbol')
+
+        # Predefined symbols
+        if requested_symbol is None:
+            self._settings['mul_symbol_latex'] = " "
+            self._settings['mul_symbol_latex_numbers'] = " \\cdot "
+        elif requested_symbol == "ldot":
+            self._settings['mul_symbol_latex'] = " \\,.\, "
+            self._settings['mul_symbol_latex_numbers'] = " \\,.\, "
+        elif requested_symbol == "dot":
+            self._settings['mul_symbol_latex'] = " \\cdot "
+            self._settings['mul_symbol_latex_numbers'] = " \\cdot "
+        elif requested_symbol == "times":
+            self._settings['mul_symbol_latex'] = " \\times "
+            self._settings['mul_symbol_latex_numbers'] = " \\times "
+        else:
+            # Custom symbol
+            self._settings['mul_symbol_latex'] = " " + str(requested_symbol) + " "
+            self._settings['mul_symbol_latex_numbers'] = " " + str(requested_symbol) + " "

         self._delim_dict = {'(': ')', '[': ']'}

@@ -2085,11 +2093,32 @@ def latex(expr, **settings):
     >>> print(latex((2*tau)**Rational(7,2)))
     8 \sqrt{2} \tau^{\frac{7}{2}}

+    >>> print(latex(3*x*y, mul_symbol=r"\,"))
+    3 \, x \, y
+
+    Not using a print statement for printing, results in double backslashes for
+    r"""
+    Convert the given expression to LaTeX representation.
+
+    >>> from sympy import latex, pi, sin, asin, Integral, Matrix, Rational
+    >>> from sympy.abc import x, y, mu, r, tau
+
+    >>> print(latex((2*tau)**Rational(7,2)))
+    8 \sqrt{2} \tau^{\frac{7}{2}}
+
+    >>> print(latex(3*x*y, mul_symbol=r"\,"))
+    3 \, x \, y
+
     Not using a print statement for printing, results in double backslashes for
     latex commands since that's the way Python escapes backslashes in strings.

     >>> latex((2*tau)**Rational(7,2))
     '8 \\sqrt{2} \\tau^{\\frac{7}{2}}'
+    """
+    # Ensure mul_symbol is properly passed through
+    if 'mul_symbol' in settings:
+        settings['mul_symbol'] = str(settings['mul_symbol'])
+    return LatexPrinter(settings).doprint(expr)

     order: Any of the supported monomial orderings (currently "lex", "grlex", or
     "grevlex"), "old", and "none". This parameter does nothing for Mul objects.
