diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py
index b9eb33329f..235b8c129e 100644
--- a/django/contrib/auth/forms.py
+++ b/django/contrib/auth/forms.py
@@ -56,7 +56,10 @@ class ReadOnlyPasswordHashField(forms.Field):

     def __init__(self, *args, **kwargs):
         kwargs.setdefault("required", False)
+        kwargs.setdefault("disabled", True)
         super().__init__(*args, **kwargs)
+        if self.disabled:
+            self.widget.attrs['disabled'] = True

     def bound_data(self, data, initial):
         # Always return initial because the widget doesn't
@@ -147,6 +150,7 @@ class UserChangeForm(forms.ModelForm):
             'userâ€™s password, but you can change the password using '
             '<a href="{}">this form</a>.'
         ),
+        disabled=True
     )

     class Meta:
@@ -159,15 +163,13 @@ class UserChangeForm(forms.ModelForm):
         password = self.fields.get('password')
         if password:
             password.help_text = password.help_text.format('../password/')
+            password.widget.attrs['disabled'] = True
+            password.disabled = True
         user_permissions = self.fields.get('user_permissions')
         if user_permissions:
             user_permissions.queryset = user_permissions.queryset.select_related('content_type')

-    def clean_password(self):
-        # Regardless of what the user provides, return the initial value.
-        # This is done here, rather than on the field, because the
-        # field does not have access to the initial value
-        return self.initial.get('password')
+


 class AuthenticationForm(forms.Form):
