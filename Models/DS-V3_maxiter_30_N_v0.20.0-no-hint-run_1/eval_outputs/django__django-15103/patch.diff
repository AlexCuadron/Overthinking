diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py
index 5ccef38048..12f0d4caaa 100644
--- a/django/template/defaultfilters.py
+++ b/django/template/defaultfilters.py
@@ -83,7 +83,7 @@ def escapejs_filter(value):


 @register.filter(is_safe=True)
-def json_script(value, element_id):
+def json_script(value, element_id=None):
     """
     Output value JSON-encoded, wrapped in a <script type="application/json">
     tag.
diff --git a/django/utils/html.py b/django/utils/html.py
index da1b5675ec..c82120302f 100644
--- a/django/utils/html.py
+++ b/django/utils/html.py
@@ -61,7 +61,7 @@ _json_script_escapes = {
 }


-def json_script(value, element_id):
+def json_script(value, element_id=None):
     """
     Escape all the HTML/XML special characters with their unicode escapes, so
     value is safe to be output anywhere except for inside a tag attribute. Wrap
@@ -69,9 +69,14 @@ def json_script(value, element_id):
     """
     from django.core.serializers.json import DjangoJSONEncoder
     json_str = json.dumps(value, cls=DjangoJSONEncoder).translate(_json_script_escapes)
+    if element_id:
+        return format_html(
+            '<script id="{}" type="application/json">{}</script>',
+            element_id, mark_safe(json_str)
+        )
     return format_html(
-        '<script id="{}" type="application/json">{}</script>',
-        element_id, mark_safe(json_str)
+        '<script type="application/json">{}</script>',
+        mark_safe(json_str)
     )


diff --git a/tests/settings.py b/tests/settings.py
new file mode 100644
index 0000000000..5c1579d826
--- /dev/null
+++ b/tests/settings.py
@@ -0,0 +1,7 @@
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+    },
+]
\ No newline at end of file
diff --git a/tests/template_tests/filters/test_json_script.py b/tests/template_tests/filters/test_json_script.py
new file mode 100644
index 0000000000..5f9dd00146
--- /dev/null
+++ b/tests/template_tests/filters/test_json_script.py
@@ -0,0 +1,17 @@
+from django.template import Template, Context
+from django.test import SimpleTestCase
+
+class JsonScriptTest(SimpleTestCase):
+    def test_json_script_with_id(self):
+        template = Template('{{ data|json_script:"test-id" }}')
+        context = Context({'data': {'key': 'value'}})
+        result = template.render(context)
+        self.assertIn('id="test-id"', result)
+        self.assertIn('{"key": "value"}', result)
+
+    def test_json_script_without_id(self):
+        template = Template('{{ data|json_script }}')
+        context = Context({'data': {'key': 'value'}})
+        result = template.render(context)
+        self.assertNotIn('id="', result)
+        self.assertIn('{"key": "value"}', result)
\ No newline at end of file
