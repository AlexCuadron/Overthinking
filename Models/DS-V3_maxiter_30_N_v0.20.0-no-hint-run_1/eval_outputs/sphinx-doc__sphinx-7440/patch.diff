diff --git a/doc/test_glossary.rst b/doc/test_glossary.rst
new file mode 100644
index 000000000..2ae1f88c6
--- /dev/null
+++ b/doc/test_glossary.rst
@@ -0,0 +1,7 @@
+.. glossary::
+
+   MySQL
+      A popular open-source relational database management system.
+
+   mysql
+      The command-line client for MySQL.
\ No newline at end of file
diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py
index d820cfe5c..52546fb4c 100644
--- a/sphinx/domains/std.py
+++ b/sphinx/domains/std.py
@@ -305,7 +305,7 @@ def make_glossary_term(env: "BuildEnvironment", textnodes: Iterable[Node], index
         term['ids'].append(node_id)

     std = cast(StandardDomain, env.get_domain('std'))
-    std.note_object('term', termtext.lower(), node_id, location=term)
+    std.note_object('term', termtext, node_id, location=term)

     # add an index entry too
     indexnode = addnodes.index()
@@ -565,7 +565,7 @@ class StandardDomain(Domain):
         # links to tokens in grammar productions
         'token':   TokenXRefRole(),
         # links to terms in glossary
-        'term':    XRefRole(lowercase=True, innernodeclass=nodes.inline,
+        'term':    XRefRole(innernodeclass=nodes.inline,
                             warn_dangling=True),
         # links to headings or arbitrary labels
         'ref':     XRefRole(lowercase=True, innernodeclass=nodes.inline,
diff --git a/test_glossary.py b/test_glossary.py
new file mode 100644
index 000000000..576d39efd
--- /dev/null
+++ b/test_glossary.py
@@ -0,0 +1,30 @@
+import os
+import subprocess
+import sys
+
+def test_glossary_case_sensitivity():
+    # Build the documentation
+    build_dir = os.path.join(os.path.dirname(__file__), 'build')
+    os.makedirs(build_dir, exist_ok=True)
+
+    try:
+        result = subprocess.run(
+            ['sphinx-build', '-b', 'html', '-W', 'doc', build_dir],
+            capture_output=True,
+            text=True
+        )
+
+        # Check for glossary-related warnings
+        if 'duplicate term description' in result.stderr:
+            print("Test failed: Case-sensitive glossary terms detected as duplicates")
+            sys.exit(1)
+        else:
+            print("Test passed: Case-sensitive glossary terms handled correctly")
+            sys.exit(0)
+
+    except Exception as e:
+        print(f"Test failed with exception: {str(e)}")
+        sys.exit(1)
+
+if __name__ == "__main__":
+    test_glossary_case_sensitivity()
\ No newline at end of file
