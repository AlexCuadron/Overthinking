diff --git a/django/http/response.py b/django/http/response.py
index e00bcacefb..99372a9f10 100644
--- a/django/http/response.py
+++ b/django/http/response.py
@@ -213,10 +213,13 @@ class HttpResponseBase:
     def delete_cookie(self, key, path='/', domain=None):
         # Most browsers ignore the Set-Cookie header if the cookie name starts
         # with __Host- or __Secure- and the cookie doesn't use the secure flag.
-        secure = key.startswith(('__Secure-', '__Host-'))
         self.set_cookie(
-            key, max_age=0, path=path, domain=domain, secure=secure,
+            key, max_age=0, path=path,
             expires='Thu, 01 Jan 1970 00:00:00 GMT',
+            domain=domain if domain is not None else settings.SESSION_COOKIE_DOMAIN,
+            secure=settings.SESSION_COOKIE_SECURE or key.startswith(('__Secure-', '__Host-')),
+            httponly=settings.SESSION_COOKIE_HTTPONLY or None,
+            samesite=settings.SESSION_COOKIE_SAMESITE,
         )

     # Common methods used by subclasses
diff --git a/test_cookie_deletion.py b/test_cookie_deletion.py
new file mode 100644
index 0000000000..75bbbc53e7
--- /dev/null
+++ b/test_cookie_deletion.py
@@ -0,0 +1,26 @@
+from django.http import HttpResponse
+from django.conf import settings
+
+settings.configure(
+    SESSION_COOKIE_DOMAIN='example.com',
+    SESSION_COOKIE_SECURE=True,
+    SESSION_COOKIE_HTTPONLY=True,
+    SESSION_COOKIE_SAMESITE='Lax'
+)
+
+def test_view(request):
+    response = HttpResponse('Testing cookie deletion')
+    response.set_cookie('test_cookie', 'value', samesite='Lax')
+    response.delete_cookie('test_cookie')
+    return response
+
+if __name__ == '__main__':
+    from django.core.handlers.wsgi import WSGIRequest
+    from io import BytesIO
+    environ = {
+        'REQUEST_METHOD': 'GET',
+        'wsgi.input': BytesIO(b''),
+    }
+    request = WSGIRequest(environ)
+    response = test_view(request)
+    print(response.cookies)
\ No newline at end of file
