diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index a44adfc760..db17723eba 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -425,12 +425,26 @@ class SQLCompiler:
                 # If the columns list is limited, then all combined queries
                 # must have the same columns list. Set the selects defined on
                 # the query on all combined queries, if not already set.
-                if not compiler.query.values_select and self.query.values_select:
-                    compiler.query.set_values((
-                        *self.query.extra_select,
-                        *self.query.values_select,
-                        *self.query.annotation_select,
-                    ))
+                # Clear and set values based on the current query
+compiler.query.clear_values()
+if self.query.values_select:
+    compiler.query.set_values((
+        *self.query.extra_select,
+        *self.query.values_select,
+        *self.query.annotation_select,
+    ))
+else:
+    # If no values_select is specified, clear all values
+    compiler.query.clear_values()
+    compiler.query.set_values((
+        *self.query.extra_select,
+        *self.query.annotation_select,
+    ))
+# Ensure the compiler's values_select matches the current query's
+compiler.query.values_select = self.query.values_select
+compiler.query.default_cols = False
+compiler.query._values_select = self.query.values_select
+compiler.query._values_select_cache = None
                 part_sql, part_args = compiler.as_sql()
                 if compiler.query.combinator:
                     # Wrap in a subquery if wrapping in parentheses isn't
