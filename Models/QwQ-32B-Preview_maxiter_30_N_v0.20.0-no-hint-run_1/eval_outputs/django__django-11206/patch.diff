diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py
index 88b35fc435..14ed894b72 100644
--- a/django/utils/numberformat.py
+++ b/django/utils/numberformat.py
@@ -27,9 +27,37 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',
     # sign
     sign = ''
     if isinstance(number, Decimal):
+sign, digits, exponent = number.as_tuple()
+    if decimal_pos is not None and exponent < -decimal_pos:
+        zeros = '0' * decimal_pos
+        decimal_part = decimal_sep + zeros
+        str_number = '0' + decimal_part
+        if sign:
+            str_number = '-' + str_number
+        return str_number
+    else:
+sign, digits, exponent = number.as_tuple()
+
+    if decimal_pos is not None and exponent < -decimal_pos:
+        zeros = '0' * decimal_pos
+        decimal_part = decimal_sep + zeros
+        str_number = '0' + decimal_part
+        if sign:
+            str_number = '-' + str_number
+        return str_number
+    else:
+sign, digits, exponent = number.as_tuple()
+    if decimal_pos is not None and exponent < -decimal_pos:
+        zeros = '0' * decimal_pos
+        decimal_part = decimal_sep + zeros
+        str_number = '0' + decimal_part
+        if sign:
+            str_number = '-' + str_number
+        return str_number
+    else:
         # Format values with more than 200 digits (an arbitrary cutoff) using
         # scientific notation to avoid high memory usage in {:f}'.format().
-        _, digits, exponent = number.as_tuple()
+        sign, digits, exponent = number.as_tuple()
         if abs(exponent) + len(digits) > 200:
             number = '{:e}'.format(number)
             coefficient, exponent = number.split('e')
