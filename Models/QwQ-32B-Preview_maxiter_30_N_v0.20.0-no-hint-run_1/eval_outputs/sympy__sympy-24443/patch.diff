diff --git a/sympy/combinatorics/homomorphisms.py b/sympy/combinatorics/homomorphisms.py
index bb7bdf32ba..2e7b308f6b 100644
--- a/sympy/combinatorics/homomorphisms.py
+++ b/sympy/combinatorics/homomorphisms.py
@@ -302,8 +302,15 @@ def homomorphism(domain, codomain, gens, images=(), check=True):
     images.extend([codomain.identity]*(len(generators)-len(images)))
     gens.extend([g for g in generators if g not in gens])
     images = dict(zip(gens,images))
-
-    if check and not _check_homomorphism(domain, codomain, images):
+print("Images:", images)
+print("Images:", images)
+print("Images:", images)
+
+    print("Images:", images)
+print("Images:", images)
+    print("Images:", images)
+print("Images:", images)
+if check and not _check_homomorphism(domain, codomain, images):
         raise ValueError("The given images do not define a homomorphism")
     return GroupHomomorphism(domain, codomain, images)

diff --git a/test_homomorphism.py b/test_homomorphism.py
new file mode 100644
index 0000000000..264a006682
--- /dev/null
+++ b/test_homomorphism.py
@@ -0,0 +1,10 @@
+from sympy.combinatorics import *
+from sympy.combinatorics.homomorphisms import homomorphism
+
+D3 = DihedralGroup(3)
+try:
+    T = homomorphism(D3, D3, D3.generators, D3.generators)
+except ValueError:
+    pass
+print(D3.generators)
+print([g**-1 for g in D3.generators])
\ No newline at end of file
