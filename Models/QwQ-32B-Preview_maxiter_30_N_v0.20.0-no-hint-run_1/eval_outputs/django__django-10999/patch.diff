diff --git a/django/utils/dateparse.py b/django/utils/dateparse.py
index 8d08b7d1d3..03e4ead196 100644
--- a/django/utils/dateparse.py
+++ b/django/utils/dateparse.py
@@ -28,10 +28,11 @@ datetime_re = re.compile(

 standard_duration_re = re.compile(
     r'^'
-    r'(?:(?P<days>-?\d+) (days?, )?)?'
-    r'((?:(?P<hours>-?\d+):)(?=\d+:\d+))?'
-    r'(?:(?P<minutes>-?\d+):)?'
-    r'(?P<seconds>-?\d+)'
+    r'(?P<sign>-?)'
+    r'(?:(?P<days>\d+) (days?, )?)?'
+    r'((?:(?P<hours>\d+):)(?=\d+:\d+))?'
+    r'(?:(?P<minutes>\d+):)?'
+    r'(?P<seconds>\d+)'
     r'(?:\.(?P<microseconds>\d{1,6})\d{0,6})?'
     r'$'
 )
@@ -55,13 +56,13 @@ iso8601_duration_re = re.compile(
 # aren't accepted.
 postgres_interval_re = re.compile(
     r'^'
-    r'(?:(?P<days>-?\d+) (days? ?))?'
-    r'(?:(?P<sign>[-+])?'
+    r'(?P<sign>-?)'
+    r'(?:(?P<days>\d+) (days? ?))?'
     r'(?P<hours>\d+):'
     r'(?P<minutes>\d\d):'
     r'(?P<seconds>\d\d)'
     r'(?:\.(?P<microseconds>\d{1,6}))?'
-    r')?$'
+    r'$'
 )


@@ -136,11 +137,17 @@ def parse_duration(value):
     )
     if match:
         kw = match.groupdict()
-        days = datetime.timedelta(float(kw.pop('days', 0) or 0))
-        sign = -1 if kw.pop('sign', '+') == '-' else 1
-        if kw.get('microseconds'):
-            kw['microseconds'] = kw['microseconds'].ljust(6, '0')
-        if kw.get('seconds') and kw.get('microseconds') and kw['seconds'].startswith('-'):
-            kw['microseconds'] = '-' + kw['microseconds']
-        kw = {k: float(v) for k, v in kw.items() if v is not None}
-        return days + sign * datetime.timedelta(**kw)
+        sign = -1 if kw.pop('sign', '') == '-' else 1
+        days = float(kw.pop('days', 0))
+        hours = float(kw.pop('hours', 0))
+        minutes = float(kw.pop('minutes', 0))
+        seconds = float(kw.pop('seconds'))
+        microseconds = float(kw.pop('microseconds', 0)) if kw.get('microseconds') else 0
+        td = datetime.timedelta(
+            days=days,
+            hours=hours,
+            minutes=minutes,
+            seconds=seconds,
+            microseconds=microseconds
+        )
+        return sign * td
