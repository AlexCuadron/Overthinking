2025-01-25 11:00:57,867 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_trnznybgezpk93u2_1nhip1b65cn5t1ze
2025-01-25 11:00:57,871 - INFO - [runtime 74967e02-8639-4f2b-8476-4bfaf8d2c327-c3d83d7e86136736] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_trnznybgezpk93u2_1nhip1b65cn5t1ze
2025-01-25 11:00:59,734 - INFO - [runtime 74967e02-8639-4f2b-8476-4bfaf8d2c327-c3d83d7e86136736] Container started: openhands-runtime-74967e02-8639-4f2b-8476-4bfaf8d2c327-c3d83d7e86136736. VSCode URL: None
2025-01-25 11:00:59,734 - INFO - [runtime 74967e02-8639-4f2b-8476-4bfaf8d2c327-c3d83d7e86136736] Waiting for client to become ready at http://localhost:34399...
2025-01-25 11:01:37,875 - INFO - [runtime 74967e02-8639-4f2b-8476-4bfaf8d2c327-c3d83d7e86136736] Runtime is ready.
2025-01-25 11:01:38,517 - INFO - ------------------------------
2025-01-25 11:01:38,517 - INFO - BEGIN Runtime Initialization Fn
2025-01-25 11:01:38,517 - INFO - ------------------------------
2025-01-25 11:01:38,517 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=astropy__astropy-13398' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-25 11:01:39,144 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:01:39,144 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-25 11:01:39,770 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:01:39,770 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-25 11:01:40,396 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:01:40,408 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-25 11:01:41,032 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=astropy__astropy-13398
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:01:41,032 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-25 11:01:41,657 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:01:41,657 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-25 11:01:44,803 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: astropy__astropy__5.0
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:01:44,803 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/astropy__astropy__5.0
2025-01-25 11:01:45,434 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:01:45,434 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-25 11:01:46,570 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 6500928dc0 Merge pull request #13502 from taldcroft/better-iers-docs
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:01:46,571 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-25 11:01:47,202 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:01:47,202 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-25 11:01:47,829 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:01:47,830 - INFO - ------------------------------
2025-01-25 11:01:47,830 - INFO - END Runtime Initialization Fn
2025-01-25 11:01:47,830 - INFO - ------------------------------
2025-01-25 11:01:47,833 - INFO - Function calling not enabled for model hosted_vllm/Qwen/Qwen2.5-Coder-14B-Instruct. Mocking function calling via prompting.
2025-01-25 11:01:47,841 - INFO - [runtime 74967e02-8639-4f2b-8476-4bfaf8d2c327-c3d83d7e86136736] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-01-25 11:01:47,862 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-25 11:01:47,899 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-25 11:01:58,644 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-25 11:02:14,067 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-25 11:02:35,171 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-25 11:02:45,567 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-25 11:02:58,054 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-25 11:05:30,188 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-25 11:05:50,066 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-25 11:07:21,818 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-25 11:07:39,562 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-25 11:07:52,137 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-25 11:08:34,910 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-25 11:08:52,681 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-25 11:09:02,976 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-25 11:09:35,299 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-01-25 11:09:35,331 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-01-25 11:09:35,332 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-25 11:09:59,156 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-01-25 11:09:59,188 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-01-25 11:09:59,189 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-25 11:10:22,371 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-01-25 11:10:22,403 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-01-25 11:10:22,404 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-25 11:10:45,820 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-01-25 11:10:45,852 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-01-25 11:10:45,853 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-25 11:10:45,853 - WARNING - Repeated MessageAction with source=AGENT detected
2025-01-25 11:10:45,853 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-25 11:10:45,854 - ERROR - AgentStuckInLoopError: Agent got stuck in a loop
2025-01-25 11:10:45,855 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-25 11:10:46,383 - INFO - ------------------------------
2025-01-25 11:10:46,384 - INFO - BEGIN Runtime Completion Fn
2025-01-25 11:10:46,384 - INFO - ------------------------------
2025-01-25 11:10:46,384 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/astropy__astropy__5.0
2025-01-25 11:10:47,014 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": 682,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:10:47,014 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-25 11:10:47,655 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": 682,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:10:47,656 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-25 11:10:48,280 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": 682,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:10:48,281 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 6500928dc0e57be8f06d1162eacc3ba5e2eff692
2025-01-25 11:10:48,906 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": 682,
  "username": "root",
  "hostname": "259b454ce0b0",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/astropy/coordinates/builtin_frames/itrs.py b/astropy/coordinates/builtin_frames/itrs.py
index e121ec9064..71206e9ac6 100644
--- a/astropy/coordinates/builtin_frames/itrs.py
+++ b/astropy/coordinates/builtin_frames/itrs.py
@@ -36,3 +36,62 @@ class ITRS(BaseCoordinateFrame):

 # Self-transform is in intermediate_rotation_transforms.py with all the other
 # ITRS transforms
+
+import numpy as np
+from astropy import units as u
+from astropy.coordinates.matrix_utilities import rotation_matrix, matrix_transpose
+from astropy.coordinates.baseframe import frame_transform_graph
+from astropy.coordinates.transformations import FunctionTransformWithFiniteDifference
+from .altaz import AltAz
+from .hadec import HADec
+from .itrs import ITRS
+from .utils import PIOVER2
+
+def itrs_to_observed_mat(observed_frame):
+
+    lon, lat, height = observed_frame.location.to_geodetic('WGS84')
+    elong = lon.to_value(u.radian)
+
+    if isinstance(observed_frame, AltAz):
+        # form ITRS to AltAz matrix
+        elat = lat.to_value(u.radian)
+        # AltAz frame is left handed
+        minus_x = np.eye(3)
+        minus_x[0][0] = -1.0
+        mat = (minus_x
+               @ rotation_matrix(PIOVER2 - elat, 'y', unit=u.radian)
+               @ rotation_matrix(elong, 'z', unit=u.radian))
+
+    else:
+        # form ITRS to HADec matrix
+        # HADec frame is left handed
+        minus_y = np.eye(3)
+        minus_y[1][1] = -1.0
+        mat = (minus_y
+               @ rotation_matrix(elong, 'z', unit=u.radian))
+    return mat
+
+@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, ITRS, AltAz)
+@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, ITRS, HADec)
+def itrs_to_observed(itrs_coo, observed_frame):
+    # Trying to synchronize the obstimes here makes no sense. In fact,
+    # it's a real gotcha as doing an ITRS->ITRS transform references
+    # ITRS coordinates, which should be tied to the Earth, to the SSB.
+    # Instead, we treat ITRS coordinates as time invariant here.
+
+    # form the Topocentric ITRS position
+    topocentric_itrs_repr = (itrs_coo.cartesian
+                             - observed_frame.location.get_itrs().cartesian)
+    rep = topocentric_itrs_repr.transform(itrs_to_observed_mat(observed_frame))
+    return observed_frame.realize_frame(rep)
+
+@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, AltAz, ITRS)
+@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, HADec, ITRS)
+def observed_to_itrs(observed_coo, itrs_frame):
+
+    # form the Topocentric ITRS position
+    topocentric_itrs_repr = observed_coo.cartesian.transform(matrix_transpose(
+                            itrs_to_observed_mat(observed_coo)))
+    # form the Geocentric ITRS position
+    rep = topocentric_itrs_repr + observed_coo.location.get_itrs().cartesian
+    return itrs_frame.realize_frame(rep)
diff --git a/test_transformations.log b/test_transformations.log
new file mode 100644
index 0000000000..c178b2a0f7
--- /dev/null
+++ b/test_transformations.log
@@ -0,0 +1,4 @@
+AltAz: <SkyCoord (AltAz: obstime=2023-01-01T00:00:00.000, location=(-2706174.84661108, -4261059.48929648, 3885725.49002361) m, pressure=0.0 hPa, temperature=0.0 deg_C, relative_humidity=0.0, obswl=1.0 micron): (az, alt, distance) in (deg, deg, m)
+    (359.9993688, -89.81378651, 6370154.78601752)>
+HADec: <SkyCoord (HADec: obstime=2023-01-01T00:00:00.000, location=(-2706174.84661108, -4261059.48929648, 3885725.49002361) m, pressure=0.0 hPa, temperature=0.0 deg_C, relative_humidity=0.0, obswl=1.0 micron): (ha, dec, distance) in (hourangle, deg, m)
+    (11.99999983, -37.58868651, 6370154.78601753)>
diff --git a/test_transformations.py b/test_transformations.py
new file mode 100644
index 0000000000..1df9c3a112
--- /dev/null
+++ b/test_transformations.py
@@ -0,0 +1,20 @@
+import astropy.units as u
+from astropy.coordinates import ITRS, AltAz, HADec, EarthLocation, SkyCoord
+from astropy.time import Time
+
+# Define a location
+location = EarthLocation(lat=37.7749*u.deg, lon=-122.4194*u.deg, height=0*u.m)
+
+# Define a time
+obstime = Time('2023-01-01T00:00:00', scale='utc')
+
+# Define an ITRS coordinate
+itrs_coord = SkyCoord(x=1*u.m, y=2*u.m, z=3*u.m, frame=ITRS(obstime=obstime))
+
+# Transform to AltAz
+altaz_coord = itrs_coord.transform_to(AltAz(obstime=obstime, location=location))
+print(f"AltAz: {altaz_coord}")
+
+# Transform to HADec
+hadec_coord = itrs_coord.transform_to(HADec(obstime=obstime, location=location))
+print(f"HADec: {hadec_coord}")
\ No newline at end of file
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 11:10:48,906 - INFO - ------------------------------
2025-01-25 11:10:48,906 - INFO - END Runtime Completion Fn
2025-01-25 11:10:48,907 - INFO - ------------------------------
2025-01-25 11:10:48,907 - INFO - Got git diff for instance astropy__astropy-13398:
--------
diff --git a/astropy/coordinates/builtin_frames/itrs.py b/astropy/coordinates/builtin_frames/itrs.py
index e121ec9064..71206e9ac6 100644
--- a/astropy/coordinates/builtin_frames/itrs.py
+++ b/astropy/coordinates/builtin_frames/itrs.py
@@ -36,3 +36,62 @@ class ITRS(BaseCoordinateFrame):

 # Self-transform is in intermediate_rotation_transforms.py with all the other
 # ITRS transforms
+
+import numpy as np
+from astropy import units as u
+from astropy.coordinates.matrix_utilities import rotation_matrix, matrix_transpose
+from astropy.coordinates.baseframe import frame_transform_graph
+from astropy.coordinates.transformations import FunctionTransformWithFiniteDifference
+from .altaz import AltAz
+from .hadec import HADec
+from .itrs import ITRS
+from .utils import PIOVER2
+
+def itrs_to_observed_mat(observed_frame):
+
+    lon, lat, height = observed_frame.location.to_geodetic('WGS84')
+    elong = lon.to_value(u.radian)
+
+    if isinstance(observed_frame, AltAz):
+        # form ITRS to AltAz matrix
+        elat = lat.to_value(u.radian)
+        # AltAz frame is left handed
+        minus_x = np.eye(3)
+        minus_x[0][0] = -1.0
+        mat = (minus_x
+               @ rotation_matrix(PIOVER2 - elat, 'y', unit=u.radian)
+               @ rotation_matrix(elong, 'z', unit=u.radian))
+
+    else:
+        # form ITRS to HADec matrix
+        # HADec frame is left handed
+        minus_y = np.eye(3)
+        minus_y[1][1] = -1.0
+        mat = (minus_y
+               @ rotation_matrix(elong, 'z', unit=u.radian))
+    return mat
+
+@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, ITRS, AltAz)
+@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, ITRS, HADec)
+def itrs_to_observed(itrs_coo, observed_frame):
+    # Trying to synchronize the obstimes here makes no sense. In fact,
+    # it's a real gotcha as doing an ITRS->ITRS transform references
+    # ITRS coordinates, which should be tied to the Earth, to the SSB.
+    # Instead, we treat ITRS coordinates as time invariant here.
+
+    # form the Topocentric ITRS position
+    topocentric_itrs_repr = (itrs_coo.cartesian
+                             - observed_frame.location.get_itrs().cartesian)
+    rep = topocentric_itrs_repr.transform(itrs_to_observed_mat(observed_frame))
+    return observed_frame.realize_frame(rep)
+
+@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, AltAz, ITRS)
+@frame_transform_graph.transform(FunctionTransformWithFiniteDifference, HADec, ITRS)
+def observed_to_itrs(observed_coo, itrs_frame):
+
+    # form the Topocentric ITRS position
+    topocentric_itrs_repr = observed_coo.cartesian.transform(matrix_transpose(
+                            itrs_to_observed_mat(observed_coo)))
+    # form the Geocentric ITRS position
+    rep = topocentric_itrs_repr + observed_coo.location.get_itrs().cartesian
+    return itrs_frame.realize_frame(rep)
diff --git a/test_transformations.log b/test_transformations.log
new file mode 100644
index 0000000000..c178b2a0f7
--- /dev/null
+++ b/test_transformations.log
@@ -0,0 +1,4 @@
+AltAz: <SkyCoord (AltAz: obstime=2023-01-01T00:00:00.000, location=(-2706174.84661108, -4261059.48929648, 3885725.49002361) m, pressure=0.0 hPa, temperature=0.0 deg_C, relative_humidity=0.0, obswl=1.0 micron): (az, alt, distance) in (deg, deg, m)
+    (359.9993688, -89.81378651, 6370154.78601752)>
+HADec: <SkyCoord (HADec: obstime=2023-01-01T00:00:00.000, location=(-2706174.84661108, -4261059.48929648, 3885725.49002361) m, pressure=0.0 hPa, temperature=0.0 deg_C, relative_humidity=0.0, obswl=1.0 micron): (ha, dec, distance) in (hourangle, deg, m)
+    (11.99999983, -37.58868651, 6370154.78601753)>
diff --git a/test_transformations.py b/test_transformations.py
new file mode 100644
index 0000000000..1df9c3a112
--- /dev/null
+++ b/test_transformations.py
@@ -0,0 +1,20 @@
+import astropy.units as u
+from astropy.coordinates import ITRS, AltAz, HADec, EarthLocation, SkyCoord
+from astropy.time import Time
+
+# Define a location
+location = EarthLocation(lat=37.7749*u.deg, lon=-122.4194*u.deg, height=0*u.m)
+
+# Define a time
+obstime = Time('2023-01-01T00:00:00', scale='utc')
+
+# Define an ITRS coordinate
+itrs_coord = SkyCoord(x=1*u.m, y=2*u.m, z=3*u.m, frame=ITRS(obstime=obstime))
+
+# Transform to AltAz
+altaz_coord = itrs_coord.transform_to(AltAz(obstime=obstime, location=location))
+print(f"AltAz: {altaz_coord}")
+
+# Transform to HADec
+hadec_coord = itrs_coord.transform_to(HADec(obstime=obstime, location=location))
+print(f"HADec: {hadec_coord}")
\ No newline at end of file
--------
2025-01-25 11:10:50,043 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.django_s_django-13346. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-25 11:10:50,043 - INFO - Logging LLM completions for instance django__django-13346 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/Qwen2.5-Coder-14B-Instruct_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/django__django-13346
