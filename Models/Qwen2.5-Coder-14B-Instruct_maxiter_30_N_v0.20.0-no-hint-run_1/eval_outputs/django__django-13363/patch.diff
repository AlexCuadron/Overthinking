diff --git a/django__django__3.2/settings.py b/django__django__3.2/settings.py
new file mode 100644
index 0000000000..d2c5f4565d
--- /dev/null
+++ b/django__django__3.2/settings.py
@@ -0,0 +1,61 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'django__django__3.2.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'django__django__3.2.wsgi.application'
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_L10N = True
+
+USE_TZ = True
+
+STATIC_URL = '/static/'
\ No newline at end of file
diff --git a/django__django__3.2/urls.py b/django__django__3.2/urls.py
new file mode 100644
index 0000000000..6b669efaa2
--- /dev/null
+++ b/django__django__3.2/urls.py
@@ -0,0 +1,6 @@
+from django.contrib import admin
+from django.urls import path
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+]
\ No newline at end of file
diff --git a/django__django__3.2/wsgi.py b/django__django__3.2/wsgi.py
new file mode 100644
index 0000000000..cbc33db105
--- /dev/null
+++ b/django__django__3.2/wsgi.py
@@ -0,0 +1,6 @@
+import os
+from django.core.wsgi import get_wsgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django__django__3.2.settings')
+
+application = get_wsgi_application()
\ No newline at end of file
diff --git a/manage.py b/manage.py
new file mode 100755
index 0000000000..cf308c50c3
--- /dev/null
+++ b/manage.py
@@ -0,0 +1,18 @@
+#!/usr/bin/env python
+import os
+import sys
+
+def main():
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django__django__3.2.django__django__3.2.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
+
+if __name__ == '__main__':
+    main()
\ No newline at end of file
diff --git a/test_trunc_date_time.py b/test_trunc_date_time.py
new file mode 100644
index 0000000000..fbd6724d5e
--- /dev/null
+++ b/test_trunc_date_time.py
@@ -0,0 +1,20 @@
+import pytz
+from django.db import models
+from django.db.models.functions import TruncDate, TruncTime
+from django.utils import timezone
+
+class TimeSlots(models.Model):
+    start_at = models.DateTimeField()
+
+tz = pytz.timezone("America/New_York")
+
+# Create a test entry
+test_entry = TimeSlots(start_at=timezone.datetime(2023, 10, 1, 12, 0, 0, tzinfo=pytz.utc))
+test_entry.save()
+
+# Query using TruncDate and TruncTime with tzinfo
+truncated_date = TimeSlots.objects.annotate(start_date=TruncDate("start_at", tzinfo=tz)).values("start_date")
+truncated_time = TimeSlots.objects.annotate(start_time=TruncTime("start_at", tzinfo=tz)).values("start_time")
+
+print("Truncated Date:", truncated_date)
+print("Truncated Time:", truncated_time)
\ No newline at end of file
