diff --git a/django/forms/formsets.py b/django/forms/formsets.py
index a89c35599f..fc6a44cdf0 100644
--- a/django/forms/formsets.py
+++ b/django/forms/formsets.py
@@ -333,7 +333,7 @@ class BaseFormSet:
         self._non_form_errors.
         """
         self._errors = []
-        self._non_form_errors = self.error_class()
+        self._non_form_errors = self.error_class(attrs={'class': 'nonform'})
         empty_forms_count = 0

         if not self.is_bound:  # Stop further processing.
diff --git a/django/forms/utils.py b/django/forms/utils.py
index 50412f414b..fbf2643098 100644
--- a/django/forms/utils.py
+++ b/django/forms/utils.py
@@ -78,6 +78,9 @@ class ErrorDict(dict):

 @html_safe
 class ErrorList(UserList, list):
+    def __init__(self, initlist=None, attrs=None):
+        super().__init__(initlist)
+        self.attrs = attrs or {}
     """
     A collection of errors that knows how to display itself in various formats.
     """
diff --git a/test_formset.py b/test_formset.py
new file mode 100644
index 0000000000..38241084ae
--- /dev/null
+++ b/test_formset.py
@@ -0,0 +1,21 @@
+from django import forms
+from django.forms import formset_factory
+
+class SimpleForm(forms.Form):
+    name = forms.CharField()
+
+SimpleFormSet = formset_factory(SimpleForm)
+
+def test_formset():
+    data = {
+        'form-TOTAL_FORMS': '1',
+        'form-INITIAL_FORMS': '0',
+        'form-MIN_NUM_FORMS': '0',
+        'form-MAX_NUM_FORMS': '1000',
+    }
+    formset = SimpleFormSet(data)
+    if not formset.is_valid():
+        print(formset.non_form_errors())
+
+if __name__ == '__main__':
+    test_formset()
\ No newline at end of file
