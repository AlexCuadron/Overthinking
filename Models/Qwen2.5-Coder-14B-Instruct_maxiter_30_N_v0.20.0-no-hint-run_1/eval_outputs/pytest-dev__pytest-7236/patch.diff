diff --git a/src/_pytest/runner.py b/src/_pytest/runner.py
index e7211369c..b7175cbf1 100644
--- a/src/_pytest/runner.py
+++ b/src/_pytest/runner.py
@@ -102,6 +102,7 @@ def runtestprotocol(item, log=True, nextitem=None):
             show_test_item(item)
         if not item.config.getoption("setuponly", False):
             reports.append(call_and_report(item, "call", log))
+    if not rep.skipped:
     reports.append(call_and_report(item, "teardown", log, nextitem=nextitem))
     # after all teardown hooks have been called
     # want funcargs and request info to go away
diff --git a/testing/run_test.py b/testing/run_test.py
new file mode 100644
index 000000000..1df6e75e9
--- /dev/null
+++ b/testing/run_test.py
@@ -0,0 +1,9 @@
+import subprocess
+
+def run_test():
+    result = subprocess.run(['pytest', '--trace', '/workspace/pytest-dev__pytest__5.4/testing/test_repro_edge_cases.py'], capture_output=True, text=True)
+    print(result.stdout)
+    print(result.stderr)
+
+if __name__ == '__main__':
+    run_test()
\ No newline at end of file
diff --git a/testing/test_repro.py b/testing/test_repro.py
new file mode 100644
index 000000000..eabaa9a04
--- /dev/null
+++ b/testing/test_repro.py
@@ -0,0 +1,10 @@
+import unittest
+
+class MyTestCase(unittest.TestCase):
+    def setUp(self):
+        xxx
+    @unittest.skip("hello")
+    def test_one(self):
+        pass
+    def tearDown(self):
+        xxx
\ No newline at end of file
diff --git a/testing/test_repro_edge_cases.py b/testing/test_repro_edge_cases.py
new file mode 100644
index 000000000..bb8ea009e
--- /dev/null
+++ b/testing/test_repro_edge_cases.py
@@ -0,0 +1,12 @@
+import unittest
+
+class MyTestCase(unittest.TestCase):
+    def setUp(self):
+        print("setUp called")
+
+    @unittest.skip("hello")
+    def test_one(self):
+        pass
+
+    def tearDown(self):
+        print("tearDown called")
\ No newline at end of file
