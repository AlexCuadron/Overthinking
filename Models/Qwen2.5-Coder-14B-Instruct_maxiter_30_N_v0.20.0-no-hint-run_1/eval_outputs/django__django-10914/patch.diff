diff --git a/django/core/files/storage.py b/django/core/files/storage.py
index cbdab1de47..9f97868710 100644
--- a/django/core/files/storage.py
+++ b/django/core/files/storage.py
@@ -175,7 +175,7 @@ class FileSystemStorage(Storage):
     # the file already exists before it's opened.
     OS_OPEN_FLAGS = os.O_WRONLY | os.O_CREAT | os.O_EXCL | getattr(os, 'O_BINARY', 0)

-    def __init__(self, location=None, base_url=None, file_permissions_mode=None,
+    def __init__(self, location=None, base_url=None, file_permissions_mode=0o644,
                  directory_permissions_mode=None):
         self._location = location
         self._base_url = base_url
diff --git a/test.log b/test.log
new file mode 100644
index 0000000000..ed786a6724
--- /dev/null
+++ b/test.log
@@ -0,0 +1,17 @@
+Traceback (most recent call last):
+  File "/workspace/django__django__3.0/tests/test_file_upload_permissions.py", line 17, in <module>
+    django.setup()
+  File "/testbed/django/__init__.py", line 19, in setup
+    configure_logging(settings.LOGGING_CONFIG, settings.LOGGING)
+  File "/testbed/django/conf/__init__.py", line 76, in __getattr__
+    self._setup(name)
+  File "/testbed/django/conf/__init__.py", line 63, in _setup
+    self._wrapped = Settings(settings_module)
+  File "/testbed/django/conf/__init__.py", line 140, in __init__
+    mod = importlib.import_module(self.SETTINGS_MODULE)
+  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
+    return _bootstrap._gcd_import(name[level:], package, level)
+  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
+  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
+  File "<frozen importlib._bootstrap>", line 953, in _find_and_load_unlocked
+ModuleNotFoundError: No module named 'tests.test_settings'
diff --git a/tests/__init__.py b/tests/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/test_file_upload_permissions.py b/tests/test_file_upload_permissions.py
new file mode 100644
index 0000000000..587ef9cb7b
--- /dev/null
+++ b/tests/test_file_upload_permissions.py
@@ -0,0 +1,19 @@
+import os
+from django.core.files.storage import FileSystemStorage
+from django.core.files.base import ContentFile
+
+def test_file_upload_permissions():
+    storage = FileSystemStorage()
+    file_name = 'test_file.txt'
+    file_content = ContentFile(b'This is a test file.')
+    storage.save(file_name, file_content)
+    file_path = storage.path(file_name)
+    file_permissions = oct(os.stat(file_path).st_mode)[-3:]
+    assert file_permissions == '644', f'Expected file permissions to be 644, but got {file_permissions}'
+    storage.delete(file_name)
+
+import django
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tests.test_settings')
+django.setup()
+if __name__ == '__main__':
+    test_file_upload_permissions()
\ No newline at end of file
diff --git a/tests/test_settings.py b/tests/test_settings.py
new file mode 100644
index 0000000000..6bcdec5d05
--- /dev/null
+++ b/tests/test_settings.py
@@ -0,0 +1,3 @@
+import os
+
+MEDIA_ROOT = os.path.join(os.path.dirname(__file__), 'media')
\ No newline at end of file
