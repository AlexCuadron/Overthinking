diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..e5c368e798
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,26 @@
+import os
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'settings')
+import django
+django.setup()
+from django.db import models
+from django.contrib.admin import ModelAdmin, site
+
+class Country(models.Model):\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'\n    app_label = 'test_app'
+    name = models.CharField(max_length=256)
+
+class Place(models.Model):
+    country = models.ForeignKey(Country, models.CASCADE)
+
+class Restaurant(models.Model):
+    place = models.OneToOneField(Place, models.CASCADE, primary_key=True)
+
+class Waiter(models.Model):
+    restaurant = models.ForeignKey(Restaurant, models.CASCADE)
+
+class WaiterAdmin(ModelAdmin):
+    list_filter = [
+        'restaurant__place__country',
+    ]
+
+ma = WaiterAdmin(Waiter, site)
+print(ma.lookup_allowed('restaurant__place__country', 'test_value'))
\ No newline at end of file
diff --git a/settings.py b/settings.py
new file mode 100644
index 0000000000..c6dfdaf938
--- /dev/null
+++ b/settings.py
@@ -0,0 +1,8 @@
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+]
\ No newline at end of file
