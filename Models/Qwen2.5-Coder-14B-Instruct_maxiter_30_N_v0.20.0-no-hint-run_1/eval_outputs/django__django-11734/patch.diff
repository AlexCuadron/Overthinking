diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..8c2991072e
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,41 @@
+import os
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'test_project.test_project.settings')
+import django
+django.setup()
+from django.db import models
+from django.db.models import Exists, OuterRef
+
+class Number(models.Model):
+    pass
+
+class Item(models.Model):
+    tags = models.ManyToManyField('Tag')
+
+class Tag(models.Model):
+    category_id = models.IntegerField()
+
+def test_exists_exclude():
+    # filter()
+    qs = Number.objects.annotate(
+        foo=Exists(
+            Item.objects.filter(tags__category_id=OuterRef('pk'))
+        )
+    ).filter(foo=True)
+    print(qs)  # works
+    # exclude()
+    qs = Number.objects.annotate(
+        foo=Exists(
+            Item.objects.exclude(tags__category_id=OuterRef('pk'))
+        )
+    ).filter(foo=True)
+    print(qs)  # crashes
+    # filter(~Q())
+    qs = Number.objects.annotate(
+        foo=Exists(
+            Item.objects.filter(~Q(tags__category_id=OuterRef('pk')))
+        )
+    ).filter(foo=True)
+    print(qs)  # crashes
+
+if __name__ == '__main__':
+    test_exists_exclude()
\ No newline at end of file
diff --git a/test_project/test_project/settings.py b/test_project/test_project/settings.py
new file mode 100644
index 0000000000..2679e361bd
--- /dev/null
+++ b/test_project/test_project/settings.py
@@ -0,0 +1,76 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'test_project.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'test_project.wsgi.application'
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+AUTH_PASSWORD_VALIDATORS = [
+    {
+        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
+    },
+]
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_L10N = True
+
+USE_TZ = True
+
+STATIC_URL = '/static/'
\ No newline at end of file
diff --git a/test_project/test_project/urls.py b/test_project/test_project/urls.py
new file mode 100644
index 0000000000..6b669efaa2
--- /dev/null
+++ b/test_project/test_project/urls.py
@@ -0,0 +1,6 @@
+from django.contrib import admin
+from django.urls import path
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+]
\ No newline at end of file
