diff --git a/exampleapp/__init__.py b/exampleapp/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/exampleapp/admin.py b/exampleapp/admin.py
new file mode 100644
index 0000000000..8c38f3f3da
--- /dev/null
+++ b/exampleapp/admin.py
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
diff --git a/exampleapp/apps.py b/exampleapp/apps.py
new file mode 100644
index 0000000000..a56b0d0c23
--- /dev/null
+++ b/exampleapp/apps.py
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class ExampleappConfig(AppConfig):
+    default_auto_field = 'django.db.models.BigAutoField'
+    name = 'exampleapp'
diff --git a/exampleapp/migrations/__init__.py b/exampleapp/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/exampleapp/models.py b/exampleapp/models.py
new file mode 100644
index 0000000000..50735283bc
--- /dev/null
+++ b/exampleapp/models.py
@@ -0,0 +1,10 @@
+from django.db import models
+
+class SelfRef(models.Model):
+    name = models.CharField(max_length=100)
+    c8 = models.CharField(max_length=100)
+
+    def __str__(self):
+        return self.name
+
+# Create your models here.
diff --git a/exampleapp/tests.py b/exampleapp/tests.py
new file mode 100644
index 0000000000..7ce503c2dd
--- /dev/null
+++ b/exampleapp/tests.py
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
diff --git a/exampleapp/views.py b/exampleapp/views.py
new file mode 100644
index 0000000000..91ea44a218
--- /dev/null
+++ b/exampleapp/views.py
@@ -0,0 +1,3 @@
+from django.shortcuts import render
+
+# Create your views here.
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..5d94a8892d
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,29 @@
+import os
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'testproject.settings')
+import django
+django.setup()
+from django.db import models
+from django.db.models import F
+from django.db.models import F
+
+class SelfRef(models.Model):
+    name = models.CharField(max_length=100)
+    c8 = models.CharField(max_length=100)
+
+    def __str__(self):
+        return self.name
+
+# Create an instance of SelfRef
+o = SelfRef.objects.create(name="TestName")
+
+# Assign plain F(...) to some model instance field
+o.c8 = F('name')
+
+# Save with bulk_update
+SelfRef.objects.bulk_update([o], ['c8'])
+
+# Refresh from database
+o.refresh_from_db()
+
+# Print the result
+print(f"o.c8: {o.c8}")
\ No newline at end of file
diff --git a/testproject/__init__.py b/testproject/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/testproject/manage.py b/testproject/manage.py
new file mode 100755
index 0000000000..ad23ce4112
--- /dev/null
+++ b/testproject/manage.py
@@ -0,0 +1,18 @@
+#!/usr/bin/env python
+import os
+import sys
+
+def main():
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'testproject.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
+
+if __name__ == '__main__':
+    main()
\ No newline at end of file
diff --git a/testproject/settings.py b/testproject/settings.py
new file mode 100644
index 0000000000..c919398f59
--- /dev/null
+++ b/testproject/settings.py
@@ -0,0 +1,65 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    'exampleapp',
+]
+]
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+SECRET_KEY = 'your_secret_key_here'
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'testproject.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'testproject.wsgi.application'
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_L10N = True
+
+USE_TZ = True
+
+STATIC_URL = '/static/'
\ No newline at end of file
diff --git a/testproject/urls.py b/testproject/urls.py
new file mode 100644
index 0000000000..6b669efaa2
--- /dev/null
+++ b/testproject/urls.py
@@ -0,0 +1,6 @@
+from django.contrib import admin
+from django.urls import path
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+]
\ No newline at end of file
