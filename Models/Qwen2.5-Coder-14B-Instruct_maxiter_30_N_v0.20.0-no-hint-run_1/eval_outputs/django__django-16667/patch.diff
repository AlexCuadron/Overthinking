diff --git a/django/forms/widgets.py b/django/forms/widgets.py
index 842b73e95c..b5a69879da 100644
--- a/django/forms/widgets.py
+++ b/django/forms/widgets.py
@@ -1156,7 +1156,10 @@ class SelectDateWidget(Widget):
             input_format = get_format("DATE_INPUT_FORMATS")[0]
             input_format = formats.sanitize_strftime_format(input_format)
             try:
-                date_value = datetime.date(int(y), int(m), int(d))
+                try:
+        date_value = datetime.date(int(y), int(m), int(d))
+    except OverflowError:
+        return None
             except ValueError:
                 # Return pseudo-ISO dates with zeros for any unselected values,
                 # e.g. '2017-0-23'.
diff --git a/server.log b/server.log
new file mode 100644
index 0000000000..2a62f569a9
--- /dev/null
+++ b/server.log
@@ -0,0 +1,11 @@
+Traceback (most recent call last):
+  File "/workspace/django__django__5.0/test_project.py", line 1, in <module>
+    from django import forms
+  File "/workspace/django__django__5.0/django/forms/__init__.py", line 6, in <module>
+    from django.forms.boundfield import *  # NOQA
+    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+  File "/workspace/django__django__5.0/django/forms/boundfield.py", line 5, in <module>
+    from django.forms.widgets import MultiWidget, Textarea, TextInput
+  File "/workspace/django__django__5.0/django/forms/widgets.py", line 1160
+    date_value = datetime.date(int(y), int(m), int(d))
+IndentationError: expected an indented block after 'try' statement on line 1159
diff --git a/test_project.py b/test_project.py
new file mode 100644
index 0000000000..925bfb9c7c
--- /dev/null
+++ b/test_project.py
@@ -0,0 +1,26 @@
+from django import forms
+from django.http import HttpResponse
+from django.urls import path
+from django.conf import settings
+from django.core.management import execute_from_command_line
+
+class ReproForm(forms.Form):
+    my_date = forms.DateField(widget=forms.SelectDateWidget())
+
+def repro_view(request):
+    form = ReproForm(request.GET)  # for ease of reproducibility
+    if form.is_valid():
+        return HttpResponse("ok")
+    else:
+        return HttpResponse("not ok")
+
+urlpatterns = [
+    path('repro/', repro_view, name='repro'),
+]
+
+if __name__ == '__main__':
+    settings.configure(
+        DEBUG=True,
+        ROOT_URLCONF=__name__,
+    )
+    execute_from_command_line(['', 'runserver', '8000'])
\ No newline at end of file
