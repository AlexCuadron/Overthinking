diff --git a/inspectdb_error.log b/inspectdb_error.log
new file mode 100644
index 0000000000..64304fb396
--- /dev/null
+++ b/inspectdb_error.log
@@ -0,0 +1,26 @@
+# This is an auto-generated Django model module.
+# You'll have to do the following manually to clean this up:
+#   * Rearrange models' order
+#   * Make sure each model has one field with primary_key=True
+#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
+#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
+# Feel free to rename the models, but don't rename db_table values or field names.
+from django.db import models
+
+
+class Foo(models.Model):
+    id = models.TextField(primary_key=True, blank=True, null=True)  # This field type is a guess.
+    other_id = models.IntegerField(unique=True, blank=True, null=True)
+
+    class Meta:
+        managed = False
+        db_table = 'foo'
+
+
+class Bar(models.Model):
+    id = models.TextField(primary_key=True, blank=True, null=True)  # This field type is a guess.
+    other_id = models.IntegerField(blank=True, null=True)
+
+    class Meta:
+        managed = False
+        db_table = 'bar'
diff --git a/testproject/db.sqlite3 b/testproject/db.sqlite3
new file mode 100644
index 0000000000..46690e98d9
Binary files /dev/null and b/testproject/db.sqlite3 differ
diff --git a/testproject/testproject/settings.py b/testproject/testproject/settings.py
new file mode 100644
index 0000000000..62bf3bbb8d
--- /dev/null
+++ b/testproject/testproject/settings.py
@@ -0,0 +1,10 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
\ No newline at end of file
diff --git a/tests/inspectdb_reproduce_error.py b/tests/inspectdb_reproduce_error.py
new file mode 100644
index 0000000000..18a1bb2757
--- /dev/null
+++ b/tests/inspectdb_reproduce_error.py
@@ -0,0 +1,20 @@
+import os
+import django
+import sys
+sys.path.append('/workspace/django__django__4.1/testproject')
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'testproject.settings')
+django.setup()
+
+from django.core.management import call_command
+from django.db import connections
+
+# Create a test database
+connection = connections['default']
+with connection.schema_editor() as schema_editor:
+    schema_editor.execute("DROP TABLE IF EXISTS foo;")
+    schema_editor.execute("DROP TABLE IF EXISTS bar;")
+    schema_editor.execute("CREATE TABLE foo ( id serial primary key, other_id int UNIQUE);")
+    schema_editor.execute("CREATE TABLE bar ( id serial primary key, other_id int, constraint myconst FOREIGN KEY(other_id) references foo(other_id));")
+
+# Run inspectdb
+call_command('inspectdb', 'foo', 'bar')
\ No newline at end of file
