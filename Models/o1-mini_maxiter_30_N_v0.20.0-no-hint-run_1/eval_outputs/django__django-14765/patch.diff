diff --git a/django/db/migrations/state.py b/django/db/migrations/state.py
index 088f5c41f0..1bf249d94c 100644
--- a/django/db/migrations/state.py
+++ b/django/db/migrations/state.py
@@ -91,10 +91,8 @@ class ProjectState:
     def __init__(self, models=None, real_apps=None):
         self.models = models or {}
         # Apps to include from main registry, usually unmigrated ones
-        if real_apps:
-            self.real_apps = real_apps if isinstance(real_apps, set) else set(real_apps)
-        else:
-            self.real_apps = set()
+        assert real_apps is None or isinstance(real_apps, set)
+        self.real_apps = real_apps or set()
         self.is_delayed = False
         # {remote_model_key: {model_key: [(field_name, field)]}}
         self.relations = None
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..3b183d5a96
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,10 @@
+from django.db.migrations.state import ProjectState
+
+# Attempt to initialize ProjectState with real_apps as a list instead of a set
+try:
+    state = ProjectState(real_apps=['app1', 'app2'])
+    print("ProjectState initialized successfully with real_apps as a list.")
+except AssertionError as e:
+    print(f"AssertionError: {e}")
+except Exception as e:
+    print(f"An unexpected error occurred: {e}")
\ No newline at end of file
