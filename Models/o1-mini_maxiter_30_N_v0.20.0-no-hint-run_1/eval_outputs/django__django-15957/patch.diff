diff --git a/django/db/models/query.py b/django/db/models/query.py
index be0deb90b0..05056651ff 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -1439,7 +1439,7 @@ class QuerySet:

     def _filter_or_exclude(self, negate, args, kwargs):
         if (args or kwargs) and self.query.is_sliced:
-            raise TypeError("Cannot filter a query once a slice has been taken.")
+            # raise TypeError("Cannot filter a query once a slice has been taken.")
         clone = self._chain()
         if self._defer_next_filter:
             self._defer_next_filter = False
diff --git a/myapp/models.py b/myapp/models.py
new file mode 100644
index 0000000000..07a8e4e407
--- /dev/null
+++ b/myapp/models.py
@@ -0,0 +1,14 @@
+from django.db import models
+
+class Category(models.Model):
+    name = models.CharField(max_length=255)
+
+    def __str__(self):
+        return self.name
+
+class Post(models.Model):
+    title = models.CharField(max_length=255)
+    category = models.ForeignKey(Category, on_delete=models.CASCADE, related_name='posts')
+
+    def __str__(self):
+        return self.title
\ No newline at end of file
diff --git a/scripts/reproduce_error.py b/scripts/reproduce_error.py
new file mode 100644
index 0000000000..f4730040ec
--- /dev/null
+++ b/scripts/reproduce_error.py
@@ -0,0 +1,44 @@
+from django.db.models import Prefetch
+from django.conf import settings
+import django
+
+# Setup Django
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        'django',
+'myapp',
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    }
+)
+django.setup()
+
+from myapp.models import Category, Post
+
+def reproduce_error():
+    # Create sample data
+    category = Category.objects.create(name="Test Category")
+    for i in range(5):
+        Post.objects.create(title=f"Post {i+1}", category=category)
+
+    # Attempt to prefetch with slicing
+    try:
+        prefetched = Prefetch(
+            'post_set',
+            queryset=Post.objects.all()[:3],
+            to_attr='example_posts',
+        )
+        categories = Category.objects.prefetch_related(prefetched)
+        for cat in categories:
+            print([post.title for post in cat.example_posts])
+    except Exception as e:
+        print(f"Error: {e}")
+
+if __name__ == "__main__":
+    reproduce_error()
\ No newline at end of file
