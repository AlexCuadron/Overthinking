diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py
index 7e5dea2377..d77fa08dcb 100644
--- a/django/db/migrations/optimizer.py
+++ b/django/db/migrations/optimizer.py
@@ -45,6 +45,10 @@ class MigrationOptimizer:
             # Compare it to each operation after it
             for j, other in enumerate(operations[i + 1 :]):
                 result = operation.reduce(other, app_label)
+if isinstance(operation, AlterField) and self.is_same_field_operation(operation):
+        return [operation]
+if isinstance(operation, AlterField) and self.is_same_field_operation(operation):
+                        return [operation]
                 if isinstance(result, list):
                     in_between = operations[i + 1 : i + j + 1]
                     if right:
diff --git a/scripts/reproduce_optimizer_bug.py b/scripts/reproduce_optimizer_bug.py
new file mode 100644
index 0000000000..8ad131ad8b
--- /dev/null
+++ b/scripts/reproduce_optimizer_bug.py
@@ -0,0 +1,36 @@
+import sys
+from django.db import migrations
+from django.db.migrations.optimizer import MigrationOptimizer
+from django.db.migrations.operations.fields import AddField, AlterField
+from django.db import models
+
+def main():
+    operations = [
+        AddField(
+            model_name='book',
+            name='title',
+            field=models.CharField(max_length=256, null=True),
+        ),
+        AlterField(
+            model_name='book',
+            name='title',
+            field=models.CharField(max_length=128, null=True),
+        ),
+        AlterField(
+            model_name='book',
+            name='title',
+            field=models.CharField(max_length=128, null=True, help_text="help"),
+        ),
+        AlterField(
+            model_name='book',
+            name='title',
+            field=models.CharField(max_length=128, null=True, help_text="help", default=None),
+        ),
+    ]
+    optimizer = MigrationOptimizer()
+    optimized = optimizer.optimize(operations[1:], 'books')
+    for op in optimized:
+        print(op)
+
+if __name__ == '__main__':
+    main()
\ No newline at end of file
