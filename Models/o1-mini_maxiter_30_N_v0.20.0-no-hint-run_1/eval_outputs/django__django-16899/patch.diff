diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py
index c395b0bde2..d499e914da 100644
--- a/django/contrib/admin/checks.py
+++ b/django/contrib/admin/checks.py
@@ -771,10 +771,11 @@ class BaseModelAdminChecks:
             except FieldDoesNotExist:
                 return [
                     checks.Error(
-                        "The value of '%s' is not a callable, an attribute of "
+                        "The value of '%s' ('%s') is not a callable, an attribute of "
                         "'%s', or an attribute of '%s'."
                         % (
                             label,
+field_name,
                             obj.__class__.__name__,
                             obj.model._meta.label,
                         ),
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..b71b243346
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,23 @@
+from django.contrib import admin
+import os
+os.environ.setdefault("DJANGO_SETTINGS_MODULE", "settings")
+import django
+django.setup()
+from django.core.management import execute_from_command_line
+from django.db import models
+
+class City(models.Model):
+    name = models.CharField(max_length=100)
+
+class CityInline(admin.TabularInline):
+    model = City
+    readonly_fields = ['non_existent_field']
+
+class CityAdmin(admin.ModelAdmin):
+    readonly_fields = ['non_existent_field']
+
+admin.site.register(City, CityAdmin)
+admin.site.register(CityInline)
+
+if __name__ == "__main__":
+    execute_from_command_line(['manage.py', 'check'])
\ No newline at end of file
diff --git a/settings.py b/settings.py
new file mode 100644
index 0000000000..07708c3e25
--- /dev/null
+++ b/settings.py
@@ -0,0 +1,51 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+
+SECRET_KEY = 'test-secret-key'
+
+DEBUG = True
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+]
+
+ROOT_URLCONF = 'django.urls'
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': 'mydatabase',
+    }
+}
+
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
\ No newline at end of file
