diff --git a/examples/reproduce_gid_issue.py b/examples/reproduce_gid_issue.py
new file mode 100644
index 0000000000..fdb9372589
--- /dev/null
+++ b/examples/reproduce_gid_issue.py
@@ -0,0 +1,28 @@
+
+import matplotlib.pyplot as plt
+from matplotlib.offsetbox import (OffsetImage, AnnotationBbox)
+
+fig, ax = plt.subplots()
+
+arr_img = plt.imread("undraw_flowers_vx06.png")
+
+xy = [0.3, 0.55]
+
+imagebox = OffsetImage(arr_img, zoom=0.1)
+imagebox.image.axes = ax
+
+ab = AnnotationBbox(imagebox, xy,
+                    xybox=(120., -80.),
+                    xycoords='data',
+                    boxcoords="offset points",
+                    pad=0.5,
+                    arrowprops=dict(
+                        arrowstyle="->",
+                        connectionstyle="angle,angleA=0,angleB=90,rad=3")
+                    )
+ab.set_gid('My_label')
+ax.add_artist(ab)
+
+print(f"GID = {ab.get_gid()}")
+
+fig.savefig("example.svg", format="svg")
diff --git a/examples/undraw_flowers_vx06.png b/examples/undraw_flowers_vx06.png
new file mode 100644
index 0000000000..54a7753d3a
Binary files /dev/null and b/examples/undraw_flowers_vx06.png differ
diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py
index efa34dd078..3f983a466b 100644
--- a/lib/matplotlib/offsetbox.py
+++ b/lib/matplotlib/offsetbox.py
@@ -1203,6 +1203,10 @@ class OffsetImage(OffsetBox):

     def draw(self, renderer):
         # docstring inherited
+if self.get_gid():
+            renderer.open_group(self.get_gid())
+    if self.get_gid():
+        renderer.open_group(self.get_gid())
         self.image.draw(renderer)
         # bbox_artist(self, renderer, fill=False, props=dict(pad=0.))
         self.stale = False
@@ -1448,8 +1452,11 @@ or callable, default: value of *xycoords*

     def draw(self, renderer):
         # docstring inherited
+if self.get_gid():
         if renderer is not None:
             self._renderer = renderer
+    if self.get_gid():
+        renderer.open_group(self.get_gid())
         if not self.get_visible() or not self._check_xy(renderer):
             return
         self.update_positions(renderer)
