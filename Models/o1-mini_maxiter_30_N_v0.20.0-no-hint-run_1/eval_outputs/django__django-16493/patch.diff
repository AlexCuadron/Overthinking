diff --git a/django/conf/settings.py b/django/conf/settings.py
new file mode 100644
index 0000000000..d4f2362275
--- /dev/null
+++ b/django/conf/settings.py
@@ -0,0 +1,16 @@
+import os
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'django.contrib.sessions',
+]
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+SECRET_KEY = 'dummy'
\ No newline at end of file
diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py
index 7a99b12691..c6ff5c525f 100644
--- a/django/db/models/fields/files.py
+++ b/django/db/models/fields/files.py
@@ -295,8 +295,10 @@ class FileField(Field):
         if kwargs.get("max_length") == 100:
             del kwargs["max_length"]
         kwargs["upload_to"] = self.upload_to
-        if self.storage is not default_storage:
-            kwargs["storage"] = getattr(self, "_storage_callable", self.storage)
+        if hasattr(self, '_storage_callable'):
+            kwargs["storage"] = self._storage_callable
+        elif hasattr(self, '_storage_callable'):
+            kwargs["storage"] = self.storage
         return name, path, args, kwargs

     def get_internal_type(self):
diff --git a/scripts/__init__.py b/scripts/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/scripts/reproduce_error.py b/scripts/reproduce_error.py
new file mode 100644
index 0000000000..79ddf17d3a
--- /dev/null
+++ b/scripts/reproduce_error.py
@@ -0,0 +1,25 @@
+import os
+import django
+from django.conf import settings
+from django.core.management import call_command
+
+import sys
+sys.path.insert(0, '/workspace/django__django__5.0')
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tests.i18n.sampleproject.sampleproject.settings')
+django.setup()
+
+from django.db import models
+from django.core.files.storage import FileSystemStorage, default_storage
+import random
+
+other_storage = FileSystemStorage(location='/media/other')
+
+def get_storage():
+    return random.choice([default_storage, other_storage])
+
+class MyModel(models.Model):
+    my_file = models.FileField(storage=get_storage, upload_to='uploads/')
+
+if __name__ == '__main__':
+    for _ in range(5):
+        call_command('makemigrations', 'django')
\ No newline at end of file
diff --git a/scripts/settings.py b/scripts/settings.py
new file mode 100644
index 0000000000..d4f2362275
--- /dev/null
+++ b/scripts/settings.py
@@ -0,0 +1,16 @@
+import os
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'django.contrib.sessions',
+]
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+SECRET_KEY = 'dummy'
\ No newline at end of file
