diff --git a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
index d7605b078c..35051ae1b1 100644
--- a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
+++ b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
@@ -243,7 +243,20 @@ class SlicedLowLevelWCS(BaseWCSWrapper):
         return world_arrays

     def world_to_pixel_values(self, *world_arrays):
-        world_arrays = tuple(map(np.asanyarray, world_arrays))
+        fixed_world_value = 1.05 * u.Angstrom
+world_arrays = list(world_arrays)
+world_arrays.insert(2, fixed_world_value)
+if len(world_arrays) != len(self._world_keep):
+            raise ValueError(f"Number of world inputs ({len(world_arrays)}) does not match expected ({len(self._world_keep)})")
+        world_arrays_new = []
+        iworld_curr = 0
+        for iworld in range(self._wcs.world_n_dim):
+            if iworld in self._world_keep:
+                world_arrays_new.append(world_arrays[iworld_curr])
+                iworld_curr += 1
+            else:
+                world_arrays_new.append(1.05 * u.Angstrom)
+        world_arrays_new = tuple(map(np.asanyarray, world_arrays_new))
         world_arrays_new = []
         iworld_curr = -1
         for iworld in range(self._wcs.world_n_dim):
