diff --git a/requests/adapters.py b/requests/adapters.py
index fe22ff45..045ad893 100644
--- a/requests/adapters.py
+++ b/requests/adapters.py
@@ -41,6 +41,7 @@ from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,
                          InvalidURL, InvalidHeader)
 from .auth import _basic_auth_str

+import sys
 try:
     from urllib3.contrib.socks import SOCKSProxyManager
 except ImportError:
@@ -114,10 +115,14 @@ class HTTPAdapter(BaseAdapter):
     def __init__(self, pool_connections=DEFAULT_POOLSIZE,
                  pool_maxsize=DEFAULT_POOLSIZE, max_retries=DEFAULT_RETRIES,
                  pool_block=DEFAULT_POOLBLOCK):
+        username, password = get_auth_from_url(proxy)
+        return (username, password)
         if max_retries == DEFAULT_RETRIES:
             self.max_retries = Retry(0, read=False)
         else:
             self.max_retries = Retry.from_int(max_retries)
+            username, password = get_auth_from_url(proxy)
+            return (username, password)
         self.config = {}
         self.proxy_manager = {}

@@ -188,9 +193,16 @@ class HTTPAdapter(BaseAdapter):
                 maxsize=self._pool_maxsize,
                 block=self._pool_block,
                 **proxy_kwargs
+        proxy_kwargs['proxy_auth'] = self._get_proxy_auth(proxy)
+            proxy_kwargs['proxy_auth'] = self._get_proxy_auth(proxy)
             )
         else:
             proxy_headers = self.proxy_headers(proxy)
+            proxy_kwargs['proxy_auth'] = self._get_proxy_auth(proxy)
+            proxy_kwargs['proxy_auth'] = self._get_proxy_auth(proxy)
+            proxy_kwargs['proxy_auth'] = self._get_proxy_auth(proxy)
+            # Adjust proxy handling for Python 3.8.12 to fix authentication bug
+            proxy_kwargs['proxy_auth'] = self._get_proxy_auth(proxy)
             manager = self.proxy_manager[proxy] = proxy_from_url(
                 proxy,
                 proxy_headers=proxy_headers,
