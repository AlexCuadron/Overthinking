diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py
index e8bc547b7..71822e0b4 100644
--- a/sphinx/builders/gettext.py
+++ b/sphinx/builders/gettext.py
@@ -32,8 +32,33 @@ class Message:
     """An entry of translatable message."""
     def __init__(self, text: str, locations: List[Tuple[str, int]], uuids: List[str]):
         self.text = text
-        self.locations = locations
+        self.locations = self.uniqueLocation(locations)
         self.uuids = uuids
+    def uniqueLocation(self, locations: List[Tuple[str, int]]):
+        seen = set()
+        unique = []
+        for loc in locations:
+            if loc not in seen:
+                seen.add(loc)
+                unique.append(loc)
+        return unique
+def uniqueLocation(self, locations: List[Tuple[str, int]]):
+        seen = set()
+        unique = []
+        for loc in locations:
+            if loc not in seen:
+                seen.add(loc)
+                unique.append(loc)
+        return unique
+def uniqueLocation(self, locations: List[Tuple[str, int]]):
+        seen = set()
+        unique = []
+        for loc in locations:
+            if loc not in seen:
+                seen.add(loc)
+                unique.append(loc)
+        return unique
+


 class Catalog:
diff --git a/utils/reproduce_error.py b/utils/reproduce_error.py
new file mode 100644
index 000000000..925837b6c
--- /dev/null
+++ b/utils/reproduce_error.py
@@ -0,0 +1,24 @@
+import subprocess
+
+def reproduce_error():
+    subprocess.run(['make', 'clean'], cwd='/workspace/sphinx-doc__sphinx__5.0/', check=True)
+    subprocess.run(['make', 'gettext'], cwd='/workspace/sphinx-doc__sphinx__5.0/', check=True)
+    pot_path = '/workspace/sphinx-doc__sphinx__5.0/build/gettext/blender_manual.pot'
+    duplicates = []
+    with open(pot_path, 'r') as f:
+        lines = f.readlines()
+    locs = [line.strip() for line in lines if line.startswith('#: ')]
+    loc_count = {}
+    for loc in locs:
+        loc_count[loc] = loc_count.get(loc, 0) + 1
+        if loc_count[loc] == 2:
+            duplicates.append(loc)
+    if duplicates:
+        print('Duplicate locations found:')
+        for dup in duplicates:
+            print(dup)
+    else:
+        print('No duplicate locations found.')
+
+if __name__ == '__main__':
+    reproduce_error()
\ No newline at end of file
diff --git a/utils/reproduce_error_all_pot.py b/utils/reproduce_error_all_pot.py
new file mode 100644
index 000000000..290b0883f
--- /dev/null
+++ b/utils/reproduce_error_all_pot.py
@@ -0,0 +1,31 @@
+import subprocess
+import glob
+
+def reproduce_error():
+    subprocess.run(['make', 'clean'], cwd='/workspace/sphinx-doc__sphinx__5.0/doc', check=True)
+    subprocess.run(['make', 'gettext'], cwd='/workspace/sphinx-doc__sphinx__5.0/doc', check=True)
+    pot_dir = '/workspace/sphinx-doc__sphinx__5.0/doc/_build/gettext/'
+    pot_files = glob.glob(f"{pot_dir}/*.pot")
+    duplicates = {}
+    for pot_file in pot_files:
+        with open(pot_file, 'r') as f:
+            lines = f.readlines()
+        locs = [line.strip() for line in lines if line.startswith('#: ')]
+        loc_count = {}
+        for loc in locs:
+            loc_count[loc] = loc_count.get(loc, 0) + 1
+            if loc_count[loc] == 2:
+                if pot_file not in duplicates:
+                    duplicates[pot_file] = []
+                duplicates[pot_file].append(loc)
+    if duplicates:
+        print('Duplicate locations found:')
+        for pot_file, locs in duplicates.items():
+            print(f"\nIn {pot_file}:")
+            for dup in locs:
+                print(dup)
+    else:
+        print('No duplicate locations found.')
+
+if __name__ == '__main__':
+    reproduce_error()
\ No newline at end of file
diff --git a/utils/reproduce_error_fixed.py b/utils/reproduce_error_fixed.py
new file mode 100644
index 000000000..9b4504f9a
--- /dev/null
+++ b/utils/reproduce_error_fixed.py
@@ -0,0 +1,24 @@
+import subprocess
+
+def reproduce_error():
+    subprocess.run(['make', 'clean'], cwd='/workspace/sphinx-doc__sphinx__5.0/doc', check=True)
+    subprocess.run(['make', 'gettext'], cwd='/workspace/sphinx-doc__sphinx__5.0/doc', check=True)
+    pot_path = '/workspace/sphinx-doc__sphinx__5.0/doc/_build/gettext/blender_manual.pot'
+    duplicates = []
+    with open(pot_path, 'r') as f:
+        lines = f.readlines()
+    locs = [line.strip() for line in lines if line.startswith('#: ')]
+    loc_count = {}
+    for loc in locs:
+        loc_count[loc] = loc_count.get(loc, 0) + 1
+        if loc_count[loc] == 2:
+            duplicates.append(loc)
+    if duplicates:
+        print('Duplicate locations found:')
+        for dup in duplicates:
+            print(dup)
+    else:
+        print('No duplicate locations found.')
+
+if __name__ == '__main__':
+    reproduce_error()
\ No newline at end of file
