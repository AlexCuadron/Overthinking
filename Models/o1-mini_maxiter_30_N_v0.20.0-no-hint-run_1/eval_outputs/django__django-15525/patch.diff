diff --git a/scripts/books.json b/scripts/books.json
new file mode 100644
index 0000000000..9a5345e1e3
--- /dev/null
+++ b/scripts/books.json
@@ -0,0 +1,17 @@
+[
+  {
+    "model": "testbug.author",
+    "fields": {
+      "name": "JR Tolkien"
+    }
+  },
+  {
+    "model": "testbug.book",
+    "fields": {
+      "title": "The Ring",
+      "author": [
+        "JR Tolkien"
+      ]
+    }
+  }
+]
\ No newline at end of file
diff --git a/scripts/reproduce_error.py b/scripts/reproduce_error.py
new file mode 100644
index 0000000000..347bbd06cc
--- /dev/null
+++ b/scripts/reproduce_error.py
@@ -0,0 +1,14 @@
+import sys
+sys.path.insert(0, "/workspace/django__django__4.1")
+import os
+import django
+from django.core.management import call_command
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tests.i18n.sampleproject.sampleproject.settings')
+django.setup()
+
+call_command('migrate', database='other')
+try:
+    call_command('loaddata', '/workspace/django__django__4.1/scripts/books.json', database='other', format='json')
+except Exception as e:
+    print(e)
\ No newline at end of file
diff --git a/tests/i18n/sampleproject/db_other.sqlite3 b/tests/i18n/sampleproject/db_other.sqlite3
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/i18n/sampleproject/sampleproject/settings.py b/tests/i18n/sampleproject/sampleproject/settings.py
index e69de29bb2..f9049baf46 100644
--- a/tests/i18n/sampleproject/sampleproject/settings.py
+++ b/tests/i18n/sampleproject/sampleproject/settings.py
@@ -0,0 +1,34 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+SECRET_KEY = 'fake-key'
+
+DEBUG = True
+
+ALLOWED_HOSTS = []
+
+INSTALLED_APPS = [
+    'testbug',
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+]
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    },
+    'other': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db_other.sqlite3'),
+    }
+}
+
+FIXTURE_DIRS = [
+    os.path.join(BASE_DIR, '../../scripts'),
+]
diff --git a/tests/i18n/sampleproject/testbug/__init__.py b/tests/i18n/sampleproject/testbug/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/i18n/sampleproject/testbug/models.py b/tests/i18n/sampleproject/testbug/models.py
new file mode 100644
index 0000000000..7a976c126f
--- /dev/null
+++ b/tests/i18n/sampleproject/testbug/models.py
@@ -0,0 +1,36 @@
+from django.db import models
+
+class AuthorManager(models.Manager):
+    def get_by_natural_key(self, name):
+        return self.get(name=name)
+
+class Author(models.Model):
+    id = models.AutoField(primary_key=True)
+    name = models.CharField(max_length=255, unique=True)
+    objects = AuthorManager()
+
+    def natural_key(self):
+        return (self.name,)
+
+    def __str__(self):
+        return f"{self.id} {self.name}"
+
+class BookManager(models.Manager):
+    def get_by_natural_key(self, title, author):
+        return self.get(title=title, author__name=author)
+
+class Book(models.Model):
+    id = models.AutoField(primary_key=True)
+    title = models.CharField(max_length=255)
+    author = models.ForeignKey(Author, models.DO_NOTHING, related_name="books")
+    objects = BookManager()
+
+    def natural_key(self):
+        return (self.title,) + self.author.natural_key()
+    natural_key.dependencies = ["testbug.Author"]
+
+    class Meta:
+        unique_together = [["title", "author"]]
+
+    def __str__(self):
+        return f"{self.id}: '{self.title}' by {self.author}"
\ No newline at end of file
