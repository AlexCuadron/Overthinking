diff --git a/django/db/backends/mysql/base.py b/django/db/backends/mysql/base.py
index 2c62182d31..8b28a60485 100644
--- a/django/db/backends/mysql/base.py
+++ b/django/db/backends/mysql/base.py
@@ -200,9 +200,9 @@ class DatabaseWrapper(BaseDatabaseWrapper):
         if settings_dict['USER']:
             kwargs['user'] = settings_dict['USER']
         if settings_dict['NAME']:
-            kwargs['db'] = settings_dict['NAME']
+            kwargs['database'] = settings_dict['NAME']
         if settings_dict['PASSWORD']:
-            kwargs['passwd'] = settings_dict['PASSWORD']
+            kwargs['password'] = settings_dict['PASSWORD']
         if settings_dict['HOST'].startswith('/'):
             kwargs['unix_socket'] = settings_dict['HOST']
         elif settings_dict['HOST']:
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..6f81f5998c
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,29 @@
+import os
+import django
+from django.conf import settings
+from django.db.backends.mysql.base import DatabaseWrapper
+
+def reproduce_deprecation_error():
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tests.i18n.sampleproject.sampleproject.settings')
+    django.setup()
+
+    db_settings = {
+        'ENGINE': 'django.db.backends.mysql',
+        'NAME': 'test_db',
+        'USER': 'test_user',
+        'PASSWORD': 'test_pass',
+        'HOST': 'localhost',
+        'PORT': '3306',
+    }
+
+    # Using deprecated 'db' and 'passwd' keyword arguments
+    try:
+        db_wrapper = DatabaseWrapper(database=db_settings['NAME'], password=db_settings['PASSWORD'])
+        db_wrapper.connect()
+    except TypeError as e:
+        print(f"Caught expected TypeError: {e}")
+    except Exception as e:
+        print(f"Caught unexpected exception: {e}")
+
+if __name__ == '__main__':
+    reproduce_deprecation_error()
\ No newline at end of file
