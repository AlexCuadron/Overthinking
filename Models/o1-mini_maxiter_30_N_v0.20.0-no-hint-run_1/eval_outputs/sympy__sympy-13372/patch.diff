diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..a56ad04687
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,6 @@
+from sympy import symbols, Mul, Max
+
+x, y = symbols('x y')
+
+print(Mul(x, Max(0, y), evaluate=False).evalf())
+print(Mul(Max(0, y), x, evaluate=False).evalf())
\ No newline at end of file
diff --git a/sympy/core/evalf.py b/sympy/core/evalf.py
index 72a5fbae52..582f5b7f60 100644
--- a/sympy/core/evalf.py
+++ b/sympy/core/evalf.py
@@ -585,11 +585,7 @@ def evalf_mul(v, prec, options):
             (s, m, e, b), w_acc = im, im_acc
             direction += 1
         else:
-            return None, None, None, None
-        direction += 2*s
-        man *= m
-        exp += e
-        bc += b
+                raise NotImplementedError("Unhandled case in evalf_mul for re_acc and im_acc.")
         if bc > 3*working_prec:
             man >>= working_prec
             exp += working_prec
@@ -1297,17 +1293,17 @@ def evalf(x, prec, options):
                 raise NotImplementedError
             if re == 0:
                 re = None
-                reprec = None
+                re_acc = None
             elif re.is_number:
                 re = re._to_mpmath(prec, allow_ints=False)._mpf_
-                reprec = prec
+                re_acc = prec
             if im == 0:
                 im = None
-                imprec = None
+                im_acc = None
             elif im.is_number:
                 im = im._to_mpmath(prec, allow_ints=False)._mpf_
-                imprec = prec
-            r = re, im, reprec, imprec
+                im_acc = prec
+            r = re, im, re_acc, im_acc
         except AttributeError:
             raise NotImplementedError
     if options.get("verbose"):
