diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..3bdcf549d6
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,29 @@
+import enum
+from django.db import models
+import django
+from django.conf import settings
+
+settings.configure(
+    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth', 'test_app'],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    }
+)
+django.setup()
+
+class Outer(object):
+    class Inner(models.CharField):
+        pass
+
+class A(models.Model):
+    field = Outer.Inner(max_length=20)
+
+def run_makemigrations():
+    import os
+    os.system('python /workspace/django__django__3.1/tests/i18n/sampleproject/manage.py makemigrations')
+
+if __name__ == '__main__':
+    run_makemigrations()
\ No newline at end of file
diff --git a/tests/i18n/sampleproject/test_app/__init__.py b/tests/i18n/sampleproject/test_app/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/i18n/sampleproject/test_app/models.py b/tests/i18n/sampleproject/test_app/models.py
new file mode 100644
index 0000000000..6e7a687f54
--- /dev/null
+++ b/tests/i18n/sampleproject/test_app/models.py
@@ -0,0 +1,12 @@
+import enum
+from django.db import models
+
+class Outer(models.Model):
+    class Inner(models.CharField):
+        pass
+
+class A(models.Model):
+    field = Outer.Inner(max_length=20)
+
+    class Meta:
+        app_label = 'test_app'
\ No newline at end of file
