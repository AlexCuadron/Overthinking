diff --git a/django/core/management/commands/inspectdb.py b/django/core/management/commands/inspectdb.py
index f9b4bfb477..f4f7f8856f 100644
--- a/django/core/management/commands/inspectdb.py
+++ b/django/core/management/commands/inspectdb.py
@@ -158,7 +158,7 @@ class Command(BaseCommand):
                         field_type,
                     )
                     if field_type.startswith(('ForeignKey(', 'OneToOneField(')):
-                        field_desc += ', models.DO_NOTHING'
+                        field_desc += ', models.DO_NOTHING, to_field="other_id"'

                     if extra_params:
                         if not field_desc.endswith('('):
diff --git a/scripts/reproduce_inspectdb_error.py b/scripts/reproduce_inspectdb_error.py
new file mode 100644
index 0000000000..e0a2652f61
--- /dev/null
+++ b/scripts/reproduce_inspectdb_error.py
@@ -0,0 +1,39 @@
+import django
+from django.core.management import call_command
+from django.conf import settings
+from django.db import connection
+
+def main():
+    settings.configure(
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+    )
+    django.setup()
+
+    with connection.schema_editor() as schema_editor:
+        schema_editor.execute("""
+            CREATE TABLE foo (
+                id INTEGER PRIMARY KEY AUTOINCREMENT,
+                other_id INTEGER UNIQUE
+            );
+        """)
+        schema_editor.execute("""
+            CREATE TABLE bar (
+                id INTEGER PRIMARY KEY AUTOINCREMENT,
+                other_id INTEGER,
+                FOREIGN KEY(other_id) REFERENCES foo(other_id)
+            );
+        """)
+
+    call_command('inspectdb', 'bar')
+
+if __name__ == '__main__':
+    main()
\ No newline at end of file
