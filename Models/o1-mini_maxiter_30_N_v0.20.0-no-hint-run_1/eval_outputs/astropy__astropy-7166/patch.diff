diff --git a/astropy/utils/misc.py b/astropy/utils/misc.py
index de3fb01d18..de71af508b 100644
--- a/astropy/utils/misc.py
+++ b/astropy/utils/misc.py
@@ -528,13 +528,16 @@ class InheritDocstrings(type):
                 not key.startswith('_'))

         for key, val in dct.items():
-            if (inspect.isfunction(val) and
-                is_public_member(key) and
+            if (inspect.isfunction(val) or isinstance(val, property)) and \
+                is_public_member(key) and \
                 val.__doc__ is None):
                 for base in cls.__mro__[1:]:
                     super_method = getattr(base, key, None)
                     if super_method is not None:
-                        val.__doc__ = super_method.__doc__
+                        if isinstance(val, property):
+    val.fget.__doc__ = super_method.__doc__
+else:
+    val.__doc__ = super_method.__doc__
                         break

         super().__init__(name, bases, dct)
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..9ccc8c164d
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,19 @@
+from astropy.utils import InheritDocstrings
+
+class Example(metaclass=InheritDocstrings):
+    @property
+    def sample_property(self):
+        """This is a sample property."""
+        return "value"
+
+    def sample_method(self):
+        """This is a sample method."""
+        return "method value"
+
+def main():
+    example = Example()
+    print(example.sample_property)
+    print(example.sample_method.__doc__)
+
+if __name__ == "__main__":
+    main()
\ No newline at end of file
