diff --git a/core/__init__.py b/core/__init__.py
new file mode 100644
index 0000000000..fc80254b61
--- /dev/null
+++ b/core/__init__.py
@@ -0,0 +1 @@
+pass
\ No newline at end of file
diff --git a/core/apps.py b/core/apps.py
new file mode 100644
index 0000000000..be6eb9f421
--- /dev/null
+++ b/core/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class CoreConfig(AppConfig):
+    name = 'core'
\ No newline at end of file
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..63b0b03a63
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,46 @@
+import django
+from django.conf import settings
+from django.db import models
+from django.db.models import Sum, F
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+'core',
+]
+
+# Initialize Django
+django.setup()
+
+# Define the Book model
+class Book(models.Model):
+    id = models.AutoField(primary_key=True)
+    title = models.CharField(max_length=100)
+
+    class Meta:
+        app_label = 'core'
+
+# Create the tables
+from django.core.management import call_command
+call_command('migrate', run_syncdb=True, verbosity=0)
+
+# Populate the database with sample data
+Book.objects.create(title='Book 1')
+Book.objects.create(title='Book 2')
+Book.objects.create(title='Book 3')
+
+# Reproduce the error
+try:
+    result = Book.objects.annotate(idx=F("id")).aggregate(Sum("id", default=0))
+    print(result)
+except Exception as e:
+    print(f"Error: {e}")
\ No newline at end of file
