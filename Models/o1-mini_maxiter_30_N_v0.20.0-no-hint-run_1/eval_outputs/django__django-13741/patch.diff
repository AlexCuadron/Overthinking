diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py
index b9eb33329f..eca68daed7 100644
--- a/django/contrib/auth/forms.py
+++ b/django/contrib/auth/forms.py
@@ -140,7 +140,7 @@ class UserCreationForm(forms.ModelForm):


 class UserChangeForm(forms.ModelForm):
-    password = ReadOnlyPasswordHashField(
+    password = ReadOnlyPasswordHashField(disabled=True,
         label=_("Password"),
         help_text=_(
             'Raw passwords are not stored, so there is no way to see this '
@@ -163,11 +163,7 @@ class UserChangeForm(forms.ModelForm):
         if user_permissions:
             user_permissions.queryset = user_permissions.queryset.select_related('content_type')

-    def clean_password(self):
-        # Regardless of what the user provides, return the initial value.
-        # This is done here, rather than on the field, because the
-        # field does not have access to the initial value
-        return self.initial.get('password')
+


 class AuthenticationForm(forms.Form):
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..2d404e9bbb
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,20 @@
+import os
+import django
+from django.contrib.auth.forms import UserChangeForm
+from django.contrib.auth.models import User
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.settings')
+django.setup()
+
+# Create a test user
+user = User.objects.create_user(username='testuser', password='initial_password')
+
+# Attempt to change the password using UserChangeForm without clean_password
+data = {'username': 'testuser', 'password': 'new_password'}
+form = UserChangeForm(data, instance=user)
+
+if form.is_valid():
+    form.save()
+    print('Password changed successfully')
+else:
+    print('Form errors:', form.errors)
\ No newline at end of file
