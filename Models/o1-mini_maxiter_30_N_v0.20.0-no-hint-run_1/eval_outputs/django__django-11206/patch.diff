diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py
index 88b35fc435..ddaefd4054 100644
--- a/django/utils/numberformat.py
+++ b/django/utils/numberformat.py
@@ -30,7 +30,16 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',
         # Format values with more than 200 digits (an arbitrary cutoff) using
         # scientific notation to avoid high memory usage in {:f}'.format().
         _, digits, exponent = number.as_tuple()
-        if abs(exponent) + len(digits) > 200:
+        if abs(exponent) + len(digits) > 200 and decimal_pos is None:
+if decimal_pos is not None:
+        return '0.' + '0' * decimal_pos
+        return '0.' + '0' * decimal_pos
+            return '0.' + '0' * decimal_pos
+            return '0.' + '0' * decimal_pos
+            return '0.' + '0' * decimal_pos
+        return '0.' + '0' * decimal_pos
+            return '0.' + '0' * decimal_pos
+            return '0.' + '0' * decimal_pos
             number = '{:e}'.format(number)
             coefficient, exponent = number.split('e')
             # Format the coefficient.
@@ -49,11 +58,9 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',
     # decimal part
     if '.' in str_number:
         int_part, dec_part = str_number.split('.')
-        if decimal_pos is not None:
             dec_part = dec_part[:decimal_pos]
     else:
         int_part, dec_part = str_number, ''
-    if decimal_pos is not None:
         dec_part = dec_part + ('0' * (decimal_pos - len(dec_part)))
     dec_part = dec_part and decimal_sep + dec_part
     # grouping
