diff --git a/sympy/matrices/normalforms.py b/sympy/matrices/normalforms.py
index 7bce95d230..116fbde1ce 100644
--- a/sympy/matrices/normalforms.py
+++ b/sympy/matrices/normalforms.py
@@ -67,7 +67,7 @@ def invariant_factors(m, domain=None):
     return factors


-def hermite_normal_form(A, *, D=None, check_rank=False):
+def hermite_normal_form(A, *, D=None, check_rank=True):
     r"""
     Compute the Hermite Normal Form of a Matrix *A* of integers.

@@ -124,4 +124,8 @@ def hermite_normal_form(A, *, D=None, check_rank=False):
     # Accept any of Python int, SymPy Integer, and ZZ itself:
     if D is not None and not ZZ.of_type(D):
         D = ZZ(int(D))
-    return _hnf(A._rep, D=D, check_rank=check_rank).to_Matrix()
+    hnf_matrix = _hnf(A._rep, D=D, check_rank=check_rank).to_Matrix()
+# Ensure all original rows are preserved by appending zero rows if necessary
+while hnf_matrix.rows < A.rows:
+    hnf_matrix = hnf_matrix.row_insert(hnf_matrix.rows, [0]*A.cols)
+return hnf_matrix
