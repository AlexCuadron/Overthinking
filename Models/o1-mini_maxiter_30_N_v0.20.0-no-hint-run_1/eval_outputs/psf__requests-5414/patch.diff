diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 00000000..b552e98f
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,2 @@
+import requests
+requests.get("http://.example.com")
\ No newline at end of file
diff --git a/requests/adapters.py b/requests/adapters.py
index fe22ff45..e4ee0d50 100644
--- a/requests/adapters.py
+++ b/requests/adapters.py
@@ -27,7 +27,7 @@ from urllib3.exceptions import ProtocolError
 from urllib3.exceptions import ReadTimeoutError
 from urllib3.exceptions import SSLError as _SSLError
 from urllib3.exceptions import ResponseError
-from urllib3.exceptions import LocationValueError
+from urllib3.exceptions import LocationParseError, LocationValueError

 from .models import Response
 from .compat import urlparse, basestring
@@ -411,7 +411,7 @@ class HTTPAdapter(BaseAdapter):

         try:
             conn = self.get_connection(request.url, proxies)
-        except LocationValueError as e:
+        except (LocationValueError, LocationParseError, UnicodeError) as e:
             raise InvalidURL(e, request=request)

         self.cert_verify(conn, request.url, verify, cert)
diff --git a/requests/models.py b/requests/models.py
index e7d292d5..72eef866 100644
--- a/requests/models.py
+++ b/requests/models.py
@@ -354,7 +354,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):
         try:
             host = idna.encode(host, uts46=True).decode('utf-8')
         except idna.IDNAError:
-            raise UnicodeError
+            raise InvalidURL('URL has an invalid label.')
         return host

     def prepare_url(self, url, params):
diff --git a/requests/utils.py b/requests/utils.py
index 8b2a5f14..f128b592 100644
--- a/requests/utils.py
+++ b/requests/utils.py
@@ -591,7 +591,7 @@ def get_unicode_from_response(r):
         try:
             return str(r.content, encoding)
         except UnicodeError:
-            tried_encodings.append(encoding)
+            raise InvalidURL('URL has an invalid label.')

     # Fall back:
     try:
