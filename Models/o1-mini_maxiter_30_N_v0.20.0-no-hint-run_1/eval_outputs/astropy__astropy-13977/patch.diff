diff --git a/astropy/units/core.py b/astropy/units/core.py
index 8c3204b8b0..26019b7df2 100644
--- a/astropy/units/core.py
+++ b/astropy/units/core.py
@@ -2626,13 +2626,7 @@ def _condition_arg(value):

     avalue = np.array(value)
     if avalue.dtype.kind not in ["i", "f", "c"]:
-        raise ValueError(
-            "Value not scalar compatible or convertible to "
-            "an int, float, or complex array"
-        )
-    return avalue
-
-
+        raise ValueError("Value not scalar compatible or convertible to an int, float, or complex array")
 def unit_scale_converter(val):
     """Function that just multiplies the value by unity.

diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py
index b98abfafb0..366f8af527 100644
--- a/astropy/units/quantity.py
+++ b/astropy/units/quantity.py
@@ -667,6 +667,10 @@ class Quantity(np.ndarray):
         arrays = []
         for input_, converter in zip(inputs, converters):
             input_ = getattr(input_, "value", input_)
+        try:
+            arrays.append(converter(input_) if converter else input_)
+        except ValueError:
+            return NotImplemented
             arrays.append(converter(input_) if converter else input_)

         # Call our superclass's __array_ufunc__
diff --git a/astropy/wcs/setup_package.py b/astropy/wcs/setup_package.py
index eb37ffd434..49ab335a63 100644
--- a/astropy/wcs/setup_package.py
+++ b/astropy/wcs/setup_package.py
@@ -10,7 +10,7 @@ from os.path import join

 import numpy
 from setuptools import Extension
-from setuptools.dep_util import newer_group
+from setuptools._distutils.dep_util import newer_group

 from extension_helpers import get_compiler, import_file, pkg_config, write_if_different
