diff --git a/scripts/reproduce_error.py b/scripts/reproduce_error.py
new file mode 100644
index 0000000000..7ebaf19e34
--- /dev/null
+++ b/scripts/reproduce_error.py
@@ -0,0 +1,52 @@
+import os
+import django
+from django.conf import settings
+from django.contrib.admin import ModelAdmin
+from django.db import models
+
+def setup_django():
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.settings')
+settings.configure(
+            INSTALLED_APPS=[
+                'django.contrib.admin',
+                'django.contrib.auth',
+                'django.contrib.contenttypes',
+                'django.contrib.sessions',
+                'django.contrib.messages',
+                'django.contrib.staticfiles',
+                'django.conf.app_template',
+                'modeladmin',
+            ],
+            DATABASES={
+                'default': {
+                    'ENGINE': 'django.db.backends.sqlite3',
+                    'NAME': ':memory:',
+                }
+            },
+        )
+
+# class Country(models.Model):
+    name = models.CharField(max_length=256)
+
+class Place(models.Model):
+    country = models.ForeignKey(Country, on_delete=models.CASCADE)
+
+class Restaurant(models.Model):
+    place = models.OneToOneField(Place, on_delete=models.CASCADE, primary_key=True)
+
+class Waiter(models.Model):
+    restaurant = models.ForeignKey(Restaurant, on_delete=models.CASCADE)
+
+class WaiterAdmin(ModelAdmin):
+    list_filter = [
+        'restaurant__place__country',
+    ]
+
+def reproduce_lookup_allowed():
+    admin = WaiterAdmin(Waiter, admin_site=None)
+    allowed = admin.lookup_allowed('restaurant__place__country', 'test_value')
+    print(f"lookup_allowed returned: {allowed}")
+
+if __name__ == '__main__':
+    setup_django()
+    reproduce_lookup_allowed()
\ No newline at end of file
