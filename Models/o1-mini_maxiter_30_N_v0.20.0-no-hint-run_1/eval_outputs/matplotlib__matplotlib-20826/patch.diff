diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py
index 802fd3c997..fbb060488f 100644
--- a/lib/matplotlib/axes/_base.py
+++ b/lib/matplotlib/axes/_base.py
@@ -1473,7 +1473,106 @@ class _AxesBase(martist.Artist):
     def clear(self):
         """Clear the axes."""
         self.cla()
-
+shared_axes = self._shared_x_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.xaxis.set_tick_params(labelbottom=False)
+
+    shared_axes = self._shared_y_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.yaxis.set_tick_params(labelleft=False)
+shared_axes = self._shared_x_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.xaxis.set_tick_params(labelbottom=False)
+
+    shared_axes = self._shared_y_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.yaxis.set_tick_params(labelleft=False)
+shared_axes = self._shared_x_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.xaxis.set_tick_params(labelbottom=False)
+
+    shared_axes = self._shared_y_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.yaxis.set_tick_params(labelleft=False)
+shared_axes = self._shared_x_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.xaxis.set_tick_params(labelbottom=False)
+
+    shared_axes = self._shared_y_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.yaxis.set_tick_params(labelleft=False)
+shared_axes = self._shared_x_axes.get_siblings(self)
+        for ax in shared_axes:
+            if ax != self:
+                ax.xaxis.set_tick_params(labelbottom=False)
+
+        shared_axes = self._shared_y_axes.get_siblings(self)
+        for ax in shared_axes:
+            if ax != self:
+                ax.yaxis.set_tick_params(labelleft=False)
+shared_axes = self._shared_x_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.xaxis.set_tick_params(labelbottom=False)
+
+    shared_axes = self._shared_y_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.yaxis.set_tick_params(labelleft=False)
+shared_axes = self._shared_x_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.xaxis.set_tick_params(labelbottom=False)
+
+    shared_axes = self._shared_y_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.yaxis.set_tick_params(labelleft=False)
+shared_axes = self._shared_x_axes.get_siblings(self)
+        for ax in shared_axes:
+            if ax != self:
+                ax.xaxis.set_tick_params(labelbottom=False)
+
+        shared_axes = self._shared_y_axes.get_siblings(self)
+        for ax in shared_axes:
+            if ax != self:
+                ax.yaxis.set_tick_params(labelleft=False)
+shared_axes = self._shared_x_axes.get_siblings(self)
+        for ax in shared_axes:
+            if ax != self:
+                ax.xaxis.set_tick_params(labelbottom=False)
+
+        shared_axes = self._shared_y_axes.get_siblings(self)
+        for ax in shared_axes:
+            if ax != self:
+                ax.yaxis.set_tick_params(labelleft=False)
+shared_axes = self._shared_x_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.xaxis.set_tick_params(labelbottom=False)
+
+    shared_axes = self._shared_y_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.yaxis.set_tick_params(labelleft=False)
+
+shared_axes = self._shared_x_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.xaxis.set_tick_params(labelbottom=False)
+
+    shared_axes = self._shared_y_axes.get_siblings(self)
+    for ax in shared_axes:
+        if ax != self:
+            ax.yaxis.set_tick_params(labelleft=False)
     def get_facecolor(self):
         """Get the facecolor of the Axes."""
         return self.patch.get_facecolor()
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..db5392fb74
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,13 @@
+import numpy as np
+import matplotlib.pyplot as plt
+
+fig, axes = plt.subplots(2, 2, sharex=True, sharey=True)
+
+x = np.arange(0.0, 2*np.pi, 0.01)
+y = np.sin(x)
+
+for ax in axes.flatten():
+    ax.clear()
+    ax.plot(x, y)
+
+plt.show()
\ No newline at end of file
