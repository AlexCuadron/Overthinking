diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..9799bc022e
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,8 @@
+from sympy import sympify, Mod, symbols
+
+k = symbols('k', integer=True)
+expr = sympify(3*k % 2)
+expected = Mod(k, 2)
+print(f"sympify(3*k%2) = {expr}")
+print(f"Expected: {expected}")
+print(f"Are they equal? {expr == expected}")
\ No newline at end of file
diff --git a/sympy/core/mod.py b/sympy/core/mod.py
index eae25630cc..4b8b35d91d 100644
--- a/sympy/core/mod.py
+++ b/sympy/core/mod.py
@@ -123,9 +123,10 @@ def doit(p, q):
             for arg in p.args:
                 both_l[isinstance(arg, cls)].append(arg)

-            if mod_l and all(inner.args[1] == q for inner in mod_l):
-                # finding distributive term
-                non_mod_l = [cls(x, q) for x in non_mod_l]
+            was = non_mod_l[:]
+            non_mod_l = [cls(x, q) for x in non_mod_l]
+            changed = was != non_mod_l
+            if changed or mod_l and all(inner.args[1] == q for inner in mod_l):
                 mod = []
                 non_mod = []
                 for j in non_mod_l:
