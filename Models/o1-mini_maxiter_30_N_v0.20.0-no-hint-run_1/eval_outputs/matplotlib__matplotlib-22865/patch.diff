diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py
index c59b0ac815..21addc2669 100644
--- a/lib/matplotlib/colorbar.py
+++ b/lib/matplotlib/colorbar.py
@@ -345,7 +345,7 @@ class Colorbar:
                  spacing='uniform',  # uniform or proportional
                  ticks=None,
                  format=None,
-                 drawedges=False,
+                 drawedges=True,
                  filled=True,
                  extendfrac=None,
                  extendrect=False,
@@ -427,7 +427,7 @@ class Colorbar:
         self.outline = self.ax.spines['outline'] = _ColorbarSpine(self.ax)
         self._short_axis().set_visible(False)
         # Only kept for backcompat; remove after deprecation of .patch elapses.
-        self._patch = mpatches.Polygon(
+        self._patch = mpatches.Polygon(edgecolor="black",
             np.empty((0, 2)),
             color=mpl.rcParams['axes.facecolor'], linewidth=0.01, zorder=-1)
         ax.add_artist(self._patch)
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..cbaa7b0575
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,16 @@
+import matplotlib as mpl
+import numpy as np
+import matplotlib.pyplot as plt
+from matplotlib.colors import from_levels_and_colors
+
+my_cmap = mpl.cm.viridis
+bounds = np.arange(10)
+nb_colors = len(bounds) + 1
+colors = my_cmap(np.linspace(100, 255, nb_colors).astype(int))
+my_cmap, my_norm = from_levels_and_colors(bounds, colors, extend='both')
+
+plt.figure(figsize=(5, 1))
+ax = plt.subplot(111)
+cbar = mpl.colorbar.ColorbarBase(ax, cmap=my_cmap, norm=my_norm, orientation='horizontal', drawedges=True)
+plt.subplots_adjust(left=0.05, bottom=0.4, right=0.95, top=0.9)
+plt.show()
\ No newline at end of file
