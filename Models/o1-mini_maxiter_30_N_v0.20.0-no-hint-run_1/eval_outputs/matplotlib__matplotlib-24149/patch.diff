diff --git a/check_import.py b/check_import.py
new file mode 100644
index 0000000000..9df52f46a1
--- /dev/null
+++ b/check_import.py
@@ -0,0 +1,2 @@
+import matplotlib
+print(matplotlib.__file__)
\ No newline at end of file
diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py
index fdac0f3560..709e7b1cf8 100644
--- a/lib/matplotlib/axes/_axes.py
+++ b/lib/matplotlib/axes/_axes.py
@@ -2179,8 +2179,8 @@ class Axes(_AxesBase):
             # removes the units from unit packages like `pint` that
             # wrap numpy arrays.
             try:
-                x0 = cbook._safe_first_finite(x0)
-            except (TypeError, IndexError, KeyError):
+                x0 = cbook._safe_first_finite(x0) if any(cbook.safe_isfinite(x0)) else np.nan
+            except (TypeError, IndexError, KeyError, StopIteration):
                 pass

             try:
diff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py
index 34c6ddb861..c35a3eef8e 100644
--- a/lib/matplotlib/cbook/__init__.py
+++ b/lib/matplotlib/cbook/__init__.py
@@ -1746,7 +1746,7 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):
         raise RuntimeError("matplotlib does not "
                            "support generators as input")
     else:
-        return next(val for val in obj if safe_isfinite(val))
+        return next((val for val in obj if safe_isfinite(val)), np.nan)


 def sanitize_sequence(data):
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..0c1735845b
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,5 @@
+import numpy as np
+import matplotlib.pyplot as plt
+
+f, ax = plt.subplots()
+ax.bar([np.nan], [np.nan])
\ No newline at end of file
diff --git a/test_cbook.py b/test_cbook.py
new file mode 100644
index 0000000000..8499118d34
--- /dev/null
+++ b/test_cbook.py
@@ -0,0 +1,5 @@
+import matplotlib.cbook as cbook
+import numpy as np
+
+result = cbook._safe_first_finite([np.nan])
+print(result)
\ No newline at end of file
