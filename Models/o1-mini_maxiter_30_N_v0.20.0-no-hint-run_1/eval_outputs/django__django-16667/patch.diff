diff --git a/django/forms/widgets.py b/django/forms/widgets.py
index 842b73e95c..8c21c1a25c 100644
--- a/django/forms/widgets.py
+++ b/django/forms/widgets.py
@@ -1156,7 +1156,21 @@ class SelectDateWidget(Widget):
             input_format = get_format("DATE_INPUT_FORMATS")[0]
             input_format = formats.sanitize_strftime_format(input_format)
             try:
+                try:
+    try:
+    try:
+        try:
                 date_value = datetime.date(int(y), int(m), int(d))
+except OverflowError:
+    date_value = None
+            except OverflowError:
+                date_value = None
+    except OverflowError:
+        date_value = None
+except OverflowError:
+    date_value = None
+except OverflowError:
+    date_value = None
             except ValueError:
                 # Return pseudo-ISO dates with zeros for any unselected values,
                 # e.g. '2017-0-23'.
diff --git a/scripts/reproduce_overflow.py b/scripts/reproduce_overflow.py
new file mode 100644
index 0000000000..0e420e8afa
--- /dev/null
+++ b/scripts/reproduce_overflow.py
@@ -0,0 +1,40 @@
+import sys
+import django
+from django.conf import settings
+from django import forms
+from django.forms import SelectDateWidget
+from django.http import HttpResponse
+from django.urls import path
+
+# Configure minimal settings
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY='test',
+    ROOT_URLCONF=__name__,
+    MIDDLEWARE=[],
+    INSTALLED_APPS=['django.contrib.contenttypes'],
+)
+
+django.setup()
+
+class ReproForm(forms.Form):
+    my_date = forms.DateField(widget=SelectDateWidget())
+
+def repro_view(request):
+    form = ReproForm(request.GET)
+    if form.is_valid():
+        return HttpResponse("ok")
+    else:
+        return HttpResponse("not ok")
+
+urlpatterns = [path('repro/', repro_view, name='repro')]
+
+def main():
+    from django.test import Client
+    client = Client()
+    response = client.get('/repro/?my_date_day=1&my_date_month=1&my_date_year=1234567821345678')
+    print('Response status code:', response.status_code)
+    print('Response content:', response.content)
+
+if __name__ == '__main__':
+    main()
\ No newline at end of file
