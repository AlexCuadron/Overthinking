2025-01-15 19:19:52,955 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_wprhwa6zk54juf8r_4k0wxu6yx01d76hu
2025-01-15 19:21:15,803 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_wprhwa6zk54juf8r_4k0wxu6yx01d76hu] build finished.
2025-01-15 19:21:15,821 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_wprhwa6zk54juf8r_4k0wxu6yx01d76hu] with more generic tag [oh_v0.20.0_wprhwa6zk54juf8r]
2025-01-15 19:21:15,824 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_wprhwa6zk54juf8r_4k0wxu6yx01d76hu, oh_v0.20.0_wprhwa6zk54juf8r] built successfully
2025-01-15 19:21:15,832 - INFO - [runtime b4cb1b72-305b-424e-93fd-029d8ce59765-460fc80dac80a2bc] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_wprhwa6zk54juf8r_4k0wxu6yx01d76hu
2025-01-15 19:21:16,968 - INFO - [runtime b4cb1b72-305b-424e-93fd-029d8ce59765-460fc80dac80a2bc] Container started: openhands-runtime-b4cb1b72-305b-424e-93fd-029d8ce59765-460fc80dac80a2bc. VSCode URL: None
2025-01-15 19:21:16,968 - INFO - [runtime b4cb1b72-305b-424e-93fd-029d8ce59765-460fc80dac80a2bc] Waiting for client to become ready at http://localhost:32574...
2025-01-15 19:21:43,051 - INFO - [runtime b4cb1b72-305b-424e-93fd-029d8ce59765-460fc80dac80a2bc] Runtime is ready.
2025-01-15 19:21:43,698 - INFO - ------------------------------
2025-01-15 19:21:43,698 - INFO - BEGIN Runtime Initialization Fn
2025-01-15 19:21:43,698 - INFO - ------------------------------
2025-01-15 19:21:43,698 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=mwaskom__seaborn-3069' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-15 19:21:44,330 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:21:44,330 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-15 19:21:44,959 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:21:44,959 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-15 19:21:45,617 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:21:45,627 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-15 19:21:46,287 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=mwaskom__seaborn-3069
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:21:46,288 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-15 19:21:46,930 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:21:46,930 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-15 19:21:46,930 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-15 19:21:49,083 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: mwaskom__seaborn__0.12
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:21:49,083 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/mwaskom__seaborn__0.12
2025-01-15 19:21:49,752 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace/mwaskom__seaborn__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/mwaskom__seaborn__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:21:49,753 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-15 19:21:50,387 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace/mwaskom__seaborn__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 54cab15b Make Jitter do something by default (#3066)
[The command completed with exit code 0.]
[Current working directory: /workspace/mwaskom__seaborn__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:21:50,387 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-15 19:21:51,017 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace/mwaskom__seaborn__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/mwaskom__seaborn__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:21:51,017 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-15 19:21:51,648 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace/mwaskom__seaborn__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/mwaskom__seaborn__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:21:51,648 - INFO - ------------------------------
2025-01-15 19:21:51,648 - INFO - END Runtime Initialization Fn
2025-01-15 19:21:51,648 - INFO - ------------------------------
2025-01-15 19:21:51,649 - INFO - Function calling not enabled for model openai/o1-mini. Mocking function calling via prompting.
2025-01-15 19:21:51,664 - INFO - [runtime b4cb1b72-305b-424e-93fd-029d8ce59765-460fc80dac80a2bc] Found 0 local microagents.
2025-01-15 19:21:51,666 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-15 19:21:51,667 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-15 19:22:01,906 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-15 19:22:18,465 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-15 19:22:37,711 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-15 19:23:06,809 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-15 19:23:32,749 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-15 19:23:45,749 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-15 19:24:19,832 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-15 19:24:48,937 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-15 19:25:13,060 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-15 19:25:28,367 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-15 19:25:55,941 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-15 19:26:32,575 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-15 19:26:47,645 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-15 19:27:09,753 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-15 19:27:34,820 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-15 19:28:00,307 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-15 19:28:13,100 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-15 19:28:29,465 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-15 19:28:47,587 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-15 19:29:05,076 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-15 19:29:29,750 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-15 19:29:47,009 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-15 19:30:07,130 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-15 19:30:34,514 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-15 19:31:21,792 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-15 19:31:42,275 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-15 19:32:13,059 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-15 19:32:50,471 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-15 19:33:08,570 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-15 19:33:33,583 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-15 19:33:33,583 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-15 19:33:33,585 - WARNING - Stopping agent due to traffic control
2025-01-15 19:33:33,585 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-15 19:33:34,360 - INFO - ------------------------------
2025-01-15 19:33:34,360 - INFO - BEGIN Runtime Completion Fn
2025-01-15 19:33:34,360 - INFO - ------------------------------
2025-01-15 19:33:34,360 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/mwaskom__seaborn__0.12
2025-01-15 19:33:34,985 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace/mwaskom__seaborn__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/mwaskom__seaborn__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:33:34,985 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-15 19:33:35,610 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace/mwaskom__seaborn__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/mwaskom__seaborn__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:33:35,610 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-15 19:33:36,234 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace/mwaskom__seaborn__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/mwaskom__seaborn__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:33:36,234 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 54cab15bdacfaa05a88fbc5502a5b322d99f148e
2025-01-15 19:33:36,859 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "9f65f1915608",
  "working_dir": "/workspace/mwaskom__seaborn__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 00000000..28ae2076
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,11 @@
+import seaborn as sns
+import matplotlib.pyplot as plt
+
+# Load example dataset
+tips = sns.load_dataset("tips")
+
+# Create a categorical plot using a nominal scale
+sns.catplot(x="day", y="total_bill", kind="box", data=tips)
+
+# Show the plot
+plt.show()
\ No newline at end of file
diff --git a/seaborn/_core/plot.py b/seaborn/_core/plot.py
index 4f0290a4..09d46c6b 100644
--- a/seaborn/_core/plot.py
+++ b/seaborn/_core/plot.py
@@ -25,7 +25,7 @@ from seaborn._marks.base import Mark
 from seaborn._stats.base import Stat
 from seaborn._core.data import PlotData
 from seaborn._core.moves import Move
-from seaborn._core.scales import Scale
+from seaborn._core.scales import Scale, NominalScale
 from seaborn._core.subplots import Subplots
 from seaborn._core.groupby import GroupBy
 from seaborn._core.properties import PROPERTIES, Property
@@ -626,6 +626,12 @@ class Plot:
         """
         new = self._clone()
         new._scales.update(scales)
+# Integrate NominalScale if specified
+    for key, scale in scales.items():
+        if isinstance(scale, str) and scale.lower() == "nominal":
+            new._scales[key] = NominalScale()
+
+
         return new

     def share(self, **shares: bool | str) -> Plot:
diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py
index bbd71ec1..a065d77c 100644
--- a/seaborn/_core/scales.py
+++ b/seaborn/_core/scales.py
@@ -971,3 +971,33 @@ def _make_power_transforms(exp: float) -> TransFuncs:
         return np.sign(x) * np.power(np.abs(x), 1 / exp)

     return forward, inverse
+@dataclass
+class NominalScale(Scale):
+    """
+    A nominal scale that behaves like categorical scales:
+
+    1. The scale is drawn to +/- 0.5 from the first and last tick.
+    2. No grid is shown, even when the active style would normally display it.
+    3. If on the y-axis, the axis is inverted.
+    """
+
+    _priority: ClassVar[int] = 4
+
+    def _setup(
+        self, data: Series, prop: Property, axis: Axis | None = None,
+    ) -> Scale:
+        new_scale = super()._setup(data, prop, axis)
+
+        if axis:
+            # 1. Adjust the view interval to +/- 0.5 from the first and last tick
+            first_tick, last_tick = min(data), max(data)
+            axis.set_view_interval(first_tick - 0.5, last_tick + 0.5)
+
+            # 2. Disable grid lines
+            axis.grid(False)
+
+            # 3. Invert y-axis if necessary
+            if axis.is_y_axis:
+                axis.invert()
+
+        return new_scale
[The command completed with exit code 0.]
[Current working directory: /workspace/mwaskom__seaborn__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 19:33:36,859 - INFO - ------------------------------
2025-01-15 19:33:36,859 - INFO - END Runtime Completion Fn
2025-01-15 19:33:36,859 - INFO - ------------------------------
2025-01-15 19:33:36,859 - INFO - Got git diff for instance mwaskom__seaborn-3069:
--------
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 00000000..28ae2076
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,11 @@
+import seaborn as sns
+import matplotlib.pyplot as plt
+
+# Load example dataset
+tips = sns.load_dataset("tips")
+
+# Create a categorical plot using a nominal scale
+sns.catplot(x="day", y="total_bill", kind="box", data=tips)
+
+# Show the plot
+plt.show()
\ No newline at end of file
diff --git a/seaborn/_core/plot.py b/seaborn/_core/plot.py
index 4f0290a4..09d46c6b 100644
--- a/seaborn/_core/plot.py
+++ b/seaborn/_core/plot.py
@@ -25,7 +25,7 @@ from seaborn._marks.base import Mark
 from seaborn._stats.base import Stat
 from seaborn._core.data import PlotData
 from seaborn._core.moves import Move
-from seaborn._core.scales import Scale
+from seaborn._core.scales import Scale, NominalScale
 from seaborn._core.subplots import Subplots
 from seaborn._core.groupby import GroupBy
 from seaborn._core.properties import PROPERTIES, Property
@@ -626,6 +626,12 @@ class Plot:
         """
         new = self._clone()
         new._scales.update(scales)
+# Integrate NominalScale if specified
+    for key, scale in scales.items():
+        if isinstance(scale, str) and scale.lower() == "nominal":
+            new._scales[key] = NominalScale()
+
+
         return new

     def share(self, **shares: bool | str) -> Plot:
diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py
index bbd71ec1..a065d77c 100644
--- a/seaborn/_core/scales.py
+++ b/seaborn/_core/scales.py
@@ -971,3 +971,33 @@ def _make_power_transforms(exp: float) -> TransFuncs:
         return np.sign(x) * np.power(np.abs(x), 1 / exp)

     return forward, inverse
+@dataclass
+class NominalScale(Scale):
+    """
+    A nominal scale that behaves like categorical scales:
+
+    1. The scale is drawn to +/- 0.5 from the first and last tick.
+    2. No grid is shown, even when the active style would normally display it.
+    3. If on the y-axis, the axis is inverted.
+    """
+
+    _priority: ClassVar[int] = 4
+
+    def _setup(
+        self, data: Series, prop: Property, axis: Axis | None = None,
+    ) -> Scale:
+        new_scale = super()._setup(data, prop, axis)
+
+        if axis:
+            # 1. Adjust the view interval to +/- 0.5 from the first and last tick
+            first_tick, last_tick = min(data), max(data)
+            axis.set_view_interval(first_tick - 0.5, last_tick + 0.5)
+
+            # 2. Disable grid lines
+            axis.grid(False)
+
+            # 3. Invert y-axis if necessary
+            if axis.is_y_axis:
+                axis.invert()
+
+        return new_scale
--------
2025-01-15 19:33:37,990 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.scikit-learn_s_scikit-learn-14894. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-15 19:33:37,991 - INFO - Logging LLM completions for instance scikit-learn__scikit-learn-14894 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1-mini_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/scikit-learn__scikit-learn-14894
