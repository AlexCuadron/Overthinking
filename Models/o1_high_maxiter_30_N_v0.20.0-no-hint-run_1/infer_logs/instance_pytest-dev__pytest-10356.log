2024-12-23 05:19:51,897 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.16.0_9jibojnon19muvt0_yajo72un47o9ydtm
2024-12-23 05:21:27,613 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.16.0_9jibojnon19muvt0_yajo72un47o9ydtm] build finished.
2024-12-23 05:21:27,621 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.16.0_9jibojnon19muvt0_yajo72un47o9ydtm] with more generic tag [oh_v0.16.0_9jibojnon19muvt0]
2024-12-23 05:21:27,623 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.16.0_9jibojnon19muvt0_yajo72un47o9ydtm, oh_v0.16.0_9jibojnon19muvt0] built successfully
2024-12-23 05:21:27,629 - INFO - [runtime d272ee1a-aaef-42f1-926e-57da33b4ca66-903eed93cd59a244] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.16.0_9jibojnon19muvt0_yajo72un47o9ydtm
2024-12-23 05:21:28,193 - INFO - [runtime d272ee1a-aaef-42f1-926e-57da33b4ca66-903eed93cd59a244] Container started: openhands-runtime-d272ee1a-aaef-42f1-926e-57da33b4ca66-903eed93cd59a244. VSCode URL: None
2024-12-23 05:21:28,197 - INFO - [runtime d272ee1a-aaef-42f1-926e-57da33b4ca66-903eed93cd59a244] Waiting for client to become ready at http://localhost:34888...
2024-12-23 05:21:46,256 - INFO - [runtime d272ee1a-aaef-42f1-926e-57da33b4ca66-903eed93cd59a244] Runtime is ready.
2024-12-23 05:21:46,374 - INFO - ------------------------------
2024-12-23 05:21:46,374 - INFO - BEGIN Runtime Initialization Fn
2024-12-23 05:21:46,374 - INFO - ------------------------------
2024-12-23 05:21:46,374 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=pytest-dev__pytest-10356' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2024-12-23 05:21:46,538 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-23 05:21:46,538 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2024-12-23 05:21:46,646 - INFO - **CmdOutputObservation (source=None, exit code=0)**
USER=root
2024-12-23 05:21:46,646 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2024-12-23 05:21:46,753 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-23 05:21:46,762 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2024-12-23 05:21:46,868 - INFO - **CmdOutputObservation (source=None, exit code=0)**
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=pytest-dev__pytest-10356
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
2024-12-23 05:21:46,868 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2024-12-23 05:21:47,074 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-23 05:21:47,074 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2024-12-23 05:21:47,475 - INFO - **CmdOutputObservation (source=None, exit code=0)**
WORKSPACE_NAME: pytest-dev__pytest__7.2
2024-12-23 05:21:47,475 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pytest-dev__pytest__7.2
2024-12-23 05:21:47,581 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-23 05:21:47,582 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2024-12-23 05:21:47,749 - INFO - **CmdOutputObservation (source=None, exit code=0)**
HEAD is now at 3c1534944 Merge pull request #10318 from pytest-dev/pre-commit-ci-update-config
2024-12-23 05:21:47,749 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2024-12-23 05:21:47,857 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-23 05:21:47,857 - INFO - ------------------------------
2024-12-23 05:21:47,857 - INFO - END Runtime Initialization Fn
2024-12-23 05:21:47,857 - INFO - ------------------------------
2024-12-23 05:21:47,858 - INFO - Function calling not enabled for model openai/neulab/o1. Mocking function calling via prompting.
2024-12-23 05:21:47,860 - INFO - [Agent Controller default] Starting step loop...
2024-12-23 05:21:47,860 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2024-12-23 05:21:48,962 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2024-12-23 05:21:55,988 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2024-12-23 05:22:20,153 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2024-12-23 05:22:31,665 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2024-12-23 05:22:40,144 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2024-12-23 05:22:51,140 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2024-12-23 05:23:31,185 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2024-12-23 05:24:03,023 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2024-12-23 05:24:27,574 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2024-12-23 05:25:00,915 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2024-12-23 05:25:08,593 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2024-12-23 05:25:59,046 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2024-12-23 05:27:05,100 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2024-12-23 05:29:09,022 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2024-12-23 05:29:09,023 - INFO - ------------------------------
2024-12-23 05:29:09,023 - INFO - BEGIN Runtime Completion Fn
2024-12-23 05:29:09,024 - INFO - ------------------------------
2024-12-23 05:29:09,024 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pytest-dev__pytest__7.2
2024-12-23 05:29:09,130 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-23 05:29:09,130 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2024-12-23 05:29:09,237 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-23 05:29:09,237 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2024-12-23 05:29:09,370 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-23 05:29:09,370 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 3c1534944cbd34e8a41bc9e76818018fadefc9a1
2024-12-23 05:29:09,480 - INFO - **CmdOutputObservation (source=None, exit code=0)**
diff --git a/repro.py b/repro.py
new file mode 100644
index 000000000..4f0931b39
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,31 @@
+import itertools
+import pytest
+
+class BaseMeta(type):
+    @property
+    def pytestmark(self):
+        return (
+            getattr(self, "_pytestmark", []) +
+            list(itertools.chain.from_iterable(getattr(x, "_pytestmark", []) for x in self.__mro__))
+        )
+
+    @pytestmark.setter
+    def pytestmark(self, value):
+        self._pytestmark = value
+
+class Base(object):
+    __metaclass__ = BaseMeta
+
+@pytest.mark.foo
+class Foo(Base):
+    pass
+
+@pytest.mark.bar
+class Bar(Base):
+    pass
+
+class TestDings(Foo, Bar):
+    def test_dings(self):
+        pass
+
+print("TestDings has markers:", getattr(TestDings, 'pytestmark', 'No marker?'))
\ No newline at end of file
diff --git a/src/_pytest/mark/structures.py b/src/_pytest/mark/structures.py
index 800a25c92..dae654ba9 100644
--- a/src/_pytest/mark/structures.py
+++ b/src/_pytest/mark/structures.py
@@ -356,11 +356,21 @@ class MarkDecorator:
 
 
 def get_unpacked_marks(obj: object) -> Iterable[Mark]:
-    """Obtain the unpacked marks that are stored on an object."""
-    mark_list = getattr(obj, "pytestmark", [])
-    if not isinstance(mark_list, list):
-        mark_list = [mark_list]
-    return normalize_mark_list(mark_list)
+    """Obtain the unpacked marks that are stored on an object, considering the MRO for classes."""
+    import inspect
+    if inspect.isclass(obj):
+        marks = []
+        for base in obj.__mro__:
+            base_mark_list = getattr(base, "pytestmark", [])
+            if not isinstance(base_mark_list, list):
+                base_mark_list = [base_mark_list]
+            marks.extend(base_mark_list)
+        return normalize_mark_list(marks)
+    else:
+        mark_list = getattr(obj, "pytestmark", [])
+        if not isinstance(mark_list, list):
+            mark_list = [mark_list]
+        return normalize_mark_list(mark_list)
 
 
 def normalize_mark_list(
2024-12-23 05:29:09,482 - INFO - ------------------------------
2024-12-23 05:29:09,482 - INFO - END Runtime Completion Fn
2024-12-23 05:29:09,482 - INFO - ------------------------------
2024-12-23 05:29:09,482 - INFO - Got git diff for instance pytest-dev__pytest-10356:
--------
diff --git a/repro.py b/repro.py
new file mode 100644
index 000000000..4f0931b39
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,31 @@
+import itertools
+import pytest
+
+class BaseMeta(type):
+    @property
+    def pytestmark(self):
+        return (
+            getattr(self, "_pytestmark", []) +
+            list(itertools.chain.from_iterable(getattr(x, "_pytestmark", []) for x in self.__mro__))
+        )
+
+    @pytestmark.setter
+    def pytestmark(self, value):
+        self._pytestmark = value
+
+class Base(object):
+    __metaclass__ = BaseMeta
+
+@pytest.mark.foo
+class Foo(Base):
+    pass
+
+@pytest.mark.bar
+class Bar(Base):
+    pass
+
+class TestDings(Foo, Bar):
+    def test_dings(self):
+        pass
+
+print("TestDings has markers:", getattr(TestDings, 'pytestmark', 'No marker?'))
\ No newline at end of file
diff --git a/src/_pytest/mark/structures.py b/src/_pytest/mark/structures.py
index 800a25c92..dae654ba9 100644
--- a/src/_pytest/mark/structures.py
+++ b/src/_pytest/mark/structures.py
@@ -356,11 +356,21 @@ class MarkDecorator:
 
 
 def get_unpacked_marks(obj: object) -> Iterable[Mark]:
-    """Obtain the unpacked marks that are stored on an object."""
-    mark_list = getattr(obj, "pytestmark", [])
-    if not isinstance(mark_list, list):
-        mark_list = [mark_list]
-    return normalize_mark_list(mark_list)
+    """Obtain the unpacked marks that are stored on an object, considering the MRO for classes."""
+    import inspect
+    if inspect.isclass(obj):
+        marks = []
+        for base in obj.__mro__:
+            base_mark_list = getattr(base, "pytestmark", [])
+            if not isinstance(base_mark_list, list):
+                base_mark_list = [base_mark_list]
+            marks.extend(base_mark_list)
+        return normalize_mark_list(marks)
+    else:
+        mark_list = getattr(obj, "pytestmark", [])
+        if not isinstance(mark_list, list):
+            mark_list = [mark_list]
+        return normalize_mark_list(mark_list)
 
 
 def normalize_mark_list(
--------
2024-12-23 05:29:14,830 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.pytest-dev_s_pytest-5809. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2024-12-23 05:29:14,830 - INFO - Logging LLM completions for instance pytest-dev__pytest-5809 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.16.0-no-hint-run_1/llm_completions/pytest-dev__pytest-5809
