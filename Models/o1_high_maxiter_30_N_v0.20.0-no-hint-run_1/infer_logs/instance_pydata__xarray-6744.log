2024-12-22 13:09:58,426 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.16.0_n9o126by76byvy9e_yajo72un47o9ydtm
2024-12-22 13:11:42,135 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.16.0_n9o126by76byvy9e_yajo72un47o9ydtm] build finished.
2024-12-22 13:11:42,142 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.16.0_n9o126by76byvy9e_yajo72un47o9ydtm] with more generic tag [oh_v0.16.0_n9o126by76byvy9e]
2024-12-22 13:11:42,144 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.16.0_n9o126by76byvy9e_yajo72un47o9ydtm, oh_v0.16.0_n9o126by76byvy9e] built successfully
2024-12-22 13:11:42,150 - INFO - [runtime de88541a-d4b0-4744-9af4-d4d67ccc3d68-87954a749a0cb3b0] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.16.0_n9o126by76byvy9e_yajo72un47o9ydtm
2024-12-22 13:11:42,406 - INFO - [runtime de88541a-d4b0-4744-9af4-d4d67ccc3d68-87954a749a0cb3b0] Container started: openhands-runtime-de88541a-d4b0-4744-9af4-d4d67ccc3d68-87954a749a0cb3b0. VSCode URL: None
2024-12-22 13:11:42,408 - INFO - [runtime de88541a-d4b0-4744-9af4-d4d67ccc3d68-87954a749a0cb3b0] Waiting for client to become ready at http://localhost:38975...
2024-12-22 13:12:02,471 - INFO - [runtime de88541a-d4b0-4744-9af4-d4d67ccc3d68-87954a749a0cb3b0] Runtime is ready.
2024-12-22 13:12:02,587 - INFO - ------------------------------
2024-12-22 13:12:02,587 - INFO - BEGIN Runtime Initialization Fn
2024-12-22 13:12:02,588 - INFO - ------------------------------
2024-12-22 13:12:02,588 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=pydata__xarray-6744' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2024-12-22 13:12:02,696 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 13:12:02,697 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2024-12-22 13:12:02,805 - INFO - **CmdOutputObservation (source=None, exit code=0)**
USER=root
2024-12-22 13:12:02,805 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2024-12-22 13:12:02,913 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 13:12:02,921 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2024-12-22 13:12:03,028 - INFO - **CmdOutputObservation (source=None, exit code=0)**
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=pydata__xarray-6744
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
2024-12-22 13:12:03,028 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2024-12-22 13:12:03,262 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 13:12:03,262 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2024-12-22 13:12:03,813 - INFO - **CmdOutputObservation (source=None, exit code=0)**
WORKSPACE_NAME: pydata__xarray__2022.06
2024-12-22 13:12:03,813 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pydata__xarray__2022.06
2024-12-22 13:12:03,920 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 13:12:03,920 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2024-12-22 13:12:04,085 - INFO - **CmdOutputObservation (source=None, exit code=0)**
HEAD is now at 7cc6cc99 Move Rolling tests to their own testing module (#6777)
2024-12-22 13:12:04,085 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2024-12-22 13:12:04,196 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 13:12:04,196 - INFO - ------------------------------
2024-12-22 13:12:04,196 - INFO - END Runtime Initialization Fn
2024-12-22 13:12:04,196 - INFO - ------------------------------
2024-12-22 13:12:04,197 - INFO - Function calling not enabled for model openai/neulab/o1. Mocking function calling via prompting.
2024-12-22 13:12:04,200 - INFO - [Agent Controller default] Starting step loop...
2024-12-22 13:12:04,200 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2024-12-22 13:12:05,302 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2024-12-22 13:12:15,601 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2024-12-22 13:12:28,073 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2024-12-22 13:12:38,522 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2024-12-22 13:12:48,387 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2024-12-22 13:13:05,792 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2024-12-22 13:13:52,024 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2024-12-22 13:14:07,801 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2024-12-22 13:14:24,480 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2024-12-22 13:24:28,613 - INFO - ------------------------------
2024-12-22 13:24:28,624 - INFO - BEGIN Runtime Completion Fn
2024-12-22 13:24:28,624 - INFO - ------------------------------
2024-12-22 13:24:28,695 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pydata__xarray__2022.06
2024-12-22 13:24:28,966 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 13:24:28,966 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2024-12-22 13:24:29,123 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 13:24:29,123 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2024-12-22 13:24:29,344 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 13:24:29,353 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 7cc6cc991e586a6158bb656b8001234ccda25407
2024-12-22 13:24:29,490 - INFO - **CmdOutputObservation (source=None, exit code=0)**
diff --git a/reproduce_rolling_center_bug.py b/reproduce_rolling_center_bug.py
new file mode 100644
index 00000000..39dcae7e
--- /dev/null
+++ b/reproduce_rolling_center_bug.py
@@ -0,0 +1,14 @@
+import xarray as xr
+import numpy as np
+
+my_data = xr.DataArray(np.arange(1,10), dims="x")
+
+# Option 1: take a center-justified rolling average
+result1 = my_data.rolling(x=3, center=True).mean().values
+
+# Option 2: manually iterate over the rolling windows
+my_data_rolling = my_data.rolling(x=3, center=True)
+result2 = [window.mean().values.item() for label, window in my_data_rolling]
+
+print("Option 1:", result1)
+print("Option 2:", result2)
\ No newline at end of file
diff --git a/xarray/core/rolling.py b/xarray/core/rolling.py
index aef290f6..79f23c1c 100644
--- a/xarray/core/rolling.py
+++ b/xarray/core/rolling.py
@@ -270,16 +270,28 @@ class DataArrayRolling(Rolling["DataArray"]):
     def __iter__(self) -> Iterator[tuple[RollingKey, DataArray]]:
         if self.ndim > 1:
             raise ValueError("__iter__ is only supported for 1d-rolling")
-        stops = np.arange(1, len(self.window_labels) + 1)
-        starts = stops - int(self.window[0])
-        starts[: int(self.window[0])] = 0
-        for (label, start, stop) in zip(self.window_labels, starts, stops):
-            window = self.obj.isel({self.dim[0]: slice(start, stop)})
+        if self.center[0]:
+            half_window = (self.window[0] - 1) // 2
+            for i, label in enumerate(self.window_labels):
+                start = max(0, i - half_window)
+                stop = min(len(self.window_labels), i + half_window + 1)
+                window = self.obj.isel({self.dim[0]: slice(start, stop)})
+
+                counts = window.count(dim=self.dim[0])
+                window = window.where(counts >= self.min_periods)
+
+                yield (label, window)
+        else:
+            stops = np.arange(1, len(self.window_labels) + 1)
+            starts = stops - int(self.window[0])
+            starts[: int(self.window[0])] = 0
+            for (label, start, stop) in zip(self.window_labels, starts, stops):
+                window = self.obj.isel({self.dim[0]: slice(start, stop)})
 
-            counts = window.count(dim=self.dim[0])
-            window = window.where(counts >= self.min_periods)
+                counts = window.count(dim=self.dim[0])
+                window = window.where(counts >= self.min_periods)
 
-            yield (label, window)
+                yield (label, window)
 
     def construct(
         self,
2024-12-22 13:24:29,492 - INFO - ------------------------------
2024-12-22 13:24:29,492 - INFO - END Runtime Completion Fn
2024-12-22 13:24:29,492 - INFO - ------------------------------
2024-12-22 13:24:29,492 - INFO - Got git diff for instance pydata__xarray-6744:
--------
diff --git a/reproduce_rolling_center_bug.py b/reproduce_rolling_center_bug.py
new file mode 100644
index 00000000..39dcae7e
--- /dev/null
+++ b/reproduce_rolling_center_bug.py
@@ -0,0 +1,14 @@
+import xarray as xr
+import numpy as np
+
+my_data = xr.DataArray(np.arange(1,10), dims="x")
+
+# Option 1: take a center-justified rolling average
+result1 = my_data.rolling(x=3, center=True).mean().values
+
+# Option 2: manually iterate over the rolling windows
+my_data_rolling = my_data.rolling(x=3, center=True)
+result2 = [window.mean().values.item() for label, window in my_data_rolling]
+
+print("Option 1:", result1)
+print("Option 2:", result2)
\ No newline at end of file
diff --git a/xarray/core/rolling.py b/xarray/core/rolling.py
index aef290f6..79f23c1c 100644
--- a/xarray/core/rolling.py
+++ b/xarray/core/rolling.py
@@ -270,16 +270,28 @@ class DataArrayRolling(Rolling["DataArray"]):
     def __iter__(self) -> Iterator[tuple[RollingKey, DataArray]]:
         if self.ndim > 1:
             raise ValueError("__iter__ is only supported for 1d-rolling")
-        stops = np.arange(1, len(self.window_labels) + 1)
-        starts = stops - int(self.window[0])
-        starts[: int(self.window[0])] = 0
-        for (label, start, stop) in zip(self.window_labels, starts, stops):
-            window = self.obj.isel({self.dim[0]: slice(start, stop)})
+        if self.center[0]:
+            half_window = (self.window[0] - 1) // 2
+            for i, label in enumerate(self.window_labels):
+                start = max(0, i - half_window)
+                stop = min(len(self.window_labels), i + half_window + 1)
+                window = self.obj.isel({self.dim[0]: slice(start, stop)})
+
+                counts = window.count(dim=self.dim[0])
+                window = window.where(counts >= self.min_periods)
+
+                yield (label, window)
+        else:
+            stops = np.arange(1, len(self.window_labels) + 1)
+            starts = stops - int(self.window[0])
+            starts[: int(self.window[0])] = 0
+            for (label, start, stop) in zip(self.window_labels, starts, stops):
+                window = self.obj.isel({self.dim[0]: slice(start, stop)})
 
-            counts = window.count(dim=self.dim[0])
-            window = window.where(counts >= self.min_periods)
+                counts = window.count(dim=self.dim[0])
+                window = window.where(counts >= self.min_periods)
 
-            yield (label, window)
+                yield (label, window)
 
     def construct(
         self,
--------
2024-12-22 13:24:36,663 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.pydata_s_xarray-6938. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2024-12-22 13:24:36,663 - INFO - Logging LLM completions for instance pydata__xarray-6938 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.16.0-no-hint-run_1/llm_completions/pydata__xarray-6938
