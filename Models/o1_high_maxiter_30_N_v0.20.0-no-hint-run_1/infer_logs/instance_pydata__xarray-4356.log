2024-12-22 12:55:02,506 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.16.0_px0gcgmen4y0ke32_yajo72un47o9ydtm
2024-12-22 12:56:34,891 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.16.0_px0gcgmen4y0ke32_yajo72un47o9ydtm] build finished.
2024-12-22 12:56:34,903 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.16.0_px0gcgmen4y0ke32_yajo72un47o9ydtm] with more generic tag [oh_v0.16.0_px0gcgmen4y0ke32]
2024-12-22 12:56:34,905 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.16.0_px0gcgmen4y0ke32_yajo72un47o9ydtm, oh_v0.16.0_px0gcgmen4y0ke32] built successfully
2024-12-22 12:56:34,916 - INFO - [runtime 1f9e4ca7-e7d9-4217-877e-3d9c44b596ea-953eed0ae474b6e2] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.16.0_px0gcgmen4y0ke32_yajo72un47o9ydtm
2024-12-22 12:56:35,173 - INFO - [runtime 1f9e4ca7-e7d9-4217-877e-3d9c44b596ea-953eed0ae474b6e2] Container started: openhands-runtime-1f9e4ca7-e7d9-4217-877e-3d9c44b596ea-953eed0ae474b6e2. VSCode URL: None
2024-12-22 12:56:35,176 - INFO - [runtime 1f9e4ca7-e7d9-4217-877e-3d9c44b596ea-953eed0ae474b6e2] Waiting for client to become ready at http://localhost:39818...
2024-12-22 12:56:55,235 - INFO - [runtime 1f9e4ca7-e7d9-4217-877e-3d9c44b596ea-953eed0ae474b6e2] Runtime is ready.
2024-12-22 12:56:55,351 - INFO - ------------------------------
2024-12-22 12:56:55,351 - INFO - BEGIN Runtime Initialization Fn
2024-12-22 12:56:55,351 - INFO - ------------------------------
2024-12-22 12:56:55,351 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=pydata__xarray-4356' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2024-12-22 12:56:55,469 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 12:56:55,470 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2024-12-22 12:56:55,577 - INFO - **CmdOutputObservation (source=None, exit code=0)**
USER=root
2024-12-22 12:56:55,577 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2024-12-22 12:56:55,685 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 12:56:55,693 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2024-12-22 12:56:55,799 - INFO - **CmdOutputObservation (source=None, exit code=0)**
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=pydata__xarray-4356
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
2024-12-22 12:56:55,799 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2024-12-22 12:56:56,004 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 12:56:56,005 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2024-12-22 12:56:56,405 - INFO - **CmdOutputObservation (source=None, exit code=0)**
WORKSPACE_NAME: pydata__xarray__0.12
2024-12-22 12:56:56,405 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pydata__xarray__0.12
2024-12-22 12:56:56,510 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 12:56:56,511 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2024-12-22 12:56:56,662 - INFO - **CmdOutputObservation (source=None, exit code=0)**
HEAD is now at e05fddea Recreate @gajomi's #2070 to keep attrs when calling astype() (#4314)
2024-12-22 12:56:56,662 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2024-12-22 12:56:56,770 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 12:56:56,770 - INFO - ------------------------------
2024-12-22 12:56:56,770 - INFO - END Runtime Initialization Fn
2024-12-22 12:56:56,770 - INFO - ------------------------------
2024-12-22 12:56:56,771 - INFO - Function calling not enabled for model openai/neulab/o1. Mocking function calling via prompting.
2024-12-22 12:56:56,773 - INFO - [Agent Controller default] Starting step loop...
2024-12-22 12:56:56,773 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2024-12-22 12:56:57,874 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2024-12-22 12:57:15,498 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2024-12-22 12:57:19,991 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2024-12-22 12:57:23,975 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2024-12-22 12:58:15,446 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2024-12-22 12:58:55,942 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2024-12-22 12:59:20,781 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2024-12-22 13:00:06,668 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2024-12-22 13:00:39,796 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2024-12-22 13:01:18,768 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2024-12-22 13:01:26,444 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2024-12-22 13:01:36,840 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2024-12-22 13:01:36,841 - INFO - ------------------------------
2024-12-22 13:01:36,841 - INFO - BEGIN Runtime Completion Fn
2024-12-22 13:01:36,841 - INFO - ------------------------------
2024-12-22 13:01:36,841 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pydata__xarray__0.12
2024-12-22 13:01:36,947 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 13:01:36,947 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2024-12-22 13:01:37,054 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 13:01:37,055 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2024-12-22 13:01:37,185 - INFO - **CmdOutputObservation (source=None, exit code=0)**

2024-12-22 13:01:37,185 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached e05fddea852d08fc0845f954b79deb9e9f9ff883
2024-12-22 13:01:37,296 - INFO - **CmdOutputObservation (source=None, exit code=0)**
diff --git a/example_repro.py b/example_repro.py
new file mode 100644
index 00000000..8327ee57
--- /dev/null
+++ b/example_repro.py
@@ -0,0 +1,8 @@
+import xarray as xr
+
+da = xr.DataArray([[1., 2., 3.],
+                   [4., 5., 6.]],
+                  dims=["dim_0","dim_1"])
+
+print("Sum with multiple dims and min_count=1:")
+print(da.sum(["dim_0", "dim_1"], min_count=1))
\ No newline at end of file
diff --git a/xarray/core/nanops.py b/xarray/core/nanops.py
index 41c8d258..26ff4d91 100644
--- a/xarray/core/nanops.py
+++ b/xarray/core/nanops.py
@@ -26,13 +26,13 @@ def _maybe_null_out(result, axis, mask, min_count=1):
     """
     xarray version of pandas.core.nanops._maybe_null_out
     """
-    if hasattr(axis, "__len__"):  # if tuple or list
-        raise ValueError(
-            "min_count is not available for reduction with more than one dimensions."
-        )
-
     if axis is not None and getattr(result, "ndim", False):
-        null_mask = (mask.shape[axis] - mask.sum(axis) - min_count) < 0
+        if hasattr(axis, "__len__"):
+            size_along_axis = np.prod(np.take(mask.shape, axis))
+            sum_along_axis = mask.sum(axis)
+            null_mask = (size_along_axis - sum_along_axis - min_count) < 0
+        else:
+            null_mask = (mask.shape[axis] - mask.sum(axis) - min_count) < 0
         if null_mask.any():
             dtype, fill_value = dtypes.maybe_promote(result.dtype)
             result = result.astype(dtype)
2024-12-22 13:01:37,296 - INFO - ------------------------------
2024-12-22 13:01:37,296 - INFO - END Runtime Completion Fn
2024-12-22 13:01:37,296 - INFO - ------------------------------
2024-12-22 13:01:37,296 - INFO - Got git diff for instance pydata__xarray-4356:
--------
diff --git a/example_repro.py b/example_repro.py
new file mode 100644
index 00000000..8327ee57
--- /dev/null
+++ b/example_repro.py
@@ -0,0 +1,8 @@
+import xarray as xr
+
+da = xr.DataArray([[1., 2., 3.],
+                   [4., 5., 6.]],
+                  dims=["dim_0","dim_1"])
+
+print("Sum with multiple dims and min_count=1:")
+print(da.sum(["dim_0", "dim_1"], min_count=1))
\ No newline at end of file
diff --git a/xarray/core/nanops.py b/xarray/core/nanops.py
index 41c8d258..26ff4d91 100644
--- a/xarray/core/nanops.py
+++ b/xarray/core/nanops.py
@@ -26,13 +26,13 @@ def _maybe_null_out(result, axis, mask, min_count=1):
     """
     xarray version of pandas.core.nanops._maybe_null_out
     """
-    if hasattr(axis, "__len__"):  # if tuple or list
-        raise ValueError(
-            "min_count is not available for reduction with more than one dimensions."
-        )
-
     if axis is not None and getattr(result, "ndim", False):
-        null_mask = (mask.shape[axis] - mask.sum(axis) - min_count) < 0
+        if hasattr(axis, "__len__"):
+            size_along_axis = np.prod(np.take(mask.shape, axis))
+            sum_along_axis = mask.sum(axis)
+            null_mask = (size_along_axis - sum_along_axis - min_count) < 0
+        else:
+            null_mask = (mask.shape[axis] - mask.sum(axis) - min_count) < 0
         if null_mask.any():
             dtype, fill_value = dtypes.maybe_promote(result.dtype)
             result = result.astype(dtype)
--------
2024-12-22 13:01:42,800 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.pydata_s_xarray-4966. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2024-12-22 13:01:42,800 - INFO - Logging LLM completions for instance pydata__xarray-4966 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.16.0-no-hint-run_1/llm_completions/pydata__xarray-4966
