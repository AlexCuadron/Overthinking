diff --git a/sympy/physics/units/definitions/dimension_definitions.py b/sympy/physics/units/definitions/dimension_definitions.py
index c9950d5855..0c2d1cea97 100644
--- a/sympy/physics/units/definitions/dimension_definitions.py
+++ b/sympy/physics/units/definitions/dimension_definitions.py
@@ -17,8 +17,8 @@
 luminous_intensity = Dimension("luminous_intensity")  # type: Dimension
 
 # derived dimensions (MKS)
-velocity = Dimension(name="velocity")
-acceleration = Dimension(name="acceleration")
+velocity = length/time
+acceleration = length/time**2
 momentum = Dimension(name="momentum")
 force = Dimension(name="force", symbol="F")
 energy = Dimension(name="energy", symbol="E")
diff --git a/sympy/physics/units/systems/si.py b/sympy/physics/units/systems/si.py
index 700495ad9d..7f60d1a6ee 100644
--- a/sympy/physics/units/systems/si.py
+++ b/sympy/physics/units/systems/si.py
@@ -73,6 +73,8 @@
 )
 
 SI = MKSA.extend(base=(mol, cd, K), units=all_units, name='SI', dimension_system=dimsys_SI, derived_units={
+    velocity: length/time,
+    acceleration: length/time**2,
     power: watt,
     magnetic_flux: weber,
     time: second,
diff --git a/sympy/physics/units/unitsystem.py b/sympy/physics/units/unitsystem.py
index a436880c4b..e323c77077 100644
--- a/sympy/physics/units/unitsystem.py
+++ b/sympy/physics/units/unitsystem.py
@@ -12,7 +12,7 @@
 from sympy.physics.units.dimensions import _QuantityMapper
 from sympy.physics.units.quantities import Quantity
 
-from .dimensions import Dimension
+from .dimensions import Dimension, dim_simplify
 
 
 class UnitSystem(_QuantityMapper):
@@ -172,16 +172,17 @@ def _collect_factor_and_dimension(self, expr):
             return factor ** exp_factor, dim ** (exp_factor * exp_dim)
         elif isinstance(expr, Add):
             factor, dim = self._collect_factor_and_dimension(expr.args[0])
+            dim = dim_simplify(dim)
             for addend in expr.args[1:]:
-                addend_factor, addend_dim = \
-                    self._collect_factor_and_dimension(addend)
-                if dim != addend_dim:
+                addend_factor, addend_dim = self._collect_factor_and_dimension(addend)
+                addend_dim = dim_simplify(addend_dim)
+                if not self.get_dimension_system().is_dimensionless(dim_simplify(dim/addend_dim)):
                     raise ValueError(
                         'Dimension of "{}" is {}, '
                         'but it should be {}'.format(
                             addend, addend_dim, dim))
                 factor += addend_factor
-            return factor, dim
+            return factor, dim_simplify(dim)
         elif isinstance(expr, Derivative):
             factor, dim = self._collect_factor_and_dimension(expr.args[0])
             for independent, count in expr.variable_count:
