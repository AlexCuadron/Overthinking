diff --git a/examples/pylintrc b/examples/pylintrc
index 61528a5bb..db3c09d47 100644
--- a/examples/pylintrc
+++ b/examples/pylintrc
@@ -46,7 +46,7 @@ ignore=CVS
 
 # Add files or directories matching the regex patterns to the ignore-list. The
 # regex matches against paths and can be in Posix or Windows format.
-ignore-paths=
+ignore-paths=^src/gen/.*$
 
 # Files or directories matching the regex patterns are skipped. The regex
 # matches against base names, not paths. The default value ignores Emacs file
diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py
index 5cacc0371..b0cf237d6 100644
--- a/pylint/lint/expand_modules.py
+++ b/pylint/lint/expand_modules.py
@@ -52,6 +52,7 @@ def _is_ignored_file(
     ignore_list_re: list[Pattern[str]],
     ignore_list_paths_re: list[Pattern[str]],
 ) -> bool:
+    element = element.replace("\\", "/")
     basename = os.path.basename(element)
     return (
         basename in ignore_list
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 000000000..8e1f80b33
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,15 @@
+import os
+import subprocess
+
+def main():
+    print("Running pylint with --recursive=y on src/")
+    cmd = [
+        "pylint",
+        "--rcfile=examples/pylintrc",
+        "--recursive=y",
+        "src/"
+    ]
+    subprocess.run(cmd, check=False)
+
+if __name__ == "__main__":
+    main()
\ No newline at end of file
diff --git a/src/__init__.py b/src/__init__.py
new file mode 100644
index 000000000..e69de29bb
diff --git a/src/gen/ignored_script.py b/src/gen/ignored_script.py
new file mode 100644
index 000000000..a67a7015a
--- /dev/null
+++ b/src/gen/ignored_script.py
@@ -0,0 +1,2 @@
+def something():
+    return 42
\ No newline at end of file
diff --git a/src/region_selection.py b/src/region_selection.py
new file mode 100644
index 000000000..4c16640e7
--- /dev/null
+++ b/src/region_selection.py
@@ -0,0 +1,2 @@
+def hello_world():
+    print("Hello from region_selection!")
\ No newline at end of file
