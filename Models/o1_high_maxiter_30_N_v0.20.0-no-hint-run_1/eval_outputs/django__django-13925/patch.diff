diff --git a/django/db/models/base.py b/django/db/models/base.py
index 4038859cfa..f820c15dfe 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -1298,7 +1298,7 @@ class Model(metaclass=ModelBase):
     @classmethod
     def _check_default_pk(cls):
         if (
-            cls._meta.pk.auto_created and
+            cls._meta.pk.auto_created and (cls._meta.pk.model is cls) and
             not settings.is_overridden('DEFAULT_AUTO_FIELD') and
             not cls._meta.app_config._is_default_auto_field_overridden
         ):
diff --git a/test_inherit/__init__.py b/test_inherit/__init__.py
new file mode 100644
index 0000000000..581714cc93
--- /dev/null
+++ b/test_inherit/__init__.py
@@ -0,0 +1 @@
+# Empty init file to make this directory a package
\ No newline at end of file
diff --git a/test_inherit/reproduce_w042.py b/test_inherit/reproduce_w042.py
new file mode 100644
index 0000000000..706fc39a42
--- /dev/null
+++ b/test_inherit/reproduce_w042.py
@@ -0,0 +1,24 @@
+import sys
+import os
+
+# We'll create a minimal Django settings/config to reproduce the W042 warning.
+sys.path.insert(0, os.path.join(os.path.dirname(os.path.abspath(__file__)), '..'))
+
+def main():
+    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "test_inherit.settings_for_repro")
+    import django
+    from django.conf import settings
+    from django.core.management import call_command
+
+    # Ensure Django is set up
+    django.setup()
+
+    # Attempt to run makemigrations to see if W042 is raised
+    try:
+        call_command('makemigrations', 'test_inherit_app', check=True, dry_run=True, verbosity=2)
+    except SystemExit as e:
+        # We'll exit with the same code
+        sys.exit(e.code)
+
+if __name__ == "__main__":
+    main()
\ No newline at end of file
diff --git a/test_inherit/settings_for_repro.py b/test_inherit/settings_for_repro.py
new file mode 100644
index 0000000000..8480f16179
--- /dev/null
+++ b/test_inherit/settings_for_repro.py
@@ -0,0 +1,23 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(__file__))
+SECRET_KEY = 'fake-key'
+DEBUG = True
+ALLOWED_HOSTS = []
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'test_inherit_app',
+]
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+MIDDLEWARE = []
+
+USE_TZ = False
\ No newline at end of file
diff --git a/test_inherit_app/models.py b/test_inherit_app/models.py
new file mode 100644
index 0000000000..a63d42ca05
--- /dev/null
+++ b/test_inherit_app/models.py
@@ -0,0 +1,12 @@
+from django.db import models
+
+# We'll create a base model with an explicitly defined primary key.
+class Entity(models.Model):
+    id = models.AutoField(primary_key=True)
+
+    class Meta:
+        abstract = True
+
+# We'll create a child model that inherits from Entity (and hence from the existing primary key).
+class User(Entity):
+    pass
\ No newline at end of file
