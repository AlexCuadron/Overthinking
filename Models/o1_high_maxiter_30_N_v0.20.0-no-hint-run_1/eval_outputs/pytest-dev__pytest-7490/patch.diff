diff --git a/reproduce_script.py b/reproduce_script.py
new file mode 100644
index 000000000..0dfbea536
--- /dev/null
+++ b/reproduce_script.py
@@ -0,0 +1,19 @@
+import subprocess
+import sys
+
+test_file = """\
+import pytest
+
+def test_xfail_test(request):
+    mark = pytest.mark.xfail(reason="xfail")
+    request.node.add_marker(mark)
+    assert 0
+"""
+
+with open("test_dynamic_xfail.py", "w") as f:
+    f.write(test_file)
+
+result = subprocess.run(["pytest", "-rsx", "test_dynamic_xfail.py"], capture_output=True)
+print(result.stdout.decode())
+print(result.stderr.decode())
+sys.exit(result.returncode)
\ No newline at end of file
diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py
index 335e10996..864d7df43 100644
--- a/src/_pytest/skipping.py
+++ b/src/_pytest/skipping.py
@@ -255,6 +255,7 @@ def pytest_runtest_call(item: Item) -> Generator[None, None, None]:
             xfail("[NOTRUN] " + xfailed.reason)
 
     yield
+item._store[xfailed_key] = evaluate_xfail_marks(item)
 
 
 @hookimpl(hookwrapper=True)
diff --git a/test_dynamic_xfail.py b/test_dynamic_xfail.py
new file mode 100644
index 000000000..71d3ed4e5
--- /dev/null
+++ b/test_dynamic_xfail.py
@@ -0,0 +1,6 @@
+import pytest
+
+def test_xfail_test(request):
+    mark = pytest.mark.xfail(reason="xfail")
+    request.node.add_marker(mark)
+    assert 0
