diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index ee45bb941e..d5358a9d50 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -763,8 +763,9 @@ class Field(RegisterLookupMixin):
             if not getattr(cls, self.attname, None):
                 setattr(cls, self.attname, self.descriptor_class(self))
         if self.choices is not None:
-            setattr(cls, 'get_%s_display' % self.name,
-                    partialmethod(cls._get_FIELD_display, field=self))
+            if not hasattr(cls, 'get_%s_display' % self.name):
+    setattr(cls, 'get_%s_display' % self.name,
+            partialmethod(cls._get_FIELD_display, field=self))
 
     def get_filter_kwargs_for_object(self, obj):
         """
diff --git a/repro.py b/repro.py
new file mode 100644
index 0000000000..8cf80f212f
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,23 @@
+import os
+import django
+from django.conf import settings
+
+settings.configure(
+    SECRET_KEY='foo',
+    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
+    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3','NAME': ':memory:'}},
+)
+
+django.setup()
+
+from django.db import models
+
+class FooBar(models.Model):
+    foo_bar = models.CharField(choices=[(1, 'foo'), (2, 'bar')], max_length=10)
+
+    def get_foo_bar_display(self):
+        return "something"
+
+if __name__ == '__main__':
+    instance = FooBar(foo_bar=1)
+    print("The result is:", instance.get_foo_bar_display())
\ No newline at end of file
