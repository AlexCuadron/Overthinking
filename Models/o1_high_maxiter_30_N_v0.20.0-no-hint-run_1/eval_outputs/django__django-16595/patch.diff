diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py
index cd3aab43ad..70ba7757ad 100644
--- a/django/db/migrations/operations/fields.py
+++ b/django/db/migrations/operations/fields.py
@@ -264,6 +264,8 @@ class AlterField(FieldOperation):
                     field=self.field,
                 ),
             ]
+        if isinstance(operation, AlterField) and self.is_same_field_operation(operation):
+            return [operation]
         return super().reduce(operation, app_label)
 
 
diff --git a/repro_script.py b/repro_script.py
new file mode 100644
index 0000000000..bb4eab8229
--- /dev/null
+++ b/repro_script.py
@@ -0,0 +1,39 @@
+import django
+from django.conf import settings
+
+TEST_SETTINGS = {
+    'DATABASES': {
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3'
+        }
+    },
+    'INSTALLED_APPS': [],
+    'MIGRATION_MODULES': {},
+}
+
+if not settings.configured:
+    settings.configure(**TEST_SETTINGS)
+django.setup()
+from django.db import models
+from django.db.migrations.operations import AddField, AlterField
+from django.db.migrations.optimizer import MigrationOptimizer
+from django.db.migrations.state import ProjectState, ModelState
+
+operations = [
+    AddField(model_name="book", name="title", field=models.CharField(max_length=256, null=True)),
+    AlterField(model_name="book", name="title", field=models.CharField(max_length=128, null=True)),
+    AlterField(model_name="book", name="title", field=models.CharField(max_length=128, null=True, help_text="help")),
+    AlterField(model_name="book", name="title", field=models.CharField(max_length=128, null=True, help_text="help", default=None)),
+]
+
+def main():
+    state = ProjectState()
+    state.add_model(ModelState("books", "Book", [("id", models.AutoField(primary_key=True))]))
+    optimizer = MigrationOptimizer()
+    optimized_ops_all = optimizer.optimize(operations, state.apps)
+    print("Optimized operations (all):", optimized_ops_all)
+    optimized_ops_noadd = optimizer.optimize(operations[1:], state.apps)
+    print("Optimized operations (without AddField):", optimized_ops_noadd)
+
+if __name__ == "__main__":
+    main()
\ No newline at end of file
