diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index 0f53d9c30b..0ce7de02c6 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -2524,7 +2524,7 @@ class AutoFieldMeta(type):
         return isinstance(instance, self._subclasses) or super().__instancecheck__(instance)
 
     def __subclasscheck__(self, subclass):
-        return subclass in self._subclasses or super().__subclasscheck__(subclass)
+        return issubclass(subclass, self._subclasses) or super().__subclasscheck__(subclass)
 
 
 class AutoField(AutoFieldMixin, IntegerField, metaclass=AutoFieldMeta):
diff --git a/test_auto_field_error.py b/test_auto_field_error.py
new file mode 100644
index 0000000000..6b6071863f
--- /dev/null
+++ b/test_auto_field_error.py
@@ -0,0 +1,42 @@
+import sys
+import os
+# Minimal script to reproduce the error described in the PR.
+
+# We point Python to this local Django checkout.
+sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
+
+# Weâ€™ll create a small configuration and model to trigger the error.
+import django
+from django.conf import settings
+from django.db import models
+
+# We define our custom BigAutoField subclass:
+class MyBigAutoField(models.BigAutoField):
+    pass
+
+# We define a small app config to test with:
+settings.configure(
+    INSTALLED_APPS=[
+        '__main__',  # We treat this file as the main "app"
+    ],
+    DEFAULT_AUTO_FIELD='__main__.MyBigAutoField',
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        },
+    },
+    SECRET_KEY='testkey',
+)
+
+django.setup()
+
+# We define a simple model:
+class MyModel(models.Model):
+    name = models.CharField(max_length=50)
+
+# Now we attempt to do DB operations to trigger the error if it still exists.
+if __name__ == '__main__':
+    from django.core.management import call_command
+    call_command('migrate', verbosity=0)
+    print("Migration complete. If there's no ValueError above, it means it's fixed or wasn't triggered.")
\ No newline at end of file
