diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py
index 61f88401ab..2edcbbe080 100644
--- a/django/db/backends/base/schema.py
+++ b/django/db/backends/base/schema.py
@@ -407,13 +407,13 @@ class BaseDatabaseSchemaEditor:
             model, columns, exclude=meta_constraint_names | meta_index_names,
             **constraint_kwargs
         )
-        if len(constraint_names) != 1:
-            raise ValueError("Found wrong number (%s) of constraints for %s(%s)" % (
-                len(constraint_names),
+        if not constraint_names:
+            raise ValueError("No constraints found for %s(%s)" % (
                 model._meta.db_table,
                 ", ".join(columns),
             ))
-        self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))
+        constraint_name = sorted(constraint_names)[0]
+        self.execute(self._delete_constraint_sql(sql, model, constraint_name))
 
     def alter_db_table(self, model, old_db_table, new_db_table):
         """Rename the table a model points to."""
diff --git a/myreproapp/migrations/0001_initial.py b/myreproapp/migrations/0001_initial.py
new file mode 100644
index 0000000000..efac40c46d
--- /dev/null
+++ b/myreproapp/migrations/0001_initial.py
@@ -0,0 +1,26 @@
+# Generated by Django 3.1 on 2024-12-21 09:37
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='ReproModel',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('field1', models.CharField(max_length=10)),
+                ('field2', models.CharField(max_length=10)),
+            ],
+            options={
+                'unique_together': {('field1', 'field2')},
+                'index_together': {('field1', 'field2')},
+            },
+        ),
+    ]
diff --git a/myreproapp/migrations/0002_auto_20241221_0941.py b/myreproapp/migrations/0002_auto_20241221_0941.py
new file mode 100644
index 0000000000..56586f9809
--- /dev/null
+++ b/myreproapp/migrations/0002_auto_20241221_0941.py
@@ -0,0 +1,17 @@
+# Generated by Django 3.1 on 2024-12-21 09:41
+
+from django.db import migrations
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('myreproapp', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AlterIndexTogether(
+            name='repromodel',
+            index_together=set(),
+        ),
+    ]
diff --git a/myreproapp/migrations/__init__.py b/myreproapp/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/myreproapp/models.py b/myreproapp/models.py
new file mode 100644
index 0000000000..d81e247295
--- /dev/null
+++ b/myreproapp/models.py
@@ -0,0 +1,9 @@
+from django.db import models
+
+class ReproModel(models.Model):
+    field1 = models.CharField(max_length=10)
+    field2 = models.CharField(max_length=10)
+
+    class Meta:
+        unique_together = [('field1', 'field2')]
+        # index_together removed
\ No newline at end of file
diff --git a/repro.py b/repro.py
new file mode 100644
index 0000000000..16d1a98f9c
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,46 @@
+import os
+import django
+from django.conf import settings
+from django.core.management import call_command
+
+# Minimal Django settings
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.auth',
+        'django.contrib.contenttypes',
+        'django.contrib.sessions',
+        'myreproapp',  # The app we just created
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',  # In-memory DB for quick tests
+        }
+    },
+    MIDDLEWARE=[],
+    SECRET_KEY='test_key',
+    ROOT_URLCONF=None,  # Not needed for this repro
+)
+
+django.setup()
+
+# Step 1: Make initial migrations with both unique_together and index_together
+print("=== Initial Migration (with index_together) ===")
+call_command('makemigrations', 'myreproapp', interactive=False)
+call_command('migrate', interactive=False)
+
+# Step 2: Remove index_together from models.py
+models_path = '/workspace/django__django__3.1/myreproapp/models.py'
+with open(models_path, 'r', encoding='utf-8') as f:
+    contents = f.read()
+new_contents = contents.replace(
+    "index_together = [('field1', 'field2')]",
+    "# index_together removed"
+)
+with open(models_path, 'w', encoding='utf-8') as f:
+    f.write(new_contents)
+
+# Step 3: Make new migrations attempting to remove index_together
+print("=== Removing index_together and running migrations (should reproduce error) ===")
+call_command('makemigrations', 'myreproapp', interactive=False)
+call_command('migrate', interactive=False)
\ No newline at end of file
