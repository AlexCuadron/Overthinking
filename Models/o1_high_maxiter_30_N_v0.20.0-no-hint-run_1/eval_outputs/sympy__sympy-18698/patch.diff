diff --git a/repro.py b/repro.py
new file mode 100644
index 0000000000..652db73b1a
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,10 @@
+import sys
+from sympy import Symbol, sqf_list
+
+x = Symbol('x', complex=True)
+
+p = (x**2 + 1)*(x - 1)**2*(x - 2)**3*(x - 3)**3
+print("Polynomial:", p)
+
+sqf = sqf_list(p)
+print("sqf_list output:", sqf)
\ No newline at end of file
diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py
index c9e77a901f..673afa7d7d 100644
--- a/sympy/polys/polytools.py
+++ b/sympy/polys/polytools.py
@@ -3234,7 +3234,18 @@ def sqf_list(f, all=False):
         else:  # pragma: no cover
             raise OperationNotSupported(f, 'sqf_list')
 
-        return f.rep.dom.to_sympy(coeff), [(f.per(g), k) for g, k in factors]
+        c = f.rep.dom.to_sympy(coeff)
+        from collections import defaultdict
+        exp_groups = defaultdict(list)
+        for g, e in factors:
+            exp_groups[e].append(g)
+        new_factors = []
+        for e, gs in exp_groups.items():
+            combined = gs[0]
+            for other in gs[1:]:
+                combined = combined*other
+            new_factors.append((f.per(combined), e))
+        return c, new_factors
 
     def sqf_list_include(f, all=False):
         """
@@ -6215,7 +6226,18 @@ def sqf_list(f, *gens, **args):
     (2, [(x + 1, 2), (x + 2, 3)])
 
     """
-    return _generic_factor_list(f, gens, args, method='sqf')
+    c_raw, f_raw = _generic_factor_list(f, gens, args, method='sqf')
+    from collections import defaultdict
+    exp_groups = defaultdict(list)
+    for ff, ee in f_raw:
+        exp_groups[ee].append(ff)
+    new_factors = []
+    for ee, arr in exp_groups.items():
+        comb = arr[0]
+        for other in arr[1:]:
+            comb = comb*other
+        new_factors.append((comb, ee))
+    return (c_raw, new_factors)
 
 
 @public
