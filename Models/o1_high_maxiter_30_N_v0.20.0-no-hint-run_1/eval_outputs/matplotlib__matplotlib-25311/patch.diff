diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py
index 1dee8a23d9..57f414c7f0 100644
--- a/lib/matplotlib/offsetbox.py
+++ b/lib/matplotlib/offsetbox.py
@@ -1586,6 +1586,15 @@ class DraggableOffsetBox(DraggableBase):
         super().__init__(ref_artist, use_blit=use_blit)
         self.offsetbox = offsetbox
 
+def __getstate__(self):
+        state = self.__dict__.copy()
+        if "offsetbox" in state and state["offsetbox"] is not None:
+            # Remove figure reference to allow for successful pickling
+            state["offsetbox"].figure = None
+        return state
+
+    def __setstate__(self, state):
+        self.__dict__.update(state)
     def save_offset(self):
         offsetbox = self.offsetbox
         renderer = offsetbox.figure._get_renderer()
@@ -1596,6 +1605,14 @@ class DraggableOffsetBox(DraggableBase):
     def update_offset(self, dx, dy):
         loc_in_canvas = self.offsetbox_x + dx, self.offsetbox_y + dy
         self.offsetbox.set_offset(loc_in_canvas)
+def __getstate__(self):
+    state = self.__dict__.copy()
+    if "offsetbox" in state and state["offsetbox"] is not None:
+        state["offsetbox"].figure = None
+    return state
+
+def __setstate__(self, state):
+    self.__dict__.update(state)
 
     def get_loc_in_canvas(self):
         offsetbox = self.offsetbox
@@ -1603,6 +1620,15 @@ class DraggableOffsetBox(DraggableBase):
         bbox = offsetbox.get_bbox(renderer)
         ox, oy = offsetbox._offset
         loc_in_canvas = (ox + bbox.x0, oy + bbox.y0)
+def __getstate__(self):
+    state = self.__dict__.copy()
+    ann = state.get("annotation")
+    if ann is not None and getattr(ann, "figure", None) is not None:
+        ann.figure = None
+    return state
+
+def __setstate__(self, state):
+    self.__dict__.update(state)
         return loc_in_canvas
