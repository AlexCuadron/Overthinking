diff --git a/django/db/models/fields/reverse_related.py b/django/db/models/fields/reverse_related.py
index ccc2223a5f..fdaff4deb6 100644
--- a/django/db/models/fields/reverse_related.py
+++ b/django/db/models/fields/reverse_related.py
@@ -301,6 +301,8 @@ class ManyToManyRel(ForeignObjectRel):
 
         if through_fields and not through:
             raise ValueError("Cannot specify through_fields without a through model")
+        if through_fields is not None:
+            through_fields = make_hashable(through_fields)
         self.through_fields = through_fields
 
         self.symmetrical = symmetrical
diff --git a/m2m_repro.py b/m2m_repro.py
new file mode 100644
index 0000000000..7fd76d99ce
--- /dev/null
+++ b/m2m_repro.py
@@ -0,0 +1,37 @@
+import django
+from django.conf import settings
+settings.configure(
+    INSTALLED_APPS=[__name__],
+    SECRET_KEY='foo',
+    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
+)
+
+django.setup()
+
+from django.db import models
+
+class Parent(models.Model):
+    name = models.CharField(max_length=256)
+
+class ProxyParent(Parent):
+    class Meta:
+        proxy = True
+
+class Child(models.Model):
+    parent = models.ForeignKey(Parent, on_delete=models.CASCADE)
+    many_to_many_field = models.ManyToManyField(
+        to=Parent,
+        through="ManyToManyModel",
+        through_fields=['child', 'parent'],
+        related_name="something"
+    )
+
+class ManyToManyModel(models.Model):
+    parent = models.ForeignKey(Parent, on_delete=models.CASCADE, related_name='+')
+    child = models.ForeignKey(Child, on_delete=models.CASCADE, related_name='+')
+    second_child = models.ForeignKey(Child, on_delete=models.CASCADE, null=True, default=None)
+
+from django.core.management import call_command
+
+call_command('migrate', '--run-syncdb', verbosity=0)
+call_command('check')
\ No newline at end of file
