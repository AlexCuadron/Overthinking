diff --git a/django/forms/models.py b/django/forms/models.py
index ab611afca7..59529b0cb4 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -1323,7 +1323,7 @@ class ModelMultipleChoiceField(ModelChoiceField):
         if self.required and not value:
             raise ValidationError(self.error_messages['required'], code='required')
         elif not self.required and not value:
-            return self.queryset.none()
+            return self.queryset.model.objects.none()
         if not isinstance(value, (list, tuple)):
             raise ValidationError(
                 self.error_messages['invalid_list'],
diff --git a/reproduce_app/__init__.py b/reproduce_app/__init__.py
new file mode 100644
index 0000000000..fc80254b61
--- /dev/null
+++ b/reproduce_app/__init__.py
@@ -0,0 +1 @@
+pass
\ No newline at end of file
diff --git a/reproduce_app/migrations/0001_initial.py b/reproduce_app/migrations/0001_initial.py
new file mode 100644
index 0000000000..84b425dc1c
--- /dev/null
+++ b/reproduce_app/migrations/0001_initial.py
@@ -0,0 +1,27 @@
+# Generated by Django 3.2 on 2024-12-21 09:52
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Publication',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+            ],
+        ),
+        migrations.CreateModel(
+            name='Article',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('publications', models.ManyToManyField(blank=True, to='reproduce_app.Publication')),
+            ],
+        ),
+    ]
diff --git a/reproduce_app/migrations/__init__.py b/reproduce_app/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..4f84f643a0
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,74 @@
+import django
+from django.conf import settings
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=[
+            "django.contrib.contenttypes",
+            "django.contrib.auth",
+            "django.contrib.admin",
+            "django.contrib.sessions",
+            "django.contrib.messages",
+            "django.contrib.staticfiles",
+            "reproduce_app"
+        ],
+        DATABASES={"default":{"ENGINE":"django.db.backends.sqlite3","NAME":":memory:"}},
+        MIDDLEWARE=[],
+        SECRET_KEY="secret",
+    )
+django.setup()
+from django.core.management import call_command
+from django.db import models
+from django import forms
+from django.contrib import admin
+
+class Publication(models.Model):
+    class Meta:
+        app_label = 'reproduce_app'
+
+class Article(models.Model):
+    publications = models.ManyToManyField(Publication, blank=True)
+    class Meta:
+        app_label = 'reproduce_app'
+
+Publication.__module__ = 'reproduce_app.models'
+Article.__module__ = 'reproduce_app.models'
+
+class ArticleForm(forms.ModelForm):
+    publications = forms.ModelMultipleChoiceField(
+        Publication.objects.filter(id__lt=2).union(
+            Publication.objects.filter(id__gt=5)
+        ),
+        required=False,
+    )
+    class Meta:
+        model = Article
+        fields = ["publications"]
+
+class ArticleAdmin(admin.ModelAdmin):
+    form = ArticleForm
+
+from django.apps import AppConfig
+
+class ReproduceAppConfig(AppConfig):
+    name = "reproduce_app"
+    label = "reproduce_app"
+
+call_command("makemigrations","reproduce_app","--noinput")
+call_command("migrate","--run-syncdb","--noinput")
+
+for i in range(1,10):
+    Publication.objects.create()
+
+form = ArticleForm({})
+if form.is_valid():
+    article = form.save(commit=False)
+    article.save()
+    form.save_m2m()
+    pubs = article.publications.count()
+    print("Number of publications in article is", pubs)
+    if pubs > 0:
+        print("BUG: publications were saved when none selected")
+    else:
+        print("OK: no publications saved")
+else:
+    print("form not valid", form.errors)
\ No newline at end of file
