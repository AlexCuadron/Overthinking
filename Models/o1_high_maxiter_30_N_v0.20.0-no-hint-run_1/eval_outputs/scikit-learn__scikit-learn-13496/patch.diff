diff --git a/reproduce_isoforest_issue.py b/reproduce_isoforest_issue.py
new file mode 100644
index 000000000..a0dce5d03
--- /dev/null
+++ b/reproduce_isoforest_issue.py
@@ -0,0 +1,21 @@
+import numpy as np
+from sklearn.ensemble import IsolationForest
+
+# Generate some toy data
+rng = np.random.RandomState(42)
+X = 0.3 * rng.randn(100, 2)
+X = np.r_[X + 2, X - 2]
+
+# Attempt to set warm_start=True in the constructor
+# This should reproduce the issue that warm_start is not officially supported in IsolationForest's __init__.
+try:
+    iso = IsolationForest(n_estimators=50, warm_start=True, random_state=0)
+    iso.fit(X)
+    print("Successfully set warm_start in the constructor. Current n_estimators=", iso.n_estimators)
+
+    # Attempt incrementally
+    iso.set_params(n_estimators=100)
+    iso.fit(X)
+    print("IsolationForest fitted again with warm_start=True, n_estimators=100.")
+except TypeError as e:
+    print("Got TypeError (likely because warm_start isn't exposed):", e)
\ No newline at end of file
diff --git a/sklearn/ensemble/iforest.py b/sklearn/ensemble/iforest.py
index 8a1bd3625..c3add4543 100644
--- a/sklearn/ensemble/iforest.py
+++ b/sklearn/ensemble/iforest.py
@@ -119,6 +119,10 @@ class IsolationForest(BaseBagging, OutlierMixin):
 
     verbose : int, optional (default=0)
         Controls the verbosity of the tree building process.
+warm_start : bool, optional (default=False)
+    When set to ``True``, reuse the solution of the previous call to fit
+    and add more estimators to the ensemble, otherwise, just fit a whole
+    new forest. See :term:`the Glossary &lt;warm_start&gt;`.
 
 
     Attributes
