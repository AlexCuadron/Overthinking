2025-01-15 02:12:05,558 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_b0mrxoi4bat7y0la_qroup3d3os79ipoo
2025-01-15 02:17:25,754 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_b0mrxoi4bat7y0la_qroup3d3os79ipoo] build finished.
2025-01-15 02:17:25,806 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_b0mrxoi4bat7y0la_qroup3d3os79ipoo] with more generic tag [oh_v0.20.0_b0mrxoi4bat7y0la]
2025-01-15 02:17:25,808 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_b0mrxoi4bat7y0la_qroup3d3os79ipoo, oh_v0.20.0_b0mrxoi4bat7y0la] built successfully
2025-01-15 02:17:25,818 - INFO - [runtime 43a912b1-e90a-468e-8e2d-ec1d9e134853-4759186ed3a1595d] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_b0mrxoi4bat7y0la_qroup3d3os79ipoo
2025-01-15 02:17:26,552 - INFO - [runtime 43a912b1-e90a-468e-8e2d-ec1d9e134853-4759186ed3a1595d] Container started: openhands-runtime-43a912b1-e90a-468e-8e2d-ec1d9e134853-4759186ed3a1595d. VSCode URL: None
2025-01-15 02:17:26,552 - INFO - [runtime 43a912b1-e90a-468e-8e2d-ec1d9e134853-4759186ed3a1595d] Waiting for client to become ready at http://localhost:32822...
2025-01-15 02:17:58,673 - INFO - [runtime 43a912b1-e90a-468e-8e2d-ec1d9e134853-4759186ed3a1595d] Runtime is ready.
2025-01-15 02:17:58,870 - INFO - ------------------------------
2025-01-15 02:17:58,871 - INFO - BEGIN Runtime Initialization Fn
2025-01-15 02:17:58,871 - INFO - ------------------------------
2025-01-15 02:17:58,871 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=pytest-dev__pytest-7571' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-15 02:17:59,567 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:17:59,568 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-15 02:18:00,212 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:18:00,212 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-15 02:18:00,854 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:18:00,870 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-15 02:18:01,506 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=pytest-dev__pytest-7571
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:18:01,507 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-15 02:18:02,145 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:18:02,146 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-15 02:18:02,146 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-15 02:18:03,298 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: pytest-dev__pytest__6.0
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:18:03,300 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pytest-dev__pytest__6.0
2025-01-15 02:18:03,936 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace/pytest-dev__pytest__6.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:18:03,938 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-15 02:18:04,575 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace/pytest-dev__pytest__6.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 422685d0b Merge pull request #7567 from bluetech/pylint-callable-2-space
[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:18:04,576 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-15 02:18:05,216 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace/pytest-dev__pytest__6.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:18:05,223 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-15 02:18:05,869 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace/pytest-dev__pytest__6.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:18:05,870 - INFO - ------------------------------
2025-01-15 02:18:05,870 - INFO - END Runtime Initialization Fn
2025-01-15 02:18:05,870 - INFO - ------------------------------
2025-01-15 02:18:05,889 - INFO - [runtime 43a912b1-e90a-468e-8e2d-ec1d9e134853-4759186ed3a1595d] Found 0 local microagents.
2025-01-15 02:18:05,892 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-15 02:18:05,896 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-15 02:18:06,947 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-15 02:18:15,605 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-15 02:18:20,698 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-15 02:18:26,962 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-15 02:18:29,941 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-15 02:18:34,351 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-15 02:18:39,821 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-15 02:18:44,269 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-15 02:18:53,215 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-15 02:18:58,370 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-15 02:19:17,417 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-15 02:19:25,743 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-15 02:19:35,520 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-15 02:19:41,038 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-15 02:19:47,439 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-15 02:19:57,349 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-15 02:20:03,170 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-15 02:20:12,649 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-01-15 02:20:12,652 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-01-15 02:20:12,657 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-15 02:20:22,222 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-15 02:20:24,805 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-15 02:20:30,165 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-15 02:20:34,538 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-01-15 02:20:34,567 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-01-15 02:20:34,568 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-15 02:20:52,208 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-15 02:20:54,716 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-15 02:20:58,081 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-15 02:21:01,504 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-01-15 02:21:01,531 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-01-15 02:21:01,531 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-15 02:21:12,326 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-15 02:21:15,056 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-15 02:21:17,570 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-15 02:21:21,828 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-01-15 02:21:21,847 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-01-15 02:21:21,848 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-15 02:21:21,848 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-15 02:21:21,850 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-15 02:21:21,850 - WARNING - Stopping agent due to traffic control
2025-01-15 02:21:21,850 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-15 02:21:22,092 - INFO - ------------------------------
2025-01-15 02:21:22,092 - INFO - BEGIN Runtime Completion Fn
2025-01-15 02:21:22,092 - INFO - ------------------------------
2025-01-15 02:21:22,092 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pytest-dev__pytest__6.0
2025-01-15 02:21:22,266 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace/pytest-dev__pytest__6.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:21:22,279 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-15 02:21:22,940 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace/pytest-dev__pytest__6.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:21:22,941 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-15 02:21:23,659 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace/pytest-dev__pytest__6.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:21:23,660 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 422685d0bdc110547535036c1ff398b5e1c44145
2025-01-15 02:21:24,309 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6fe4180a781d",
  "working_dir": "/workspace/pytest-dev__pytest__6.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 000000000..08aa5709d
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,13 @@
+import pytest
+
+
+def test_foo(caplog):
+    caplog.set_level(42)
+
+
+def test_bar(caplog):
+    print(caplog.handler.level)
+
+
+if __name__ == "__main__":
+    pytest.main(["-s", __file__])
diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py
index 11031f2f2..5c86e48db 100644
--- a/src/_pytest/logging.py
+++ b/src/_pytest/logging.py
@@ -355,7 +355,10 @@ class LogCaptureFixture:
         # restore log levels
         for logger_name, level in self._initial_logger_levels.items():
             logger = logging.getLogger(logger_name)
-            logger.setLevel(level)
+            print(f"Restoring level for {logger_name}: {level}")
+print(f"Restoring level for {logger_name}: {level}")
+print(f"Restoring level for {logger_name}: {level}")
+logger.setLevel(level)

     @property
     def handler(self) -> LogCaptureHandler:
@@ -432,7 +435,13 @@ class LogCaptureFixture:
         """
         logger_obj = logging.getLogger(logger)
         # save the original log-level to restore it during teardown
-        self._initial_logger_levels.setdefault(logger, logger_obj.level)
+        if logger not in self._initial_logger_levels:
+    print(f"Saving initial level for {logger}: {logger_obj.level}")
+if logger not in self._initial_logger_levels:
+    print(f"Saving initial level for {logger}: {logger_obj.level}")
+if logger not in self._initial_logger_levels:
+    print(f"Saving initial level for {logger}: {logger_obj.level}")
+self._initial_logger_levels.setdefault(logger, logger_obj.level)
         logger_obj.setLevel(level)
         self.handler.setLevel(level)
[The command completed with exit code 0.]
[Current working directory: /workspace/pytest-dev__pytest__6.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 02:21:24,310 - INFO - ------------------------------
2025-01-15 02:21:24,310 - INFO - END Runtime Completion Fn
2025-01-15 02:21:24,310 - INFO - ------------------------------
2025-01-15 02:21:24,310 - INFO - Got git diff for instance pytest-dev__pytest-7571:
--------
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 000000000..08aa5709d
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,13 @@
+import pytest
+
+
+def test_foo(caplog):
+    caplog.set_level(42)
+
+
+def test_bar(caplog):
+    print(caplog.handler.level)
+
+
+if __name__ == "__main__":
+    pytest.main(["-s", __file__])
diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py
index 11031f2f2..5c86e48db 100644
--- a/src/_pytest/logging.py
+++ b/src/_pytest/logging.py
@@ -355,7 +355,10 @@ class LogCaptureFixture:
         # restore log levels
         for logger_name, level in self._initial_logger_levels.items():
             logger = logging.getLogger(logger_name)
-            logger.setLevel(level)
+            print(f"Restoring level for {logger_name}: {level}")
+print(f"Restoring level for {logger_name}: {level}")
+print(f"Restoring level for {logger_name}: {level}")
+logger.setLevel(level)

     @property
     def handler(self) -> LogCaptureHandler:
@@ -432,7 +435,13 @@ class LogCaptureFixture:
         """
         logger_obj = logging.getLogger(logger)
         # save the original log-level to restore it during teardown
-        self._initial_logger_levels.setdefault(logger, logger_obj.level)
+        if logger not in self._initial_logger_levels:
+    print(f"Saving initial level for {logger}: {logger_obj.level}")
+if logger not in self._initial_logger_levels:
+    print(f"Saving initial level for {logger}: {logger_obj.level}")
+if logger not in self._initial_logger_levels:
+    print(f"Saving initial level for {logger}: {logger_obj.level}")
+self._initial_logger_levels.setdefault(logger, logger_obj.level)
         logger_obj.setLevel(level)
         self.handler.setLevel(level)
--------
2025-01-15 02:21:27,378 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.sphinx-doc_s_sphinx-9591. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-15 02:21:27,415 - INFO - Logging LLM completions for instance sphinx-doc__sphinx-9591 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/gpt-4o-2024-08-06_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/sphinx-doc__sphinx-9591
