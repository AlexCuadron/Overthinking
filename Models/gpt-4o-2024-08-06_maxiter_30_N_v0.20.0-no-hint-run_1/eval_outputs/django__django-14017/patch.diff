diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py
index c957ffa564..bb65f95052 100644
--- a/django/db/models/query_utils.py
+++ b/django/db/models/query_utils.py
@@ -40,7 +40,8 @@ class Q(tree.Node):
         super().__init__(children=[*args, *sorted(kwargs.items())], connector=_connector, negated=_negated)

     def _combine(self, other, conn):
-        if not isinstance(other, Q):
+        from django.db.models.expressions import Exists
+        if not isinstance(other, (Q, Exists)):
             raise TypeError(other)

         # If the other Q() is empty, ignore it and just use `self`.
@@ -64,6 +65,9 @@ class Q(tree.Node):
     def __and__(self, other):
         return self._combine(other, self.AND)

+    def __rand__(self, other):
+        return self._combine(other, self.AND)
+
     def __invert__(self):
         obj = type(self)()
         obj.add(self, self.AND)
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..4586fd94f4
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,23 @@
+from django.db.models import Exists, Q
+from django.db import connection
+
+# Assuming Product is a model in the database
+class Product:
+    @staticmethod
+    def objects_all():
+        return 'SELECT * FROM product'
+
+# Simulate the Exists and Q combination
+try:
+    # This should work without error
+    result = Q() & Exists(Product.objects_all())
+    print('Q() & Exists() works:', result)
+except TypeError as e:
+    print('Error:', e)
+
+try:
+    # This should also work without error
+    result = Exists(Product.objects_all()) & Q()
+    print('Exists() & Q() works:', result)
+except TypeError as e:
+    print('Error:', e)
diff --git a/test_reproduce_error.py b/test_reproduce_error.py
new file mode 100644
index 0000000000..cda96bd1bb
--- /dev/null
+++ b/test_reproduce_error.py
@@ -0,0 +1,17 @@
+from django.db.models import Exists, Q
+from django.db.models.expressions import RawSQL
+
+# Simulate the Exists and Q combination
+try:
+    # This should work without error
+    result = Q() & Exists(RawSQL("SELECT 1", []))
+    print('Q() & Exists() works:', result)
+except TypeError as e:
+    print('Error:', e)
+
+try:
+    # This should also work without error
+    result = Exists(RawSQL("SELECT 1", [])) & Q()
+    print('Exists() & Q() works:', result)
+except TypeError as e:
+    print('Error:', e)
