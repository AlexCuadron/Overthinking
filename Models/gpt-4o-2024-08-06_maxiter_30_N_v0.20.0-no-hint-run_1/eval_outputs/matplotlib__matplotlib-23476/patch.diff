diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py
index c55864243a..ee5b9e2a9f 100644
--- a/lib/matplotlib/figure.py
+++ b/lib/matplotlib/figure.py
@@ -3026,6 +3026,9 @@ class Figure(FigureBase):
         # add version information to the state
         state['__mpl_version__'] = mpl.__version__

+        # Save the current DPI
+        state['_dpi'] = self.dpi
+
         # check whether the figure manager (if any) is registered with pyplot
         from matplotlib import _pylab_helpers
         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():
@@ -3043,6 +3046,9 @@ class Figure(FigureBase):

         self.__dict__ = state

+        # Restore the DPI
+        self.set_dpi(state.pop('_dpi', self.dpi))
+
         # re-initialise some of the unstored state information
         FigureCanvasBase(self)  # Set self.canvas.

diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..4b951a54e7
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,35 @@
+import numpy as np
+import matplotlib
+import matplotlib.pyplot as plt
+import pickle
+import platform
+
+print(matplotlib.get_backend())
+print('Matplotlib ver:', matplotlib.__version__)
+print('Platform:', platform.platform())
+print('System:', platform.system())
+print('Release:', platform.release())
+print('Python ver:', platform.python_version())
+
+
+def dump_load_get_dpi(fig):
+    with open('sinus.pickle','wb') as file:
+        pickle.dump(fig, file)
+
+    with open('sinus.pickle', 'rb') as blob:
+        fig2 = pickle.load(blob)
+    return fig2, fig2.dpi
+
+
+def run():
+    fig = plt.figure()
+    x = np.linspace(0,2*np.pi)
+    y = np.sin(x)
+
+    for i in range(32):
+        print(f'{i}: {fig.dpi}')
+        fig, dpi = dump_load_get_dpi(fig)
+
+
+if __name__ == '__main__':
+    run()
diff --git a/sinus.pickle b/sinus.pickle
new file mode 100644
index 0000000000..748aab5b18
Binary files /dev/null and b/sinus.pickle differ
