diff --git a/debug_output.log b/debug_output.log
new file mode 100644
index 0000000000..6c4646559f
--- /dev/null
+++ b/debug_output.log
@@ -0,0 +1,15 @@
+/testbed/lib/matplotlib/colors.py:730: DeprecationWarning: NumPy will stop allowing conversion of out-of-bound Python integers to integer arrays.  The conversion of 257 to uint8 will fail in the future.
+For the old behavior, usually:
+    np.array(value).astype(dtype)
+will give the desired result (the cast overflows).
+  xa[xa > self.N - 1] = self._i_over
+/testbed/lib/matplotlib/colors.py:731: DeprecationWarning: NumPy will stop allowing conversion of out-of-bound Python integers to integer arrays.  The conversion of 256 to uint8 will fail in the future.
+For the old behavior, usually:
+    np.array(value).astype(dtype)
+will give the desired result (the cast overflows).
+  xa[xa < 0] = self._i_under
+/testbed/lib/matplotlib/colors.py:732: DeprecationWarning: NumPy will stop allowing conversion of out-of-bound Python integers to integer arrays.  The conversion of 258 to uint8 will fail in the future.
+For the old behavior, usually:
+    np.array(value).astype(dtype)
+will give the desired result (the cast overflows).
+  xa[mask_bad] = self._i_bad
diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py
index 2d3072da04..f3a5a1cb00 100644
--- a/lib/matplotlib/colors.py
+++ b/lib/matplotlib/colors.py
@@ -727,9 +727,12 @@ class Colormap:
                 xa = xa.astype(int)
         # Set the over-range indices before the under-range;
         # otherwise the under-range values get converted to over-range.
-        xa[xa > self.N - 1] = self._i_over
-        xa[xa < 0] = self._i_under
-        xa[mask_bad] = self._i_bad
+        import logging
+        logging.basicConfig(level=logging.DEBUG)
+        logging.debug(f"_i_over: {self._i_over}, _i_under: {self._i_under}, _i_bad: {self._i_bad}")
+        xa[xa > self.N - 1] = np.clip(self._i_over, 0, 255).astype(np.uint8)
+        xa[xa < 0] = np.clip(self._i_under, 0, 255).astype(np.uint8)
+        xa[mask_bad] = np.clip(self._i_bad, 0, 255).astype(np.uint8)

         lut = self._lut
         if bytes:
diff --git a/reproduce_warning.py b/reproduce_warning.py
new file mode 100644
index 0000000000..5f44002a66
--- /dev/null
+++ b/reproduce_warning.py
@@ -0,0 +1,7 @@
+import matplotlib.pyplot as plt
+import warnings
+
+warnings.simplefilter('always', DeprecationWarning)
+import numpy as np
+
+plt.get_cmap()(np.empty((0, ), dtype=np.uint8))
\ No newline at end of file
