diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py
index 92fe4affb9..5ebfab3915 100644
--- a/django/db/models/deletion.py
+++ b/django/db/models/deletion.py
@@ -277,6 +277,7 @@ class Collector:
             if self.can_fast_delete(instance):
                 with transaction.mark_for_rollback_on_error():
                     count = sql.DeleteQuery(model).delete_batch([instance.pk], self.using)
+                instance.pk = None
                 return count, {model._meta.label: count}

         with transaction.atomic(using=self.using, savepoint=False):
diff --git a/myapp/__init__.py b/myapp/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/myapp/models.py b/myapp/models.py
new file mode 100644
index 0000000000..da960ad3dc
--- /dev/null
+++ b/myapp/models.py
@@ -0,0 +1,4 @@
+from django.db import models
+
+class SimpleModel(models.Model):
+    name = models.CharField(max_length=100)
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..6ced651b32
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,22 @@
+from django.db import models
+from django.conf import settings
+import django
+import os
+
+# Initialize Django
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'settings')
+django.setup()
+
+from myapp.models import SimpleModel
+# Create the database schema
+from django.core.management import call_command
+call_command('migrate', run_syncdb=True)
+
+# Create an instance of the model
+instance = SimpleModel.objects.create(name='Test')
+
+# Delete the instance
+instance.delete()
+
+# Check if the primary key is set to None
+print('Primary Key after delete:', instance.pk)
diff --git a/settings.py b/settings.py
new file mode 100644
index 0000000000..059ca411de
--- /dev/null
+++ b/settings.py
@@ -0,0 +1,13 @@
+SECRET_KEY = 'dummy'
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    # Add the app containing SimpleModel
+    'myapp',
+]
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
