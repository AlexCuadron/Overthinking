diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py
index cd3aab43ad..2c5ed0c891 100644
--- a/django/db/migrations/operations/fields.py
+++ b/django/db/migrations/operations/fields.py
@@ -67,6 +67,8 @@ class FieldOperation(Operation):
         )

     def reduce(self, operation, app_label):
+        if isinstance(operation, AlterField) and self.is_same_field_operation(operation):
+            return [operation]
         return super().reduce(operation, app_label) or not operation.references_field(
             self.model_name, self.name, app_label
         )
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..056466c68e
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,34 @@
+from django.db import migrations, models
+from django.db.migrations.optimizer import MigrationOptimizer
+
+# Define the operations as described in the PR
+define_operations = [
+    migrations.AddField(
+        model_name="book",
+        name="title",
+        field=models.CharField(max_length=256, null=True),
+    ),
+    migrations.AlterField(
+        model_name="book",
+        name="title",
+        field=models.CharField(max_length=128, null=True),
+    ),
+    migrations.AlterField(
+        model_name="book",
+        name="title",
+        field=models.CharField(max_length=128, null=True, help_text="help"),
+    ),
+    migrations.AlterField(
+        model_name="book",
+        name="title",
+        field=models.CharField(max_length=128, null=True, help_text="help", default=None),
+    ),
+]
+
+# Run the optimizer on the operations excluding the AddField
+optimizer = MigrationOptimizer()
+optimized_operations = optimizer.optimize(define_operations[1:], "books")
+
+# Print the result to verify the optimization
+for op in optimized_operations:
+    print(f"Operation: {op.__class__.__name__}, Model: {op.model_name}, Field: {op.name}, Field Options: {op.field.__dict__}")
