diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..bbfe45d63b
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,106 @@
+import django
+from django.conf import settings
+from django.contrib.admin.helpers import AdminReadonlyField
+
+# Configure minimal Django settings
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        'django.contrib.admin',
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    USE_I18N=True,
+    USE_L10N=True,
+    USE_TZ=True,
+)
+
+django.setup()
+from django.contrib.admin.sites import AdminSite
+from django.contrib.auth.models import User
+from django.test import RequestFactory
+from django.urls import reverse
+
+# Create a custom admin site
+class CustomAdminSite(AdminSite):
+    site_header = "Custom Admin"
+
+# Initialize the custom admin site
+custom_admin_site = CustomAdminSite(name='custom-admin')
+
+# Create a request factory
+request_factory = RequestFactory()
+request = request_factory.get('/')
+
+# Create a user instance
+user = User(username='testuser', id=1)
+
+# Create an AdminReadonlyField instance
+from django import forms
+
+# Create a minimal form class
+class MinimalForm(forms.Form):
+    class Meta:
+        model = User
+        labels = {}
+        help_texts = {}
+
+minimal_form = MinimalForm()
+minimal_form._meta = MinimalForm.Meta
+
+class MockModelAdmin:
+    def get_empty_value_display(self):
+        return "-"
+
+mock_model_admin = MockModelAdmin()
+
+admin_readonly_field = AdminReadonlyField(
+    form=minimal_form,
+
+    field='id',
+    is_first=True,
+    class MockModelAdmin:
+    def get_empty_value_display(self):
+        return "-"
+
+mock_model_admin = MockModelAdmin()
+
+model_admin=mock_model_admin
+)
+
+# Attempt to generate the admin URL
+try:
+    url = admin_readonly_field.get_admin_url(User._meta.get_field('id'), user)
+    print(f"Generated URL: {url}")
+except Exception as e:
+    print(f"Error: {e}")
+
+
+# Attempt to generate the admin URL
+try:
+    url = admin_readonly_field.get_admin_url(User._meta.get_field('id'), user)
+    print(f"Generated URL: {url}")
+except Exception as e:
+    print(f"Error: {e}")
+
+
+# Attempt to generate the admin URL
+try:
+    url = admin_readonly_field.get_admin_url(User._meta.get_field('id'), user)
+    print(f"Generated URL: {url}")
+except Exception as e:
+    print(f"Error: {e}")
+
+
+
+# Attempt to generate the admin URL
+try:
+    url = admin_readonly_field.get_admin_url(User._meta.get_field('id'), user)
+    print(f"Generated URL: {url}")
+except Exception as e:
+    print(f"Error: {e}")
