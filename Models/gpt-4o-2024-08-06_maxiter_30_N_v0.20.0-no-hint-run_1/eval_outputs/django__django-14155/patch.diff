diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 9b00e24509..e1289437f1 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -59,8 +59,12 @@ class ResolverMatch:
         return (self.func, self.args, self.kwargs)[index]

     def __repr__(self):
+        func = self.func
+        if isinstance(func, functools.partial):
+            func = func.func
+        func_path = func.__module__ + '.' + func.__name__ if hasattr(func, '__name__') else func.__class__.__module__ + '.' + func.__class__.__name__
         return "ResolverMatch(func=%s, args=%s, kwargs=%s, url_name=%s, app_names=%s, namespaces=%s, route=%s)" % (
-            self._func_path, self.args, self.kwargs, self.url_name,
+            func_path, self.args, self.kwargs, self.url_name,
             self.app_names, self.namespaces, self.route,
         )

diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..7b14689e91
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,14 @@
+import functools
+from django.urls.resolvers import ResolverMatch
+
+def sample_view(request):
+    pass
+
+# Create a partial function
+default_view = functools.partial(sample_view, request=None)
+
+# Create a ResolverMatch object with the partial function
+resolver_match = ResolverMatch(default_view, args=(), kwargs={})
+
+# Print the __repr__ of ResolverMatch
+print(repr(resolver_match))
