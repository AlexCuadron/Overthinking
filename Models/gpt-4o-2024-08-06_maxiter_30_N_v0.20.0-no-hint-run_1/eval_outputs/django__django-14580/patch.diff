diff --git a/app/migrations/0001_initial.py b/app/migrations/0001_initial.py
new file mode 100644
index 0000000000..d7419f178a
--- /dev/null
+++ b/app/migrations/0001_initial.py
@@ -0,0 +1,25 @@
+# Generated by Django 4.0.dev20210701101319 on 2025-01-14 14:09
+
+import app.models
+from django.db import migrations
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='MyModel',
+            fields=[
+                ('name', app.models.MyField(primary_key=True, serialize=False)),
+            ],
+            options={
+                'abstract': False,
+            },
+            bases=(app.models.MyMixin, models.Model),
+        ),
+    ]
diff --git a/app/migrations/__init__.py b/app/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/app/models.py b/app/models.py
new file mode 100644
index 0000000000..1d71439dd2
--- /dev/null
+++ b/app/models.py
@@ -0,0 +1,15 @@
+
+from django.db import models
+
+class MyField(models.TextField):
+    pass
+
+class MyBaseModel(models.Model):
+    class Meta:
+        abstract = True
+
+class MyMixin:
+    pass
+
+class MyModel(MyMixin, MyBaseModel):
+    name = MyField(primary_key=True)
diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py
index 4918261fb0..4c42742eb0 100644
--- a/django/db/migrations/writer.py
+++ b/django/db/migrations/writer.py
@@ -164,6 +164,10 @@ class MigrationWriter:

         # django.db.migrations is always used, but models import may not be.
         # If models import exists, merge it with migrations import.
+        # Ensure models import is added if any model-related operation is present
+        # Check if any operation involves models to add the import
+        if any('app.models' in operation_string or 'models.' in operation_string for operation_string in operations):
+            imports.add("from django.db import models")
         if "from django.db import models" in imports:
             imports.discard("from django.db import models")
             imports.add("from django.db import migrations, models")
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..200868742e
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,50 @@
+import os
+from django.core.management import call_command, execute_from_command_line
+from django.conf import settings
+
+# Configure settings for the test
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'app',  # Assuming 'app' is the name of the app containing the models
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    }
+)
+
+# Create a directory for the app and models.py file
+os.makedirs('app', exist_ok=True)
+
+# Write the models.py file
+with open('app/models.py', 'w') as f:
+    f.write('''
+from django.db import models
+
+class MyField(models.TextField):
+    pass
+
+class MyBaseModel(models.Model):
+    class Meta:
+        abstract = True
+
+class MyMixin:
+    pass
+
+class MyModel(MyMixin, MyBaseModel):
+    name = MyField(primary_key=True)
+''')
+
+# Setup Django
+import django
+
+django.setup()
+
+# Run makemigrations to generate the migration file
+try:
+    call_command('makemigrations', 'app')
+except Exception as e:
+    print(f"Error: {e}")
