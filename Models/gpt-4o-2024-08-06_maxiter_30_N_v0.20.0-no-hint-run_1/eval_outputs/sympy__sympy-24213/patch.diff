diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..4756e168df
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,17 @@
+from sympy.physics import units
+from sympy.physics.units.systems.si import SI
+
+v1 = units.Quantity('v1')
+SI.set_quantity_dimension(v1, units.velocity)
+SI.set_quantity_scale_factor(v1, 2 * units.meter / units.second)
+
+a1 = units.Quantity('a1')
+SI.set_quantity_dimension(a1, units.acceleration)
+SI.set_quantity_scale_factor(a1, -9.8 * units.meter / units.second**2)
+
+t1 = units.Quantity('t1')
+SI.set_quantity_dimension(t1, units.time)
+SI.set_quantity_scale_factor(t1, 5 * units.second)
+
+expr1 = a1*t1 + v1
+SI._collect_factor_and_dimension(expr1)
\ No newline at end of file
diff --git a/sympy/physics/units/unitsystem.py b/sympy/physics/units/unitsystem.py
index a436880c4b..7b4d04549c 100644
--- a/sympy/physics/units/unitsystem.py
+++ b/sympy/physics/units/unitsystem.py
@@ -175,7 +175,7 @@ def _collect_factor_and_dimension(self, expr):
             for addend in expr.args[1:]:
                 addend_factor, addend_dim = \
                     self._collect_factor_and_dimension(addend)
-                if dim != addend_dim:
+                if not self.get_dimension_system().equivalent_dims(dim, addend_dim) and not self.get_dimension_system().is_dimensionless(addend_dim):
                     raise ValueError(
                         'Dimension of "{}" is {}, '
                         'but it should be {}'.format(
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..f4de03c65e
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,34 @@
+from sympy.physics import units
+from sympy.physics.units.systems.si import SI
+
+# Define quantities for testing
+a1 = units.Quantity('a1')
+SI.set_quantity_dimension(a1, units.acceleration)
+SI.set_quantity_scale_factor(a1, -9.8 * units.meter / units.second**2)
+
+t1 = units.Quantity('t1')
+SI.set_quantity_dimension(t1, units.time)
+SI.set_quantity_scale_factor(t1, 5 * units.second)
+
+v1 = units.Quantity('v1')
+SI.set_quantity_dimension(v1, units.velocity)
+SI.set_quantity_scale_factor(v1, 2 * units.meter / units.second)
+
+# Test zero dimensions (dimensionless)
+d1 = units.Quantity('d1')
+from sympy.physics.units import Dimension
+SI.set_quantity_dimension(d1, Dimension(1))
+SI.set_quantity_scale_factor(d1, 1)
+
+expr2 = d1 + d1
+SI._collect_factor_and_dimension(expr2)
+
+# Test complex expressions
+expr3 = (a1*t1 + v1) * d1
+SI._collect_factor_and_dimension(expr3)
+
+# Test nested additions
+expr4 = a1*t1 + (v1 + d1)
+SI._collect_factor_and_dimension(expr4)
+
+print("All edge cases passed.")
\ No newline at end of file
