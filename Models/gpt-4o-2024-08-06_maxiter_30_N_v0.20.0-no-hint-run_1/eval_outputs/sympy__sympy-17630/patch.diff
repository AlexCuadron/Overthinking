diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..b8b15088cd
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,11 @@
+from sympy import MatrixSymbol, ZeroMatrix, BlockMatrix, block_collapse
+
+a = MatrixSymbol("a", 2, 2)
+z = ZeroMatrix(2, 2)
+b = BlockMatrix([[a, z], [z, z]])
+
+try:
+    result = block_collapse(b * b * b)
+    print("Result:", result)
+except Exception as e:
+    print("Error:", e)
\ No newline at end of file
diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 95302a05ca..4c81f2d758 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -164,7 +164,13 @@ def structurally_equal(self, other):
     def _blockmul(self, other):
         if (isinstance(other, BlockMatrix) and
                 self.colblocksizes == other.rowblocksizes):
-            return BlockMatrix(self.blocks*other.blocks)
+            from sympy.matrices import MutableDenseMatrix
+            result_blocks = MutableDenseMatrix(self.blocks * other.blocks)
+            for i in range(result_blocks.rows):
+                for j in range(result_blocks.cols):
+                    if result_blocks[i, j] == 0:
+                        result_blocks[i, j] = ZeroMatrix(self.blocks[i, 0].rows, other.blocks[0, j].cols)
+            return BlockMatrix(result_blocks)

         return self * other
