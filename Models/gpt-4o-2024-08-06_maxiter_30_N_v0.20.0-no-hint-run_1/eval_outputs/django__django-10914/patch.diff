diff --git a/django/core/files/storage.py b/django/core/files/storage.py
index cbdab1de47..4a084bce03 100644
--- a/django/core/files/storage.py
+++ b/django/core/files/storage.py
@@ -214,7 +214,7 @@ class FileSystemStorage(Storage):

     @cached_property
     def file_permissions_mode(self):
-        return self._value_or_setting(self._file_permissions_mode, settings.FILE_UPLOAD_PERMISSIONS)
+        return self._value_or_setting(self._file_permissions_mode, settings.FILE_UPLOAD_PERMISSIONS or 0o644)

     @cached_property
     def directory_permissions_mode(self):
diff --git a/test_file_upload.py b/test_file_upload.py
new file mode 100644
index 0000000000..ee6f62ffeb
--- /dev/null
+++ b/test_file_upload.py
@@ -0,0 +1,29 @@
+import os
+from django.conf import settings
+from django.core.files.storage import FileSystemStorage
+
+# Configure minimal Django settings
+settings.configure(
+    MEDIA_ROOT=os.path.join(os.getcwd(), 'media'),
+    FILE_UPLOAD_PERMISSIONS=None,  # Simulate the absence of this setting
+)
+
+# Create a temporary file to upload
+temp_file_path = 'temp_test_file.txt'
+with open(temp_file_path, 'w') as f:
+    f.write('This is a test file.')
+
+# Use FileSystemStorage to save the file
+storage = FileSystemStorage()
+name = storage.save(temp_file_path, open(temp_file_path, 'rb'))
+
+# Get the full path of the saved file
+full_path = storage.path(name)
+
+# Check the file permissions
+permissions = oct(os.stat(full_path).st_mode & 0o777)
+print(f'File permissions for {name}: {permissions}')
+
+# Clean up the created files
+os.remove(full_path)
+os.remove(temp_file_path)
