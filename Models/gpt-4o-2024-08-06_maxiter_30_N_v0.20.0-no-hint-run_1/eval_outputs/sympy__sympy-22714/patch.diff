diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..1f0bd88750
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,7 @@
+import sympy as sp
+
+try:
+    with sp.evaluate(False):
+        sp.S('Point2D(Integer(1),Integer(2))')
+except Exception as e:
+    print(f"Error: {e}")
\ No newline at end of file
diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py
index 73c20334d0..ad06668efe 100644
--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -152,7 +152,7 @@ def __new__(cls, *args, **kwargs):
                         'warn' or 'ignore'.'''))
         if any(coords[dim:]):
             raise ValueError('Nonzero coordinates cannot be removed.')
-        if any(a.is_number and im(a) for a in coords):
+        if evaluate and any(a.is_number and im(a) for a in coords):
             raise ValueError('Imaginary coordinates are not permitted.')
         if not all(isinstance(a, Expr) for a in coords):
             raise TypeError('Coordinates must be valid SymPy expressions.')
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..682734b767
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,21 @@
+import sympy as sp
+
+# Test with imaginary coordinates and evaluate=True
+try:
+    sp.S('Point2D(1 + I, 2)', evaluate=True)
+except ValueError as e:
+    print(f"Passed: {e}")
+
+# Test with non-imaginary coordinates and evaluate=True
+try:
+    point = sp.S('Point2D(1, 2)', evaluate=True)
+    print(f"Passed: {point}")
+except Exception as e:
+    print(f"Failed: {e}")
+
+# Test with non-imaginary coordinates and evaluate=False
+try:
+    point = sp.S('Point2D(1, 2)', evaluate=False)
+    print(f"Passed: {point}")
+except Exception as e:
+    print(f"Failed: {e}")
\ No newline at end of file
