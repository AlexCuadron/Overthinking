diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..52812fc529
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,49 @@
+import django
+from django.conf import settings
+from django.db import models, transaction
+from django.core.management import call_command
+
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        '__main__',
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    }
+)
+
+django.setup()
+
+class Product(models.Model):
+    sku = models.CharField(primary_key=True, max_length=50)
+
+class Order(models.Model):
+    product = models.ForeignKey(Product, on_delete=models.CASCADE)
+
+from django.db import connection
+
+def create_tables():
+    with connection.schema_editor() as schema_editor:
+        schema_editor.create_model(Product)
+        schema_editor.create_model(Order)
+
+create_tables()
+
+def reproduce_error():
+    with transaction.atomic():
+        order = Order()
+        order.product = Product()
+        order.product.sku = "foo"
+        order.product.save()
+        order.product = Product.objects.get(sku=order.product.sku)
+        order.save()
+        assert Order.objects.filter(product_id="").exists(), "Error: Order with empty product_id should not exist"
+        assert Order.objects.filter(product=order.product).exists(), "Error: Order with product should exist"
+
+if __name__ == "__main__":
+    reproduce_error()
