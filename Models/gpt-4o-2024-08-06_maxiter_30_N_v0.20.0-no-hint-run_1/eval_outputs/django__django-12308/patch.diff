diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py
index e4ddc8f017..b21ba39322 100644
--- a/django/contrib/admin/utils.py
+++ b/django/contrib/admin/utils.py
@@ -398,6 +398,11 @@ def display_for_field(value, field, empty_value_display):
         return formats.number_format(value)
     elif isinstance(field, models.FileField) and value:
         return format_html('<a href="{}">{}</a>', value.url, value)
+    elif isinstance(field, models.JSONField):
+        try:
+            return field.value_to_string(value)
+        except Exception:
+            return empty_value_display
     else:
         return display_for_value(value, empty_value_display)

diff --git a/migrations/0001_initial.py b/migrations/0001_initial.py
new file mode 100644
index 0000000000..588920af12
--- /dev/null
+++ b/migrations/0001_initial.py
@@ -0,0 +1,21 @@
+# Generated by Django 3.1 on 2025-01-14 14:05
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='MyModel',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('data', models.JSONField()),
+            ],
+        ),
+    ]
diff --git a/migrations/__init__.py b/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/myapp/__init__.py b/myapp/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/myapp/admin.py b/myapp/admin.py
new file mode 100644
index 0000000000..f306bf70d0
--- /dev/null
+++ b/myapp/admin.py
@@ -0,0 +1,7 @@
+from django.contrib import admin
+from .models import MyModel
+
+class MyModelAdmin(admin.ModelAdmin):
+    readonly_fields = ('data',)
+
+admin.site.register(MyModel, MyModelAdmin)
diff --git a/myapp/migrations/0001_initial.py b/myapp/migrations/0001_initial.py
new file mode 100644
index 0000000000..0e9fac0fd8
--- /dev/null
+++ b/myapp/migrations/0001_initial.py
@@ -0,0 +1,21 @@
+# Generated by Django 3.1 on 2025-01-14 14:06
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='MyModel',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('data', models.JSONField()),
+            ],
+        ),
+    ]
diff --git a/myapp/migrations/__init__.py b/myapp/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/myapp/models.py b/myapp/models.py
new file mode 100644
index 0000000000..2b811a0f1f
--- /dev/null
+++ b/myapp/models.py
@@ -0,0 +1,4 @@
+from django.db import models
+
+class MyModel(models.Model):
+    data = models.JSONField()
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..e733bfef36
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,64 @@
+import os
+import django
+from django.conf import settings
+import os
+import django
+from django.conf import settings
+from django.core.management import execute_from_command_line
+
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        'django.contrib.admin',
+        'myapp',
+        'django.contrib.messages',
+        'django.contrib.sessions',
+    ],
+    MIDDLEWARE=[
+        'django.middleware.common.CommonMiddleware',
+        'django.middleware.csrf.CsrfViewMiddleware',
+        'django.contrib.sessions.middleware.SessionMiddleware',
+        'django.contrib.auth.middleware.AuthenticationMiddleware',
+        'django.contrib.messages.middleware.MessageMiddleware',
+    ],
+    TEMPLATES=[
+        {
+            'BACKEND': 'django.template.backends.django.DjangoTemplates',
+            'DIRS': [],
+            'APP_DIRS': True,
+            'OPTIONS': {
+                'context_processors': [
+                    'django.template.context_processors.debug',
+                    'django.template.context_processors.request',
+                    'django.contrib.auth.context_processors.auth',
+                    'django.contrib.messages.context_processors.messages',
+                ],
+            },
+        },
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    USE_I18N=True,
+    USE_L10N=True,
+    USE_TZ=True,
+    TIME_ZONE='UTC',
+)
+
+django.setup()
+
+if __name__ == "__main__":
+    execute_from_command_line(['manage.py', 'makemigrations', 'myapp'])
+    execute_from_command_line(['manage.py', 'migrate'])
+    from myapp.models import MyModel
+    from django.contrib import admin
+    # Create a test instance
+    MyModel.objects.create(data={"foo": "bar"})
+    # Simulate accessing the admin to see the output
+    instance = MyModel.objects.first()
+    field = MyModel._meta.get_field('data')
+    print("Display for field:", admin.utils.display_for_field(instance.data, field, "-"))
