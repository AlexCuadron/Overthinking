diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py
index b3cfc6723c..f6c4b7fc2f 100644
--- a/django/contrib/auth/forms.py
+++ b/django/contrib/auth/forms.py
@@ -163,7 +163,7 @@ class UserChangeForm(forms.ModelForm):
         super().__init__(*args, **kwargs)
         password = self.fields.get("password")
         if password:
-            password.help_text = password.help_text.format("../password/")
+            password.help_text = password.help_text.format(f"../../{self.instance.pk}/password/")
         user_permissions = self.fields.get("user_permissions")
         if user_permissions:
             user_permissions.queryset = user_permissions.queryset.select_related(
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..14ff650d76
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,32 @@
+import os
+from django.conf import settings
+import django
+from django.test import Client
+from django.urls import reverse
+
+# Configure minimal Django settings
+os.environ['DJANGO_SETTINGS_MODULE'] = 'django.conf.global_settings'
+settings.configure(DEBUG=True, SECRET_KEY='dummy_secret_key', ROOT_URLCONF='test_urls', ALLOWED_HOSTS=['testserver'], DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}}, INSTALLED_APPS=['django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles'], MIDDLEWARE=['django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware'])
+django.setup()
+
+# Apply migrations
+from django.core.management import call_command
+call_command('migrate', run_syncdb=True)
+
+# Initialize the Django test client
+def test_password_reset_link():
+    client = Client()
+    from django.contrib.auth.models import User
+    # Create a test user with a specific UUID
+    user_uuid = "22222222-3333-4444-5555-666677778888"
+    user = User.objects.create(username='testuser', password='testpass', id=1)
+    user.pk = user_uuid
+    user.save()
+    # Access the user change form via the UUID
+    response = client.get(reverse('admin:auth_user_change', args=(user_uuid,)))
+    # Check if the password reset link is correct
+    assert f'href="../../{user_uuid}/password/"' in response.content.decode()
+
+if __name__ == "__main__":
+    test_password_reset_link()
+    print("Test completed.")
diff --git a/test_urls.py b/test_urls.py
new file mode 100644
index 0000000000..6b669efaa2
--- /dev/null
+++ b/test_urls.py
@@ -0,0 +1,6 @@
+from django.contrib import admin
+from django.urls import path
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+]
\ No newline at end of file
