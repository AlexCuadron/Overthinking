2025-01-15 13:04:13,393 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_u4hi3xrus8f2ts86_qroup3d3os79ipoo
2025-01-15 13:04:13,397 - INFO - [runtime b39240af-7d84-4fe2-a05c-b57c1e591d4b-c61bef2221aebe0d] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_u4hi3xrus8f2ts86_qroup3d3os79ipoo
2025-01-15 13:04:14,403 - INFO - [runtime b39240af-7d84-4fe2-a05c-b57c1e591d4b-c61bef2221aebe0d] Container started: openhands-runtime-b39240af-7d84-4fe2-a05c-b57c1e591d4b-c61bef2221aebe0d. VSCode URL: None
2025-01-15 13:04:14,404 - INFO - [runtime b39240af-7d84-4fe2-a05c-b57c1e591d4b-c61bef2221aebe0d] Waiting for client to become ready at http://localhost:38383...
2025-01-15 13:04:46,523 - INFO - [runtime b39240af-7d84-4fe2-a05c-b57c1e591d4b-c61bef2221aebe0d] Runtime is ready.
2025-01-15 13:04:47,232 - INFO - ------------------------------
2025-01-15 13:04:47,232 - INFO - BEGIN Runtime Initialization Fn
2025-01-15 13:04:47,232 - INFO - ------------------------------
2025-01-15 13:04:47,232 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-12965' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-15 13:04:47,869 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:04:47,870 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-15 13:04:48,514 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:04:48,515 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-15 13:04:49,168 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:04:49,180 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-15 13:04:49,812 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=django__django-12965
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:04:49,813 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-15 13:04:50,444 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:04:50,444 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-15 13:04:50,445 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-15 13:04:55,624 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__3.2
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:04:55,624 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.2
2025-01-15 13:04:56,267 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:04:56,267 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-15 13:04:57,405 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 437196da9a Refs #31534 -- Improved django.conf.urls.url() warning message with stacklevel=2.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:04:57,406 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-15 13:04:58,038 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:04:58,038 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-15 13:04:58,674 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:04:58,674 - INFO - ------------------------------
2025-01-15 13:04:58,675 - INFO - END Runtime Initialization Fn
2025-01-15 13:04:58,675 - INFO - ------------------------------
2025-01-15 13:04:58,729 - INFO - [runtime b39240af-7d84-4fe2-a05c-b57c1e591d4b-c61bef2221aebe0d] Found 0 local microagents.
2025-01-15 13:04:58,732 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-15 13:04:58,733 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-15 13:05:05,260 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-15 13:05:14,646 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-15 13:05:32,112 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-15 13:05:39,066 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-15 13:05:45,822 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-15 13:05:53,349 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-15 13:06:00,345 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-15 13:06:08,524 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-15 13:06:15,144 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-15 13:06:22,636 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-15 13:06:35,813 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-15 13:06:42,211 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-15 13:06:49,152 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-15 13:06:57,129 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-15 13:07:03,898 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-15 13:07:16,798 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-15 13:07:29,756 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-15 13:07:37,835 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-15 13:07:48,798 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-15 13:07:56,363 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-15 13:08:11,451 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-15 13:08:18,766 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-15 13:08:27,435 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-15 13:08:35,552 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-15 13:08:47,218 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-15 13:08:54,919 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-15 13:09:06,718 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-15 13:09:14,369 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-15 13:09:27,255 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-15 13:09:34,801 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-15 13:09:34,801 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-15 13:09:34,803 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-15 13:09:34,803 - WARNING - Stopping agent due to traffic control
2025-01-15 13:09:34,803 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-15 13:09:35,022 - INFO - ------------------------------
2025-01-15 13:09:35,022 - INFO - BEGIN Runtime Completion Fn
2025-01-15 13:09:35,022 - INFO - ------------------------------
2025-01-15 13:09:35,023 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.2
2025-01-15 13:09:35,653 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:09:35,653 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-15 13:09:36,285 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:09:36,286 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-15 13:09:36,919 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:09:36,919 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 437196da9a386bd4cc62b0ce3f2de4aba468613d
2025-01-15 13:09:37,558 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "83eaa6f0dcc4",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index 29e33c075f..0e1ea5551b 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -1423,7 +1423,9 @@ class SQLDeleteCompiler(SQLCompiler):
         Create the SQL for this query. Return the SQL string and list of
         parameters.
         """
-        if self.single_alias:
+        # Only use a subquery if we have multiple tables AND we're not doing a simple delete
+        # A simple delete is when we're only deleting from one table and not using any joins
+        if self.single_alias or not self.query.where.contains_joins():
             return self._as_sql(self.query)
         innerq = self.query.clone()
         innerq.__class__ = Query
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..4d2f7799cd
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,63 @@
+from django.conf import settings
+from django.db import connection
+import os
+import django
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[],
+)
+
+# Initialize Django
+django.setup()
+
+# Create table and test performance
+with connection.cursor() as cursor:
+    # Create test table
+    cursor.execute('DROP TABLE IF EXISTS test_table')
+    cursor.execute('''
+        CREATE TABLE test_table (
+            id INTEGER PRIMARY KEY AUTOINCREMENT,
+            name VARCHAR(100)
+        )
+    ''')
+    cursor.execute('''
+        WITH RECURSIVE seq(value) AS (
+            SELECT 1
+            UNION ALL
+            SELECT value + 1 FROM seq WHERE value < 100000
+        )
+        INSERT INTO test_table (name)
+        SELECT 'name' || value FROM seq
+    ''')
+
+    # Test delete performance before fix
+    import time
+    start = time.time()
+    cursor.execute('DELETE FROM test_table WHERE id IN (SELECT id FROM test_table)')
+    end = time.time()
+    print(f"Delete with subquery took {end - start:.2f} seconds")
+
+    # Recreate data
+    cursor.execute('''
+        WITH RECURSIVE seq(value) AS (
+            SELECT 1
+            UNION ALL
+            SELECT value + 1 FROM seq WHERE value < 100000
+        )
+        INSERT INTO test_table (name)
+        SELECT 'name' || value FROM seq
+    ''')
+
+    # Test delete performance after fix
+    start = time.time()
+    cursor.execute('DELETE FROM test_table')
+    end = time.time()
+    print(f"Delete without subquery took {end - start:.2f} seconds")
\ No newline at end of file
diff --git a/test_models.py b/test_models.py
new file mode 100644
index 0000000000..c6446ed194
--- /dev/null
+++ b/test_models.py
@@ -0,0 +1,56 @@
+from django.conf import settings
+from django.db import models, connection
+import os
+import django
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[],
+)
+
+# Initialize Django
+django.setup()
+
+# Create test model
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+
+    class Meta:
+        app_label = 'test_app'
+        db_table = 'test_table'
+
+# Create table and test performance
+with connection.cursor() as cursor:
+    # Create test table
+    cursor.execute('DROP TABLE IF EXISTS test_table')
+    cursor.execute('''
+        CREATE TABLE test_table (
+            id INTEGER PRIMARY KEY AUTOINCREMENT,
+            name VARCHAR(100)
+        )
+    ''')
+    cursor.execute('''
+        WITH RECURSIVE seq(value) AS (
+            SELECT 1
+            UNION ALL
+            SELECT value + 1 FROM seq WHERE value < 100000
+        )
+        INSERT INTO test_table (name)
+        SELECT 'name' || value FROM seq
+    ''')
+
+# Test delete performance
+import time
+
+start = time.time()
+TestModel.objects.all().delete()
+end = time.time()
+
+print(f"Delete took {end - start:.2f} seconds")
\ No newline at end of file
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:09:37,559 - INFO - ------------------------------
2025-01-15 13:09:37,559 - INFO - END Runtime Completion Fn
2025-01-15 13:09:37,559 - INFO - ------------------------------
2025-01-15 13:09:37,559 - INFO - Got git diff for instance django__django-12965:
--------
diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index 29e33c075f..0e1ea5551b 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -1423,7 +1423,9 @@ class SQLDeleteCompiler(SQLCompiler):
         Create the SQL for this query. Return the SQL string and list of
         parameters.
         """
-        if self.single_alias:
+        # Only use a subquery if we have multiple tables AND we're not doing a simple delete
+        # A simple delete is when we're only deleting from one table and not using any joins
+        if self.single_alias or not self.query.where.contains_joins():
             return self._as_sql(self.query)
         innerq = self.query.clone()
         innerq.__class__ = Query
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..4d2f7799cd
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,63 @@
+from django.conf import settings
+from django.db import connection
+import os
+import django
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[],
+)
+
+# Initialize Django
+django.setup()
+
+# Create table and test performance
+with connection.cursor() as cursor:
+    # Create test table
+    cursor.execute('DROP TABLE IF EXISTS test_table')
+    cursor.execute('''
+        CREATE TABLE test_table (
+            id INTEGER PRIMARY KEY AUTOINCREMENT,
+            name VARCHAR(100)
+        )
+    ''')
+    cursor.execute('''
+        WITH RECURSIVE seq(value) AS (
+            SELECT 1
+            UNION ALL
+            SELECT value + 1 FROM seq WHERE value < 100000
+        )
+        INSERT INTO test_table (name)
+        SELECT 'name' || value FROM seq
+    ''')
+
+    # Test delete performance before fix
+    import time
+    start = time.time()
+    cursor.execute('DELETE FROM test_table WHERE id IN (SELECT id FROM test_table)')
+    end = time.time()
+    print(f"Delete with subquery took {end - start:.2f} seconds")
+
+    # Recreate data
+    cursor.execute('''
+        WITH RECURSIVE seq(value) AS (
+            SELECT 1
+            UNION ALL
+            SELECT value + 1 FROM seq WHERE value < 100000
+        )
+        INSERT INTO test_table (name)
+        SELECT 'name' || value FROM seq
+    ''')
+
+    # Test delete performance after fix
+    start = time.time()
+    cursor.execute('DELETE FROM test_table')
+    end = time.time()
+    print(f"Delete without subquery took {end - start:.2f} seconds")
\ No newline at end of file
diff --git a/test_models.py b/test_models.py
new file mode 100644
index 0000000000..c6446ed194
--- /dev/null
+++ b/test_models.py
@@ -0,0 +1,56 @@
+from django.conf import settings
+from django.db import models, connection
+import os
+import django
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[],
+)
+
+# Initialize Django
+django.setup()
+
+# Create test model
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+
+    class Meta:
+        app_label = 'test_app'
+        db_table = 'test_table'
+
+# Create table and test performance
+with connection.cursor() as cursor:
+    # Create test table
+    cursor.execute('DROP TABLE IF EXISTS test_table')
+    cursor.execute('''
+        CREATE TABLE test_table (
+            id INTEGER PRIMARY KEY AUTOINCREMENT,
+            name VARCHAR(100)
+        )
+    ''')
+    cursor.execute('''
+        WITH RECURSIVE seq(value) AS (
+            SELECT 1
+            UNION ALL
+            SELECT value + 1 FROM seq WHERE value < 100000
+        )
+        INSERT INTO test_table (name)
+        SELECT 'name' || value FROM seq
+    ''')
+
+# Test delete performance
+import time
+
+start = time.time()
+TestModel.objects.all().delete()
+end = time.time()
+
+print(f"Delete took {end - start:.2f} seconds")
\ No newline at end of file
--------
2025-01-15 13:09:39,273 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.django_s_django-15277. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-15 13:09:39,274 - INFO - Logging LLM completions for instance django__django-15277 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/claude-3-5-sonnet-20241022_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/django__django-15277
