2025-01-15 13:25:04,521 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_88gsq5ru23pea82p_qroup3d3os79ipoo
2025-01-15 13:25:04,527 - INFO - [runtime 4f175ab2-ddcf-49b7-bec0-8d91a086a4c8-5b7e890d3ecc56e9] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_88gsq5ru23pea82p_qroup3d3os79ipoo
2025-01-15 13:25:05,673 - INFO - [runtime 4f175ab2-ddcf-49b7-bec0-8d91a086a4c8-5b7e890d3ecc56e9] Container started: openhands-runtime-4f175ab2-ddcf-49b7-bec0-8d91a086a4c8-5b7e890d3ecc56e9. VSCode URL: None
2025-01-15 13:25:05,674 - INFO - [runtime 4f175ab2-ddcf-49b7-bec0-8d91a086a4c8-5b7e890d3ecc56e9] Waiting for client to become ready at http://localhost:34933...
2025-01-15 13:25:37,787 - INFO - [runtime 4f175ab2-ddcf-49b7-bec0-8d91a086a4c8-5b7e890d3ecc56e9] Runtime is ready.
2025-01-15 13:25:38,436 - INFO - ------------------------------
2025-01-15 13:25:38,436 - INFO - BEGIN Runtime Initialization Fn
2025-01-15 13:25:38,436 - INFO - ------------------------------
2025-01-15 13:25:38,437 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sphinx-doc__sphinx-10614' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-15 13:25:39,070 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:25:39,070 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-15 13:25:39,703 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:25:39,703 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-15 13:25:40,340 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:25:40,349 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-15 13:25:40,978 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=sphinx-doc__sphinx-10614
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:25:40,979 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-15 13:25:41,610 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:25:41,611 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-15 13:25:41,611 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-15 13:25:43,253 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sphinx-doc__sphinx__7.2
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:25:43,254 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sphinx-doc__sphinx__7.2
2025-01-15 13:25:43,889 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace/sphinx-doc__sphinx__7.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__7.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:25:43,889 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-15 13:25:44,519 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace/sphinx-doc__sphinx__7.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at ac2b7599d autosummary: Extract summary line after "e.g." (#11196)
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__7.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:25:44,520 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-15 13:25:45,152 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace/sphinx-doc__sphinx__7.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__7.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:25:45,152 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-15 13:25:45,782 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace/sphinx-doc__sphinx__7.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__7.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:25:45,783 - INFO - ------------------------------
2025-01-15 13:25:45,783 - INFO - END Runtime Initialization Fn
2025-01-15 13:25:45,783 - INFO - ------------------------------
2025-01-15 13:25:45,824 - INFO - [runtime 4f175ab2-ddcf-49b7-bec0-8d91a086a4c8-5b7e890d3ecc56e9] Found 0 local microagents.
2025-01-15 13:25:45,826 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-15 13:25:45,827 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-15 13:25:52,364 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-15 13:25:59,747 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-15 13:26:07,644 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-15 13:26:22,588 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-15 13:26:44,295 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-15 13:26:53,212 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-15 13:27:01,251 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-15 13:32:09,045 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-15 13:32:18,021 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-15 13:32:25,622 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-15 13:32:32,836 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-15 13:32:41,627 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-15 13:37:47,881 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-15 13:37:56,817 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-15 13:38:04,116 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-15 13:38:11,054 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-15 13:38:20,782 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-15 13:43:27,583 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-15 13:43:41,615 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-01-15 13:43:41,617 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-01-15 13:43:41,618 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-15 13:43:54,039 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-01-15 13:43:54,900 - INFO - ------------------------------
2025-01-15 13:43:54,900 - INFO - BEGIN Runtime Completion Fn
2025-01-15 13:43:54,900 - INFO - ------------------------------
2025-01-15 13:43:54,901 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sphinx-doc__sphinx__7.2
2025-01-15 13:43:55,537 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace/sphinx-doc__sphinx__7.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__7.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:43:55,537 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-15 13:43:56,165 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace/sphinx-doc__sphinx__7.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__7.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:43:56,166 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-15 13:43:56,795 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace/sphinx-doc__sphinx__7.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__7.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:43:56,795 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached ac2b7599d212af7d04649959ce6926c63c3133fa
2025-01-15 13:43:57,426 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "5eb310e8fa15",
  "working_dir": "/workspace/sphinx-doc__sphinx__7.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py
index 6e3985512..84f20073e 100644
--- a/sphinx/ext/inheritance_diagram.py
+++ b/sphinx/ext/inheritance_diagram.py
@@ -410,15 +410,24 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag
     current_filename = self.builder.current_docname + self.builder.out_suffix
     urls = {}
     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)
+
+    # Calculate relative path prefix for SVG files based on current document depth
+    if graphviz_output_format == 'SVG':
+        # Count the number of directory levels in current_docname
+        levels = len(self.builder.current_docname.split('/')) - 1
+        relpath_prefix = '../' * (levels + 1)  # +1 because SVG is in _images subdirectory
+    else:
+        relpath_prefix = ''
+
     for child in pending_xrefs:
         if child.get('refuri') is not None:
             if graphviz_output_format == 'SVG':
-                urls[child['reftitle']] = "../" + child.get('refuri')
+                urls[child['reftitle']] = relpath_prefix + child.get('refuri')
             else:
                 urls[child['reftitle']] = child.get('refuri')
         elif child.get('refid') is not None:
             if graphviz_output_format == 'SVG':
-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')
+                urls[child['reftitle']] = relpath_prefix + current_filename + '#' + child.get('refid')
             else:
                 urls[child['reftitle']] = '#' + child.get('refid')

diff --git a/test_inheritance_svg.py b/test_inheritance_svg.py
new file mode 100644
index 000000000..f19dbf712
--- /dev/null
+++ b/test_inheritance_svg.py
@@ -0,0 +1,92 @@
+import os
+import shutil
+import tempfile
+from pathlib import Path
+
+# Create a temporary directory for our test
+test_dir = tempfile.mkdtemp()
+print(f"Created test directory: {test_dir}")
+
+# Create the test project structure
+docs_source = Path(test_dir) / "docs_source"
+docs_source.mkdir()
+
+# Create conf.py
+conf_py = """
+project = 'Test Project'
+extensions = ['sphinx.ext.inheritance_diagram']
+graphviz_output_format = 'svg'
+"""
+with open(docs_source / "conf.py", "w") as f:
+    f.write(conf_py)
+
+# Create test classes
+my_package = docs_source / "my_package"
+my_package.mkdir()
+
+# Create test module with classes
+test_module = """
+class MyClass1:
+    pass
+
+class MyClass2(MyClass1):
+    pass
+"""
+with open(my_package / "test_module.py", "w") as f:
+    f.write(test_module)
+
+# Create __init__.py to make it a package
+with open(my_package / "__init__.py", "w") as f:
+    f.write("")
+
+# Create root index.rst
+index_rst = """
+Test Project
+===========
+
+.. inheritance-diagram:: my_package.test_module.MyClass2
+
+See :ref:`nested-page` for nested diagram.
+"""
+with open(docs_source / "index.rst", "w") as f:
+    f.write(index_rst)
+
+# Create nested index.rst
+nested_index_rst = """
+.. _nested-page:
+
+Nested Page
+==========
+
+.. inheritance-diagram:: my_package.test_module.MyClass2
+"""
+with open(my_package / "index.rst", "w") as f:
+    f.write(nested_index_rst)
+
+# Add test directory to Python path so sphinx can find the module
+os.environ['PYTHONPATH'] = str(docs_source)
+
+# Build the docs
+os.system(f"PYTHONPATH={docs_source} sphinx-build -b html {docs_source} {test_dir}/docs_build")
+
+print("\nTest completed. Check the following files:")
+print(f"1. Root diagram: {test_dir}/docs_build/index.html")
+print(f"2. Nested diagram: {test_dir}/docs_build/my_package/index.html")
+print(f"3. SVG files in: {test_dir}/docs_build/_images/")
+
+# Print the contents of the _images directory
+print("\nContents of _images directory:")
+os.system(f"ls -la {test_dir}/docs_build/_images/")
+
+print("\nChecking SVG file contents:")
+os.system(f"cat {test_dir}/docs_build/_images/*.svg")
+
+print("\nChecking HTML files:")
+print("\nRoot index.html:")
+os.system(f"cat {test_dir}/docs_build/index.html")
+print("\nNested index.html:")
+os.system(f"cat {test_dir}/docs_build/my_package/index.html")
+
+# Clean up
+input("\nPress Enter to clean up the test directory...")
+shutil.rmtree(test_dir)
\ No newline at end of file
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__7.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-15 13:43:57,427 - INFO - ------------------------------
2025-01-15 13:43:57,427 - INFO - END Runtime Completion Fn
2025-01-15 13:43:57,427 - INFO - ------------------------------
2025-01-15 13:43:57,427 - INFO - Got git diff for instance sphinx-doc__sphinx-10614:
--------
diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py
index 6e3985512..84f20073e 100644
--- a/sphinx/ext/inheritance_diagram.py
+++ b/sphinx/ext/inheritance_diagram.py
@@ -410,15 +410,24 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag
     current_filename = self.builder.current_docname + self.builder.out_suffix
     urls = {}
     pending_xrefs = cast(Iterable[addnodes.pending_xref], node)
+
+    # Calculate relative path prefix for SVG files based on current document depth
+    if graphviz_output_format == 'SVG':
+        # Count the number of directory levels in current_docname
+        levels = len(self.builder.current_docname.split('/')) - 1
+        relpath_prefix = '../' * (levels + 1)  # +1 because SVG is in _images subdirectory
+    else:
+        relpath_prefix = ''
+
     for child in pending_xrefs:
         if child.get('refuri') is not None:
             if graphviz_output_format == 'SVG':
-                urls[child['reftitle']] = "../" + child.get('refuri')
+                urls[child['reftitle']] = relpath_prefix + child.get('refuri')
             else:
                 urls[child['reftitle']] = child.get('refuri')
         elif child.get('refid') is not None:
             if graphviz_output_format == 'SVG':
-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')
+                urls[child['reftitle']] = relpath_prefix + current_filename + '#' + child.get('refid')
             else:
                 urls[child['reftitle']] = '#' + child.get('refid')

diff --git a/test_inheritance_svg.py b/test_inheritance_svg.py
new file mode 100644
index 000000000..f19dbf712
--- /dev/null
+++ b/test_inheritance_svg.py
@@ -0,0 +1,92 @@
+import os
+import shutil
+import tempfile
+from pathlib import Path
+
+# Create a temporary directory for our test
+test_dir = tempfile.mkdtemp()
+print(f"Created test directory: {test_dir}")
+
+# Create the test project structure
+docs_source = Path(test_dir) / "docs_source"
+docs_source.mkdir()
+
+# Create conf.py
+conf_py = """
+project = 'Test Project'
+extensions = ['sphinx.ext.inheritance_diagram']
+graphviz_output_format = 'svg'
+"""
+with open(docs_source / "conf.py", "w") as f:
+    f.write(conf_py)
+
+# Create test classes
+my_package = docs_source / "my_package"
+my_package.mkdir()
+
+# Create test module with classes
+test_module = """
+class MyClass1:
+    pass
+
+class MyClass2(MyClass1):
+    pass
+"""
+with open(my_package / "test_module.py", "w") as f:
+    f.write(test_module)
+
+# Create __init__.py to make it a package
+with open(my_package / "__init__.py", "w") as f:
+    f.write("")
+
+# Create root index.rst
+index_rst = """
+Test Project
+===========
+
+.. inheritance-diagram:: my_package.test_module.MyClass2
+
+See :ref:`nested-page` for nested diagram.
+"""
+with open(docs_source / "index.rst", "w") as f:
+    f.write(index_rst)
+
+# Create nested index.rst
+nested_index_rst = """
+.. _nested-page:
+
+Nested Page
+==========
+
+.. inheritance-diagram:: my_package.test_module.MyClass2
+"""
+with open(my_package / "index.rst", "w") as f:
+    f.write(nested_index_rst)
+
+# Add test directory to Python path so sphinx can find the module
+os.environ['PYTHONPATH'] = str(docs_source)
+
+# Build the docs
+os.system(f"PYTHONPATH={docs_source} sphinx-build -b html {docs_source} {test_dir}/docs_build")
+
+print("\nTest completed. Check the following files:")
+print(f"1. Root diagram: {test_dir}/docs_build/index.html")
+print(f"2. Nested diagram: {test_dir}/docs_build/my_package/index.html")
+print(f"3. SVG files in: {test_dir}/docs_build/_images/")
+
+# Print the contents of the _images directory
+print("\nContents of _images directory:")
+os.system(f"ls -la {test_dir}/docs_build/_images/")
+
+print("\nChecking SVG file contents:")
+os.system(f"cat {test_dir}/docs_build/_images/*.svg")
+
+print("\nChecking HTML files:")
+print("\nRoot index.html:")
+os.system(f"cat {test_dir}/docs_build/index.html")
+print("\nNested index.html:")
+os.system(f"cat {test_dir}/docs_build/my_package/index.html")
+
+# Clean up
+input("\nPress Enter to clean up the test directory...")
+shutil.rmtree(test_dir)
\ No newline at end of file
--------
