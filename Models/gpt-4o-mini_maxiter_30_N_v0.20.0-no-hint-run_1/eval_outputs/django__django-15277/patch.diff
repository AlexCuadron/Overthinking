diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index f30b523346..856ce34aaa 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -1005,6 +1005,10 @@ class BooleanField(Field):


 class CharField(Field):
+    def __init__(self, *args, **kwargs):
+        super().__init__(*args, **kwargs)
+        if self.max_length is not None:
+            self.validators.append(validators.MaxLengthValidator(self.max_length))
     description = _("String (up to %(max_length)s)")

     def __init__(self, *args, db_collation=None, **kwargs):
diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py
index 11407ac902..86f568b615 100644
--- a/django/db/models/fields/related.py
+++ b/django/db/models/fields/related.py
@@ -81,6 +81,10 @@ def lazy_related_operation(function, model, *related_models, **kwargs):


 class RelatedField(FieldCacheMixin, Field):
+    def __init__(self, *args, **kwargs):
+        super().__init__(*args, **kwargs)
+        if self.max_length is not None:
+            self.validators.append(validators.MaxLengthValidator(self.max_length))
     """Base class that all relational fields inherit from."""

     # Field flags
diff --git a/scripts/reproduce_error.py b/scripts/reproduce_error.py
new file mode 100644
index 0000000000..db5672e416
--- /dev/null
+++ b/scripts/reproduce_error.py
@@ -0,0 +1,5 @@
+from django.db.models import Value
+
+x = Value('test')
+y = x._resolve_output_field()
+print(y.validators)
\ No newline at end of file
