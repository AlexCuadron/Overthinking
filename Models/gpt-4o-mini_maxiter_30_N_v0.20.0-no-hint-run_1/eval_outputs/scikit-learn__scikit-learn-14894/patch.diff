diff --git a/reproduce_zero_division_error.py b/reproduce_zero_division_error.py
new file mode 100644
index 000000000..9dbf1d7f1
--- /dev/null
+++ b/reproduce_zero_division_error.py
@@ -0,0 +1,18 @@
+import numpy as np
+import scipy
+from sklearn.svm import SVR
+
+x_train = np.array([[0, 1, 0, 0],
+                   [0, 0, 0, 1],
+                   [0, 0, 1, 0],
+                   [0, 0, 0, 1]])
+y_train = np.array([0.04, 0.04, 0.10, 0.16])
+
+model = SVR(C=316.227766017, cache_size=200, coef0=0.0, degree=3, epsilon=0.1,
+            gamma=1.0, kernel='linear', max_iter=15000,
+            shrinking=True, tol=0.001, verbose=False)
+
+model.fit(x_train, y_train)
+
+xtrain = scipy.sparse.csr_matrix(x_train)
+model.fit(xtrain, y_train)
\ No newline at end of file
diff --git a/sklearn/svm/base.py b/sklearn/svm/base.py
index 64cebe837..f06210999 100644
--- a/sklearn/svm/base.py
+++ b/sklearn/svm/base.py
@@ -288,7 +288,7 @@ class BaseLibSVM(BaseEstimator, metaclass=ABCMeta):

         dual_coef_indices = np.tile(np.arange(n_SV), n_class)
         dual_coef_indptr = np.arange(0, dual_coef_indices.size + 1,
-                                     dual_coef_indices.size / n_class)
+                                     (n_class if n_class > 0 else 1) if n_SV > 0 else 1)
         self.dual_coef_ = sp.csr_matrix(
             (dual_coef_data, dual_coef_indices, dual_coef_indptr),
             (n_class, n_SV))
