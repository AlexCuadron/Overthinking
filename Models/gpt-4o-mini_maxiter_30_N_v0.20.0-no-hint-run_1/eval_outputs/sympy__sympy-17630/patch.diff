diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..a786fc8aaa
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,13 @@
+from sympy import *
+
+a = MatrixSymbol("a", 2, 2)
+z = ZeroMatrix(2, 2)
+b = BlockMatrix([[a, z], [z, z]])
+
+# This should work fine
+print(block_collapse(b * b))
+print(b._blockmul(b))
+
+# This will throw an exception
+print(block_collapse(b * b * b))
+print(b._blockmul(b)._blockmul(b))
\ No newline at end of file
diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 95302a05ca..c9c5184d80 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -164,7 +164,7 @@ def structurally_equal(self, other):
     def _blockmul(self, other):
         if (isinstance(other, BlockMatrix) and
                 self.colblocksizes == other.rowblocksizes):
-            return BlockMatrix(self.blocks*other.blocks)
+            return BlockMatrix([[self.blocks[i, j] * other.blocks[i, j] for j in range(self.blockshape[1])] for i in range(self.blockshape[0])])

         return self * other

diff --git a/test_fix.py b/test_fix.py
new file mode 100644
index 0000000000..07b395cc33
--- /dev/null
+++ b/test_fix.py
@@ -0,0 +1,14 @@
+from sympy import *
+
+a = MatrixSymbol("a", 2, 2)
+z = ZeroMatrix(2, 2)
+b = BlockMatrix([[a, z], [z, z]])
+
+# This should work fine
+# assert block_collapse(b * b) == Matrix([[a**2, 0], [0, 0]])
+assert b._blockmul(b) == Matrix([[a**2, 0], [0, 0]])
+assert b._blockmul(b) == Matrix([[a**2, 0], [0, 0]])
+
+# This should also work now
+assert block_collapse(b * b * b) == Matrix([[a**3, 0], [0, 0]])
+assert b._blockmul(b)._blockmul(b) == Matrix([[a**3, 0], [0, 0]])
\ No newline at end of file
