diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 9b00e24509..e2908e9fdf 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -59,8 +59,9 @@ class ResolverMatch:
         return (self.func, self.args, self.kwargs)[index]

     def __repr__(self):
+        func_name = self.func.__name__ if callable(self.func) else str(self.func)
         return "ResolverMatch(func=%s, args=%s, kwargs=%s, url_name=%s, app_names=%s, namespaces=%s, route=%s)" % (
-            self._func_path, self.args, self.kwargs, self.url_name,
+            func_name, self.args, self.kwargs, self.url_name,
             self.app_names, self.namespaces, self.route,
         )

diff --git a/scripts/reproduce_error.py b/scripts/reproduce_error.py
new file mode 100644
index 0000000000..52e7bc4e8e
--- /dev/null
+++ b/scripts/reproduce_error.py
@@ -0,0 +1,14 @@
+import functools
+
+def sample_view(arg1, arg2):
+    return f"Arguments received: {arg1}, {arg2}"
+
+# Create a partial function
+partial_view = functools.partial(sample_view, "value1")
+
+# Simulate ResolverMatch
+from django.urls.resolvers import ResolverMatch
+resolver_match = ResolverMatch(func=partial_view, args=("value2",), kwargs={})
+
+# Print the representation to see if it handles functools.partial correctly
+print(repr(resolver_match))
\ No newline at end of file
