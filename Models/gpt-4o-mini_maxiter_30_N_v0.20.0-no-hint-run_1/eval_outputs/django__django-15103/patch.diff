diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py
index 5ccef38048..9cdc7dc34c 100644
--- a/django/template/defaultfilters.py
+++ b/django/template/defaultfilters.py
@@ -83,12 +83,14 @@ def escapejs_filter(value):


 @register.filter(is_safe=True)
-def json_script(value, element_id):
+def json_script(value, element_id=None):
     """
     Output value JSON-encoded, wrapped in a <script type="application/json">
     tag.
     """
-    return _json_script(value, element_id)
+    if isinstance(value, (dict, list)):
+        return _json_script(value, element_id)
+    return _json_script({}, element_id)


 @register.filter(is_safe=True)
diff --git a/test_json_script.py b/test_json_script.py
new file mode 100644
index 0000000000..1d1b751045
--- /dev/null
+++ b/test_json_script.py
@@ -0,0 +1,13 @@
+from django.template.defaultfilters import json_script
+
+# Test the json_script function without element_id
+data = {'key': 'value'}
+print(json_script(data))  # Should work
+
+# Test with element_id as None
+print(json_script(data, None))  # Should work and not include an id
+
+# Test with invalid JSON data
+invalid_data = set([1, 2, 3])  # Sets are not JSON serializable
+print(json_script(invalid_data))  # Should handle gracefully
+
