diff --git a/django/utils/formats.py b/django/utils/formats.py
index 3f38322d84..433c0ade83 100644
--- a/django/utils/formats.py
+++ b/django/utils/formats.py
@@ -97,7 +97,7 @@ def get_format_modules(lang=None):
     return _format_modules_cache[lang]


-def get_format(format_type, lang=None, use_l10n=None):
+def get_format(format_type, lang=None, use_l10n=None, lazy=None):
     """
     For a specific format type, return the format for the current
     language (locale). Default to the format in the settings.
@@ -123,12 +123,12 @@ def get_format(format_type, lang=None, use_l10n=None):
     # of the format_modules for the given lang if l10n is enabled. If it's not
     # there or if l10n is disabled, fall back to the project settings.
     val = None
-    if use_l10n:
+    if use_l10n and lazy is None:
         for module in get_format_modules(lang):
             val = getattr(module, format_type, None)
             if val is not None:
                 break
-    if val is None:
+    if val is None and lazy is None:
         if format_type not in FORMAT_SETTINGS:
             return format_type
         val = getattr(settings, format_type)
@@ -139,7 +139,7 @@ def get_format(format_type, lang=None, use_l10n=None):
         for iso_input in ISO_INPUT_FORMATS.get(format_type, ()):
             if iso_input not in val:
                 val.append(iso_input)
-    _format_cache[cache_key] = val
+    _format_cache[cache_key] = lazy(val) if lazy else val
     return val


diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..c5f40ec473
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,9 @@
+from django.utils.formats import get_format
+from django.utils.translation import gettext_lazy as _
+
+# This will trigger the error
+try:
+    print(get_format('DATE_FORMAT', lang='en', use_l10n=True))
+    print(get_format('DATE_FORMAT', lang='en', use_l10n=True, lazy=_('Y-m-d')))
+except TypeError as e:
+    print(f'Caught an error: {e}')
\ No newline at end of file
