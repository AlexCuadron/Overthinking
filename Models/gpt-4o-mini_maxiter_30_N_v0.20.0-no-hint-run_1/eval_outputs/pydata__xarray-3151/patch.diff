diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 00000000..16f2ebf7
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,29 @@
+import xarray as xr
+import numpy as np
+
+yCoord = ['a', 'c', 'b']  # raises ValueError on combine
+
+ds1 = xr.Dataset(
+    data_vars=dict(
+        data=(['x', 'y'], np.random.rand(3, 3))
+    ),
+    coords=dict(
+        x=[1, 2, 3],
+        y=yCoord
+    )
+)
+
+ds2 = xr.Dataset(
+    data_vars=dict(
+        data=(['x', 'y'], np.random.rand(4, 3))
+    ),
+    coords = dict(
+        x=[4, 5, 6, 7],
+        y=yCoord
+    )
+)
+
+try:
+    ds3 = xr.combine_by_coords((ds1, ds2))
+except ValueError as e:
+    print(f'ValueError: {e}')
\ No newline at end of file
diff --git a/xarray/core/combine.py b/xarray/core/combine.py
index 37ae903b..a071dfeb 100644
--- a/xarray/core/combine.py
+++ b/xarray/core/combine.py
@@ -505,7 +505,7 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all',
             if dim in concatenated:
                 indexes = concatenated.indexes.get(dim)
                 if not (indexes.is_monotonic_increasing
-                        or indexes.is_monotonic_decreasing):
+                        or indexes.is_monotonic_decreasing or indexes.is_unique or indexes.size == 0):
                     raise ValueError("Resulting object does not have monotonic"
                                      " global indexes along dimension {}"
                                      .format(dim))
