diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py
index 8c1ac5d738..78ef5ecbaf 100644
--- a/astropy/io/fits/card.py
+++ b/astropy/io/fits/card.py
@@ -332,6 +332,9 @@ class Card(_Verify):
                     'characters; {!r} contains characters not representable in '
                     'ASCII or non-printable characters.'.format(value))
         elif isinstance(value, bytes):
+        if isinstance(value, (bytes, str)):
+            value = value.decode('utf-8') if isinstance(value, bytes) else value
+
             # Allow str, but only if they can be decoded to ASCII text; note
             # this is not even allowed on Python 3 since the `bytes` type is
             # not included in `str`.  Presently we simply don't
diff --git a/astropy/io/fits/header.py b/astropy/io/fits/header.py
index ad07e6d52d..8961ff29b0 100644
--- a/astropy/io/fits/header.py
+++ b/astropy/io/fits/header.py
@@ -328,6 +328,9 @@ class Header:

     @classmethod
     def fromstring(cls, data, sep=''):
+        if isinstance(data, (bytes, str)):
+            data = data.decode('utf-8') if isinstance(data, bytes) else data
+
         """
         Creates an HDU header from a byte string containing the entire header
         data.
diff --git a/test_script.py b/test_script.py
new file mode 100644
index 0000000000..347329f2fa
--- /dev/null
+++ b/test_script.py
@@ -0,0 +1 @@
+from astropy.io.fits.header import Header\nheader = Header.fromstring(b'KEY1 = 1\nKEY2 = 2')
