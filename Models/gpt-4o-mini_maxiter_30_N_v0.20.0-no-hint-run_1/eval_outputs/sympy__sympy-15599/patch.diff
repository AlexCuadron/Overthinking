diff --git a/sympy/core/mod.py b/sympy/core/mod.py
index eae25630cc..fb3da290be 100644
--- a/sympy/core/mod.py
+++ b/sympy/core/mod.py
@@ -125,7 +125,18 @@ def doit(p, q):

             if mod_l and all(inner.args[1] == q for inner in mod_l):
                 # finding distributive term
-                non_mod_l = [cls(x, q) for x in non_mod_l]
+                mod = []
+                non_mod = []
+                for j in non_mod_l:
+                    if isinstance(j, cls):
+                        mod.append(j.args[0])
+                    else:
+                        non_mod.append(j)
+                prod_mod = Mul(*mod)
+                prod_non_mod = Mul(*non_mod)
+                prod_mod1 = Mul(*[i.args[0] for i in mod_l])
+                net = prod_mod1*prod_mod
+                return prod_non_mod*cls(net, q)
                 mod = []
                 non_mod = []
                 for j in non_mod_l:
diff --git a/sympy/core/tests/test_arit.py b/sympy/core/tests/test_arit.py
index 04d3b1ab9f..cc280448f1 100644
--- a/sympy/core/tests/test_arit.py
+++ b/sympy/core/tests/test_arit.py
@@ -9,6 +9,7 @@


 a, c, x, y, z = symbols('a,c,x,y,z')
+i = Symbol('i', integer=True)
 b = Symbol("b", positive=True)


@@ -64,6 +65,7 @@ def test_arit0():
     assert e == 5*(2*a + 2*b**2)
     e = (a*b*c + c*b*a + b*a*c)*p
     assert e == 15*a*b*c
+    assert Mod(3*i, 2) == Mod(i, 2)
     e = (a*b*c + c*b*a + b*a*c)*p - Rational(15)*a*b*c
     assert e == Rational(0)
     e = Rational(50)*(a - a)
