diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py
index da4ff928aa..a664600c34 100644
--- a/django/db/models/aggregates.py
+++ b/django/db/models/aggregates.py
@@ -19,7 +19,7 @@ class Aggregate(Func):
     name = None
     filter_template = '%s FILTER (WHERE %%(filter)s)'
     window_compatible = True
-    allow_distinct = False
+    allow_distinct = True

     def __init__(self, *expressions, distinct=False, filter=None, **extra):
         if distinct and not self.allow_distinct:
@@ -97,6 +97,7 @@ class Aggregate(Func):


 class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):
+    allow_distinct = True
     function = 'AVG'
     name = 'Avg'

@@ -119,11 +120,13 @@ class Count(Aggregate):


 class Max(Aggregate):
+    allow_distinct = True
     function = 'MAX'
     name = 'Max'


 class Min(Aggregate):
+    allow_distinct = True
     function = 'MIN'
     name = 'Min'

diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..01b19b6271
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,9 @@
+from django.db.models import Avg, Sum
+
+# This should raise an error if DISTINCT is not allowed
+try:
+    Avg('field_name', distinct=True)
+    Sum('field_name', distinct=True)
+    print('No error raised, DISTINCT is allowed.')
+except TypeError as e:
+    print(f'Error raised as expected: {e}')
\ No newline at end of file
