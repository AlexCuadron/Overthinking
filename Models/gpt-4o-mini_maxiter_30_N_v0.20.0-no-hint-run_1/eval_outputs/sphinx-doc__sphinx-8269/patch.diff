diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py
index 9b54afc7c..f040c562e 100644
--- a/sphinx/builders/linkcheck.py
+++ b/sphinx/builders/linkcheck.py
@@ -60,6 +60,80 @@ class AnchorCheckParser(HTMLParser):


 def check_anchor(response: requests.requests.Response, anchor: str) -> bool:
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
+
+    if response.status_code >= 400:
+        raise HTTPError(f"{response.status_code} Client Error: {response.reason} for url: {response.url}")
+
     """Reads HTML data from a response object `response` searching for `anchor`.
     Returns True if anchor was found, False otherwise.
     """
