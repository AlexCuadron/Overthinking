diff --git a/django/forms/formsets.py b/django/forms/formsets.py
index 75b0646512..0b0c254326 100644
--- a/django/forms/formsets.py
+++ b/django/forms/formsets.py
@@ -66,8 +66,9 @@ class BaseFormSet(RenderableFormMixin):

     def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,
                  initial=None, error_class=ErrorList, form_kwargs=None,
-                 error_messages=None):
+                 error_messages=None, allow_new=True, extra=1):
         self.is_bound = data is not None or files is not None
+        self.extra = extra if allow_new else 0
         self.prefix = prefix or self.get_default_prefix()
         self.auto_id = auto_id
         self.data = data or {}
@@ -475,7 +476,7 @@ class BaseFormSet(RenderableFormMixin):
         return {'formset': self}


-def formset_factory(form, formset=BaseFormSet, extra=1, can_order=False,
+def formset_factory(form, formset=BaseFormSet, extra=1, can_order=False, allow_new=True,
                     can_delete=False, max_num=None, validate_max=False,
                     min_num=None, validate_min=False, absolute_max=None,
                     can_delete_extra=True, renderer=None):
diff --git a/reproduce_formset_error.py b/reproduce_formset_error.py
new file mode 100644
index 0000000000..d631fc3674
--- /dev/null
+++ b/reproduce_formset_error.py
@@ -0,0 +1,23 @@
+import os
+from django import forms
+from django.conf import settings
+from django.forms import formset_factory
+
+# Configure Django settings
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.settings')
+settings.configure()
+import django
+django.setup()
+
+class SampleForm(forms.Form):
+    name = forms.CharField(max_length=100)
+
+# Create a formset factory with allow_new set to False
+SampleFormSet = formset_factory(SampleForm, extra=0, can_delete=True, allow_new=False)
+
+# Attempt to create a formset with new forms
+formset = SampleFormSet(data={})
+
+# Check if the formset is valid and print the result
+print("Formset is valid:", formset.is_valid())
+print("Number of forms in formset:", len(formset.forms))
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..c102a6cb51
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,37 @@
+import os
+from django import forms
+from django.conf import settings
+from django.forms import formset_factory
+
+# Configure Django settings
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.settings')
+settings.configure()
+import django
+django.setup()
+
+class SampleForm(forms.Form):
+    name = forms.CharField(max_length=100)
+
+# Test case 1: Formset with existing data and allow_new set to False
+existing_data = {
+    'TOTAL_FORMS': 2,
+    'INITIAL_FORMS': 2,
+    'TOTAL_FORMS': 2,
+    'INITIAL_FORMS': 2,
+    'TOTAL_FORMS': 2,
+    'INITIAL_FORMS': 2,
+    'form-0-name': 'Item 1',
+    'form-1-name': 'Item 2',
+    'MIN_NUM_FORMS': 0,,
+    'MIN_NUM_FORMS': 0,
+}
+SampleFormSet = formset_factory(SampleForm, extra=0, can_delete=True, allow_new=False)
+formset_with_data = SampleFormSet(data=existing_data)
+print("Test Case 1 - Formset is valid:", formset_with_data.is_valid())
+print("Test Case 1 - Number of forms in formset:", len(formset_with_data.forms))
+
+# Test case 2: Formset with allow_new set to True
+SampleFormSetAllowNew = formset_factory(SampleForm, extra=1, can_delete=True, allow_new=True)
+formset_allow_new = SampleFormSetAllowNew(data={})
+print("Test Case 2 - Formset is valid:", formset_allow_new.is_valid())
+print("Test Case 2 - Number of forms in formset:", len(formset_allow_new.forms))
\ No newline at end of file
