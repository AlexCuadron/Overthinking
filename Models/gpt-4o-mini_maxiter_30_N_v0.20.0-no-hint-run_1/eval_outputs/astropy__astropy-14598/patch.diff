diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py
index 1b3285ddce..349f7c19b2 100644
--- a/astropy/io/fits/card.py
+++ b/astropy/io/fits/card.py
@@ -64,7 +64,7 @@ class Card(_Verify):

     # Used in cards using the CONTINUE convention which expect a string
     # followed by an optional comment
-    _strg = r"\'(?P<strg>([ -~]+?|\'\'|) *?)\'(?=$|/| )"
+    _strg = r"\'(?P<strg>([ -~]+?|\'\'|) *?)\'(?=$|/| )|(?P<null>\'\')"
     _comm_field = r"(?P<comm_field>(?P<sepr>/ *)(?P<comm>(.|\n)*))"
     _strg_comment_RE = re.compile(f"({_strg})? *{_comm_field}?")

@@ -80,7 +80,7 @@ class Card(_Verify):
     # return a match if the comment separator is found, though the
     # comment maybe an empty string.
     # fmt: off
-    _value_FSC_RE = re.compile(
+    _value_FSC_RE = re.compile(r'(?P<valu_field> *\'(?P<valu>(?P<null>\'\'|[ -~]+?) *?)\'(?=$|/| )|(?P<bool>[FT])|(?P<numr>' + _numr_FSC + r')|(?P<cplx>\( *(?P<real>' + _numr_FSC + r') *, *(?P<imag>' + _numr_FSC + r') *\))?) *')
         r'(?P<valu_field> *'
             r'(?P<valu>'

@@ -113,7 +113,7 @@ class Card(_Verify):
     # fmt: on

     # fmt: off
-    _value_NFSC_RE = re.compile(
+    _value_NFSC_RE = re.compile(r'(?P<valu_field> *\'(?P<valu>(?P<null>\'\'|[ -~]+?) *?)\'(?=$|/| )|(?P<bool>[FT])|(?P<numr>' + _numr_NFSC + r')|(?P<cplx>\( *(?P<real>' + _numr_NFSC + r') *, *(?P<imag>' + _numr_NFSC + r') *\))?) *')r'(?P<valu_field> *\'(?P<valu>(?P<null>\'\'|[ -~]+?) *?)\'(?=$|/| )|(?P<bool>[FT])|(?P<numr>' + _numr_NFSC + r')|(?P<cplx>\( *(?P<real>' + _numr_NFSC + r') *, *(?P<imag>' + _numr_NFSC + r') *\))?) *')r'(?P<valu_field> *\'(?P<valu>(?P<null>\'\'|[ -~]+?) *?)\'(?=$|/| )|(?P<bool>[FT])|(?P<numr>' + _numr_NFSC + r')|(?P<cplx>\( *(?P<real>' + _numr_NFSC + r') *, *(?P<imag>' + _numr_NFSC + r') *\))?) *')r'(?P<valu_field> *\'(?P<valu>(?P<null>\'\'|[ -~]+?) *?)\'(?=$|/| )|(?P<bool>[FT])|(?P<numr>' + _numr_NFSC + r')|(?P<cplx>\( *(?P<real>' + _numr_NFSC + r') *, *(?P<imag>' + _numr_NFSC + r') *\))?) *')r'(?P<valu_field> *\'(?P<valu>(?P<null>\'\'|[ -~]+?) *?)\'(?=$|/| )|(?P<bool>[FT])|(?P<numr>' + _numr_NFSC + r')|(?P<cplx>\( *(?P<real>' + _numr_NFSC + r') *, *(?P<imag>' + _numr_NFSC + r') *\))?) *')r'(?P<valu_field> *\'(?P<valu>(?P<null>\'\'|[ -~]+?) *?)\'(?=$|/| )|(?P<bool>[FT])|(?P<numr>' + _numr_NFSC + r')|(?P<cplx>\( *(?P<real>' + _numr_NFSC + r') *, *(?P<imag>' + _numr_NFSC + r') *\))?) *')r'(?P<valu_field> *\'(?P<valu>(?P<null>\'\'|[ -~]+?) *?)\'(?=$|/| )|(?P<bool>[FT])|(?P<numr>' + _numr_NFSC + r')|(?P<cplx>\( *(?P<real>' + _numr_NFSC + r') *, *(?P<imag>' + _numr_NFSC + r') *\))?) *')r'(?P<valu_field> *\'(?P<valu>(?P<null>\'\'|[ -~]+?) *?)\'(?=$|/| )|(?P<bool>[FT])|(?P<numr>' + _numr_NFSC + r')|(?P<cplx>\( *(?P<real>' + _numr_NFSC + r') *, *(?P<imag>' + _numr_NFSC + r') *\))')? *)')
         r'(?P<valu_field> *'
             r'(?P<valu>'
                 rf'{_strg}|'
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..08aa485130
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,14 @@
+from astropy.io import fits
+
+for n in range(60, 70):
+    card1 = fits.Card('CONFIG', "x" * n + "''")
+    card2 = fits.Card.fromstring(str(card1))  # Should be the same as card1
+    print(n, card1.value == card2.value)
+    if card1.value != card2.value:
+        print(card1.value)
+        print(card2.value)
+
+for n in range(50, 70):
+    card1 = fits.Card('CONFIG', "x" * n + "''" + "x"*10)
+    card2 = fits.Card.fromstring(str(card1))
+    print(n, len(card1.value), card1.value == card2.value)
\ No newline at end of file
