diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..e4326e6244
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,5 @@
+from sympy import *
+from sympy.abc import n, k
+p = Product(n + 1 / 2**k, [k, 0, n-1]).doit()
+print(simplify(p))
+print(p.subs(n, 2))
\ No newline at end of file
diff --git a/sympy/concrete/products.py b/sympy/concrete/products.py
index 66aafde2d6..fab9c74ae3 100644
--- a/sympy/concrete/products.py
+++ b/sympy/concrete/products.py
@@ -1,4 +1,5 @@
 from __future__ import print_function, division
+from sympy.functions.special.gamma_functions import Pochhammer

 from sympy.tensor.indexed import Idx
 from sympy.core.mul import Mul
@@ -216,14 +217,14 @@ def doit(self, **hints):

             g = self._eval_product(f, (i, a, b))
             if g in (None, S.NaN):
-                return self.func(powsimp(f), *self.limits[index:])
+                return self.func(Pochhammer(f, n - a + 1), *self.limits[index:])
             else:
                 f = g

         if hints.get('deep', True):
-            return f.doit(**hints)
+            return Pochhammer(f, n - a + 1).doit(**hints)
         else:
-            return powsimp(f)
+            return Pochhammer(f, n - a + 1)

     def _eval_adjoint(self):
         if self.is_commutative:
