diff --git a/django/core/management/__init__.py b/django/core/management/__init__.py
index 4e30a28f33..a480935e8b 100644
--- a/django/core/management/__init__.py
+++ b/django/core/management/__init__.py
@@ -189,7 +189,7 @@ class ManagementUtility:
         self.argv = argv or sys.argv[:]
         self.prog_name = os.path.basename(self.argv[0])
         if self.prog_name == '__main__.py':
-            self.prog_name = 'python -m django'
+            self.prog_name = 'python -m pkg_other_than_django'
         self.settings_exception = None

     def main_help_text(self, commands_only=False):
diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py
index b8efb9f881..f3f754f0e5 100644
--- a/django/utils/autoreload.py
+++ b/django/utils/autoreload.py
@@ -221,9 +221,9 @@ def get_child_arguments():
     py_script = Path(sys.argv[0])

     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]
-    if py_script == django_main_path:
+    if py_script == django_main_path or py_script.name == '__main__.py':
         # The server was started with `python -m django runserver`.
-        args += ['-m', 'django']
+        args += ['-m', 'pkg_other_than_django']
         args += sys.argv[1:]
     elif not py_script.exists():
         # sys.argv[0] may not exist for several reasons on Windows.
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..f025c6a426
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,5 @@
+import sys
+
+if __name__ == '__main__':
+    print('Running script with python -m pkg_other_than_django')
+    sys.exit(1)
\ No newline at end of file
