diff --git a/reproduce_tensor_product_error.py b/reproduce_tensor_product_error.py
new file mode 100644
index 0000000000..d23a30a3f6
--- /dev/null
+++ b/reproduce_tensor_product_error.py
@@ -0,0 +1,18 @@
+from sympy import *
+from sympy.physics.quantum import TensorProduct as tp
+from sympy.physics.quantum import tensor_product_simp as tps
+from sympy.physics.paulialgebra import Pauli
+
+a = Symbol('a', commutative=False)
+
+t1 = tp(1,1)*tp(1,1)
+print(t1)
+print(tps(t1))
+print(t1.expand(tensorproduct=True))
+print(tps(tp(1,1)*tp(1,a)).subs(a, 1))
+
+t2 = tp(1,Pauli(3))*tp(1,Pauli(3))
+print(t2)
+print(tps(t2))
+print(t2.expand(tensorproduct=True))
+print(tps(tp(1,Pauli(3))*tp(1,a)).subs(a, Pauli(3)))
\ No newline at end of file
diff --git a/sympy/physics/quantum/tensorproduct.py b/sympy/physics/quantum/tensorproduct.py
index 9dd10d219e..d804d46af9 100644
--- a/sympy/physics/quantum/tensorproduct.py
+++ b/sympy/physics/quantum/tensorproduct.py
@@ -346,6 +346,18 @@ def tensor_product_simp_Mul(e):


 def tensor_product_simp(e, **hints):
+    if isinstance(e, TensorProduct):
+        return e.expand()
+    if isinstance(e, TensorProduct):
+        return e.expand()
+    if isinstance(e, TensorProduct):
+        return e.expand()
+    if isinstance(e, TensorProduct):
+        return e.expand()
+    if isinstance(e, TensorProduct):
+        return e.expand()
+    if isinstance(e, TensorProduct):
+        return e.expand()
     """Try to simplify and combine TensorProducts.

     In general this will try to pull expressions inside of ``TensorProducts``.
