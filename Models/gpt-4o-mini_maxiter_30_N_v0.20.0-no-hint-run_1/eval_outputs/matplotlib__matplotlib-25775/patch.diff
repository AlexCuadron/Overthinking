diff --git a/src/ft2font.h b/src/ft2font.h
index d566c3f9bd..c82c76bb90 100644
--- a/src/ft2font.h
+++ b/src/ft2font.h
@@ -100,7 +100,7 @@ class FT2Font
     // TODO: Since we know the size of the array upfront, we probably don't
     // need to dynamically allocate like this
     void get_xys(bool antialiased, std::vector<double> &xys);
-    void draw_glyphs_to_bitmap(bool antialiased);
+    void set_antialiased(bool antialiased);\n    bool get_antialiased() const;\n    void draw_glyphs_to_bitmap(bool antialiased);
     void draw_glyph_to_bitmap(FT2Image &im, int x, int y, size_t glyphInd, bool antialiased);
     void get_glyph_name(unsigned int glyph_number, char *buffer, bool fallback);
     long get_name_index(char *name);
@@ -153,6 +153,7 @@ class FT2Font

     // prevent copying
     FT2Font(const FT2Font &);
+    bool antialiased;
     FT2Font &operator=(const FT2Font &);
 };

diff --git a/src/test_set_antialiased.py b/src/test_set_antialiased.py
new file mode 100644
index 0000000000..701ed03e7c
--- /dev/null
+++ b/src/test_set_antialiased.py
@@ -0,0 +1,20 @@
+import matplotlib.pyplot as plt
+import numpy as np
+
+# Create a figure and axis
+fig, ax = plt.subplots()
+
+# Create text with antialiasing
+text = ax.text(0.5, 0.5, 'Hello World', fontsize=20, ha='center', va='center')
+
+# Set antialiasing to False
+text.set_antialiased(False)
+
+# Draw the figure
+plt.draw()
+
+# Check the antialiasing state
+print('Antialiased:', text.get_antialiased())
+
+# Show the plot
+plt.show()
\ No newline at end of file
