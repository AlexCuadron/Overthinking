diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py
index 57042a8690..f56bf942cc 100644
--- a/django/db/migrations/executor.py
+++ b/django/db/migrations/executor.py
@@ -255,7 +255,11 @@ class MigrationExecutor:
             for app_label, name in migration.replaces:
                 self.recorder.record_unapplied(app_label, name)
         else:
-            self.recorder.record_unapplied(migration.app_label, migration.name)
+            if migration.replaces:
+    for app_label, name in migration.replaces:
+        self.recorder.record_unapplied(app_label, name)
+else:
+    self.recorder.record_unapplied(migration.app_label, migration.name)
         # Report progress
         if self.progress_callback:
             self.progress_callback("unapply_success", migration, fake)
diff --git a/django/db/migrations/loader.py b/django/db/migrations/loader.py
index eb370164f3..c5029f14c9 100644
--- a/django/db/migrations/loader.py
+++ b/django/db/migrations/loader.py
@@ -218,6 +218,7 @@ class MigrationLoader:
         else:
             recorder = MigrationRecorder(self.connection)
             self.applied_migrations = recorder.applied_migrations()
+        self.check_replacements()
         # To start, populate the migration graph with nodes for ALL migrations
         # and their dependencies. Also make note of replacing migrations at this step.
         self.graph = MigrationGraph()
diff --git a/scripts/reproduce_migration_issue.py b/scripts/reproduce_migration_issue.py
new file mode 100644
index 0000000000..2b0b83416a
--- /dev/null
+++ b/scripts/reproduce_migration_issue.py
@@ -0,0 +1,17 @@
+import django
+from django.db import migrations
+
+def run_migration():
+    # Create a migration that squashes another migration
+    class Migration(migrations.Migration):
+        dependencies = [
+            ('app_name', '0001_initial'),
+        ]
+        operations = [
+            migrations.RunPython(lambda apps, schema_editor: None),
+        ]
+
+    return Migration
+
+if __name__ == '__main__':
+    run_migration()
\ No newline at end of file
