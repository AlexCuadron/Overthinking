2025-01-23 08:27:24,488 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_i01l9gor7xjgdfon_1nhip1b65cn5t1ze
2025-01-23 08:27:24,497 - INFO - [runtime 8632ab96-ac58-4757-84ed-f21043660479-8a4f5d75f298d993] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_i01l9gor7xjgdfon_1nhip1b65cn5t1ze
2025-01-23 08:27:26,434 - INFO - [runtime 8632ab96-ac58-4757-84ed-f21043660479-8a4f5d75f298d993] Container started: openhands-runtime-8632ab96-ac58-4757-84ed-f21043660479-8a4f5d75f298d993. VSCode URL: None
2025-01-23 08:27:26,434 - INFO - [runtime 8632ab96-ac58-4757-84ed-f21043660479-8a4f5d75f298d993] Waiting for client to become ready at http://localhost:34948...
2025-01-23 08:28:02,557 - INFO - [runtime 8632ab96-ac58-4757-84ed-f21043660479-8a4f5d75f298d993] Runtime is ready.
2025-01-23 08:28:03,203 - INFO - ------------------------------
2025-01-23 08:28:03,204 - INFO - BEGIN Runtime Initialization Fn
2025-01-23 08:28:03,204 - INFO - ------------------------------
2025-01-23 08:28:03,204 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sphinx-doc__sphinx-8638' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-23 08:28:03,834 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:28:03,835 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-23 08:28:04,464 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:28:04,465 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-23 08:28:05,098 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:28:05,113 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-23 08:28:05,743 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=sphinx-doc__sphinx-8638
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:28:05,744 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-23 08:28:06,371 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:28:06,371 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-23 08:28:08,510 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sphinx-doc__sphinx__4.0
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:28:08,510 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sphinx-doc__sphinx__4.0
2025-01-23 08:28:09,141 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:28:09,142 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-23 08:28:09,768 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 4b452338f Merge branch '3.x'
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:28:09,768 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-23 08:28:10,396 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:28:10,396 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-23 08:28:11,026 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:28:11,026 - INFO - ------------------------------
2025-01-23 08:28:11,026 - INFO - END Runtime Initialization Fn
2025-01-23 08:28:11,026 - INFO - ------------------------------
2025-01-23 08:28:11,033 - INFO - [runtime 8632ab96-ac58-4757-84ed-f21043660479-8a4f5d75f298d993] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-01-23 08:28:11,052 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-23 08:28:11,053 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-23 08:28:12,848 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-23 08:28:17,872 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-23 08:28:22,925 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-23 08:28:57,621 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-23 08:29:28,743 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-23 08:30:00,312 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-23 08:30:02,633 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-23 08:30:07,996 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-23 08:30:09,619 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-23 08:30:26,123 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-23 08:30:28,902 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-23 08:30:34,508 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-23 08:30:40,996 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-23 08:31:17,300 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-23 08:31:49,534 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-23 08:32:21,079 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-23 08:32:22,749 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-23 08:32:30,310 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-23 08:33:07,083 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-23 08:33:38,444 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-23 08:34:10,304 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-23 08:34:12,178 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-23 08:34:17,618 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-23 08:34:23,031 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-23 08:34:28,564 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-23 08:34:33,832 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-23 08:34:35,296 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-23 08:34:36,806 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-23 08:34:38,953 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-23 08:34:46,641 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-23 08:34:46,641 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-23 08:34:46,642 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-23 08:34:46,643 - WARNING - Stopping agent due to traffic control
2025-01-23 08:34:46,643 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-23 08:34:47,443 - INFO - ------------------------------
2025-01-23 08:34:47,444 - INFO - BEGIN Runtime Completion Fn
2025-01-23 08:34:47,444 - INFO - ------------------------------
2025-01-23 08:34:47,444 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sphinx-doc__sphinx__4.0
2025-01-23 08:34:48,070 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:34:48,070 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-23 08:34:48,696 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:34:48,696 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-23 08:34:49,323 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
warning: adding embedded git repository: sphinx-issue-examples
hint: You've added another git repository inside your current repository.
hint: Clones of the outer repository will not contain the contents of
hint: the embedded repository and will not know how to obtain it.
hint: If you meant to add a submodule, use:
hint:
hint:   git submodule add <url> sphinx-issue-examples
hint:
hint: If you added this path by mistake, you can remove it from the
hint: index with:
hint:
hint:   git rm --cached sphinx-issue-examples
hint:
hint: See "git help submodule" for more information.
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:34:49,324 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 4b452338f914d4f6b54704222d70ae8a746e3db5
2025-01-23 08:34:49,950 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16e6e60a6c75",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 000000000..b18078739
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,15 @@
+import os
+import subprocess
+
+def reproduce_error():
+    # Clone the repository
+    subprocess.run(['git', 'clone', 'https://github.com/13steinj/sphinx-issue-examples/'])
+    os.chdir('sphinx-issue-examples')
+    subprocess.run(['git', 'checkout', 'referenced_variables'])
+    os.chdir('docs')
+    subprocess.run(['make', 'html'])
+    os.chdir('_build/html')
+    subprocess.run(['python', '-m', 'SimpleHTTPServer', '8008'])
+
+if __name__ == '__main__':
+    reproduce_error()
\ No newline at end of file
diff --git a/sphinx-issue-examples b/sphinx-issue-examples
new file mode 160000
index 000000000..514cb558e
--- /dev/null
+++ b/sphinx-issue-examples
@@ -0,0 +1 @@
+Subproject commit 514cb558efd471f532cacffaf2eb7edffe11babe
diff --git a/sphinx/ext/autodoc/directive.py b/sphinx/ext/autodoc/directive.py
index c134258d0..99cc7b9ab 100644
--- a/sphinx/ext/autodoc/directive.py
+++ b/sphinx/ext/autodoc/directive.py
@@ -126,6 +126,13 @@ class AutodocDirective(SphinxDirective):

         # generate the output
         params = DocumenterBridge(self.env, reporter, documenter_options, lineno, self.state)
+        # Ensure instance variables are not linked to global variables
+        for name in params.result:
+            if name in self.env.app.registry.documenters:
+                if name not in self.env.app.registry.documenters:
+                    # This means it's a global variable, so we skip it
+                    continue
+                pass
         documenter = doccls(params, self.arguments[0])
         documenter.generate(more_content=self.content)
         if not params.result:
diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py
index 097dc6d07..ff6f13c25 100644
--- a/sphinx/ext/autodoc/importer.py
+++ b/sphinx/ext/autodoc/importer.py
@@ -173,6 +173,47 @@ class Attribute(NamedTuple):

 def get_object_members(subject: Any, objpath: List[str], attrgetter: Callable,
                        analyzer: ModuleAnalyzer = None) -> Dict[str, Attribute]:
+    instance_vars = set(dir(subject))  # Track instance variable names
+
+    # the members directly defined in the class
+    obj_dict = attrgetter(subject, '__dict__', {})
+
+    members = {}  # type: Dict[str, Attribute]
+
+    # enum members
+    if isenumclass(subject):
+        for name, value in subject.__members__.items():
+            if name not in members:
+                members[name] = Attribute(name, True, value)
+
+        superclass = subject.__mro__[1]
+        for name in obj_dict:
+            if name not in superclass.__dict__:
+                value = safe_getattr(subject, name)
+                members[name] = Attribute(name, True, value)
+
+    # members in __slots__
+    try:
+        __slots__ = getslots(subject)
+        if __slots__:
+            from sphinx.ext.autodoc import SLOTSATTR
+
+            for name in __slots__:
+                members[name] = Attribute(name, True, SLOTSATTR)
+    except (AttributeError, TypeError, ValueError):
+        pass
+
+    # other members
+    for name in dir(subject):
+        try:
+            value = attrgetter(subject, name)
+            directly_defined = name in obj_dict
+            name = unmangle(subject, name)
+            if name and name not in members:
+                if name in instance_vars:
+                    members[name] = Attribute(name, directly_defined, value)
+        except AttributeError:
+            continue
     """Get members and attributes of target object."""
     from sphinx.ext.autodoc import INSTANCEATTR
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-23 08:34:49,951 - INFO - ------------------------------
2025-01-23 08:34:49,951 - INFO - END Runtime Completion Fn
2025-01-23 08:34:49,951 - INFO - ------------------------------
2025-01-23 08:34:49,951 - INFO - Got git diff for instance sphinx-doc__sphinx-8638:
--------
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 000000000..b18078739
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,15 @@
+import os
+import subprocess
+
+def reproduce_error():
+    # Clone the repository
+    subprocess.run(['git', 'clone', 'https://github.com/13steinj/sphinx-issue-examples/'])
+    os.chdir('sphinx-issue-examples')
+    subprocess.run(['git', 'checkout', 'referenced_variables'])
+    os.chdir('docs')
+    subprocess.run(['make', 'html'])
+    os.chdir('_build/html')
+    subprocess.run(['python', '-m', 'SimpleHTTPServer', '8008'])
+
+if __name__ == '__main__':
+    reproduce_error()
\ No newline at end of file
diff --git a/sphinx-issue-examples b/sphinx-issue-examples
new file mode 160000
index 000000000..514cb558e
--- /dev/null
+++ b/sphinx-issue-examples
@@ -0,0 +1 @@
+Subproject commit 514cb558efd471f532cacffaf2eb7edffe11babe
diff --git a/sphinx/ext/autodoc/directive.py b/sphinx/ext/autodoc/directive.py
index c134258d0..99cc7b9ab 100644
--- a/sphinx/ext/autodoc/directive.py
+++ b/sphinx/ext/autodoc/directive.py
@@ -126,6 +126,13 @@ class AutodocDirective(SphinxDirective):

         # generate the output
         params = DocumenterBridge(self.env, reporter, documenter_options, lineno, self.state)
+        # Ensure instance variables are not linked to global variables
+        for name in params.result:
+            if name in self.env.app.registry.documenters:
+                if name not in self.env.app.registry.documenters:
+                    # This means it's a global variable, so we skip it
+                    continue
+                pass
         documenter = doccls(params, self.arguments[0])
         documenter.generate(more_content=self.content)
         if not params.result:
diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py
index 097dc6d07..ff6f13c25 100644
--- a/sphinx/ext/autodoc/importer.py
+++ b/sphinx/ext/autodoc/importer.py
@@ -173,6 +173,47 @@ class Attribute(NamedTuple):

 def get_object_members(subject: Any, objpath: List[str], attrgetter: Callable,
                        analyzer: ModuleAnalyzer = None) -> Dict[str, Attribute]:
+    instance_vars = set(dir(subject))  # Track instance variable names
+
+    # the members directly defined in the class
+    obj_dict = attrgetter(subject, '__dict__', {})
+
+    members = {}  # type: Dict[str, Attribute]
+
+    # enum members
+    if isenumclass(subject):
+        for name, value in subject.__members__.items():
+            if name not in members:
+                members[name] = Attribute(name, True, value)
+
+        superclass = subject.__mro__[1]
+        for name in obj_dict:
+            if name not in superclass.__dict__:
+                value = safe_getattr(subject, name)
+                members[name] = Attribute(name, True, value)
+
+    # members in __slots__
+    try:
+        __slots__ = getslots(subject)
+        if __slots__:
+            from sphinx.ext.autodoc import SLOTSATTR
+
+            for name in __slots__:
+                members[name] = Attribute(name, True, SLOTSATTR)
+    except (AttributeError, TypeError, ValueError):
+        pass
+
+    # other members
+    for name in dir(subject):
+        try:
+            value = attrgetter(subject, name)
+            directly_defined = name in obj_dict
+            name = unmangle(subject, name)
+            if name and name not in members:
+                if name in instance_vars:
+                    members[name] = Attribute(name, directly_defined, value)
+        except AttributeError:
+            continue
     """Get members and attributes of target object."""
     from sphinx.ext.autodoc import INSTANCEATTR
--------
