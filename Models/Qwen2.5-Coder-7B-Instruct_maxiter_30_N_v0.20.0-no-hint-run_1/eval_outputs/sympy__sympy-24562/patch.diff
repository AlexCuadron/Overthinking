diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..a42ba11da2
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,10 @@
+from sympy import Rational
+
+def reproduce_error():
+    value1 = Rational('0.5', '100')
+    value2 = Rational(0.5, 100)
+    print(f"Rational('0.5', '100'): {value1}")
+    print(f"Rational(0.5, 100): {value2}")
+
+if __name__ == '__main__':
+    reproduce_error()
\ No newline at end of file
diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py
index 52f7ea45ad..14be3547be 100644
--- a/sympy/core/numbers.py
+++ b/sympy/core/numbers.py
@@ -202,7 +202,7 @@ def _as_integer_ratio(p):
     return int(p), int(q)


-def _decimal_to_Rational_prec(dec):
+def _decimal_to_Rational_prec(dec):\n    """Convert an ordinary decimal instance to a Rational."""\n    if isinstance(dec, str):\n        dec = float(dec)\n    s, d, e = dec.as_tuple()\n    prec = len(d)\n    if e >= 0:  # it's an integer\n        rv = Integer(int(dec))\n    else:\n        s = (-1)**s\n        d = sum([di*10**i for i, di in enumerate(reversed(d))])\n        rv = Rational(s*d, 10**-e)\n    return rv, prec\n    """Convert an ordinary decimal instance to a Rational."""\n    if isinstance(dec, str):\n        dec = float(dec)\n    s, d, e = dec.as_tuple()\n    prec = len(d)\n    if e >= 0:  # it's an integer\n        rv = Integer(int(dec))\n    else:\n        s = (-1)**s\n        d = sum([di*10**i for i, di in enumerate(reversed(d))])\n        rv = Rational(s*d, 10**-e)\n    return rv, prec\n    """Convert an ordinary decimal instance to a Rational."""\n    if isinstance(dec, str):\n        dec = float(dec)\n    s, d, e = dec.as_tuple()\n    prec = len(d)\n    if e >= 0:  # it's an integer\n        rv = Integer(int(dec))\n    else:\n        s = (-1)**s\n        d = sum([di*10**i for i, di in enumerate(reversed(d))])\n        rv = Rational(s*d, 10**-e)\n    return rv, prec\n    """Convert an ordinary decimal instance to a Rational."""\n    if isinstance(dec, str):\n        dec = float(dec)\n    s, d, e = dec.as_tuple()\n    prec = len(d)\n    if e >= 0:  # it's an integer\n        rv = Integer(int(dec))\n    else:\n        s = (-1)**s\n        d = sum([di*10**i for i, di in enumerate(reversed(d))])\n        rv = Rational(s*d, 10**-e)\n    return rv, prec\n    """Convert an ordinary decimal instance to a Rational."""\n    if isinstance(dec, str):\n        dec = float(dec)\n    s, d, e = dec.as_tuple()\n    prec = len(d)\n    if e >= 0:  # it's an integer\n        rv = Integer(int(dec))\n    else:\n        s = (-1)**s\n        d = sum([di*10**i for i, di in enumerate(reversed(d))])\n        rv = Rational(s*d, 10**-e)\n    return rv, prec\n    """Convert an ordinary decimal instance to a Rational."""\n    if isinstance(dec, str):\n        dec = float(dec)\n    s, d, e = dec.as_tuple()\n    prec = len(d)\n    if e >= 0:  # it's an integer\n        rv = Integer(int(dec))\n    else:\n        s = (-1)**s\n        d = sum([di*10**i for i, di in enumerate(reversed(d))])\n        rv = Rational(s*d, 10**-e)\n    return rv, prec\n    """Convert an ordinary decimal instance to a Rational."""\n    if isinstance(dec, str):\n        dec = float(dec)\n    s, d, e = dec.as_tuple()\n    prec = len(d)\n    if e >= 0:  # it's an integer\n        rv = Integer(int(dec))\n    else:\n        s = (-1)**s\n        d = sum([di*10**i for i, di in enumerate(reversed(d))])\n        rv = Rational(s*d, 10**-e)\n    return rv, prec\n    """Convert an ordinary decimal instance to a Rational."""\n    if isinstance(dec, str):\n        dec = float(dec)\n    s, d, e = dec.as_tuple()\n    prec = len(d)\n    if e >= 0:  # it's an integer\n        rv = Integer(int(dec))\n    else:\n        s = (-1)**s\n        d = sum([di*10**i for i, di in enumerate(reversed(d))])\n        rv = Rational(s*d, 10**-e)\n    return rv, prec\n    """Convert an ordinary decimal instance to a Rational."""\n    if isinstance(dec, str):\n        dec = float(dec)\n    s, d, e = dec.as_tuple()\n    prec = len(d)\n    if e >= 0:  # it's an integer\n        rv = Integer(int(dec))\n    else:\n        s = (-1)**s\n        d = sum([di*10**i for i, di in enumerate(reversed(d))])\n        rv = Rational(s*d, 10**-e)\n    return rv, prec\n    """Convert an ordinary decimal instance to a Rational."""\n    if isinstance(dec, str):\n        dec = float(dec)\n    s, d, e = dec.as_tuple()\n    prec = len(d)\n    if e >= 0:  # it's an integer\n        rv = Integer(int(dec))\n    else:\n        s = (-1)**s\n        d = sum([di*10**i for i, di in enumerate(reversed(d))])\n        rv = Rational(s*d, 10**-e)\n    return rv, prec\n    """Convert an ordinary decimal instance to a Rational."""\n    if isinstance(dec, str):\n        dec = float(dec)\n    s, d, e = dec.as_tuple()\n    prec = len(d)\n    if e >= 0:  # it's an integer\n        rv = Integer(int(dec))\n    else:\n        s = (-1)**s\n        d = sum([di*10**i for i, di in enumerate(reversed(d))])\n        rv = Rational(s*d, 10**-e)\n    return rv, prec
     """Convert an ordinary decimal instance to a Rational."""
     if not dec.is_finite():
         raise TypeError("dec must be finite, got %s." % dec)
