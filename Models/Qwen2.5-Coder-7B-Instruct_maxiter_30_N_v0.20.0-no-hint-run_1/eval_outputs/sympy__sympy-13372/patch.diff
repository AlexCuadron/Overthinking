diff --git a/reproduce_error.log b/reproduce_error.log
new file mode 100644
index 0000000000..e199922d12
--- /dev/null
+++ b/reproduce_error.log
@@ -0,0 +1,7 @@
+/workspace/sympy__sympy__1.1/sympy/core/basic.py:3: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
+  from collections import Mapping, defaultdict
+/workspace/sympy__sympy__1.1/sympy/core/containers.py:271: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
+  class OrderedSet(collections.MutableSet):
+/workspace/sympy__sympy__1.1/sympy/plotting/plot.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
+  from collections import Callable
+0
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..1bfb437d50
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,7 @@
+from sympy import Mul, Max
+
+x = 1
+y = -1
+
+result = Mul(x, Max(0, y), evaluate=False).evalf()
+print(result)
\ No newline at end of file
diff --git a/sympy/core/basic.py b/sympy/core/basic.py
index 2ad720d35a..fac152cfc9 100644
--- a/sympy/core/basic.py
+++ b/sympy/core/basic.py
@@ -1,6 +1,6 @@
 """Base class for all the objects in SymPy"""
 from __future__ import print_function, division
-from collections import Mapping, defaultdict
+from collections.abc import Mapping, defaultdict
 from itertools import chain

 from .assumptions import BasicMeta, ManagedProperties
diff --git a/sympy/solvers/diophantine.py b/sympy/solvers/diophantine.py
index 1038790b28..9da7780b8c 100644
--- a/sympy/solvers/diophantine.py
+++ b/sympy/solvers/diophantine.py
@@ -3185,7 +3185,7 @@ def power_representation(n, p, k, zeros=False):
             '''Todd G. Will, "When Is n^2 a Sum of k Squares?", [online].
                 Available: https://www.maa.org/sites/default/files/Will-MMz-201037918.pdf'''
             return
-        if feasible is 1:  # it's prime and k == 2
+        if feasible == 1:  # it's prime and k == 2
             yield prime_as_sum_of_two_squares(n)
             return
