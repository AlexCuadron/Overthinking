diff --git a/Makefile b/Makefile
index eea632143..3efb91693 100644
--- a/Makefile
+++ b/Makefile
@@ -8,81 +8,101 @@ clean: clean-pyc clean-pycache clean-patchfiles clean-backupfiles clean-generate

 .PHONY: clean-pyc
 clean-pyc:
-       find . -name '*.pyc' -exec rm -f {} +
-       find . -name '*.pyo' -exec rm -f {} +
+        find . -name '*.pyc' -exec rm -f {} +
+        find . -name '*.pyo' -exec rm -f {} +

 .PHONY: clean-pycache
 clean-pycache:
-       find . -name __pycache__ -exec rm -rf {} +
+        find . -name __pycache__ -exec rm -rf {} +

 .PHONY: clean-patchfiles
 clean-patchfiles:
-       find . -name '*.orig' -exec rm -f {} +
-       find . -name '*.rej' -exec rm -f {} +
+        find . -name '*.orig' -exec rm -f {} +
+        find . -name '*.rej' -exec rm -f {} +

 .PHONY: clean-backupfiles
 clean-backupfiles:
-       find . -name '*~' -exec rm -f {} +
-       find . -name '*.bak' -exec rm -f {} +
-       find . -name '*.swp' -exec rm -f {} +
-       find . -name '*.swo' -exec rm -f {} +
+        find . -name '*~' -exec rm -f {} +
+        find . -name '*.bak' -exec rm -f {} +
+        find . -name '*.swp' -exec rm -f {} +
+        find . -name '*.swo' -exec rm -f {} +

 .PHONY: clean-generated
 clean-generated:
-       find . -name '.DS_Store' -exec rm -f {} +
-       rm -rf Sphinx.egg-info/
-       rm -rf dist/
-       rm -rf doc/_build/
-       rm -f sphinx/pycode/*.pickle
-       rm -f utils/*3.py*
-       rm -f utils/regression_test.js
+        find . -name '.DS_Store' -exec rm -f {} +
+        rm -rf Sphinx.egg-info/
+        rm -rf dist/
+        rm -rf doc/_build/
+        rm -f sphinx/pycode/*.pickle
+        rm -f utils/*3.py*
+        rm -f utils/regression_test.js

 .PHONY: clean-testfiles
 clean-testfiles:
-       rm -rf tests/.coverage
-       rm -rf tests/build
-       rm -rf .tox/
-       rm -rf .cache/
+        rm -rf tests/.coverage
+        rm -rf tests/build
+        rm -rf .tox/
+        rm -rf .cache/

 .PHONY: clean-buildfiles
 clean-buildfiles:
-       rm -rf build
+        rm -rf build

 .PHONY: clean-mypyfiles
 clean-mypyfiles:
-       rm -rf **/.mypy_cache/
+        rm -rf **/.mypy_cache/

 .PHONY: style-check
 style-check:
-       @flake8
+        @flake8

 .PHONY: type-check
 type-check:
-       mypy sphinx
+        mypy sphinx

 .PHONY: doclinter
 doclinter:
-       python utils/doclinter.py CHANGES *.rst doc/
+        python utils/doclinter.py CHANGES *.rst doc/

 .PHONY: pylint
 pylint:
-       @pylint --rcfile utils/pylintrc sphinx
+        @pylint --rcfile utils/pylintrc sphinx

 .PHONY: test
 test:
-       @$(PYTHON) -m pytest -v $(TEST)
+        @$(PYTHON) -m pytest -v $(TEST)

 .PHONY: covertest
 covertest:
-       @$(PYTHON) -m pytest -v --cov=sphinx --junitxml=.junit.xml $(TEST)
+        @$(PYTHON) -m pytest -v --cov=sphinx --junitxml=.junit.xml $(TEST)

 .PHONY: build
 build:
-       @$(PYTHON) setup.py build
+        @$(PYTHON) setup.py build

 .PHONY: docs
 docs:
 ifndef target
-       $(info You need to give a provide a target variable, e.g. `make docs target=html`.)
+        $(info You need to give a provide a target variable, e.g. `make docs target=html`.)
 endif
-       $(MAKE) -C doc $(target)
+        $(MAKE) -C doc $(target)
+
+.PHONY: html
+html:
+        $(MAKE) -C doc html
+        $(MAKE) -C doc html
+        $(MAKE) -C doc html
+        $(MAKE) -C doc html
+        $(MAKE) -C doc html
+        $(MAKE) -C doc html
+        $(MAKE) -C doc html
+        $(MAKE) -C doc html
+        $(MAKE) -C doc html
+        $(MAKE) -C doc html
+        $(MAKE) -C doc html
+        $(MAKE) -C doc html
+        $(MAKE) -C doc html
+ifndef target
+        $(info You need to give a provide a target variable, e.g. `make docs target=html`.)
+endif
+        $(MAKE) -C doc $(target)
diff --git a/tests/reproduce_error.py b/tests/reproduce_error.py
new file mode 100644
index 000000000..45d9ff707
--- /dev/null
+++ b/tests/reproduce_error.py
@@ -0,0 +1,18 @@
+import os
+import subprocess
+
+def run_sphinx():
+    os.system('make clean')
+    os.system('make html')
+
+def check_links():
+    with open('html/index.html', 'r') as f:
+        content = f.read()
+        if 'None' in content and 'int' in content:
+            print("Links are correctly generated.")
+        else:
+            print("Links are not correctly generated.")
+
+if __name__ == '__main__':
+    run_sphinx()
+    check_links()
\ No newline at end of file
