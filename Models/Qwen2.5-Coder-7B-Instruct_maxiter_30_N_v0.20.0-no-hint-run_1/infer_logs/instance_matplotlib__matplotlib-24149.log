2025-01-25 20:58:09,543 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_810kmmpbvqr91wbm_1nhip1b65cn5t1ze
2025-01-25 20:58:09,547 - INFO - [runtime 5ad61605-31a1-478e-a2cd-091435250cf6-d5b74ccbc4b44368] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_810kmmpbvqr91wbm_1nhip1b65cn5t1ze
2025-01-25 20:58:11,826 - INFO - [runtime 5ad61605-31a1-478e-a2cd-091435250cf6-d5b74ccbc4b44368] Container started: openhands-runtime-5ad61605-31a1-478e-a2cd-091435250cf6-d5b74ccbc4b44368. VSCode URL: None
2025-01-25 20:58:11,826 - INFO - [runtime 5ad61605-31a1-478e-a2cd-091435250cf6-d5b74ccbc4b44368] Waiting for client to become ready at http://localhost:31679...
2025-01-25 20:58:45,932 - INFO - [runtime 5ad61605-31a1-478e-a2cd-091435250cf6-d5b74ccbc4b44368] Runtime is ready.
2025-01-25 20:58:46,574 - INFO - ------------------------------
2025-01-25 20:58:46,574 - INFO - BEGIN Runtime Initialization Fn
2025-01-25 20:58:46,574 - INFO - ------------------------------
2025-01-25 20:58:46,574 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=matplotlib__matplotlib-24149' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-25 20:58:47,202 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "368b4f3e5e5f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 20:58:47,202 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-25 20:58:47,830 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "368b4f3e5e5f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 20:58:47,831 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-25 20:58:48,458 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "368b4f3e5e5f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 20:58:48,469 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-25 20:58:49,102 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "368b4f3e5e5f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=matplotlib__matplotlib-24149
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 20:58:49,102 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-25 20:58:49,741 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "368b4f3e5e5f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 20:58:49,742 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-25 20:58:55,412 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "368b4f3e5e5f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: matplotlib__matplotlib__3.6
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 20:58:55,412 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/matplotlib__matplotlib__3.6
2025-01-25 20:58:56,042 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "368b4f3e5e5f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 20:58:56,042 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-25 20:58:57,176 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "368b4f3e5e5f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at af39f1edff Merge pull request #24102 from ianthomas23/simple_pyproject
[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 20:58:57,176 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-25 20:58:57,808 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "368b4f3e5e5f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 20:58:57,808 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-25 20:58:58,438 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "368b4f3e5e5f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 20:58:58,439 - INFO - ------------------------------
2025-01-25 20:58:58,439 - INFO - END Runtime Initialization Fn
2025-01-25 20:58:58,439 - INFO - ------------------------------
2025-01-25 20:58:58,441 - INFO - Function calling not enabled for model hosted_vllm/Qwen/Qwen2.5-Coder-7B-Instruct. Mocking function calling via prompting.
2025-01-25 20:58:58,445 - INFO - [runtime 5ad61605-31a1-478e-a2cd-091435250cf6-d5b74ccbc4b44368] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-01-25 20:58:58,463 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-25 20:58:58,463 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-25 20:59:03,718 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-25 21:04:08,745 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-25 21:04:15,233 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-25 21:04:23,756 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-25 21:04:37,409 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-25 21:04:50,071 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-25 21:05:03,854 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-25 21:05:18,363 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-25 21:05:33,678 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-25 21:05:51,110 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-25 21:06:11,501 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-25 21:06:30,520 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-25 21:06:50,098 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-25 21:07:10,253 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-25 21:07:28,541 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-25 21:07:48,955 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-25 21:08:09,206 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-25 21:08:31,740 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-25 21:08:57,412 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-25 21:09:23,656 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-25 21:09:51,277 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-25 21:10:23,051 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-25 21:10:53,603 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-25 21:11:18,636 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-25 21:11:44,872 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-25 21:12:17,905 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-25 21:12:54,352 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-25 21:13:27,859 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-25 21:14:02,048 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-25 21:14:39,870 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-25 21:14:39,870 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-25 21:14:39,871 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-25 21:14:39,871 - WARNING - Stopping agent due to traffic control
2025-01-25 21:14:39,872 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-25 21:14:40,387 - INFO - ------------------------------
2025-01-25 21:14:40,387 - INFO - BEGIN Runtime Completion Fn
2025-01-25 21:14:40,387 - INFO - ------------------------------
2025-01-25 21:14:40,387 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/matplotlib__matplotlib__3.6
2025-01-25 21:14:40,526 - INFO - **CmdOutputObservation (source=None, exit code=1, metadata={
  "exit_code": 1,
  "pid": -1,
  "username": "root",
  "hostname": "368b4f3e5e5f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 1.]"
})**
--BEGIN AGENT OBSERVATION--

test_doc.py
test_dviread.py
test_figure.py .s......s..s.....s..s.....................................ss.....................................................                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 [ 25%]
test_font_manager.py .........s.s...s
test_fontconfig_pattern.py
test_ft2font.py ..s.s.s.sss.s
test_getattr.py ...................................................ssss...........................................................................................................                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               [ 27%]
test_gridspec.py
test_image.py ..s..s.............s................s........s..s..s.....s.s...s..s..s..s..............s..s.....s....s.............................s.........s
test_legend.py ...s..s..s..s.......s..s..s..s..s................................................................................s
test_lines.py .....s..........s....s...s.......s...s
test_marker.py ...........................s...s..s
test_mathtext.py ......................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s.....sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 41%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss...........................sssssssss...................................................sssssssss...................................................sssssssss...................................................sssssssss...................................................sssssssss.......................................................................                                                                                                                                                                                                                                                                                                                                                                                      [ 48%]
test_matplotlib.py ....s
test_mlab.py


test_offsetbox.py ..s
test_patches.py ........s..s..s...s.....s...s..........ss...............s.s...s
test_path.py ..............s.......s
test_patheffects.py ..s..s..s.....s
test_pickle.py
test_png.py
test_polar.py ..s..s....s..s..s..s..s..s....s..s..s
test_preprocess_data.py .................                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        [ 82%]
test_pyplot.py
test_quiver.py
test_rcparams.py ..FF..........................................................................................................................................................................................................s
test_sankey.py
test_scale.py ..s
test_simplification.py ..s..s..s..............s..s..s..s..s....s..s..s
test_skew.py ..s..s
test_sphinxext.py ..                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             [ 86%]
test_spines.py ...s..s...s.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      [ 86%]
test_streamplot.py .F.s..s..s
test_style.py .................                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  [ 87%]
test_subplots.py ......s
test_table.py
test_testing.py x..xxx..s                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        [ 87%]
test_texmanager.py
test_text.py ..s..s..s............s..s...........................s.................ss
test_textpath.py .                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               [ 89%]
test_ticker.py
test_tightlayout.py ..s..s..s..s..s..s..s..s..s...s
test_transforms.py ....s.......................................                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  [ 95%]
test_triangulation.py ...............................................s.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          [ 95%]
test_ttconv.py
test_type1font.py
test_units.py
test_usetex.py ....s..s......s
test_widgets.py .F.F..............................................................s...........................s
test_axes_grid1.py
test_axisartist_angle_helper.py
test_axisartist_axis_artist.py
test_axisartist_axislines.py
test_axisartist_clip_path.py
test_axisartist_floating_axes.py
test_axisartist_grid_finder.py
test_axisartist_grid_helper_curvelinear.py
test_mplot3d.py


________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_form_main_list ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f779650>

    def test_form_main_list(self):
>       assert isinstance(self.std_results, list)
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'

/testbed/lib/matplotlib/tests/test_cbook.py:105: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_form_each_dict ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f779a50>

    def test_form_each_dict(self):
>       for res in self.std_results:
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'

/testbed/lib/matplotlib/tests/test_cbook.py:108: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_form_dict_keys ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f779ed0>

    def test_form_dict_keys(self):
>       for res in self.std_results:
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'

/testbed/lib/matplotlib/tests/test_cbook.py:112: AttributeError
_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_baseline _______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f778790>

    def test_results_baseline(self):
>       res = self.std_results[0]
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'

/testbed/lib/matplotlib/tests/test_cbook.py:116: AttributeError
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_bootstrapped _____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f762d10>

    def test_results_bootstrapped(self):
>       results = cbook.boxplot_stats(self.data, bootstrap=10000)
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:121: AttributeError
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_whiskers_float ____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f762210>

    def test_results_whiskers_float(self):
>       results = cbook.boxplot_stats(self.data, whis=3)
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:127: AttributeError
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_whiskers_range ____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f7633d0>

    def test_results_whiskers_range(self):
>       results = cbook.boxplot_stats(self.data, whis=[0, 100])
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:133: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_whiskers_percentiles _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f763550>

    def test_results_whiskers_percentiles(self):
>       results = cbook.boxplot_stats(self.data, whis=[5, 95])
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:139: AttributeError
______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_withlabels ______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f763a10>

    def test_results_withlabels(self):
        labels = ['Test1', 2, 'Aardvark', 4]
>       results = cbook.boxplot_stats(self.data, labels=labels)
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:146: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_label_error __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f760e50>

    def test_label_error(self):
        labels = [1, 2]
        with pytest.raises(ValueError):
>           cbook.boxplot_stats(self.data, labels=labels)
E           AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:157: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_complete[True] __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f761e50>, pickle = True

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_complete(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:213:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f761e50>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_complete[False] _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f740c90>, pickle = False

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_complete(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:213:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f740c90>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_disconnect[True] _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f760c10>, pickle = True

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_disconnect(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:238:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f760c10>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_disconnect[False] ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f760550>, pickle = False

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_disconnect(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:238:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f760550>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_wrong_disconnect[True] ______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f740210>, pickle = True

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_wrong_disconnect(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:256:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f740210>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_wrong_disconnect[False] _____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f7405d0>, pickle = False

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_wrong_disconnect(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:256:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f7405d0>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_registration_on_non_empty_registry[True] _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f7426d0>, pickle = True

    @pytest.mark.parametrize('pickle', [True, False])
    def test_registration_on_non_empty_registry(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:274:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f7426d0>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_registration_on_non_empty_registry[False] _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f742a10>, pickle = False

    @pytest.mark.parametrize('pickle', [True, False])
    def test_registration_on_non_empty_registry(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:274:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f742a10>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_double_register_builtin_cmap ___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_double_register_builtin_cmap():
        name = "viridis"
        match = f"Re-registering the builtin cmap {name!r}."
        with pytest.raises(ValueError, match=match):
            matplotlib.colormaps.register(
                mpl.colormaps[name], name=name, force=True
            )
        with pytest.raises(ValueError, match='A colormap named "viridis"'):
            with pytest.warns(PendingDeprecationWarning):
                cm.register_cmap(name, mpl.colormaps[name])
>       with pytest.warns(UserWarning):
E       PendingDeprecationWarning: The register_cmap function will be deprecated in a future version. Use ``matplotlib.colormaps.register(name)`` instead.

/testbed/lib/matplotlib/tests/test_colors.py:142: PendingDeprecationWarning
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_contourf_log_extension[png] ___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    @image_comparison(['contour_log_extension.png'],
                      remove_text=True, style='mpl20',
                      tol=1.444)
    def test_contourf_log_extension():
        # Remove this line when this test image is regenerated.
        plt.rcParams['pcolormesh.snap'] = False

        # Test that contourf with lognorm is extended correctly
        fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(10, 5))
        fig.subplots_adjust(left=0.05, right=0.95)

        # make data set with large range e.g. between 1e-8 and 1e10
        data_exp = np.linspace(-7.5, 9.5, 1200)
        data = np.power(10, data_exp).reshape(30, 40)
        # make manual levels e.g. between 1e-4 and 1e-6
        levels_exp = np.arange(-4., 7.)
        levels = np.power(10., levels_exp)

        # original data
        c1 = ax1.contourf(data,
                          norm=LogNorm(vmin=data.min(), vmax=data.max()))
        # just show data in levels
        c2 = ax2.contourf(data, levels=levels,
                          norm=LogNorm(vmin=levels.min(), vmax=levels.max()),
                          extend='neither')
        # extend data from levels
        c3 = ax3.contourf(data, levels=levels,
                          norm=LogNorm(vmin=levels.min(), vmax=levels.max()),
                          extend='both')
        cb = plt.colorbar(c1, ax=ax1)
        assert cb.ax.get_ylim() == (1e-8, 1e10)
        cb = plt.colorbar(c2, ax=ax2)
>       assert cb.ax.get_ylim() == (1e-4, 1e6)
E       assert (9.9999999999...05, 1000000.0) == (0.0001, 1000000.0)
E
E         At index 0 diff: 9.999999999999999e-05 != 0.0001
E         Use -v to get more diff

/testbed/lib/matplotlib/tests/test_contour.py:316: AssertionError
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_sphinx_gallery_example_header __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_sphinx_gallery_example_header():
        """
        We have copied EXAMPLE_HEADER and modified it to include meta keywords.
        This test monitors that the version we have copied is still the same as
        the EXAMPLE_HEADER in sphinx-gallery. If sphinx-gallery changes its
        EXAMPLE_HEADER, this test will start to fail. In that case, please update
        the monkey-patching of EXAMPLE_HEADER in conf.py.
        """
        gen_rst = pytest.importorskip('sphinx_gallery.gen_rst')

        EXAMPLE_HEADER = """
    .. DO NOT EDIT.
    .. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
    .. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
    .. "{0}"
    .. LINE NUMBERS ARE GIVEN BELOW.

    .. only:: html

        .. note::
            :class: sphx-glr-download-link-note

            Click :ref:`here <sphx_glr_download_{1}>`
            to download the full example code{2}

    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_{1}:

    """
>       assert gen_rst.EXAMPLE_HEADER == EXAMPLE_HEADER
E       AssertionError: assert '\n.. DO NOT ..._glr_{1}:\n\n' == '\n.. DO NOT ..._glr_{1}:\n\n'
E
E         Skipping 242 identical leading characters in diff, use -v to show
E
E
E         -         Click :ref:`here <sphx_glr_download_{1}>`
E         ?        ------         ^
E         +         :ref:`Go to the end <sphx_glr_download_{1}>`...
E
E         ...Full output truncated (9 lines hidden), use '-vv' to show

/testbed/lib/matplotlib/tests/test_doc.py:34: AssertionError
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_none _____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee0d590>

    def test_detrend_none(self):
        assert mlab.detrend_none(0.) == 0.
        assert mlab.detrend_none(0., axis=1) == 0.
        assert mlab.detrend(0., key="none") == 0.
        assert mlab.detrend(0., key=mlab.detrend_none) == 0.
        for sig in [
>               5.5, self.sig_off, self.sig_slope, self.sig_base,
                (self.sig_base + self.sig_slope + self.sig_off).tolist(),
                np.vstack([self.sig_base,  # 2D case.
                           self.sig_base + self.sig_off,
                           self.sig_base + self.sig_slope,
                           self.sig_base + self.sig_off + self.sig_slope]),
                np.vstack([self.sig_base,  # 2D transposed case.
                           self.sig_base + self.sig_off,
                           self.sig_base + self.sig_slope,
                           self.sig_base + self.sig_off + self.sig_slope]).T,
        ]:
E       AttributeError: 'TestDetrend' object has no attribute 'sig_off'

/testbed/lib/matplotlib/tests/test_mlab.py:124: AttributeError
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_mean _____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee26a10>

    def test_detrend_mean(self):
        for sig in [0., 5.5]:  # 0D.
            assert mlab.detrend_mean(sig) == 0.
            assert mlab.detrend(sig, key="mean") == 0.
            assert mlab.detrend(sig, key=mlab.detrend_mean) == 0.
        # 1D.
>       self.allclose(mlab.detrend_mean(self.sig_zeros), self.sig_zeros)
E       AttributeError: 'TestDetrend' object has no attribute 'sig_zeros'

/testbed/lib/matplotlib/tests/test_mlab.py:146: AttributeError
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_mean_1d_base_slope_off_list_andor_axis0 ___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee253d0>

    def test_detrend_mean_1d_base_slope_off_list_andor_axis0(self):
>       input = self.sig_base + self.sig_slope + self.sig_off
E       AttributeError: 'TestDetrend' object has no attribute 'sig_base'

/testbed/lib/matplotlib/tests/test_mlab.py:157: AttributeError
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_mean_2d ___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee25fd0>

    def test_detrend_mean_2d(self):
>       input = np.vstack([self.sig_off,
                           self.sig_base + self.sig_off])
E       AttributeError: 'TestDetrend' object has no attribute 'sig_off'

/testbed/lib/matplotlib/tests/test_mlab.py:164: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_ValueError __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee26950>

    def test_detrend_ValueError(self):
        for signal, kwargs in [
>               (self.sig_slope[np.newaxis], {"key": "spam"}),
                (self.sig_slope[np.newaxis], {"key": 5}),
                (5.5, {"axis": 0}),
                (self.sig_slope, {"axis": 1}),
                (self.sig_slope[np.newaxis], {"axis": 2}),
        ]:
E       AttributeError: 'TestDetrend' object has no attribute 'sig_slope'

/testbed/lib/matplotlib/tests/test_mlab.py:194: AttributeError
_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_mean_ValueError _______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee26b10>

    def test_detrend_mean_ValueError(self):
        for signal, kwargs in [
                (5.5, {"axis": 0}),
>               (self.sig_slope, {"axis": 1}),
                (self.sig_slope[np.newaxis], {"axis": 2}),
        ]:
E       AttributeError: 'TestDetrend' object has no attribute 'sig_slope'

/testbed/lib/matplotlib/tests/test_mlab.py:206: AttributeError
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_linear ____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee26f50>

    def test_detrend_linear(self):
        # 0D.
        assert mlab.detrend_linear(0.) == 0.
        assert mlab.detrend_linear(5.5) == 0.
        assert mlab.detrend(5.5, key="linear") == 0.
        assert mlab.detrend(5.5, key=mlab.detrend_linear) == 0.
        for sig in [  # 1D.
>               self.sig_off,
                self.sig_slope,
                self.sig_slope + self.sig_off,
        ]:
E       AttributeError: 'TestDetrend' object has no attribute 'sig_off'

/testbed/lib/matplotlib/tests/test_mlab.py:219: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_str_linear_1d ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee24690>

    def test_detrend_str_linear_1d(self):
>       input = self.sig_slope + self.sig_off
E       AttributeError: 'TestDetrend' object has no attribute 'sig_slope'

/testbed/lib/matplotlib/tests/test_mlab.py:226: AttributeError
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_linear_2d __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee24b90>

    def test_detrend_linear_2d(self):
>       input = np.vstack([self.sig_off,
                           self.sig_slope,
                           self.sig_slope + self.sig_off])
E       AttributeError: 'TestDetrend' object has no attribute 'sig_off'

/testbed/lib/matplotlib/tests/test_mlab.py:233: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_pylab_integration ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_pylab_integration():
        IPython = pytest.importorskip("IPython")
>       mpl.testing.subprocess_run_helper(
            IPython.start_ipython,
            "--pylab",
            "-c",
            ";".join((
                "import matplotlib.pyplot as plt",
                "assert plt._REPL_DISPLAYHOOK == plt._ReplDisplayHook.IPYTHON",
            )),
            timeout=60,
        )

/testbed/lib/matplotlib/tests/test_pyplot.py:352:

/testbed/lib/matplotlib/testing/__init__.py:69: in subprocess_run_helper
    proc = subprocess.run(


input = None, capture_output = False, timeout = 60, check = True, popenargs = (['/opt/miniconda3/envs/testbed/bin/python', '-c', 'from IPython import start_ipython; start_ipython()', '--pylab', '-c', 'import matplotlib.pyplot as plt;assert plt._REPL_DISPLAYHOOK == plt._ReplDisplayHook.IPYTHON'],), kwargs = {'env': {'CONDA_DEFAULT_ENV': 'testbed', 'CONDA_EXE': '/opt/miniconda3/bin/conda', 'CONDA_PREFIX': '/opt/miniconda3/en...'CONDA_PREFIX_1': '/openhands/micromamba/envs/openhands', ...}, 'stderr': -1, 'stdout': -1, 'universal_newlines': True}, process = <Popen: returncode: 1 args: ['/opt/miniconda3/envs/testbed/bin/python', '-c'...>, stdout = '\x1b[0;31m---------------------------------------------------------------------------\x1b[0m\n\x1b[0;31mModuleNotFoun...  its source directory; please exit the numpy source tree, and relaunch\n        your python interpreter from there.\n'
stderr = '/opt/miniconda3/envs/testbed/lib/python3.11/site-packages/IPython/core/interactiveshell.py:915: UserWarning: Attempti...alenv.\n  warn(\n[TerminalIPythonApp] WARNING | Eventloop or matplotlib integration failed. Is matplotlib installed?\n', retcode = 1

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.

        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,
        or pass capture_output=True to capture both.

        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.

        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.

        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.

        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.

        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE

        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE

        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '['/opt/miniconda3/envs/testbed/bin/python', '-c', 'from IPython import start_ipython; start_ipython()', '--pylab', '-c', 'import matplotlib.pyplot as plt;assert plt._REPL_DISPLAYHOOK == plt._ReplDisplayHook.IPYTHON']' returned non-zero exit status 1.

/opt/miniconda3/envs/testbed/lib/python3.11/subprocess.py:571: CalledProcessError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_rcparams_update _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_rcparams_update():
        rc = mpl.RcParams({'figure.figsize': (3.5, 42)})
        bad_dict = {'figure.figsize': (3.5, 42, 1)}
        # make sure validation happens on input
        with pytest.raises(ValueError), \
             pytest.warns(UserWarning, match="validate"):
>           rc.update(bad_dict)

/testbed/lib/matplotlib/tests/test_rcparams.py:111:

<frozen _collections_abc>:949: in update
    ???


self = RcParams({'figure.figsize': [3.5, 42.0]}), key = 'figure.figsize', val = (3.5, 42, 1)

    def __setitem__(self, key, val):
        try:
            if key in _deprecated_map:
                version, alt_key, alt_val, inverse_alt = _deprecated_map[key]
                _api.warn_deprecated(
                    version, name=key, obj_type="rcparam", alternative=alt_key)
                key = alt_key
                val = alt_val(val)
            elif key in _deprecated_remain_as_none and val is not None:
                version, = _deprecated_remain_as_none[key]
                _api.warn_deprecated(version, name=key, obj_type="rcparam")
            elif key in _deprecated_ignore_map:
                version, alt_key = _deprecated_ignore_map[key]
                _api.warn_deprecated(
                    version, name=key, obj_type="rcparam", alternative=alt_key)
                return
            elif key == 'backend':
                if val is rcsetup._auto_backend_sentinel:
                    if 'backend' in self:
                        return
            try:
                cval = self.validate[key](val)
            except ValueError as ve:
>               raise ValueError(f"Key {key}: {ve}") from None
E               ValueError: Key figure.figsize: Expected 2 values, but there are 3 values in (3.5, 42, 1)

/testbed/lib/matplotlib/__init__.py:651: ValueError

During handling of the above exception, another exception occurred:

    def test_rcparams_update():
        rc = mpl.RcParams({'figure.figsize': (3.5, 42)})
        bad_dict = {'figure.figsize': (3.5, 42, 1)}
        # make sure validation happens on input
>       with pytest.raises(ValueError), \
             pytest.warns(UserWarning, match="validate"):
E            Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
E             Emitted warnings: [].

/testbed/lib/matplotlib/tests/test_rcparams.py:109: Failed
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_rcparams_init __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_rcparams_init():
        with pytest.raises(ValueError), \
             pytest.warns(UserWarning, match="validate"):
>           mpl.RcParams({'figure.figsize': (3.5, 42, 1)})

/testbed/lib/matplotlib/tests/test_rcparams.py:117:

/testbed/lib/matplotlib/__init__.py:626: in __init__
    self.update(*args, **kwargs)
<frozen _collections_abc>:949: in update
    ???


self = RcParams({}), key = 'figure.figsize', val = (3.5, 42, 1)

    def __setitem__(self, key, val):
        try:
            if key in _deprecated_map:
                version, alt_key, alt_val, inverse_alt = _deprecated_map[key]
                _api.warn_deprecated(
                    version, name=key, obj_type="rcparam", alternative=alt_key)
                key = alt_key
                val = alt_val(val)
            elif key in _deprecated_remain_as_none and val is not None:
                version, = _deprecated_remain_as_none[key]
                _api.warn_deprecated(version, name=key, obj_type="rcparam")
            elif key in _deprecated_ignore_map:
                version, alt_key = _deprecated_ignore_map[key]
                _api.warn_deprecated(
                    version, name=key, obj_type="rcparam", alternative=alt_key)
                return
            elif key == 'backend':
                if val is rcsetup._auto_backend_sentinel:
                    if 'backend' in self:
                        return
            try:
                cval = self.validate[key](val)
            except ValueError as ve:
>               raise ValueError(f"Key {key}: {ve}") from None
E               ValueError: Key figure.figsize: Expected 2 values, but there are 3 values in (3.5, 42, 1)

/testbed/lib/matplotlib/__init__.py:651: ValueError

During handling of the above exception, another exception occurred:

    def test_rcparams_init():
>       with pytest.raises(ValueError), \
             pytest.warns(UserWarning, match="validate"):
E            Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
E             Emitted warnings: [].

/testbed/lib/matplotlib/tests/test_rcparams.py:115: Failed
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_colormap[png] __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

args = (), kwds = {'extension': 'png', 'request': <FixtureRequest for <Function test_colormap[png]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 0.021):
E               result_images/test_streamplot/streamplot_colormap.png
E               result_images/test_streamplot/streamplot_colormap-expected.png
E               result_images/test_streamplot/streamplot_colormap-failed-diff.png

/opt/miniconda3/envs/testbed/lib/python3.11/contextlib.py:81: ImageComparisonFailure
_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestScalarFormatter.test_mathtext_ticks ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_ticker.TestScalarFormatter object at 0x7ec93e069890>

    def test_mathtext_ticks(self):
        mpl.rcParams.update({
            'font.family': 'serif',
            'font.serif': 'cmr10',
            'axes.formatter.use_mathtext': False
        })

>       with pytest.warns(UserWarning, match='cmr10 font should ideally'):
E       UserWarning: Glyph 8722 (\N{MINUS SIGN}) missing from current font.

/testbed/lib/matplotlib/tests/test_ticker.py:724: UserWarning
______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_rectangle_selector[kwargs1-Support for drawtype='line' is deprecated] ______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

ax = <AxesSubplot: >, kwargs = {'drawtype': 'line', 'useblit': False}, warning_msg = "Support for drawtype='line' is deprecated"

    @pytest.mark.parametrize('kwargs, warning_msg', [
        (dict(), None),
        (dict(drawtype='line', useblit=False),
         "Support for drawtype='line' is deprecated"),
        (dict(useblit=True, button=1), None),
        (dict(drawtype='none', minspanx=10, minspany=10),
         "Support for drawtype='none' is deprecated"),
        (dict(minspanx=10, minspany=10, spancoords='pixels'), None),
        (dict(props=dict(fill=True)), None),
    ])
    def test_rectangle_selector(ax, kwargs, warning_msg):
        onselect = mock.Mock(spec=noop, return_value=None)

>       with (pytest.warns(MatplotlibDeprecationWarning, match=warning_msg)
                if warning_msg else nullcontext()):
E               matplotlib._api.deprecation.MatplotlibDeprecationWarning: The 'drawtype' parameter of __init__() was deprecated in Matplotlib 3.5 and will be removed two minor releases later. If any parameter follows 'drawtype', they should be passed as keyword, not positionally.

/testbed/lib/matplotlib/tests/test_widgets.py:38: MatplotlibDeprecationWarning
______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_rectangle_selector[kwargs3-Support for drawtype='none' is deprecated] ______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

ax = <AxesSubplot: >, kwargs = {'drawtype': 'none', 'minspanx': 10, 'minspany': 10}, warning_msg = "Support for drawtype='none' is deprecated"

    @pytest.mark.parametrize('kwargs, warning_msg', [
        (dict(), None),
        (dict(drawtype='line', useblit=False),
         "Support for drawtype='line' is deprecated"),
        (dict(useblit=True, button=1), None),
        (dict(drawtype='none', minspanx=10, minspany=10),
         "Support for drawtype='none' is deprecated"),
        (dict(minspanx=10, minspany=10, spancoords='pixels'), None),
        (dict(props=dict(fill=True)), None),
    ])
    def test_rectangle_selector(ax, kwargs, warning_msg):
        onselect = mock.Mock(spec=noop, return_value=None)

>       with (pytest.warns(MatplotlibDeprecationWarning, match=warning_msg)
                if warning_msg else nullcontext()):
E               matplotlib._api.deprecation.MatplotlibDeprecationWarning: The 'drawtype' parameter of __init__() was deprecated in Matplotlib 3.5 and will be removed two minor releases later. If any parameter follows 'drawtype', they should be passed as keyword, not positionally.

/testbed/lib/matplotlib/tests/test_widgets.py:38: MatplotlibDeprecationWarning
======================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================= short test summary info ========================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================
FAILED test_cbook.py::Test_boxplot_stats::test_form_main_list - AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'
FAILED test_cbook.py::Test_boxplot_stats::test_form_each_dict - AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'
FAILED test_cbook.py::Test_boxplot_stats::test_form_dict_keys - AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'
FAILED test_cbook.py::Test_boxplot_stats::test_results_baseline - AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'
FAILED test_cbook.py::Test_boxplot_stats::test_results_bootstrapped - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_results_whiskers_float - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_results_whiskers_range - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_results_whiskers_percentiles - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_results_withlabels - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_label_error - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_callback_registry::test_callback_complete[True] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_complete[False] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_disconnect[True] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_disconnect[False] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_wrong_disconnect[True] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_wrong_disconnect[False] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_registration_on_non_empty_registry[True] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_registration_on_non_empty_registry[False] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_colors.py::test_double_register_builtin_cmap - PendingDeprecationWarning: The register_cmap function will be deprecated in a future version. Use ``matplotlib.colormaps.register(name)`` instead.
FAILED test_contour.py::test_contourf_log_extension[png] - assert (9.9999999999...05, 1000000.0) == (0.0001, 1000000.0)
FAILED test_doc.py::test_sphinx_gallery_example_header - AssertionError: assert '\n.. DO NOT ..._glr_{1}:\n\n' == '\n.. DO NOT ..._glr_{1}:\n\n'
FAILED test_mlab.py::TestDetrend::test_detrend_none - AttributeError: 'TestDetrend' object has no attribute 'sig_off'
FAILED test_mlab.py::TestDetrend::test_detrend_mean - AttributeError: 'TestDetrend' object has no attribute 'sig_zeros'
FAILED test_mlab.py::TestDetrend::test_detrend_mean_1d_base_slope_off_list_andor_axis0 - AttributeError: 'TestDetrend' object has no attribute 'sig_base'
FAILED test_mlab.py::TestDetrend::test_detrend_mean_2d - AttributeError: 'TestDetrend' object has no attribute 'sig_off'
FAILED test_mlab.py::TestDetrend::test_detrend_ValueError - AttributeError: 'TestDetrend' object has no attribute 'sig_slope'
FAILED test_mlab.py::TestDetrend::test_detrend_mean_ValueError - AttributeError: 'TestDetrend' object has no attribute 'sig_slope'
FAILED test_mlab.py::TestDetrend::test_detrend_linear - AttributeError: 'TestDetrend' object has no attribute 'sig_off'
FAILED test_mlab.py::TestDetrend::test_detrend_str_linear_1d - AttributeError: 'TestDetrend' object has no attribute 'sig_slope'
FAILED test_mlab.py::TestDetrend::test_detrend_linear_2d - AttributeError: 'TestDetrend' object has no attribute 'sig_off'
FAILED test_pyplot.py::test_pylab_integration - subprocess.CalledProcessError: Command '['/opt/miniconda3/envs/testbed/bin/python', '-c', 'from IPython import start_ipython; start_ipython()', '--pylab', '-c', 'import matplotlib.pyplot as plt;assert plt._REPL_DISPLAYHOOK == plt._ReplDisplayHook.IPYTHON']' returned non-zero exit status 1.
FAILED test_rcparams.py::test_rcparams_update - Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
FAILED test_rcparams.py::test_rcparams_init - Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
FAILED test_streamplot.py::test_colormap[png] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 0.021):
FAILED test_ticker.py::TestScalarFormatter::test_mathtext_ticks - UserWarning: Glyph 8722 (\N{MINUS SIGN}) missing from current font.
FAILED test_widgets.py::test_rectangle_selector[kwargs1-Support for drawtype='line' is deprecated] - matplotlib._api.deprecation.MatplotlibDeprecationWarning: The 'drawtype' parameter of __init__() was deprecated in Matplotlib 3.5 and will be removed two minor releases later. If any parameter follows 'drawtype', they should be passed as keyword, not positionally.
FAILED test_widgets.py::test_rectangle_selector[kwargs3-Support for drawtype='none' is deprecated] - matplotlib._api.deprecation.MatplotlibDeprecationWarning: The 'drawtype' parameter of __init__() was deprecated in Matplotlib 3.5 and will be removed two minor releases later. If any parameter follows 'drawtype', they should be passed as keyword, not positionally.
================================================================================================================================================================================================================================================================================================================================================================================================================================================================================= 37 failed, 8160 passed, 918 skipped, 12 xfailed in 700.32s (0:11:40) =================================================================================================================================================================================================================================================================================================================================================================================================================================================================================
[The command completed with exit code 1.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:14:42,416 - ERROR - ----------
Error in instance [matplotlib__matplotlib-24149]: Failed to cd to /workspace/matplotlib__matplotlib__3.6: **CmdOutputObservation (source=None, exit code=1, metadata={
  "exit_code": 1,
  "pid": -1,
  "username": "root",
  "hostname": "368b4f3e5e5f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 1.]"
})**
--BEGIN AGENT OBSERVATION--

test_doc.py
test_dviread.py
test_figure.py .s......s..s.....s..s.....................................ss.....................................................                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 [ 25%]
test_font_manager.py .........s.s...s......                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      [ 25%]
test_fontconfig_pattern.py
test_ft2font.py ..s.s.s.sss.s
test_getattr.py ...................................................ssss
test_gridspec.py
test_image.py ..s..s.............s................s........s..s..s.....s.s...s..s..s..s..............s..s.....s....s.............................s.........s
test_legend.py ...s..s..s..s.......s..s..s..s..s................................................................................s
test_lines.py .....s..........s....s...s.......s...s
test_marker.py ...........................s...s..s................                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               [ 31%]
test_mathtext.py ......................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s.....sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 41%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss...........................sssssssss...................................................sssssssss...................................................sssssssss...................................................sssssssss...................................................sssssssss.......................................................................                                                                                                                                                                                                                                                                                                                                                                                      [ 48%]
test_matplotlib.py ....s
test_mlab.py

.....................................................................................................................................................................................................................................................................................................................................................................................................................................................................                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            [ 75%]
test_offsetbox.py ..s
test_patches.py ........s..s..s...s.....s...s..........ss...............s.s...s
test_path.py ..............s.......s
test_patheffects.py ..s..s..s.....s
test_pickle.py .......................................................................................................................................................................................                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           [ 82%]
test_png.py
test_polar.py ..s..s....s..s..s..s..s..s....s..s..s
test_preprocess_data.py
test_pyplot.py
test_quiver.py
test_rcparams.py ..FF..........................................................................................................................................................................................................s
test_sankey.py
test_scale.py ..s..................                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              [ 86%]
test_simplification.py ..s..s..s..............s..s..s..s..s....s..s..s
test_skew.py ..s..s
test_sphinxext.py
test_spines.py ...s..s...s
test_streamplot.py .F.s..s..s
test_style.py
test_subplots.py ......s
test_table.py
test_testing.py x..xxx..s
test_texmanager.py
test_text.py ..s..s..s............s..s...........................s.................ss
test_textpath.py
test_ticker.py
test_tightlayout.py ..s..s..s..s..s..s..s..s..s...s
test_transforms.py ....s
test_triangulation.py ...............................................s
test_ttconv.py
test_type1font.py
test_units.py
test_usetex.py ....s..s......s
test_widgets.py .F.F..............................................................s...........................s
test_axes_grid1.py
test_axisartist_angle_helper.py
test_axisartist_axis_artist.py
test_axisartist_axislines.py
test_axisartist_clip_path.py
test_axisartist_floating_axes.py ....                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            [ 98%]
test_axisartist_grid_finder.py
test_axisartist_grid_helper_curvelinear.py
test_mplot3d.py

=============================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================== FAILURES ===============================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_form_main_list ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f779650>

    def test_form_main_list(self):
>       assert isinstance(self.std_results, list)
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'

/testbed/lib/matplotlib/tests/test_cbook.py:105: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_form_each_dict ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f779a50>

    def test_form_each_dict(self):
>       for res in self.std_results:
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'

/testbed/lib/matplotlib/tests/test_cbook.py:108: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_form_dict_keys ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f779ed0>

    def test_form_dict_keys(self):
>       for res in self.std_results:
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'

/testbed/lib/matplotlib/tests/test_cbook.py:112: AttributeError
_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_baseline _______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f778790>

    def test_results_baseline(self):
>       res = self.std_results[0]
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'

/testbed/lib/matplotlib/tests/test_cbook.py:116: AttributeError
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_bootstrapped _____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f762d10>

    def test_results_bootstrapped(self):
>       results = cbook.boxplot_stats(self.data, bootstrap=10000)
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:121: AttributeError
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_whiskers_float ____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f762210>

    def test_results_whiskers_float(self):
>       results = cbook.boxplot_stats(self.data, whis=3)
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:127: AttributeError
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_whiskers_range ____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f7633d0>

    def test_results_whiskers_range(self):
>       results = cbook.boxplot_stats(self.data, whis=[0, 100])
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:133: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_whiskers_percentiles _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f763550>

    def test_results_whiskers_percentiles(self):
>       results = cbook.boxplot_stats(self.data, whis=[5, 95])
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:139: AttributeError
______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_withlabels ______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f763a10>

    def test_results_withlabels(self):
        labels = ['Test1', 2, 'Aardvark', 4]
>       results = cbook.boxplot_stats(self.data, labels=labels)
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:146: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_label_error __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f760e50>

    def test_label_error(self):
        labels = [1, 2]
        with pytest.raises(ValueError):
>           cbook.boxplot_stats(self.data, labels=labels)
E           AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:157: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_complete[True] __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f761e50>, pickle = True

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_complete(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:213:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f761e50>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_complete[False] _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f740c90>, pickle = False

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_complete(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:213:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f740c90>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_disconnect[True] _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f760c10>, pickle = True

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_disconnect(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:238:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f760c10>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_disconnect[False] ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f760550>, pickle = False

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_disconnect(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:238:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f760550>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_wrong_disconnect[True] ______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f740210>, pickle = True

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_wrong_disconnect(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:256:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f740210>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_wrong_disconnect[False] _____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f7405d0>, pickle = False

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_wrong_disconnect(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:256:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f7405d0>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_registration_on_non_empty_registry[True] _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f7426d0>, pickle = True

    @pytest.mark.parametrize('pickle', [True, False])
    def test_registration_on_non_empty_registry(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:274:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f7426d0>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_registration_on_non_empty_registry[False] _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f742a10>, pickle = False

    @pytest.mark.parametrize('pickle', [True, False])
    def test_registration_on_non_empty_registry(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:274:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f742a10>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_double_register_builtin_cmap ___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_double_register_builtin_cmap():
        name = "viridis"
        match = f"Re-registering the builtin cmap {name!r}."
        with pytest.raises(ValueError, match=match):
            matplotlib.colormaps.register(
                mpl.colormaps[name], name=name, force=True
            )
        with pytest.raises(ValueError, match='A colormap named "viridis"'):
            with pytest.warns(PendingDeprecationWarning):
                cm.register_cmap(name, mpl.colormaps[name])
>       with pytest.warns(UserWarning):
E       PendingDeprecationWarning: The register_cmap function will be deprecated in a future version. Use ``matplotlib.colormaps.register(name)`` instead.

/testbed/lib/matplotlib/tests/test_colors.py:142: PendingDeprecationWarning
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_contourf_log_extension[png] ___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    @image_comparison(['contour_log_extension.png'],
                      remove_text=True, style='mpl20',
                      tol=1.444)
    def test_contourf_log_extension():
        # Remove this line when this test image is regenerated.
        plt.rcParams['pcolormesh.snap'] = False

        # Test that contourf with lognorm is extended correctly
        fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(10, 5))
        fig.subplots_adjust(left=0.05, right=0.95)

        # make data set with large range e.g. between 1e-8 and 1e10
        data_exp = np.linspace(-7.5, 9.5, 1200)
        data = np.power(10, data_exp).reshape(30, 40)
        # make manual levels e.g. between 1e-4 and 1e-6
        levels_exp = np.arange(-4., 7.)
        levels = np.power(10., levels_exp)

        # original data
        c1 = ax1.contourf(data,
                          norm=LogNorm(vmin=data.min(), vmax=data.max()))
        # just show data in levels
        c2 = ax2.contourf(data, levels=levels,
                          norm=LogNorm(vmin=levels.min(), vmax=levels.max()),
                          extend='neither')
        # extend data from levels
        c3 = ax3.contourf(data, levels=levels,
                          norm=LogNorm(vmin=levels.min(), vmax=levels.max()),
                          extend='both')
        cb = plt.colorbar(c1, ax=ax1)
        assert cb.ax.get_ylim() == (1e-8, 1e10)
        cb = plt.colorbar(c2, ax=ax2)
>       assert cb.ax.get_ylim() == (1e-4, 1e6)
E       assert (9.9999999999...05, 1000000.0) == (0.0001, 1000000.0)
E
E         At index 0 diff: 9.999999999999999e-05 != 0.0001
E         Use -v to get more diff

/testbed/lib/matplotlib/tests/test_contour.py:316: AssertionError
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_sphinx_gallery_example_header __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_sphinx_gallery_example_header():
        """
        We have copied EXAMPLE_HEADER and modified it to include meta keywords.
        This test monitors that the version we have copied is still the same as
        the EXAMPLE_HEADER in sphinx-gallery. If sphinx-gallery changes its
        EXAMPLE_HEADER, this test will start to fail. In that case, please update
        the monkey-patching of EXAMPLE_HEADER in conf.py.
        """
        gen_rst = pytest.importorskip('sphinx_gallery.gen_rst')

        EXAMPLE_HEADER = """
    .. DO NOT EDIT.
    .. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
    .. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
    .. "{0}"
    .. LINE NUMBERS ARE GIVEN BELOW.

    .. only:: html

        .. note::
            :class: sphx-glr-download-link-note

            Click :ref:`here <sphx_glr_download_{1}>`
            to download the full example code{2}

    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_{1}:

    """
>       assert gen_rst.EXAMPLE_HEADER == EXAMPLE_HEADER
E       AssertionError: assert '\n.. DO NOT ..._glr_{1}:\n\n' == '\n.. DO NOT ..._glr_{1}:\n\n'
E
E         Skipping 242 identical leading characters in diff, use -v to show
E
E
E         -         Click :ref:`here <sphx_glr_download_{1}>`
E         ?        ------         ^
E         +         :ref:`Go to the end <sphx_glr_download_{1}>`...
E
E         ...Full output truncated (9 lines hidden), use '-vv' to show

/testbed/lib/matplotlib/tests/test_doc.py:34: AssertionError
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_none _____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee0d590>

    def test_detrend_none(self):
        assert mlab.detrend_none(0.) == 0.
        assert mlab.detrend_none(0., axis=1) == 0.
        assert mlab.detrend(0., key="none") == 0.
        assert mlab.detrend(0., key=mlab.detrend_none) == 0.
        for sig in [
>               5.5, self.sig_off, self.sig_slope, self.sig_base,
                (self.sig_base + self.sig_slope + self.sig_off).tolist(),
                np.vstack([self.sig_base,  # 2D case.
                           self.sig_base + self.sig_off,
                           self.sig_base + self.sig_slope,
                           self.sig_base + self.sig_off + self.sig_slope]),
                np.vstack([self.sig_base,  # 2D transposed case.
                           self.sig_base + self.sig_off,
                           self.sig_base + self.sig_slope,
                           self.sig_base + self.sig_off + self.sig_slope]).T,
        ]:
E       AttributeError: 'TestDetrend' object has no attribute 'sig_off'

/testbed/lib/matplotlib/tests/test_mlab.py:124: AttributeError
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_mean _____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee26a10>

    def test_detrend_mean(self):
        for sig in [0., 5.5]:  # 0D.
            assert mlab.detrend_mean(sig) == 0.
            assert mlab.detrend(sig, key="mean") == 0.
            assert mlab.detrend(sig, key=mlab.detrend_mean) == 0.
        # 1D.
>       self.allclose(mlab.detrend_mean(self.sig_zeros), self.sig_zeros)
E       AttributeError: 'TestDetrend' object has no attribute 'sig_zeros'

/testbed/lib/matplotlib/tests/test_mlab.py:146: AttributeError
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_mean_1d_base_slope_off_list_andor_axis0 ___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee253d0>

    def test_detrend_mean_1d_base_slope_off_list_andor_axis0(self):
>       input = self.sig_base + self.sig_slope + self.sig_off
E       AttributeError: 'TestDetrend' object has no attribute 'sig_base'

/testbed/lib/matplotlib/tests/test_mlab.py:157: AttributeError
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_mean_2d ___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee25fd0>

    def test_detrend_mean_2d(self):
>       input = np.vstack([self.sig_off,
                           self.sig_base + self.sig_off])
E       AttributeError: 'TestDetrend' object has no attribute 'sig_off'

/testbed/lib/matplotlib/tests/test_mlab.py:164: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_ValueError __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee26950>

    def test_detrend_ValueError(self):
        for signal, kwargs in [
>               (self.sig_slope[np.newaxis], {"key": "spam"}),
                (self.sig_slope[np.newaxis], {"key": 5}),
                (5.5, {"axis": 0}),
                (self.sig_slope, {"axis": 1}),
                (self.sig_slope[np.newaxis], {"axis": 2}),
        ]:
E       AttributeError: 'TestDetrend' object has no attribute 'sig_slope'

/testbed/lib/matplotlib/tests/test_mlab.py:194: AttributeError
_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_mean_ValueError _______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee26b10>

    def test_detrend_mean_ValueError(self):
        for signal, kwargs in [
                (5.5, {"axis": 0}),
>               (self.sig_slope, {"axis": 1}),
                (self.sig_slope[np.newaxis], {"axis": 2}),
        ]:
E       AttributeError: 'TestDetrend' object has no attribute 'sig_slope'

/testbed/lib/matplotlib/tests/test_mlab.py:206: AttributeError
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_linear ____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee26f50>

    def test_detrend_linear(self):
        # 0D.
        assert mlab.detrend_linear(0.) == 0.
        assert mlab.detrend_linear(5.5) == 0.
        assert mlab.detrend(5.5, key="linear") == 0.
        assert mlab.detrend(5.5, key=mlab.detrend_linear) == 0.
        for sig in [  # 1D.
>               self.sig_off,
                self.sig_slope,
                self.sig_slope + self.sig_off,
        ]:
E       AttributeError: 'TestDetrend' object has no attribute 'sig_off'

/testbed/lib/matplotlib/tests/test_mlab.py:219: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_str_linear_1d ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee24690>

    def test_detrend_str_linear_1d(self):
>       input = self.sig_slope + self.sig_off
E       AttributeError: 'TestDetrend' object has no attribute 'sig_slope'

/testbed/lib/matplotlib/tests/test_mlab.py:226: AttributeError
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_linear_2d __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee24b90>

    def test_detrend_linear_2d(self):
>       input = np.vstack([self.sig_off,
                           self.sig_slope,
                           self.sig_slope + self.sig_off])
E       AttributeError: 'TestDetrend' object has no attribute 'sig_off'

/testbed/lib/matplotlib/tests/test_mlab.py:233: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_pylab_integration ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_pylab_integration():
        IPython = pytest.importorskip("IPython")
>       mpl.testing.subprocess_run_helper(
            IPython.start_ipython,
            "--pylab",
            "-c",
            ";".join((
                "import matplotlib.pyplot as plt",
                "assert plt._REPL_DISPLAYHOOK == plt._ReplDisplayHook.IPYTHON",
            )),
            timeout=60,
        )

/testbed/lib/matplotlib/tests/test_pyplot.py:352:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
/testbed/lib/matplotlib/testing/__init__.py:69: in subprocess_run_helper
    proc = subprocess.run(


input = None, capture_output = False, timeout = 60, check = True, popenargs = (['/opt/miniconda3/envs/testbed/bin/python', '-c', 'from IPython import start_ipython; start_ipython()', '--pylab', '-c', 'import matplotlib.pyplot as plt;assert plt._REPL_DISPLAYHOOK == plt._ReplDisplayHook.IPYTHON'],), kwargs = {'env': {'CONDA_DEFAULT_ENV': 'testbed', 'CONDA_EXE': '/opt/miniconda3/bin/conda', 'CONDA_PREFIX': '/opt/miniconda3/en...'CONDA_PREFIX_1': '/openhands/micromamba/envs/openhands', ...}, 'stderr': -1, 'stdout': -1, 'universal_newlines': True}, process = <Popen: returncode: 1 args: ['/opt/miniconda3/envs/testbed/bin/python', '-c'...>, stdout = '\x1b[0;31m---------------------------------------------------------------------------\x1b[0m\n\x1b[0;31mModuleNotFoun...  its source directory; please exit the numpy source tree, and relaunch\n        your python interpreter from there.\n'
stderr = '/opt/miniconda3/envs/testbed/lib/python3.11/site-packages/IPython/core/interactiveshell.py:915: UserWarning: Attempti...alenv.\n  warn(\n[TerminalIPythonApp] WARNING | Eventloop or matplotlib integration failed. Is matplotlib installed?\n', retcode = 1

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.

        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,
        or pass capture_output=True to capture both.

        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.

        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.

        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.

        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.

        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE

        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE

        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '['/opt/miniconda3/envs/testbed/bin/python', '-c', 'from IPython import start_ipython; start_ipython()', '--pylab', '-c', 'import matplotlib.pyplot as plt;assert plt._REPL_DISPLAYHOOK == plt._ReplDisplayHook.IPYTHON']' returned non-zero exit status 1.

/opt/miniconda3/envs/testbed/lib/python3.11/subprocess.py:571: CalledProcessError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_rcparams_update _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_rcparams_update():
        rc = mpl.RcParams({'figure.figsize': (3.5, 42)})
        bad_dict = {'figure.figsize': (3.5, 42, 1)}
        # make sure validation happens on input
        with pytest.raises(ValueError), \
             pytest.warns(UserWarning, match="validate"):
>           rc.update(bad_dict)

/testbed/lib/matplotlib/tests/test_rcparams.py:111:

<frozen _collections_abc>:949: in update
    ???


self = RcParams({'figure.figsize': [3.5, 42.0]}), key = 'figure.figsize', val = (3.5, 42, 1)

    def __setitem__(self, key, val):
        try:
            if key in _deprecated_map:
                version, alt_key, alt_val, inverse_alt = _deprecated_map[key]
                _api.warn_deprecated(
                    version, name=key, obj_type="rcparam", alternative=alt_key)
                key = alt_key
                val = alt_val(val)
            elif key in _deprecated_remain_as_none and val is not None:
                version, = _deprecated_remain_as_none[key]
                _api.warn_deprecated(version, name=key, obj_type="rcparam")
            elif key in _deprecated_ignore_map:
                version, alt_key = _deprecated_ignore_map[key]
                _api.warn_deprecated(
                    version, name=key, obj_type="rcparam", alternative=alt_key)
                return
            elif key == 'backend':
                if val is rcsetup._auto_backend_sentinel:
                    if 'backend' in self:
                        return
            try:
                cval = self.validate[key](val)
            except ValueError as ve:
>               raise ValueError(f"Key {key}: {ve}") from None
E               ValueError: Key figure.figsize: Expected 2 values, but there are 3 values in (3.5, 42, 1)

/testbed/lib/matplotlib/__init__.py:651: ValueError

During handling of the above exception, another exception occurred:

    def test_rcparams_update():
        rc = mpl.RcParams({'figure.figsize': (3.5, 42)})
        bad_dict = {'figure.figsize': (3.5, 42, 1)}
        # make sure validation happens on input
>       with pytest.raises(ValueError), \
             pytest.warns(UserWarning, match="validate"):
E            Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
E             Emitted warnings: [].

/testbed/lib/matplotlib/tests/test_rcparams.py:109: Failed
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_rcparams_init __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_rcparams_init():
        with pytest.raises(ValueError), \
             pytest.warns(UserWarning, match="validate"):
>           mpl.RcParams({'figure.figsize': (3.5, 42, 1)})

/testbed/lib/matplotlib/tests/test_rcparams.py:117:

/testbed/lib/matplotlib/__init__.py:626: in __init__
    self.update(*args, **kwargs)
<frozen _collections_abc>:949: in update
    ???


self = RcParams({}), key = 'figure.figsize', val = (3.5, 42, 1)

    def __setitem__(self, key, val):
        try:
            if key in _deprecated_map:
                version, alt_key, alt_val, inverse_alt = _deprecated_map[key]
                _api.warn_deprecated(
                    version, name=key, obj_type="rcparam", alternative=alt_key)
                key = alt_key
                val = alt_val(val)
            elif key in _deprecated_remain_as_none and val is not None:
                version, = _deprecated_remain_as_none[key]
                _api.warn_deprecated(version, name=key, obj_type="rcparam")
            elif key in _deprecated_ignore_map:
                version, alt_key = _deprecated_ignore_map[key]
                _api.warn_deprecated(
                    version, name=key, obj_type="rcparam", alternative=alt_key)
                return
            elif key == 'backend':
                if val is rcsetup._auto_backend_sentinel:
                    if 'backend' in self:
                        return
            try:
                cval = self.validate[key](val)
            except ValueError as ve:
>               raise ValueError(f"Key {key}: {ve}") from None
E               ValueError: Key figure.figsize: Expected 2 values, but there are 3 values in (3.5, 42, 1)

/testbed/lib/matplotlib/__init__.py:651: ValueError

During handling of the above exception, another exception occurred:

    def test_rcparams_init():
>       with pytest.raises(ValueError), \
             pytest.warns(UserWarning, match="validate"):
E            Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
E             Emitted warnings: [].

/testbed/lib/matplotlib/tests/test_rcparams.py:115: Failed
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_colormap[png] __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

args = (), kwds = {'extension': 'png', 'request': <FixtureRequest for <Function test_colormap[png]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 0.021):
E               result_images/test_streamplot/streamplot_colormap.png
E               result_images/test_streamplot/streamplot_colormap-expected.png
E               result_images/test_streamplot/streamplot_colormap-failed-diff.png

/opt/miniconda3/envs/testbed/lib/python3.11/contextlib.py:81: ImageComparisonFailure
_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestScalarFormatter.test_mathtext_ticks ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_ticker.TestScalarFormatter object at 0x7ec93e069890>

    def test_mathtext_ticks(self):
        mpl.rcParams.update({
            'font.family': 'serif',
            'font.serif': 'cmr10',
            'axes.formatter.use_mathtext': False
        })

>       with pytest.warns(UserWarning, match='cmr10 font should ideally'):
E       UserWarning: Glyph 8722 (\N{MINUS SIGN}) missing from current font.

/testbed/lib/matplotlib/tests/test_ticker.py:724: UserWarning
______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_rectangle_selector[kwargs1-Support for drawtype='line' is deprecated] ______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

ax = <AxesSubplot: >, kwargs = {'drawtype': 'line', 'useblit': False}, warning_msg = "Support for drawtype='line' is deprecated"

    @pytest.mark.parametrize('kwargs, warning_msg', [
        (dict(), None),
        (dict(drawtype='line', useblit=False),
         "Support for drawtype='line' is deprecated"),
        (dict(useblit=True, button=1), None),
        (dict(drawtype='none', minspanx=10, minspany=10),
         "Support for drawtype='none' is deprecated"),
        (dict(minspanx=10, minspany=10, spancoords='pixels'), None),
        (dict(props=dict(fill=True)), None),
    ])
    def test_rectangle_selector(ax, kwargs, warning_msg):
        onselect = mock.Mock(spec=noop, return_value=None)

>       with (pytest.warns(MatplotlibDeprecationWarning, match=warning_msg)
                if warning_msg else nullcontext()):
E               matplotlib._api.deprecation.MatplotlibDeprecationWarning: The 'drawtype' parameter of __init__() was deprecated in Matplotlib 3.5 and will be removed two minor releases later. If any parameter follows 'drawtype', they should be passed as keyword, not positionally.

/testbed/lib/matplotlib/tests/test_widgets.py:38: MatplotlibDeprecationWarning
______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_rectangle_selector[kwargs3-Support for drawtype='none' is deprecated] ______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

ax = <AxesSubplot: >, kwargs = {'drawtype': 'none', 'minspanx': 10, 'minspany': 10}, warning_msg = "Support for drawtype='none' is deprecated"

    @pytest.mark.parametrize('kwargs, warning_msg', [
        (dict(), None),
        (dict(drawtype='line', useblit=False),
         "Support for drawtype='line' is deprecated"),
        (dict(useblit=True, button=1), None),
        (dict(drawtype='none', minspanx=10, minspany=10),
         "Support for drawtype='none' is deprecated"),
        (dict(minspanx=10, minspany=10, spancoords='pixels'), None),
        (dict(props=dict(fill=True)), None),
    ])
    def test_rectangle_selector(ax, kwargs, warning_msg):
        onselect = mock.Mock(spec=noop, return_value=None)

>       with (pytest.warns(MatplotlibDeprecationWarning, match=warning_msg)
                if warning_msg else nullcontext()):
E               matplotlib._api.deprecation.MatplotlibDeprecationWarning: The 'drawtype' parameter of __init__() was deprecated in Matplotlib 3.5 and will be removed two minor releases later. If any parameter follows 'drawtype', they should be passed as keyword, not positionally.

/testbed/lib/matplotlib/tests/test_widgets.py:38: MatplotlibDeprecationWarning
======================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================= short test summary info ========================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================
FAILED test_cbook.py::Test_boxplot_stats::test_form_main_list - AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'
FAILED test_cbook.py::Test_boxplot_stats::test_form_each_dict - AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'
FAILED test_cbook.py::Test_boxplot_stats::test_form_dict_keys - AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'
FAILED test_cbook.py::Test_boxplot_stats::test_results_baseline - AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'
FAILED test_cbook.py::Test_boxplot_stats::test_results_bootstrapped - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_results_whiskers_float - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_results_whiskers_range - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_results_whiskers_percentiles - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_results_withlabels - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_label_error - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_callback_registry::test_callback_complete[True] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_complete[False] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_disconnect[True] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_disconnect[False] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_wrong_disconnect[True] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_wrong_disconnect[False] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_registration_on_non_empty_registry[True] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_registration_on_non_empty_registry[False] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_colors.py::test_double_register_builtin_cmap - PendingDeprecationWarning: The register_cmap function will be deprecated in a future version. Use ``matplotlib.colormaps.register(name)`` instead.
FAILED test_contour.py::test_contourf_log_extension[png] - assert (9.9999999999...05, 1000000.0) == (0.0001, 1000000.0)
FAILED test_doc.py::test_sphinx_gallery_example_header - AssertionError: assert '\n.. DO NOT ..._glr_{1}:\n\n' == '\n.. DO NOT ..._glr_{1}:\n\n'
FAILED test_mlab.py::TestDetrend::test_detrend_none - AttributeError: 'TestDetrend' object has no attribute 'sig_off'
FAILED test_mlab.py::TestDetrend::test_detrend_mean - AttributeError: 'TestDetrend' object has no attribute 'sig_zeros'
FAILED test_mlab.py::TestDetrend::test_detrend_mean_1d_base_slope_off_list_andor_axis0 - AttributeError: 'TestDetrend' object has no attribute 'sig_base'
FAILED test_mlab.py::TestDetrend::test_detrend_mean_2d - AttributeError: 'TestDetrend' object has no attribute 'sig_off'
FAILED test_mlab.py::TestDetrend::test_detrend_ValueError - AttributeError: 'TestDetrend' object has no attribute 'sig_slope'
FAILED test_mlab.py::TestDetrend::test_detrend_mean_ValueError - AttributeError: 'TestDetrend' object has no attribute 'sig_slope'
FAILED test_mlab.py::TestDetrend::test_detrend_linear - AttributeError: 'TestDetrend' object has no attribute 'sig_off'
FAILED test_mlab.py::TestDetrend::test_detrend_str_linear_1d - AttributeError: 'TestDetrend' object has no attribute 'sig_slope'
FAILED test_mlab.py::TestDetrend::test_detrend_linear_2d - AttributeError: 'TestDetrend' object has no attribute 'sig_off'
FAILED test_pyplot.py::test_pylab_integration - subprocess.CalledProcessError: Command '['/opt/miniconda3/envs/testbed/bin/python', '-c', 'from IPython import start_ipython; start_ipython()', '--pylab', '-c', 'import matplotlib.pyplot as plt;assert plt._REPL_DISPLAYHOOK == plt._ReplDisplayHook.IPYTHON']' returned non-zero exit status 1.
FAILED test_rcparams.py::test_rcparams_update - Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
FAILED test_rcparams.py::test_rcparams_init - Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
FAILED test_streamplot.py::test_colormap[png] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 0.021):
FAILED test_ticker.py::TestScalarFormatter::test_mathtext_ticks - UserWarning: Glyph 8722 (\N{MINUS SIGN}) missing from current font.
FAILED test_widgets.py::test_rectangle_selector[kwargs1-Support for drawtype='line' is deprecated] - matplotlib._api.deprecation.MatplotlibDeprecationWarning: The 'drawtype' parameter of __init__() was deprecated in Matplotlib 3.5 and will be removed two minor releases later. If any parameter follows 'drawtype', they should be passed as keyword, not positionally.
FAILED test_widgets.py::test_rectangle_selector[kwargs3-Support for drawtype='none' is deprecated] - matplotlib._api.deprecation.MatplotlibDeprecationWarning: The 'drawtype' parameter of __init__() was deprecated in Matplotlib 3.5 and will be removed two minor releases later. If any parameter follows 'drawtype', they should be passed as keyword, not positionally.
================================================================================================================================================================================================================================================================================================================================================================================================================================================================================= 37 failed, 8160 passed, 918 skipped, 12 xfailed in 700.32s (0:11:40) =================================================================================================================================================================================================================================================================================================================================================================================================================================================================================
[The command completed with exit code 1.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--. Stacktrace:
Traceback (most recent call last):
  File "/home/gcpuser/thereal/OpenHands/evaluation/utils/shared.py", line 350, in _process_instance_wrapper
    result = process_instance_func(instance, metadata, use_mp, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/gcpuser/thereal/OpenHands/evaluation/benchmarks/swe_bench/run_infer.py", line 439, in process_instance
    return_val = complete_runtime(runtime, instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/gcpuser/thereal/OpenHands/evaluation/benchmarks/swe_bench/run_infer.py", line 332, in complete_runtime
    assert_and_raise(
  File "/home/gcpuser/thereal/OpenHands/evaluation/utils/shared.py", line 327, in assert_and_raise
    raise EvalException(msg)
evaluation.utils.shared.EvalException: Failed to cd to /workspace/matplotlib__matplotlib__3.6: **CmdOutputObservation (source=None, exit code=1, metadata={
  "exit_code": 1,
  "pid": -1,
  "username": "root",
  "hostname": "368b4f3e5e5f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 1.]"
})**
--BEGIN AGENT OBSERVATION--

test_doc.py
test_dviread.py
test_figure.py .s......s..s.....s..s.....................................ss
test_font_manager.py .........s.s...s
test_fontconfig_pattern.py
test_ft2font.py ..s.s.s.sss.s
test_getattr.py ...................................................ssss
test_gridspec.py
test_image.py ..s..s.............s................s........s..s..s.....s.s...s..s..s..s..............s..s.....s....s.............................s.........s
test_legend.py ...s..s..s..s.......s..s..s..s..s................................................................................s
test_lines.py .....s..........s....s...s.......s...s
test_marker.py ...........................s...s..s
test_mathtext.py ......................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s...........................s.......s...s...............................ss.........s.....sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 41%]
ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss...........................sssssssss...................................................sssssssss...................................................sssssssss...................................................sssssssss...................................................sssssssss.......................................................................                                                                                                                                                                                                                                                                                                                                                                                      [ 48%]
test_matplotlib.py ....s
test_mlab.py


test_offsetbox.py ..s
test_patches.py ........s..s..s...s.....s...s..........ss...............s.s...s
test_path.py ..............s.......s
test_patheffects.py ..s..s..s.....s
test_pickle.py
test_png.py
test_polar.py ..s..s....s..s..s..s..s..s....s..s..s
test_preprocess_data.py
test_pyplot.py
test_quiver.py
test_rcparams.py ..FF..........................................................................................................................................................................................................s
test_sankey.py
test_scale.py ..s
test_simplification.py ..s..s..s..............s..s..s..s..s....s..s..s
test_skew.py ..s..s
test_sphinxext.py
test_spines.py ...s..s...s
test_streamplot.py .F.s..s..s
test_style.py
test_subplots.py ......s
test_table.py
test_testing.py x..xxx..s
test_texmanager.py
test_text.py ..s..s..s............s..s...........................s.................ss
test_textpath.py
test_ticker.py
test_tightlayout.py ..s..s..s..s..s..s..s..s..s...s
test_transforms.py ....s
test_triangulation.py ...............................................s
test_ttconv.py
test_type1font.py
test_units.py
test_usetex.py ....s..s......s
test_widgets.py .F.F..............................................................s...........................s
test_axes_grid1.py
test_axisartist_angle_helper.py
test_axisartist_axis_artist.py ....                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              [ 98%]
test_axisartist_axislines.py
test_axisartist_clip_path.py
test_axisartist_floating_axes.py
test_axisartist_grid_finder.py
test_axisartist_grid_helper_curvelinear.py
test_mplot3d.py


________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_form_main_list ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f779650>

    def test_form_main_list(self):
>       assert isinstance(self.std_results, list)
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'

/testbed/lib/matplotlib/tests/test_cbook.py:105: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_form_each_dict ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f779a50>

    def test_form_each_dict(self):
>       for res in self.std_results:
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'

/testbed/lib/matplotlib/tests/test_cbook.py:108: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_form_dict_keys ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f779ed0>

    def test_form_dict_keys(self):
>       for res in self.std_results:
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'

/testbed/lib/matplotlib/tests/test_cbook.py:112: AttributeError
_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_baseline _______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f778790>

    def test_results_baseline(self):
>       res = self.std_results[0]
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'

/testbed/lib/matplotlib/tests/test_cbook.py:116: AttributeError
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_bootstrapped _____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f762d10>

    def test_results_bootstrapped(self):
>       results = cbook.boxplot_stats(self.data, bootstrap=10000)
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:121: AttributeError
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_whiskers_float ____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f762210>

    def test_results_whiskers_float(self):
>       results = cbook.boxplot_stats(self.data, whis=3)
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:127: AttributeError
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_whiskers_range ____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f7633d0>

    def test_results_whiskers_range(self):
>       results = cbook.boxplot_stats(self.data, whis=[0, 100])
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:133: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_whiskers_percentiles _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f763550>

    def test_results_whiskers_percentiles(self):
>       results = cbook.boxplot_stats(self.data, whis=[5, 95])
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:139: AttributeError
______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_results_withlabels ______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f763a10>

    def test_results_withlabels(self):
        labels = ['Test1', 2, 'Aardvark', 4]
>       results = cbook.boxplot_stats(self.data, labels=labels)
E       AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:146: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_boxplot_stats.test_label_error __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_boxplot_stats object at 0x7ec93f760e50>

    def test_label_error(self):
        labels = [1, 2]
        with pytest.raises(ValueError):
>           cbook.boxplot_stats(self.data, labels=labels)
E           AttributeError: 'Test_boxplot_stats' object has no attribute 'data'

/testbed/lib/matplotlib/tests/test_cbook.py:157: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_complete[True] __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f761e50>, pickle = True

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_complete(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:213:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f761e50>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_complete[False] _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f740c90>, pickle = False

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_complete(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:213:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f740c90>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_disconnect[True] _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f760c10>, pickle = True

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_disconnect(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:238:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f760c10>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_disconnect[False] ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f760550>, pickle = False

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_disconnect(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:238:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f760550>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_wrong_disconnect[True] ______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f740210>, pickle = True

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_wrong_disconnect(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:256:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f740210>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_callback_wrong_disconnect[False] _____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f7405d0>, pickle = False

    @pytest.mark.parametrize('pickle', [True, False])
    def test_callback_wrong_disconnect(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:256:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f7405d0>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_registration_on_non_empty_registry[True] _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f7426d0>, pickle = True

    @pytest.mark.parametrize('pickle', [True, False])
    def test_registration_on_non_empty_registry(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:274:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f7426d0>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ Test_callback_registry.test_registration_on_non_empty_registry[False] _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f742a10>, pickle = False

    @pytest.mark.parametrize('pickle', [True, False])
    def test_registration_on_non_empty_registry(self, pickle):
        # ensure we start with an empty registry
>       self.is_empty()

/testbed/lib/matplotlib/tests/test_cbook.py:274:


self = <matplotlib.tests.test_cbook.Test_callback_registry object at 0x7ec93f742a10>

    def is_empty(self):
        np.testing.break_cycles()
>       assert self.callbacks._func_cid_map == {}
E       AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'

/testbed/lib/matplotlib/tests/test_cbook.py:201: AttributeError
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_double_register_builtin_cmap ___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_double_register_builtin_cmap():
        name = "viridis"
        match = f"Re-registering the builtin cmap {name!r}."
        with pytest.raises(ValueError, match=match):
            matplotlib.colormaps.register(
                mpl.colormaps[name], name=name, force=True
            )
        with pytest.raises(ValueError, match='A colormap named "viridis"'):
            with pytest.warns(PendingDeprecationWarning):
                cm.register_cmap(name, mpl.colormaps[name])
>       with pytest.warns(UserWarning):
E       PendingDeprecationWarning: The register_cmap function will be deprecated in a future version. Use ``matplotlib.colormaps.register(name)`` instead.

/testbed/lib/matplotlib/tests/test_colors.py:142: PendingDeprecationWarning
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_contourf_log_extension[png] ___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    @image_comparison(['contour_log_extension.png'],
                      remove_text=True, style='mpl20',
                      tol=1.444)
    def test_contourf_log_extension():
        # Remove this line when this test image is regenerated.
        plt.rcParams['pcolormesh.snap'] = False

        # Test that contourf with lognorm is extended correctly
        fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(10, 5))
        fig.subplots_adjust(left=0.05, right=0.95)

        # make data set with large range e.g. between 1e-8 and 1e10
        data_exp = np.linspace(-7.5, 9.5, 1200)
        data = np.power(10, data_exp).reshape(30, 40)
        # make manual levels e.g. between 1e-4 and 1e-6
        levels_exp = np.arange(-4., 7.)
        levels = np.power(10., levels_exp)

        # original data
        c1 = ax1.contourf(data,
                          norm=LogNorm(vmin=data.min(), vmax=data.max()))
        # just show data in levels
        c2 = ax2.contourf(data, levels=levels,
                          norm=LogNorm(vmin=levels.min(), vmax=levels.max()),
                          extend='neither')
        # extend data from levels
        c3 = ax3.contourf(data, levels=levels,
                          norm=LogNorm(vmin=levels.min(), vmax=levels.max()),
                          extend='both')
        cb = plt.colorbar(c1, ax=ax1)
        assert cb.ax.get_ylim() == (1e-8, 1e10)
        cb = plt.colorbar(c2, ax=ax2)
>       assert cb.ax.get_ylim() == (1e-4, 1e6)
E       assert (9.9999999999...05, 1000000.0) == (0.0001, 1000000.0)
E
E         At index 0 diff: 9.999999999999999e-05 != 0.0001
E         Use -v to get more diff

/testbed/lib/matplotlib/tests/test_contour.py:316: AssertionError
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_sphinx_gallery_example_header __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_sphinx_gallery_example_header():
        """
        We have copied EXAMPLE_HEADER and modified it to include meta keywords.
        This test monitors that the version we have copied is still the same as
        the EXAMPLE_HEADER in sphinx-gallery. If sphinx-gallery changes its
        EXAMPLE_HEADER, this test will start to fail. In that case, please update
        the monkey-patching of EXAMPLE_HEADER in conf.py.
        """
        gen_rst = pytest.importorskip('sphinx_gallery.gen_rst')

        EXAMPLE_HEADER = """
    .. DO NOT EDIT.
    .. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
    .. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
    .. "{0}"
    .. LINE NUMBERS ARE GIVEN BELOW.

    .. only:: html

        .. note::
            :class: sphx-glr-download-link-note

            Click :ref:`here <sphx_glr_download_{1}>`
            to download the full example code{2}

    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_{1}:

    """
>       assert gen_rst.EXAMPLE_HEADER == EXAMPLE_HEADER
E       AssertionError: assert '\n.. DO NOT ..._glr_{1}:\n\n' == '\n.. DO NOT ..._glr_{1}:\n\n'
E
E         Skipping 242 identical leading characters in diff, use -v to show
E
E
E         -         Click :ref:`here <sphx_glr_download_{1}>`
E         ?        ------         ^
E         +         :ref:`Go to the end <sphx_glr_download_{1}>`...
E
E         ...Full output truncated (9 lines hidden), use '-vv' to show

/testbed/lib/matplotlib/tests/test_doc.py:34: AssertionError
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_none _____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee0d590>

    def test_detrend_none(self):
        assert mlab.detrend_none(0.) == 0.
        assert mlab.detrend_none(0., axis=1) == 0.
        assert mlab.detrend(0., key="none") == 0.
        assert mlab.detrend(0., key=mlab.detrend_none) == 0.
        for sig in [
>               5.5, self.sig_off, self.sig_slope, self.sig_base,
                (self.sig_base + self.sig_slope + self.sig_off).tolist(),
                np.vstack([self.sig_base,  # 2D case.
                           self.sig_base + self.sig_off,
                           self.sig_base + self.sig_slope,
                           self.sig_base + self.sig_off + self.sig_slope]),
                np.vstack([self.sig_base,  # 2D transposed case.
                           self.sig_base + self.sig_off,
                           self.sig_base + self.sig_slope,
                           self.sig_base + self.sig_off + self.sig_slope]).T,
        ]:
E       AttributeError: 'TestDetrend' object has no attribute 'sig_off'

/testbed/lib/matplotlib/tests/test_mlab.py:124: AttributeError
____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_mean _____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee26a10>

    def test_detrend_mean(self):
        for sig in [0., 5.5]:  # 0D.
            assert mlab.detrend_mean(sig) == 0.
            assert mlab.detrend(sig, key="mean") == 0.
            assert mlab.detrend(sig, key=mlab.detrend_mean) == 0.
        # 1D.
>       self.allclose(mlab.detrend_mean(self.sig_zeros), self.sig_zeros)
E       AttributeError: 'TestDetrend' object has no attribute 'sig_zeros'

/testbed/lib/matplotlib/tests/test_mlab.py:146: AttributeError
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_mean_1d_base_slope_off_list_andor_axis0 ___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee253d0>

    def test_detrend_mean_1d_base_slope_off_list_andor_axis0(self):
>       input = self.sig_base + self.sig_slope + self.sig_off
E       AttributeError: 'TestDetrend' object has no attribute 'sig_base'

/testbed/lib/matplotlib/tests/test_mlab.py:157: AttributeError
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_mean_2d ___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee25fd0>

    def test_detrend_mean_2d(self):
>       input = np.vstack([self.sig_off,
                           self.sig_base + self.sig_off])
E       AttributeError: 'TestDetrend' object has no attribute 'sig_off'

/testbed/lib/matplotlib/tests/test_mlab.py:164: AttributeError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_ValueError __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee26950>

    def test_detrend_ValueError(self):
        for signal, kwargs in [
>               (self.sig_slope[np.newaxis], {"key": "spam"}),
                (self.sig_slope[np.newaxis], {"key": 5}),
                (5.5, {"axis": 0}),
                (self.sig_slope, {"axis": 1}),
                (self.sig_slope[np.newaxis], {"axis": 2}),
        ]:
E       AttributeError: 'TestDetrend' object has no attribute 'sig_slope'

/testbed/lib/matplotlib/tests/test_mlab.py:194: AttributeError
_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_mean_ValueError _______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee26b10>

    def test_detrend_mean_ValueError(self):
        for signal, kwargs in [
                (5.5, {"axis": 0}),
>               (self.sig_slope, {"axis": 1}),
                (self.sig_slope[np.newaxis], {"axis": 2}),
        ]:
E       AttributeError: 'TestDetrend' object has no attribute 'sig_slope'

/testbed/lib/matplotlib/tests/test_mlab.py:206: AttributeError
___________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_linear ____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee26f50>

    def test_detrend_linear(self):
        # 0D.
        assert mlab.detrend_linear(0.) == 0.
        assert mlab.detrend_linear(5.5) == 0.
        assert mlab.detrend(5.5, key="linear") == 0.
        assert mlab.detrend(5.5, key=mlab.detrend_linear) == 0.
        for sig in [  # 1D.
>               self.sig_off,
                self.sig_slope,
                self.sig_slope + self.sig_off,
        ]:
E       AttributeError: 'TestDetrend' object has no attribute 'sig_off'

/testbed/lib/matplotlib/tests/test_mlab.py:219: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_str_linear_1d ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee24690>

    def test_detrend_str_linear_1d(self):
>       input = self.sig_slope + self.sig_off
E       AttributeError: 'TestDetrend' object has no attribute 'sig_slope'

/testbed/lib/matplotlib/tests/test_mlab.py:226: AttributeError
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestDetrend.test_detrend_linear_2d __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_mlab.TestDetrend object at 0x7ec93ee24b90>

    def test_detrend_linear_2d(self):
>       input = np.vstack([self.sig_off,
                           self.sig_slope,
                           self.sig_slope + self.sig_off])
E       AttributeError: 'TestDetrend' object has no attribute 'sig_off'

/testbed/lib/matplotlib/tests/test_mlab.py:233: AttributeError
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_pylab_integration ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_pylab_integration():
        IPython = pytest.importorskip("IPython")
>       mpl.testing.subprocess_run_helper(
            IPython.start_ipython,
            "--pylab",
            "-c",
            ";".join((
                "import matplotlib.pyplot as plt",
                "assert plt._REPL_DISPLAYHOOK == plt._ReplDisplayHook.IPYTHON",
            )),
            timeout=60,
        )

/testbed/lib/matplotlib/tests/test_pyplot.py:352:

/testbed/lib/matplotlib/testing/__init__.py:69: in subprocess_run_helper
    proc = subprocess.run(


input = None, capture_output = False, timeout = 60, check = True, popenargs = (['/opt/miniconda3/envs/testbed/bin/python', '-c', 'from IPython import start_ipython; start_ipython()', '--pylab', '-c', 'import matplotlib.pyplot as plt;assert plt._REPL_DISPLAYHOOK == plt._ReplDisplayHook.IPYTHON'],), kwargs = {'env': {'CONDA_DEFAULT_ENV': 'testbed', 'CONDA_EXE': '/opt/miniconda3/bin/conda', 'CONDA_PREFIX': '/opt/miniconda3/en...'CONDA_PREFIX_1': '/openhands/micromamba/envs/openhands', ...}, 'stderr': -1, 'stdout': -1, 'universal_newlines': True}, process = <Popen: returncode: 1 args: ['/opt/miniconda3/envs/testbed/bin/python', '-c'...>, stdout = '\x1b[0;31m---------------------------------------------------------------------------\x1b[0m\n\x1b[0;31mModuleNotFoun...  its source directory; please exit the numpy source tree, and relaunch\n        your python interpreter from there.\n'
stderr = '/opt/miniconda3/envs/testbed/lib/python3.11/site-packages/IPython/core/interactiveshell.py:915: UserWarning: Attempti...alenv.\n  warn(\n[TerminalIPythonApp] WARNING | Eventloop or matplotlib integration failed. Is matplotlib installed?\n', retcode = 1

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.

        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,
        or pass capture_output=True to capture both.

        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.

        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.

        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.

        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.

        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE

        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE

        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '['/opt/miniconda3/envs/testbed/bin/python', '-c', 'from IPython import start_ipython; start_ipython()', '--pylab', '-c', 'import matplotlib.pyplot as plt;assert plt._REPL_DISPLAYHOOK == plt._ReplDisplayHook.IPYTHON']' returned non-zero exit status 1.

/opt/miniconda3/envs/testbed/lib/python3.11/subprocess.py:571: CalledProcessError
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_rcparams_update _________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_rcparams_update():
        rc = mpl.RcParams({'figure.figsize': (3.5, 42)})
        bad_dict = {'figure.figsize': (3.5, 42, 1)}
        # make sure validation happens on input
        with pytest.raises(ValueError), \
             pytest.warns(UserWarning, match="validate"):
>           rc.update(bad_dict)

/testbed/lib/matplotlib/tests/test_rcparams.py:111:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
<frozen _collections_abc>:949: in update
    ???


self = RcParams({'figure.figsize': [3.5, 42.0]}), key = 'figure.figsize', val = (3.5, 42, 1)

    def __setitem__(self, key, val):
        try:
            if key in _deprecated_map:
                version, alt_key, alt_val, inverse_alt = _deprecated_map[key]
                _api.warn_deprecated(
                    version, name=key, obj_type="rcparam", alternative=alt_key)
                key = alt_key
                val = alt_val(val)
            elif key in _deprecated_remain_as_none and val is not None:
                version, = _deprecated_remain_as_none[key]
                _api.warn_deprecated(version, name=key, obj_type="rcparam")
            elif key in _deprecated_ignore_map:
                version, alt_key = _deprecated_ignore_map[key]
                _api.warn_deprecated(
                    version, name=key, obj_type="rcparam", alternative=alt_key)
                return
            elif key == 'backend':
                if val is rcsetup._auto_backend_sentinel:
                    if 'backend' in self:
                        return
            try:
                cval = self.validate[key](val)
            except ValueError as ve:
>               raise ValueError(f"Key {key}: {ve}") from None
E               ValueError: Key figure.figsize: Expected 2 values, but there are 3 values in (3.5, 42, 1)

/testbed/lib/matplotlib/__init__.py:651: ValueError

During handling of the above exception, another exception occurred:

    def test_rcparams_update():
        rc = mpl.RcParams({'figure.figsize': (3.5, 42)})
        bad_dict = {'figure.figsize': (3.5, 42, 1)}
        # make sure validation happens on input
>       with pytest.raises(ValueError), \
             pytest.warns(UserWarning, match="validate"):
E            Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
E             Emitted warnings: [].

/testbed/lib/matplotlib/tests/test_rcparams.py:109: Failed
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_rcparams_init __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    def test_rcparams_init():
        with pytest.raises(ValueError), \
             pytest.warns(UserWarning, match="validate"):
>           mpl.RcParams({'figure.figsize': (3.5, 42, 1)})

/testbed/lib/matplotlib/tests/test_rcparams.py:117:

/testbed/lib/matplotlib/__init__.py:626: in __init__
    self.update(*args, **kwargs)
<frozen _collections_abc>:949: in update
    ???


self = RcParams({}), key = 'figure.figsize', val = (3.5, 42, 1)

    def __setitem__(self, key, val):
        try:
            if key in _deprecated_map:
                version, alt_key, alt_val, inverse_alt = _deprecated_map[key]
                _api.warn_deprecated(
                    version, name=key, obj_type="rcparam", alternative=alt_key)
                key = alt_key
                val = alt_val(val)
            elif key in _deprecated_remain_as_none and val is not None:
                version, = _deprecated_remain_as_none[key]
                _api.warn_deprecated(version, name=key, obj_type="rcparam")
            elif key in _deprecated_ignore_map:
                version, alt_key = _deprecated_ignore_map[key]
                _api.warn_deprecated(
                    version, name=key, obj_type="rcparam", alternative=alt_key)
                return
            elif key == 'backend':
                if val is rcsetup._auto_backend_sentinel:
                    if 'backend' in self:
                        return
            try:
                cval = self.validate[key](val)
            except ValueError as ve:
>               raise ValueError(f"Key {key}: {ve}") from None
E               ValueError: Key figure.figsize: Expected 2 values, but there are 3 values in (3.5, 42, 1)

/testbed/lib/matplotlib/__init__.py:651: ValueError

During handling of the above exception, another exception occurred:

    def test_rcparams_init():
>       with pytest.raises(ValueError), \
             pytest.warns(UserWarning, match="validate"):
E            Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
E             Emitted warnings: [].

/testbed/lib/matplotlib/tests/test_rcparams.py:115: Failed
__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_colormap[png] __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

args = (), kwds = {'extension': 'png', 'request': <FixtureRequest for <Function test_colormap[png]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 0.021):
E               result_images/test_streamplot/streamplot_colormap.png
E               result_images/test_streamplot/streamplot_colormap-expected.png
E               result_images/test_streamplot/streamplot_colormap-failed-diff.png

/opt/miniconda3/envs/testbed/lib/python3.11/contextlib.py:81: ImageComparisonFailure
_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ TestScalarFormatter.test_mathtext_ticks ________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

self = <matplotlib.tests.test_ticker.TestScalarFormatter object at 0x7ec93e069890>

    def test_mathtext_ticks(self):
        mpl.rcParams.update({
            'font.family': 'serif',
            'font.serif': 'cmr10',
            'axes.formatter.use_mathtext': False
        })

>       with pytest.warns(UserWarning, match='cmr10 font should ideally'):
E       UserWarning: Glyph 8722 (\N{MINUS SIGN}) missing from current font.

/testbed/lib/matplotlib/tests/test_ticker.py:724: UserWarning
______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_rectangle_selector[kwargs1-Support for drawtype='line' is deprecated] ______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

ax = <AxesSubplot: >, kwargs = {'drawtype': 'line', 'useblit': False}, warning_msg = "Support for drawtype='line' is deprecated"

    @pytest.mark.parametrize('kwargs, warning_msg', [
        (dict(), None),
        (dict(drawtype='line', useblit=False),
         "Support for drawtype='line' is deprecated"),
        (dict(useblit=True, button=1), None),
        (dict(drawtype='none', minspanx=10, minspany=10),
         "Support for drawtype='none' is deprecated"),
        (dict(minspanx=10, minspany=10, spancoords='pixels'), None),
        (dict(props=dict(fill=True)), None),
    ])
    def test_rectangle_selector(ax, kwargs, warning_msg):
        onselect = mock.Mock(spec=noop, return_value=None)

>       with (pytest.warns(MatplotlibDeprecationWarning, match=warning_msg)
                if warning_msg else nullcontext()):
E               matplotlib._api.deprecation.MatplotlibDeprecationWarning: The 'drawtype' parameter of __init__() was deprecated in Matplotlib 3.5 and will be removed two minor releases later. If any parameter follows 'drawtype', they should be passed as keyword, not positionally.

/testbed/lib/matplotlib/tests/test_widgets.py:38: MatplotlibDeprecationWarning
______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________ test_rectangle_selector[kwargs3-Support for drawtype='none' is deprecated] ______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

ax = <AxesSubplot: >, kwargs = {'drawtype': 'none', 'minspanx': 10, 'minspany': 10}, warning_msg = "Support for drawtype='none' is deprecated"

    @pytest.mark.parametrize('kwargs, warning_msg', [
        (dict(), None),
        (dict(drawtype='line', useblit=False),
         "Support for drawtype='line' is deprecated"),
        (dict(useblit=True, button=1), None),
        (dict(drawtype='none', minspanx=10, minspany=10),
         "Support for drawtype='none' is deprecated"),
        (dict(minspanx=10, minspany=10, spancoords='pixels'), None),
        (dict(props=dict(fill=True)), None),
    ])
    def test_rectangle_selector(ax, kwargs, warning_msg):
        onselect = mock.Mock(spec=noop, return_value=None)

>       with (pytest.warns(MatplotlibDeprecationWarning, match=warning_msg)
                if warning_msg else nullcontext()):
E               matplotlib._api.deprecation.MatplotlibDeprecationWarning: The 'drawtype' parameter of __init__() was deprecated in Matplotlib 3.5 and will be removed two minor releases later. If any parameter follows 'drawtype', they should be passed as keyword, not positionally.

/testbed/lib/matplotlib/tests/test_widgets.py:38: MatplotlibDeprecationWarning
======================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================= short test summary info ========================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================
FAILED test_cbook.py::Test_boxplot_stats::test_form_main_list - AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'
FAILED test_cbook.py::Test_boxplot_stats::test_form_each_dict - AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'
FAILED test_cbook.py::Test_boxplot_stats::test_form_dict_keys - AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'
FAILED test_cbook.py::Test_boxplot_stats::test_results_baseline - AttributeError: 'Test_boxplot_stats' object has no attribute 'std_results'
FAILED test_cbook.py::Test_boxplot_stats::test_results_bootstrapped - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_results_whiskers_float - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_results_whiskers_range - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_results_whiskers_percentiles - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_results_withlabels - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_boxplot_stats::test_label_error - AttributeError: 'Test_boxplot_stats' object has no attribute 'data'
FAILED test_cbook.py::Test_callback_registry::test_callback_complete[True] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_complete[False] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_disconnect[True] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_disconnect[False] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_wrong_disconnect[True] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_callback_wrong_disconnect[False] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_registration_on_non_empty_registry[True] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_cbook.py::Test_callback_registry::test_registration_on_non_empty_registry[False] - AttributeError: 'Test_callback_registry' object has no attribute 'callbacks'
FAILED test_colors.py::test_double_register_builtin_cmap - PendingDeprecationWarning: The register_cmap function will be deprecated in a future version. Use ``matplotlib.colormaps.register(name)`` instead.
FAILED test_contour.py::test_contourf_log_extension[png] - assert (9.9999999999...05, 1000000.0) == (0.0001, 1000000.0)
FAILED test_doc.py::test_sphinx_gallery_example_header - AssertionError: assert '\n.. DO NOT ..._glr_{1}:\n\n' == '\n.. DO NOT ..._glr_{1}:\n\n'
FAILED test_mlab.py::TestDetrend::test_detrend_none - AttributeError: 'TestDetrend' object has no attribute 'sig_off'
FAILED test_mlab.py::TestDetrend::test_detrend_mean - AttributeError: 'TestDetrend' object has no attribute 'sig_zeros'
FAILED test_mlab.py::TestDetrend::test_detrend_mean_1d_base_slope_off_list_andor_axis0 - AttributeError: 'TestDetrend' object has no attribute 'sig_base'
FAILED test_mlab.py::TestDetrend::test_detrend_mean_2d - AttributeError: 'TestDetrend' object has no attribute 'sig_off'
FAILED test_mlab.py::TestDetrend::test_detrend_ValueError - AttributeError: 'TestDetrend' object has no attribute 'sig_slope'
FAILED test_mlab.py::TestDetrend::test_detrend_mean_ValueError - AttributeError: 'TestDetrend' object has no attribute 'sig_slope'
FAILED test_mlab.py::TestDetrend::test_detrend_linear - AttributeError: 'TestDetrend' object has no attribute 'sig_off'
FAILED test_mlab.py::TestDetrend::test_detrend_str_linear_1d - AttributeError: 'TestDetrend' object has no attribute 'sig_slope'
FAILED test_mlab.py::TestDetrend::test_detrend_linear_2d - AttributeError: 'TestDetrend' object has no attribute 'sig_off'
FAILED test_pyplot.py::test_pylab_integration - subprocess.CalledProcessError: Command '['/opt/miniconda3/envs/testbed/bin/python', '-c', 'from IPython import start_ipython; start_ipython()', '--pylab', '-c', 'import matplotlib.pyplot as plt;assert plt._REPL_DISPLAYHOOK == plt._ReplDisplayHook.IPYTHON']' returned non-zero exit status 1.
FAILED test_rcparams.py::test_rcparams_update - Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
FAILED test_rcparams.py::test_rcparams_init - Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
FAILED test_streamplot.py::test_colormap[png] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 0.021):
FAILED test_ticker.py::TestScalarFormatter::test_mathtext_ticks - UserWarning: Glyph 8722 (\N{MINUS SIGN}) missing from current font.
FAILED test_widgets.py::test_rectangle_selector[kwargs1-Support for drawtype='line' is deprecated] - matplotlib._api.deprecation.MatplotlibDeprecationWarning: The 'drawtype' parameter of __init__() was deprecated in Matplotlib 3.5 and will be removed two minor releases later. If any parameter follows 'drawtype', they should be passed as keyword, not positionally.
FAILED test_widgets.py::test_rectangle_selector[kwargs3-Support for drawtype='none' is deprecated] - matplotlib._api.deprecation.MatplotlibDeprecationWarning: The 'drawtype' parameter of __init__() was deprecated in Matplotlib 3.5 and will be removed two minor releases later. If any parameter follows 'drawtype', they should be passed as keyword, not positionally.
================================================================================================================================================================================================================================================================================================================================================================================================================================================================================= 37 failed, 8160 passed, 918 skipped, 12 xfailed in 700.32s (0:11:40) =================================================================================================================================================================================================================================================================================================================================================================================================================================================================================
[The command completed with exit code 1.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--

----------[The above error occurred. Retrying... (attempt 1 of 5)]----------

2025-01-25 21:14:47,445 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.matplotlib_s_matplotlib-24149. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-25 21:14:47,445 - INFO - Logging LLM completions for instance matplotlib__matplotlib-24149 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/Qwen2.5-Coder-7B-Instruct_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/matplotlib__matplotlib-24149
2025-01-25 21:14:47,478 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_810kmmpbvqr91wbm_1nhip1b65cn5t1ze
2025-01-25 21:14:47,485 - INFO - [runtime 3f44041e-7b82-4e9b-8749-8948d11a72c3-347380208acd6bd4] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_810kmmpbvqr91wbm_1nhip1b65cn5t1ze
2025-01-25 21:14:48,517 - INFO - [runtime 3f44041e-7b82-4e9b-8749-8948d11a72c3-347380208acd6bd4] Container started: openhands-runtime-3f44041e-7b82-4e9b-8749-8948d11a72c3-347380208acd6bd4. VSCode URL: None
2025-01-25 21:14:48,518 - INFO - [runtime 3f44041e-7b82-4e9b-8749-8948d11a72c3-347380208acd6bd4] Waiting for client to become ready at http://localhost:30677...
2025-01-25 21:15:12,593 - INFO - [runtime 3f44041e-7b82-4e9b-8749-8948d11a72c3-347380208acd6bd4] Runtime is ready.
2025-01-25 21:15:13,231 - INFO - ------------------------------
2025-01-25 21:15:13,231 - INFO - BEGIN Runtime Initialization Fn
2025-01-25 21:15:13,231 - INFO - ------------------------------
2025-01-25 21:15:13,231 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=matplotlib__matplotlib-24149' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-25 21:15:13,859 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:15:13,859 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-25 21:15:14,488 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:15:14,488 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-25 21:15:15,115 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:15:15,124 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-25 21:15:15,750 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=matplotlib__matplotlib-24149
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:15:15,751 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-25 21:15:16,377 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:15:16,378 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-25 21:15:18,013 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: matplotlib__matplotlib__3.6
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:15:18,013 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/matplotlib__matplotlib__3.6
2025-01-25 21:15:18,641 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:15:18,641 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-25 21:15:19,774 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at af39f1edff Merge pull request #24102 from ianthomas23/simple_pyproject
[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:15:19,774 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-25 21:15:20,404 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:15:20,405 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-25 21:15:21,032 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:15:21,032 - INFO - ------------------------------
2025-01-25 21:15:21,033 - INFO - END Runtime Initialization Fn
2025-01-25 21:15:21,033 - INFO - ------------------------------
2025-01-25 21:15:21,034 - INFO - Function calling not enabled for model hosted_vllm/Qwen/Qwen2.5-Coder-7B-Instruct. Mocking function calling via prompting.
2025-01-25 21:15:21,038 - INFO - [runtime 3f44041e-7b82-4e9b-8749-8948d11a72c3-347380208acd6bd4] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-01-25 21:15:21,055 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-25 21:15:21,056 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-25 21:15:26,613 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-25 21:15:32,722 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-25 21:15:37,638 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-25 21:15:42,976 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-25 21:15:47,819 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-25 21:15:54,292 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-25 21:16:01,759 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-25 21:16:08,148 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-25 21:16:14,627 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-25 21:16:20,985 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-25 21:16:27,368 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-25 21:16:34,208 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-25 21:16:40,545 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-25 21:16:48,860 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-25 21:16:48,860 - WARNING - Action, Observation pattern detected
2025-01-25 21:16:48,860 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-25 21:16:48,861 - ERROR - AgentStuckInLoopError: Agent got stuck in a loop
2025-01-25 21:16:48,861 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-25 21:16:49,133 - INFO - ------------------------------
2025-01-25 21:16:49,133 - INFO - BEGIN Runtime Completion Fn
2025-01-25 21:16:49,133 - INFO - ------------------------------
2025-01-25 21:16:49,133 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/matplotlib__matplotlib__3.6
2025-01-25 21:16:49,761 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:16:49,761 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-25 21:16:50,388 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:16:50,389 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-25 21:16:51,016 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:16:51,016 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached af39f1edffcd828f05cfdd04f2e59506bb4a27bc
2025-01-25 21:16:51,644 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "501ddd764b4c",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..ad7b7571ec
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,4 @@
+import numpy as np
+import matplotlib.pyplot as plt
+f, ax = plt.subplots()
+ax.bar([np.nan], [np.nan])
[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:16:51,645 - INFO - ------------------------------
2025-01-25 21:16:51,645 - INFO - END Runtime Completion Fn
2025-01-25 21:16:51,645 - INFO - ------------------------------
2025-01-25 21:16:51,645 - INFO - Got git diff for instance matplotlib__matplotlib-24149:
--------
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..ad7b7571ec
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,4 @@
+import numpy as np
+import matplotlib.pyplot as plt
+f, ax = plt.subplots()
+ax.bar([np.nan], [np.nan])
--------
