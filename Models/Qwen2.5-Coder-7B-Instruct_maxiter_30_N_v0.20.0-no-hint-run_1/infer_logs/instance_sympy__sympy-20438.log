2025-01-25 21:11:56,672 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_8i1yo2ayuh04yw9b_1nhip1b65cn5t1ze
2025-01-25 21:11:56,676 - INFO - [runtime e31b447f-bd1b-4a2a-96cc-150e60f570e8-b32e470d416453f6] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_8i1yo2ayuh04yw9b_1nhip1b65cn5t1ze
2025-01-25 21:11:57,915 - INFO - [runtime e31b447f-bd1b-4a2a-96cc-150e60f570e8-b32e470d416453f6] Container started: openhands-runtime-e31b447f-bd1b-4a2a-96cc-150e60f570e8-b32e470d416453f6. VSCode URL: None
2025-01-25 21:11:57,915 - INFO - [runtime e31b447f-bd1b-4a2a-96cc-150e60f570e8-b32e470d416453f6] Waiting for client to become ready at http://localhost:33269...
2025-01-25 21:12:28,017 - INFO - [runtime e31b447f-bd1b-4a2a-96cc-150e60f570e8-b32e470d416453f6] Runtime is ready.
2025-01-25 21:12:28,657 - INFO - ------------------------------
2025-01-25 21:12:28,657 - INFO - BEGIN Runtime Initialization Fn
2025-01-25 21:12:28,657 - INFO - ------------------------------
2025-01-25 21:12:28,657 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sympy__sympy-20438' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-25 21:12:29,285 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:12:29,285 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-25 21:12:29,912 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:12:29,913 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-25 21:12:30,539 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:12:30,550 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-25 21:12:31,188 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=sympy__sympy-20438
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:12:31,188 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-25 21:12:31,815 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:12:31,815 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-25 21:12:33,953 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sympy__sympy__1.8
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:12:33,954 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sympy__sympy__1.8
2025-01-25 21:12:34,582 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:12:34,582 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-25 21:12:35,212 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 33b47e4bd6 Merge pull request #20646 from Mohitbalwani26/refactor(test_ode)
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:12:35,212 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-25 21:12:35,840 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:12:35,840 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-25 21:12:36,466 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:12:36,466 - INFO - ------------------------------
2025-01-25 21:12:36,466 - INFO - END Runtime Initialization Fn
2025-01-25 21:12:36,466 - INFO - ------------------------------
2025-01-25 21:12:36,468 - INFO - Function calling not enabled for model hosted_vllm/Qwen/Qwen2.5-Coder-7B-Instruct. Mocking function calling via prompting.
2025-01-25 21:12:36,472 - INFO - [runtime e31b447f-bd1b-4a2a-96cc-150e60f570e8-b32e470d416453f6] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-01-25 21:12:36,491 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-25 21:12:36,491 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-25 21:12:43,814 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-25 21:13:06,158 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-25 21:13:12,774 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-25 21:13:24,310 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-25 21:13:28,704 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-25 21:13:38,244 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-25 21:13:46,616 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-25 21:13:53,480 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-25 21:14:02,224 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-25 21:14:19,618 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-25 21:14:27,178 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-25 21:14:38,496 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-25 21:14:44,424 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-25 21:14:55,715 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-25 21:15:05,200 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-25 21:15:15,830 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-25 21:15:26,351 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-25 21:15:35,223 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-25 21:15:44,670 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-25 21:15:53,778 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-25 21:16:02,711 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-25 21:16:11,037 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-25 21:16:18,901 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-25 21:16:27,655 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-25 21:16:36,567 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-25 21:16:46,159 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-25 21:16:54,361 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-25 21:17:01,786 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-25 21:17:09,404 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-25 21:17:17,562 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-25 21:17:17,562 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-25 21:17:17,563 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-25 21:17:17,563 - WARNING - Stopping agent due to traffic control
2025-01-25 21:17:17,564 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-25 21:17:17,763 - INFO - ------------------------------
2025-01-25 21:17:17,763 - INFO - BEGIN Runtime Completion Fn
2025-01-25 21:17:17,763 - INFO - ------------------------------
2025-01-25 21:17:17,763 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sympy__sympy__1.8
2025-01-25 21:17:18,390 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:17:18,391 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-25 21:17:19,017 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:17:19,017 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-25 21:17:19,643 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:17:19,644 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 33b47e4bd60e2302e42616141e76285038b724d6
2025-01-25 21:17:20,270 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "16f7e04a6c85",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..facd2f5ae6
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,10 @@
+from sympy import FiniteSet, ProductSet, Eq
+
+a = FiniteSet(1, 2)
+b = ProductSet(a, a)
+c = FiniteSet((1, 1), (1, 2), (2, 1), (2, 2))
+
+print("b.intersection(c) == c.intersection(b):", b.intersection(c) == c.intersection(b))
+print("b.is_subset(c):", b.is_subset(c))
+print("c.is_subset(b):", c.is_subset(b))
+print("Eq(b, c).simplify():", Eq(b, c).simplify())
\ No newline at end of file
diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py
index 3c4aa86e36..a3465d52d3 100644
--- a/sympy/sets/sets.py
+++ b/sympy/sets/sets.py
@@ -337,14 +337,58 @@ def contains(self, other):
         return b

     def _contains(self, other):
-        raise NotImplementedError(filldedent('''
-            (%s)._contains(%s) is not defined. This method, when
-            defined, will receive a sympified object. The method
-            should return True, False, None or something that
-            expresses what must be true for the containment of that
-            object in self to be evaluated. If None is returned
-            then a generic Contains object will be returned
-            by the ``contains`` method.''' % (self, other)))
+        if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    return not other.is_subset(self)

     def is_subset(self, other):
         """
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-25 21:17:20,270 - INFO - ------------------------------
2025-01-25 21:17:20,270 - INFO - END Runtime Completion Fn
2025-01-25 21:17:20,270 - INFO - ------------------------------
2025-01-25 21:17:20,271 - INFO - Got git diff for instance sympy__sympy-20438:
--------
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..facd2f5ae6
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,10 @@
+from sympy import FiniteSet, ProductSet, Eq
+
+a = FiniteSet(1, 2)
+b = ProductSet(a, a)
+c = FiniteSet((1, 1), (1, 2), (2, 1), (2, 2))
+
+print("b.intersection(c) == c.intersection(b):", b.intersection(c) == c.intersection(b))
+print("b.is_subset(c):", b.is_subset(c))
+print("c.is_subset(b):", c.is_subset(b))
+print("Eq(b, c).simplify():", Eq(b, c).simplify())
\ No newline at end of file
diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py
index 3c4aa86e36..a3465d52d3 100644
--- a/sympy/sets/sets.py
+++ b/sympy/sets/sets.py
@@ -337,14 +337,58 @@ def contains(self, other):
         return b

     def _contains(self, other):
-        raise NotImplementedError(filldedent('''
-            (%s)._contains(%s) is not defined. This method, when
-            defined, will receive a sympified object. The method
-            should return True, False, None or something that
-            expresses what must be true for the containment of that
-            object in self to be evaluated. If None is returned
-            then a generic Contains object will be returned
-            by the ``contains`` method.''' % (self, other)))
+        if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    if isinstance(other, Complement):
+    return self.superset(other.superset)
+else:
+    return not other.is_subset(self)

     def is_subset(self, other):
         """
--------
