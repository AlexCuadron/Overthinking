diff --git a/django/db/backends/ddl_references.py b/django/db/backends/ddl_references.py
index 44e49806f8..d49f3e239a 100644
--- a/django/db/backends/ddl_references.py
+++ b/django/db/backends/ddl_references.py
@@ -84,8 +84,12 @@ class Columns(TableColumns):
     def __str__(self):
         def col_str(column, idx):
             try:
-                return self.quote_name(column) + self.col_suffixes[idx]
+                suffix = self.col_suffixes[idx]
             except IndexError:
+                suffix = ''
+            if suffix:
+                return f'{self.quote_name(column)} {suffix}'
+            else:
                 return self.quote_name(column)

         return ', '.join(col_str(column, idx) for idx, column in enumerate(self.columns))
@@ -110,15 +114,18 @@ class IndexColumns(Columns):

     def __str__(self):
         def col_str(column, idx):
-            # Index.__init__() guarantees that self.opclasses is the same
-            # length as self.columns.
-            col = '{} {}'.format(self.quote_name(column), self.opclasses[idx])
+            parts = [self.quote_name(column)]
+            opclass = self.opclasses[idx]
+            if opclass:
+                parts.append(opclass)
+            suffix = ''
             try:
-                col = '{} {}'.format(col, self.col_suffixes[idx])
+                suffix = self.col_suffixes[idx]
             except IndexError:
                 pass
-            return col
-
+            if suffix.strip():
+                parts.append(suffix)
+            return ' '.join(parts)
         return ', '.join(col_str(column, idx) for idx, column in enumerate(self.columns))
