diff --git a/bug_reproduce.py b/bug_reproduce.py
new file mode 100644
index 0000000000..4d9f4d7b06
--- /dev/null
+++ b/bug_reproduce.py
@@ -0,0 +1,11 @@
+import matplotlib.pyplot as plt
+import numpy as np
+
+# This script demonstrates the undesired behavior when passing a boolean array to contour.
+# Currently, if we do not specify levels, contour() defaults to 7 levels.
+# We would like it to default to a single level at 0.5.
+
+bool_data = (np.arange(100).reshape((10,10)) % 2 == 0)
+plt.contour(bool_data)
+plt.title("Contour of boolean data without explicit levels")
+plt.show()
diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py
index 144eadeae2..fa2fb39249 100644
--- a/lib/matplotlib/contour.py
+++ b/lib/matplotlib/contour.py
@@ -1122,7 +1122,9 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):
         Determine the contour levels and store in self.levels.
         """
         if self.levels is None:
-            if len(args) == 0:
+            if self._is_bool_input and len(args) == 0:
+                levels_arg = [0.5]
+            elif len(args) == 0:
                 levels_arg = 7  # Default, hard-wired.
             else:
                 levels_arg = args[0]
@@ -1456,6 +1458,7 @@ class QuadContourSet(ContourSet):
         else:
             raise _api.nargs_error(fn, takes="from 1 to 4", given=nargs)
         z = ma.masked_invalid(z, copy=False)
+        self._is_bool_input = (z.dtype == bool or z.dtype == np.bool_)
         self.zmax = float(z.max())
         self.zmin = float(z.min())
         if self.logscale and self.zmin <= 0:
