diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py
index abdeba8efb..e87e60957d 100644
--- a/astropy/io/ascii/rst.py
+++ b/astropy/io/ascii/rst.py
@@ -57,8 +57,21 @@ class RST(FixedWidth):
     data_class = SimpleRSTData
     header_class = SimpleRSTHeader

-    def __init__(self):
-        super().__init__(delimiter_pad=None, bookend=False)
+    def __init__(
+        self,
+        col_starts=None,
+        col_ends=None,
+        delimiter_pad=None,
+        bookend=False,
+        header_rows=None,
+    ):
+        super().__init__(
+            col_starts=col_starts,
+            col_ends=col_ends,
+            delimiter_pad=delimiter_pad,
+            bookend=bookend,
+            header_rows=header_rows,
+        )

     def write(self, lines):
         lines = super().write(lines)
diff --git a/tmp_reproduce.py b/tmp_reproduce.py
new file mode 100644
index 0000000000..8319f98bed
--- /dev/null
+++ b/tmp_reproduce.py
@@ -0,0 +1,23 @@
+import sys
+from astropy.table import QTable
+import astropy.units as u
+
+# Script to reproduce the error with RST writer when passing header_rows
+# The last call should fail with a TypeError in the unpatched code.
+
+tbl = QTable({'wave': [350,950]*u.nm, 'response': [0.7, 1.2]*u.count})
+
+print("\n========================")
+print("Writing table in ASCII RST (no header_rows specified, should succeed)")
+print("========================\n")
+tbl.write(sys.stdout, format="ascii.rst")
+
+print("\n========================")
+print("Writing table in ASCII fixed_width with header_rows=[\"name\", \"unit\"] (should succeed)")
+print("========================\n")
+tbl.write(sys.stdout, format="ascii.fixed_width", header_rows=["name", "unit"])
+
+print("\n========================")
+print("Now writing in ASCII RST with header_rows=[\"name\", \"unit\"] (should fail if not patched)")
+print("========================\n")
+tbl.write(sys.stdout, format="ascii.rst", header_rows=["name", "unit"])
\ No newline at end of file
