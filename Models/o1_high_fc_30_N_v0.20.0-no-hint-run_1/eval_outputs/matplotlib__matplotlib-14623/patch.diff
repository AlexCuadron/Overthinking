diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py
index da2dea6f57..ab313d729e 100644
--- a/lib/matplotlib/axes/_base.py
+++ b/lib/matplotlib/axes/_base.py
@@ -3644,8 +3644,14 @@ class _AxesBase(martist.Artist):
                 f"Attempting to set identical bottom == top == {bottom} "
                 f"results in singular transformations; automatically "
                 f"expanding.")
-        bottom, top = self.yaxis.get_major_locator().nonsingular(bottom, top)
-        bottom, top = self.yaxis.limit_range_for_scale(bottom, top)
+            bottom, top = self.yaxis.get_major_locator().nonsingular(bottom, top)
+            bottom, top = self.yaxis.limit_range_for_scale(bottom, top)
+        elif bottom > top:
+            # The user wants to invert the axis, so do not reorder
+            pass
+        else:
+            bottom, top = self.yaxis.get_major_locator().nonsingular(bottom, top)
+            bottom, top = self.yaxis.limit_range_for_scale(bottom, top)

         self.viewLim.intervaly = (bottom, top)
         if auto is not None:
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..691bcf2e22
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,18 @@
+import numpy as np
+import matplotlib.pyplot as plt
+
+# Reproduction script from the PR description
+# We expect that in matplotlib 3.1.0, reversing a log scale axis with set_ylim
+# inverts the axis on linear scale but not on log scale.
+
+
+y = np.linspace(1000e2, 1, 100)
+x = np.exp(-np.linspace(0, 1, y.size))
+
+for yscale in ('linear', 'log'):
+    fig, ax = plt.subplots()
+    ax.plot(x, y)
+    ax.set_yscale(yscale)
+    ax.set_ylim(y.max(), y.min())
+    ax.set_title(f'y scale = {yscale}')
+    plt.show()
\ No newline at end of file
