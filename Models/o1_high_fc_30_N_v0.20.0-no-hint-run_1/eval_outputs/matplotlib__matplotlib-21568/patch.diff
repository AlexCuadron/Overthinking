diff --git a/3.5.0.dev2475+gf0632c0fc7.d20250114.png b/3.5.0.dev2475+gf0632c0fc7.d20250114.png
new file mode 100644
index 0000000000..de4176a666
Binary files /dev/null and b/3.5.0.dev2475+gf0632c0fc7.d20250114.png differ
diff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py
index b068fbb1d8..c0dce1f9b6 100644
--- a/lib/matplotlib/cbook/__init__.py
+++ b/lib/matplotlib/cbook/__init__.py
@@ -1303,6 +1303,9 @@ def _check_1d(x):
     if not hasattr(x, 'shape') or len(x.shape) < 1:
         return np.atleast_1d(x)
     else:
+        if hasattr(x, 'to_numpy'):
+            x = x.to_numpy()
+        x = np.asanyarray(x)
         try:
             # work around
             # https://github.com/pandas-dev/pandas/issues/27775 which
@@ -1339,7 +1342,7 @@ def _check_1d(x):
         # AssertionError for some Series objects, but should be
         # IndexError as described in
         # https://github.com/pandas-dev/pandas/issues/35527
-        except (AssertionError, IndexError, TypeError):
+        except (AssertionError, IndexError, TypeError, ValueError):
             return np.atleast_1d(x)


diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py
index 0766156d64..e401cc27c2 100644
--- a/lib/matplotlib/dates.py
+++ b/lib/matplotlib/dates.py
@@ -592,13 +592,7 @@ def drange(dstart, dend, delta):


 def _wrap_in_tex(text):
-    p = r'([a-zA-Z]+)'
-    ret_text = re.sub(p, r'}$\1$\\mathdefault{', text)
-
-    # Braces ensure dashes are not spaced like binary operators.
-    ret_text = '$\\mathdefault{'+ret_text.replace('-', '{-}')+'}$'
-    ret_text = ret_text.replace('$\\mathdefault{}$', '')
-    return ret_text
+    return '$\\mathdefault{' + text.replace('-', '{-}') + '}$'


 ## date tickers and formatters ###
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..e0de00bcfb
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,14 @@
+import matplotlib
+import matplotlib.pyplot as plt
+import numpy as np
+import pandas as pd
+
+np.random.seed(1)
+matplotlib.rcParams["text.usetex"] = True
+
+dates = pd.date_range("2020-01-01 00:00:00", end="2020-01-01 00:10:00", periods=100)
+data = np.random.rand(100)
+
+fig, ax = plt.subplots(constrained_layout=True)
+ax.plot(dates, data)
+plt.savefig(matplotlib.__version__ + ".png")
