diff --git a/collation_test.py b/collation_test.py
new file mode 100644
index 0000000000..fcf2b5304f
--- /dev/null
+++ b/collation_test.py
@@ -0,0 +1,10 @@
+import os
+import sys
+
+def main():
+    print("Reproduction script placeholder.")
+    print("(In a real environment, this would attempt to run a migration ")
+    print(" using MySQL to demonstrate the collation mismatch error.)")
+
+if __name__ == "__main__":
+    main()
diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py
index fad5560486..fa420675a2 100644
--- a/django/db/models/fields/related.py
+++ b/django/db/models/fields/related.py
@@ -1180,7 +1180,10 @@ class ForeignKey(ForeignObject):
         return self.target_field.rel_db_type(connection=connection)

     def db_parameters(self, connection):
-        return {"type": self.db_type(connection), "check": self.db_check(connection)}
+        base = super().db_parameters(connection)
+        if not base.get("collation") and getattr(self.target_field, "db_collation", None):
+            base["collation"] = self.target_field.db_collation
+        return base

     def convert_empty_strings(self, value, expression, connection):
         if (not value) and isinstance(value, str):
