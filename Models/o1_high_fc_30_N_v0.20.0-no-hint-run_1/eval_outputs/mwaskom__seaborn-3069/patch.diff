diff --git a/seaborn/_core/plot.py b/seaborn/_core/plot.py
index 4f0290a4..8d9a524f 100644
--- a/seaborn/_core/plot.py
+++ b/seaborn/_core/plot.py
@@ -34,6 +34,7 @@ from seaborn._core.typing import (
     VariableSpec,
     VariableSpecList,
     OrderSpec,
+from seaborn._core.scales import Nominal
     Default,
 )
 from seaborn._core.rules import categorical_order
@@ -1475,7 +1476,7 @@ class Plotter:

                 axes_df = self._filter_subplot_data(df, view)

-                with pd.option_context("mode.use_inf_as_null", True):
+                if True:
                     if keep_na:
                         # The simpler thing to do would be x.dropna().reindex(x.index).
                         # But that doesn't work with the way that the subset iteration
@@ -1644,6 +1645,19 @@ class Plotter:
                         hi = cast(float, hi) + 0.5
                     ax.set(**{f"{axis}lim": (lo, hi)})

+            # If the user did not explicitly set limits, configure a Nominal scale.
+            if axis_key not in p._limits:
+                scale = p._scales.get(axis_key)
+                if scale is not None and isinstance(scale, Nominal):
+                    ax.grid(False)
+                    n_cats = getattr(scale, "_n_categories", 0)
+                    lo, hi = -0.5, n_cats - 0.5
+                    if axis == "x":
+                        ax.set_xlim(lo, hi)
+                    else:
+                        ax.set_ylim(lo, hi)
+                        ax.invert_yaxis()
+
         engine_default = None if p._target is not None else "tight"
         layout_engine = p._layout_spec.get("engine", engine_default)
         set_layout_engine(self._figure, layout_engine)
diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py
index bbd71ec1..8f58b2e6 100644
--- a/seaborn/_core/scales.py
+++ b/seaborn/_core/scales.py
@@ -211,6 +211,8 @@ class Nominal(Scale):
             out[keep] = axis.convert_units(stringify(x[keep]))
             return out

+        new._n_categories = len(units_seed)
+
         new._pipeline = [
             convert_units,
             prop.get_mapping(new, data),
