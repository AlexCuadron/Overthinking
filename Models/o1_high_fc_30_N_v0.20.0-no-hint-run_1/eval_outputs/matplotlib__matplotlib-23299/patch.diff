diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py
index c268a56724..61c6308a22 100644
--- a/lib/matplotlib/__init__.py
+++ b/lib/matplotlib/__init__.py
@@ -1175,7 +1175,11 @@ def get_backend():
     --------
     matplotlib.use
     """
-    return rcParams['backend']
+    # PR fix to avoid clearing figures from Gcf
+    val = dict.__getitem__(rcParams, 'backend')
+    if val is rcsetup._auto_backend_sentinel:
+        return 'auto'
+    return val


 def interactive(b):
diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py
index e3c66ea67c..7575168ff2 100644
--- a/lib/matplotlib/pyplot.py
+++ b/lib/matplotlib/pyplot.py
@@ -222,6 +222,11 @@ def switch_backend(newbackend):
     global _backend_mod
     # make sure the init is pulled up so we can assign to it later
     import matplotlib.backends
+    # fix: skip close('all') if the new backend is the same as the old
+    if _backend_mod is not None:
+        old_backend = matplotlib.backends.backend
+        if old_backend.lower() == newbackend.lower():
+            return
     close("all")

     if newbackend is rcsetup._auto_backend_sentinel:
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..0fa19b659e
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,12 @@
+import matplotlib.pyplot as plt
+from matplotlib import get_backend, rc_context
+
+# fig1 = plt.figure()  # <- UNCOMMENT THIS LINE AND IT WILL WORK
+# plt.ion()            # <- ALTERNATIVELY, UNCOMMENT THIS LINE AND IT WILL ALSO WORK
+with rc_context():
+    fig2 = plt.figure()
+before = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'
+get_backend()
+after = f'{id(plt._pylab_helpers.Gcf)} {plt._pylab_helpers.Gcf.figs!r}'
+
+assert before == after, '\n' + before + '\n' + after
