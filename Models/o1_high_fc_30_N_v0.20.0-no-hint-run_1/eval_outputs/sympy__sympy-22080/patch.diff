diff --git a/reproduce_mod_bug.py b/reproduce_mod_bug.py
new file mode 100644
index 0000000000..ae81529c6b
--- /dev/null
+++ b/reproduce_mod_bug.py
@@ -0,0 +1,18 @@
+from sympy import Mod, lambdify, symbols
+
+x, y = symbols('x y')
+expr = -Mod(x, y)
+
+print('Sympy expr:', expr)
+
+f = lambdify([x, y], expr)
+print('f(3, 7) with default modules:', f(3, 7))  # Expect -3
+
+print('------------------------------------')
+
+g = lambdify([x, y], expr, modules=[])
+print('lambdify-generated function source code (modules=[]):')
+import inspect
+print(inspect.getsource(g))
+
+print('g(3, 7) with modules=[]:', g(3, 7))  # Currently yields 4, but we want -3
\ No newline at end of file
diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py
index b669a2c783..b33ddd5b4a 100644
--- a/sympy/printing/pycode.py
+++ b/sympy/printing/pycode.py
@@ -234,7 +234,7 @@ def _print_ComplexInfinity(self, expr):

     def _print_Mod(self, expr):
         PREC = precedence(expr)
-        return ('{} % {}'.format(*map(lambda x: self.parenthesize(x, PREC), expr.args)))
+        return '((' + self.parenthesize(expr.args[0], PREC) + ') % (' + self.parenthesize(expr.args[1], PREC) + '))'

     def _print_Piecewise(self, expr):
         result = []
