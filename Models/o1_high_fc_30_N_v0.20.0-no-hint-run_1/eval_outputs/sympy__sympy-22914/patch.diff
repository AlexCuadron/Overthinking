diff --git a/reproduce_min_max_error.py b/reproduce_min_max_error.py
new file mode 100644
index 0000000000..a5d1b2501a
--- /dev/null
+++ b/reproduce_min_max_error.py
@@ -0,0 +1,6 @@
+from sympy import symbols, Min, Max, pycode
+a, b = symbols('a b')
+min_expr = Min(a,b)
+max_expr = Max(a,b)
+print('min_expr:', pycode(min_expr))
+print('max_expr:', pycode(max_expr))
diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py
index 3a72ab606c..e6b35110d1 100644
--- a/sympy/printing/pycode.py
+++ b/sympy/printing/pycode.py
@@ -477,6 +477,21 @@ def _print_Symbol(self, expr):
 for k in _known_constants_math:
     setattr(PythonCodePrinter, '_print_%s' % k, _print_known_const)

+    def _print_Min(self, expr):
+        return "min({})".format(", ".join(self._print(arg) for arg in expr.args))
+
+    def _print_Max(self, expr):
+        return "max({})".format(", ".join(self._print(arg) for arg in expr.args))
+
+    def _print_MinMaxBase(self, expr):
+        from sympy.functions.elementary.miscellaneous import Min, Max
+        if expr.func is Min:
+            return self._print_Min(expr)
+        elif expr.func is Max:
+            return self._print_Max(expr)
+        # fallback
+        return super()._print_Function(expr)
+

 def pycode(expr, **settings):
     """ Converts an expr to a string of Python code
