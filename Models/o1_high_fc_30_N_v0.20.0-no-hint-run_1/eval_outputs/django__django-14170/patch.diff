diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py
index 916478d075..0bc19ab1fb 100644
--- a/django/db/models/lookups.py
+++ b/django/db/models/lookups.py
@@ -12,6 +12,8 @@ from django.utils.datastructures import OrderedSet
 from django.utils.functional import cached_property
 from django.utils.hashable import make_hashable

+from django.db.models.functions.datetime import ExtractIsoYear
+

 class Lookup:
     lookup_name = None
diff --git a/test_iso_year_bug.py b/test_iso_year_bug.py
new file mode 100644
index 0000000000..df45c267cd
--- /dev/null
+++ b/test_iso_year_bug.py
@@ -0,0 +1,51 @@
+import os
+import django
+from django.conf import settings
+from django.db import models, connection
+from django.db.models.functions import ExtractIsoYear
+
+# Configure an in-memory database so we can do a quick test.
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    },
+}
+
+INSTALLED_APPS = ["__main__"]
+
+settings.configure(DATABASES=DATABASES, INSTALLED_APPS=INSTALLED_APPS)
+django.setup()
+
+class DTModel(models.Model):
+    start_date = models.DateField()
+
+    class Meta:
+        app_label = "iso_year_bug_app"
+
+# This function will demonstrate the problem in Django's YearLookup for iso_year.
+
+def main():
+    with connection.schema_editor() as schema_editor:
+        schema_editor.create_model(DTModel)
+
+    DTModel.objects.create(start_date="2020-01-01")
+    DTModel.objects.create(start_date="2020-12-31")
+    # The following queries demonstrate the difference between an annotation on iso_year vs. the iso_year filter.
+
+    qs = DTModel.objects.annotate(extracted=ExtractIsoYear('start_date')).only('id')
+    print("Annotation on extracted iso_year:")
+    print(qs.query)
+
+    # The following filter uses the annotation-based approach.
+    print("\nExplicit annotation used in filter:")
+    annotated_filtered = qs.filter(extracted=2020)
+    print(annotated_filtered.query)
+
+    # The following uses the __iso_year lookup directly.
+    print("\nImplicit iso_year lookup:")
+    direct_filtered = DTModel.objects.filter(start_date__iso_year=2020).only('id')
+    print(direct_filtered.query)
+
+if __name__ == "__main__":
+    main()
