diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py
index 6752a8e3c0..80fa3e8bc0 100644
--- a/django/db/backends/sqlite3/schema.py
+++ b/django/db/backends/sqlite3/schema.py
@@ -327,7 +327,7 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
         # Fields with default values cannot by handled by ALTER TABLE ADD
         # COLUMN statement because DROP DEFAULT is not supported in
         # ALTER TABLE.
-        if not field.null or self.effective_default(field) is not None:
+        if not field.null or self.effective_default(field) is not None or field.unique:
             self._remake_table(model, create_field=field)
         else:
             super().add_field(model, field)
diff --git a/oauth2_provider/__init__.py b/oauth2_provider/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/oauth2_provider/apps.py b/oauth2_provider/apps.py
new file mode 100644
index 0000000000..6e681c0c95
--- /dev/null
+++ b/oauth2_provider/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class Oauth2ProviderConfig(AppConfig):
+    name = 'oauth2_provider'
diff --git a/oauth2_provider/migrations/0001_initial.py b/oauth2_provider/migrations/0001_initial.py
new file mode 100644
index 0000000000..9a4a904004
--- /dev/null
+++ b/oauth2_provider/migrations/0001_initial.py
@@ -0,0 +1,26 @@
+# Generated by Django 4.1.dev20220103113051 on 2025-01-14 01:23
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='AccessToken',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+            ],
+        ),
+        migrations.CreateModel(
+            name='RefreshToken',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+            ],
+        ),
+    ]
diff --git a/oauth2_provider/migrations/0002_add_one_to_one.py b/oauth2_provider/migrations/0002_add_one_to_one.py
new file mode 100644
index 0000000000..3a8460c94d
--- /dev/null
+++ b/oauth2_provider/migrations/0002_add_one_to_one.py
@@ -0,0 +1,17 @@
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('oauth2_provider', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AddField(
+            model_name='accesstoken',
+            name='source_refresh_token',
+            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='oauth2_provider.refreshtoken', related_name='refreshed_access_token'),
+        ),
+    ]
diff --git a/oauth2_provider/migrations/__init__.py b/oauth2_provider/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/oauth2_provider/models.py b/oauth2_provider/models.py
new file mode 100644
index 0000000000..5d1132f9ab
--- /dev/null
+++ b/oauth2_provider/models.py
@@ -0,0 +1,7 @@
+from django.db import models
+
+class RefreshToken(models.Model):
+    pass
+
+class AccessToken(models.Model):
+    pass
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..826244eac4
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,89 @@
+import os
+import shutil
+import sys
+
+import django
+from django.conf import settings
+from django.core.management import call_command
+
+def configure_settings():
+    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+    DATABASE_FILENAME = os.path.join(BASE_DIR, 'testdb.sqlite3')
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY='test-key',
+        ROOT_URLCONF=__name__,
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': DATABASE_FILENAME,
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+            'django.contrib.sessions',
+            'django.contrib.messages',
+            'django.contrib.staticfiles',
+            'oauth2_provider.apps.Oauth2ProviderConfig',
+        ],
+        MIDDLEWARE=[],
+    )
+
+
+def main():
+    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+    db_file = os.path.join(BASE_DIR, 'testdb.sqlite3')
+    if os.path.exists(db_file):
+        os.remove(db_file)
+
+    # In case we left a previous migration folder, remove it.
+    migrations_dir = os.path.join(BASE_DIR, 'oauth2_provider', 'migrations')
+    if os.path.exists(migrations_dir):
+        shutil.rmtree(migrations_dir)
+    os.makedirs(migrations_dir, exist_ok=True)
+
+    # Create an __init__.py so Django recognizes it as a package.
+    init_path = os.path.join(migrations_dir, '__init__.py')
+    with open(init_path, 'w') as init_file:
+        init_file.write('')
+
+    configure_settings()
+    django.setup()
+
+    # Create initial migration with the existing models.
+    call_command('makemigrations', 'oauth2_provider', verbosity=0)
+    call_command('migrate', verbosity=0)
+
+    # Next, simulate adding a OneToOneField in a second migration.
+    second_migration = """
+from django.db import migrations, models
+import django.db.models.deletion
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('oauth2_provider', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AddField(
+            model_name='accesstoken',
+            name='source_refresh_token',
+            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='oauth2_provider.refreshtoken', related_name='refreshed_access_token'),
+        ),
+    ]
+"""
+    second_file = os.path.join(migrations_dir, '0002_add_one_to_one.py')
+    with open(second_file, 'w') as f2:
+        f2.write(second_migration)
+
+    try:
+        call_command('migrate', verbosity=1)
+        print("No error encountered: The issue may not have reproduced.")
+    except Exception as exc:
+        print("ERROR REPRODUCED:", exc)
+        sys.exit(1)
+
+if __name__ == '__main__':
+    main()
diff --git a/testdb.sqlite3 b/testdb.sqlite3
new file mode 100644
index 0000000000..854f71b099
Binary files /dev/null and b/testdb.sqlite3 differ
