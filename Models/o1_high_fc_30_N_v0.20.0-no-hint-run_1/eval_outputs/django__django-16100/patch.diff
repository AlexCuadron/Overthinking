diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py
index 5f07a4208a..301db5a634 100644
--- a/django/contrib/admin/options.py
+++ b/django/contrib/admin/options.py
@@ -2000,38 +2000,39 @@ class ModelAdmin(BaseModelAdmin):

         # Handle POSTed bulk-edit data.
         if request.method == "POST" and cl.list_editable and "_save" in request.POST:
-            if not self.has_change_permission(request):
-                raise PermissionDenied
-            FormSet = self.get_changelist_formset(request)
-            modified_objects = self._get_list_editable_queryset(
-                request, FormSet.get_default_prefix()
-            )
-            formset = cl.formset = FormSet(
-                request.POST, request.FILES, queryset=modified_objects
-            )
-            if formset.is_valid():
-                changecount = 0
-                for form in formset.forms:
-                    if form.has_changed():
-                        obj = self.save_form(request, form, change=True)
-                        self.save_model(request, obj, form, change=True)
-                        self.save_related(request, form, formsets=[], change=True)
-                        change_msg = self.construct_change_message(request, form, None)
-                        self.log_change(request, obj, change_msg)
-                        changecount += 1
-
-                if changecount:
-                    msg = ngettext(
-                        "%(count)s %(name)s was changed successfully.",
-                        "%(count)s %(name)s were changed successfully.",
-                        changecount,
-                    ) % {
-                        "count": changecount,
-                        "name": model_ngettext(self.opts, changecount),
-                    }
-                    self.message_user(request, msg, messages.SUCCESS)
+            with transaction.atomic(using=router.db_for_write(self.model)):
+                if not self.has_change_permission(request):
+                    raise PermissionDenied
+                FormSet = self.get_changelist_formset(request)
+                modified_objects = self._get_list_editable_queryset(
+                    request, FormSet.get_default_prefix()
+                )
+                formset = cl.formset = FormSet(
+                    request.POST, request.FILES, queryset=modified_objects
+                )
+                if formset.is_valid():
+                    changecount = 0
+                    for form in formset.forms:
+                        if form.has_changed():
+                            obj = self.save_form(request, form, change=True)
+                            self.save_model(request, obj, form, change=True)
+                            self.save_related(request, form, formsets=[], change=True)
+                            change_msg = self.construct_change_message(request, form, None)
+                            self.log_change(request, obj, change_msg)
+                            changecount += 1
+
+                    if changecount:
+                        msg = ngettext(
+                            "%(count)s %(name)s was changed successfully.",
+                            "%(count)s %(name)s were changed successfully.",
+                            changecount,
+                        ) % {
+                            "count": changecount,
+                            "name": model_ngettext(self.opts, changecount),
+                        }
+                        self.message_user(request, msg, messages.SUCCESS)

-                return HttpResponseRedirect(request.get_full_path())
+                    return HttpResponseRedirect(request.get_full_path())

         # Handle GET -- construct a formset for display.
         elif cl.list_editable and self.has_change_permission(request):
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..6252695a61
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,11 @@
+import sys
+import subprocess
+
+print('Running admin_views test to reproduce the error...')
+result = subprocess.run([sys.executable, 'tests/runtests.py', 'admin_views'])
+
+print('Return code:', result.returncode)
+if result.returncode == 0:
+    print('No error encountered. Possibly the bug is not triggered by this test suite.')
+else:
+    print('An error was encountered, as expected. This might be the bug we are going to fix!')
\ No newline at end of file
