diff --git a/issue18895_repro.py b/issue18895_repro.py
new file mode 100644
index 0000000000..c420754777
--- /dev/null
+++ b/issue18895_repro.py
@@ -0,0 +1,6 @@
+import sympy
+x, y = sympy.symbols('x y', complex=True)
+z = sympy.expand((x-1)*(y-1))
+print('z_expanded =', z)
+print('factor(z_expanded) =', sympy.factor(z))
+print('factor(z_expanded, extension=[sympy.I]) =', sympy.factor(z, extension=[sympy.I]))
diff --git a/sympy/polys/polyutils.py b/sympy/polys/polyutils.py
index 89d04c5d46..285e0859c3 100644
--- a/sympy/polys/polyutils.py
+++ b/sympy/polys/polyutils.py
@@ -233,9 +233,13 @@ def _parallel_dict_from_expr_no_gens(exprs, opt):
     if opt.domain is not None:
         def _is_coeff(factor):
             return factor in opt.domain
-    elif opt.extension is True:
+    elif opt.extension is True or (isinstance(opt.extension, list) and sympy.I in opt.extension):
         def _is_coeff(factor):
-            return factor.is_algebraic
+            # treat factor as a coefficient only if it has no free symbols or if the only free symbol is I which is in extension
+            free_syms = factor.free_symbols
+            if isinstance(opt.extension, (list, tuple)) and sympy.I in opt.extension:
+                free_syms = free_syms - {sympy.I}
+            return factor.is_algebraic and not free_syms
     elif opt.greedy is not False:
         def _is_coeff(factor):
             return False
