diff --git a/reproduce_comparison_issue.py b/reproduce_comparison_issue.py
new file mode 100644
index 0000000000..a53a2b64d1
--- /dev/null
+++ b/reproduce_comparison_issue.py
@@ -0,0 +1,22 @@
+import sympy
+
+class Foo:
+    def __init__(self, coefficient):
+        self._coefficient = coefficient
+
+    def __eq__(self, other):
+        import sympy
+        if isinstance(other, sympy.Basic):
+            return self._coefficient == other
+        return NotImplemented
+
+if __name__ == "__main__":
+    from sympy import Basic, Symbol
+    x = Symbol('x')
+
+    f = Foo(x)
+    b = Basic()
+
+    print(f"f == b: {f == b}")
+    print(f"b == f: {b == f}")
+
diff --git a/reproduce_with_symbol.py b/reproduce_with_symbol.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/sympy/core/basic.py b/sympy/core/basic.py
index db4e971848..25390f44f2 100644
--- a/sympy/core/basic.py
+++ b/sympy/core/basic.py
@@ -313,10 +313,10 @@ def __eq__(self, other):
             try:
                 other = _sympify(other)
             except SympifyError:
-                return False    # sympy != other
+                return NotImplemented    # sympy != other

             if type(self) != type(other):
-                return False
+                return NotImplemented

         return self._hashable_content() == other._hashable_content()
