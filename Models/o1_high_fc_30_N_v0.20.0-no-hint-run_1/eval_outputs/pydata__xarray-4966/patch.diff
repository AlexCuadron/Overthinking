diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 00000000..e363e77f
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,15 @@
+import xarray as xr
+import warnings
+
+if __name__ == "__main__":
+    warnings.filterwarnings("default")
+
+    # We'll open the dataset with netcdf4 engine
+    print("Opening dataset with netcdf4 engine...")
+    ds_netcdf4 = xr.open_dataset("https://observations.ipsl.fr/thredds/dodsC/EUREC4A/PRODUCTS/testdata/netcdf_testfiles/test_NC_BYTE_neg.nc", engine="netcdf4")
+    print(ds_netcdf4)
+
+    # We'll open the dataset with pydap engine
+    print("\nOpening dataset with pydap engine...")
+    ds_pydap = xr.open_dataset("https://observations.ipsl.fr/thredds/dodsC/EUREC4A/PRODUCTS/testdata/netcdf_testfiles/test_NC_BYTE_neg.nc", engine="pydap")
+    print(ds_pydap)
diff --git a/xarray/coding/variables.py b/xarray/coding/variables.py
index b035ff82..91b60866 100644
--- a/xarray/coding/variables.py
+++ b/xarray/coding/variables.py
@@ -316,6 +316,13 @@ class UnsignedIntegerCoder(VariableCoder):
                     if "_FillValue" in attrs:
                         new_fill = unsigned_dtype.type(attrs["_FillValue"])
                         attrs["_FillValue"] = new_fill
+            elif data.dtype.kind == "u" and unsigned == "false":
+                signed_dtype = np.dtype("i%s" % data.dtype.itemsize)
+                transform = partial(np.asarray, dtype=signed_dtype)
+                data = lazy_elemwise_func(data, transform, signed_dtype)
+                if "_FillValue" in attrs:
+                    new_fill = signed_dtype.type(attrs["_FillValue"])
+                    attrs["_FillValue"] = new_fill
             else:
                 warnings.warn(
                     "variable %r has _Unsigned attribute but is not "
