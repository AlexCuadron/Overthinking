diff --git a/django/forms/widgets.py b/django/forms/widgets.py
index 338d54d72f..a163fae5a0 100644
--- a/django/forms/widgets.py
+++ b/django/forms/widgets.py
@@ -388,6 +388,11 @@ class FileInput(Input):
         return name not in files


+    def use_required_attribute(self, initial):
+        # Make sure the required attribute is NOT displayed if there's already
+        # an initial file.
+        return super().use_required_attribute(initial) and not initial
+
 FILE_INPUT_CONTRADICTION = object()


@@ -451,9 +456,6 @@ class ClearableFileInput(FileInput):
             return False
         return upload

-    def use_required_attribute(self, initial):
-        return super().use_required_attribute(initial) and not initial
-
     def value_omitted_from_data(self, data, files, name):
         return (
             super().value_omitted_from_data(data, files, name) and
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..138da428aa
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,33 @@
+import sys
+from django.conf import settings
+
+# Minimal Django setup
+settings.configure(
+    SECRET_KEY='test',
+    INSTALLED_APPS=[],
+)
+
+import django
+from django import forms
+
+django.setup()
+
+class FileForm(forms.Form):
+    myfile = forms.FileField(required=True)
+
+# Reproduce scenario: existing saved file => initial data
+form = FileForm(initial={'myfile': 'existing_file.jpg'})
+form_html = form.as_p()
+
+print("Form HTML:\n", form_html)
+
+# Rough check if 'required' is present in the rendered form
+required_present = 'required' in form_html
+print("'required' attribute present?", required_present)
+
+if required_present:
+    print("Error: The 'required' attribute is present even though there is initial data.")
+    sys.exit(1)
+else:
+    print("Success: No 'required' attribute is present when there's initial data.")
+    sys.exit(0)
