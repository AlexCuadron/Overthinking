diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 000000000..90014dde3
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,8 @@
+import subprocess
+import sys
+
+if __name__ == "__main__":
+    cmd = [sys.executable, '-m', 'pytest', '--pdb', 'test_repro.py']
+    print("Running:", " ".join(cmd))
+    proc = subprocess.run(cmd)
+    sys.exit(proc.returncode)
diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py
index 773f545af..762df0aa2 100644
--- a/src/_pytest/unittest.py
+++ b/src/_pytest/unittest.py
@@ -122,11 +122,20 @@ class TestCaseFunction(Function):

     def teardown(self):
         if self._explicit_tearDown is not None:
-            self._explicit_tearDown()
+            if not self._test_skipped():
+                self._explicit_tearDown()
             self._explicit_tearDown = None
         self._testcase = None
         self._obj = None

+    def _test_skipped(self):
+        if self._excinfo:
+            import unittest
+            for e in self._excinfo:
+                if e.errisinstance(unittest.SkipTest):
+                    return True
+        return False
+
     def startTest(self, testcase):
         pass

diff --git a/test_repro.py b/test_repro.py
new file mode 100644
index 000000000..6734116e8
--- /dev/null
+++ b/test_repro.py
@@ -0,0 +1,12 @@
+import unittest
+
+class MyTestCase(unittest.TestCase):
+    def setUp(self):
+        xxx
+
+    @unittest.skip("hello")
+    def test_one(self):
+        pass
+
+    def tearDown(self):
+        xxx
