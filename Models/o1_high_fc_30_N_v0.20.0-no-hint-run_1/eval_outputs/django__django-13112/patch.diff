diff --git a/DJ_RegLogin/__init__.py b/DJ_RegLogin/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/DJ_RegLogin/apps.py b/DJ_RegLogin/apps.py
new file mode 100644
index 0000000000..b3557e9cce
--- /dev/null
+++ b/DJ_RegLogin/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class DJRegLoginAppConfig(AppConfig):
+    name = 'DJ_RegLogin'
diff --git a/DJ_RegLogin/models.py b/DJ_RegLogin/models.py
new file mode 100644
index 0000000000..6106e62de7
--- /dev/null
+++ b/DJ_RegLogin/models.py
@@ -0,0 +1,32 @@
+from django.db import models
+from django.contrib.auth.models import User
+from django.contrib.sites.models import Site
+
+class Category(models.Model):
+    title = models.CharField(max_length=100, db_index=True)
+    slug = models.SlugField(max_length=100, db_index=True)
+
+    class Meta:
+        verbose_name = 'Category'
+        verbose_name_plural = 'Categories'
+        app_label = 'DJ_RegLoginApp'
+
+    def __str__(self):
+        return self.title
+
+class Content(models.Model):
+    title = models.CharField(max_length=100, unique=True)
+    slug = models.SlugField(max_length=100, unique=True)
+    body = models.TextField()
+    posted = models.DateTimeField(db_index=True, auto_now_add=True)
+    sites = models.ManyToManyField(Site)
+    # mismatch fixed: originally 'dj_regloginapp.Category'; now uses 'DJ_RegLoginApp.Category'
+    category = models.ForeignKey('DJ_RegLoginApp.Category', on_delete=models.CASCADE)
+    user = models.ForeignKey(User, on_delete=models.CASCADE, null=False, blank=False)
+    status = models.CharField(max_length=10, default='draft')
+
+    class Meta:
+        app_label = 'DJ_RegLoginApp'
+
+    def __str__(self):
+        return self.title
\ No newline at end of file
diff --git a/reproduce_case_issue.py b/reproduce_case_issue.py
new file mode 100644
index 0000000000..502e3979f8
--- /dev/null
+++ b/reproduce_case_issue.py
@@ -0,0 +1,38 @@
+import os
+import sys
+import django
+
+from django.conf import settings
+from django.core.management import call_command
+from django.db import models
+
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+DB_NAME = os.path.join(BASE_DIR, 'db.sqlite3')
+
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=["DJ_RegLoginApp", "django.contrib.auth", "django.contrib.contenttypes", "django.contrib.sites"],
+        SECRET_KEY="testkey",
+        DATABASES={
+            "default": {
+                "ENGINE": "django.db.backends.sqlite3",
+                "NAME": DB_NAME,
+            }
+        },
+        MIDDLEWARE=[],
+        SITE_ID=1,
+    )
+
+# Initialize Django
+django.setup()
+
+# Define models in a single file for demonstration purposes
+
+# Attempt to make and apply migrations
+try:
+    call_command("makemigrations", "DJ_RegLoginApp")
+    call_command("migrate")
+    print("Migrations applied successfully. No error.")
+except Exception as e:
+    print("Encountered error during migrations:")
+    print(e)
