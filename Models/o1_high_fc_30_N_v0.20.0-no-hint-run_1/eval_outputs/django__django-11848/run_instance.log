2025-01-14 21:05:47,046 - INFO - Environment image sweb.env.x86_64.a18371b03f944585b4f08c:latest found for django__django-11848
Building instance image sweb.eval.x86_64.django__django-11848:latest for django__django-11848
2025-01-14 21:05:47,048 - INFO - Image sweb.eval.x86_64.django__django-11848:latest already exists, skipping build.
2025-01-14 21:05:47,048 - INFO - Creating container for django__django-11848...
2025-01-14 21:05:47,091 - INFO - Container for django__django-11848 created: a0dc1d65b680e6276dd109eb78a587af7e9f9823eedab698583170909162d082
2025-01-14 21:05:47,349 - INFO - Container for django__django-11848 started: a0dc1d65b680e6276dd109eb78a587af7e9f9823eedab698583170909162d082
2025-01-14 21:05:47,350 - INFO - Intermediate patch for django__django-11848 written to logs/run_evaluation/20250114_210306/o1_maxiter_30_N_v0.20.0-no-hint-run_1/django__django-11848/patch.diff, now applying to container...
2025-01-14 21:05:47,573 - INFO - Failed to apply patch to container, trying again...
2025-01-14 21:05:47,634 - INFO - >>>>> Applied Patch:
patching file django/utils/http.py
patching file reproduce_rfc850_bug.py

2025-01-14 21:05:48,378 - INFO - Git diff before:
diff --git a/django/utils/http.py b/django/utils/http.py
index 572cfb4347..fb19af39f1 100644
--- a/django/utils/http.py
+++ b/django/utils/http.py
@@ -176,6 +176,7 @@ def parse_http_date(date):
     try:
         year = int(m.group('year'))
         if year < 100:
+            # interpret as rfc850 two-digit year (RFC 7231 logic)
             if year < 70:
                 year += 2000
             else:
@@ -185,8 +186,11 @@ def parse_http_date(date):
         hour = int(m.group('hour'))
         min = int(m.group('min'))
         sec = int(m.group('sec'))
-        result = datetime.datetime(year, month, day, hour, min, sec)
-        return calendar.timegm(result.utctimetuple())
+        temp_date = datetime.datetime(year, month, day, hour, min, sec)
+        # If this is more than 50 years in the future, interpret as the most recent past year.
+        if (temp_date - datetime.datetime.utcnow()).total_seconds() > 50 * 365 * 24 * 3600:
+            temp_date = datetime.datetime(temp_date.year - 100, month, day, hour, min, sec)
+        return calendar.timegm(temp_date.utctimetuple())
     except Exception as exc:
         raise ValueError("%r is not a valid date" % date) from exc
2025-01-14 21:05:48,378 - INFO - Eval script for django__django-11848 written to logs/run_evaluation/20250114_210306/o1_maxiter_30_N_v0.20.0-no-hint-run_1/django__django-11848/eval.sh; copying to container...
2025-01-14 21:05:54,447 - INFO - Test runtime: 5.92 seconds
2025-01-14 21:05:54,448 - INFO - Test output for django__django-11848 written to logs/run_evaluation/20250114_210306/o1_maxiter_30_N_v0.20.0-no-hint-run_1/django__django-11848/test_output.txt
2025-01-14 21:05:54,513 - INFO - Git diff after:
diff --git a/django/utils/http.py b/django/utils/http.py
index 572cfb4347..fb19af39f1 100644
--- a/django/utils/http.py
+++ b/django/utils/http.py
@@ -176,6 +176,7 @@ def parse_http_date(date):
     try:
         year = int(m.group('year'))
         if year < 100:
+            # interpret as rfc850 two-digit year (RFC 7231 logic)
             if year < 70:
                 year += 2000
             else:
@@ -185,8 +186,11 @@ def parse_http_date(date):
         hour = int(m.group('hour'))
         min = int(m.group('min'))
         sec = int(m.group('sec'))
-        result = datetime.datetime(year, month, day, hour, min, sec)
-        return calendar.timegm(result.utctimetuple())
+        temp_date = datetime.datetime(year, month, day, hour, min, sec)
+        # If this is more than 50 years in the future, interpret as the most recent past year.
+        if (temp_date - datetime.datetime.utcnow()).total_seconds() > 50 * 365 * 24 * 3600:
+            temp_date = datetime.datetime(temp_date.year - 100, month, day, hour, min, sec)
+        return calendar.timegm(temp_date.utctimetuple())
     except Exception as exc:
         raise ValueError("%r is not a valid date" % date) from exc
2025-01-14 21:05:54,513 - INFO - Grading answer for django__django-11848...
2025-01-14 21:05:54,516 - INFO - report: {'django__django-11848': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_parsing_rfc850 (utils_tests.test_http.HttpDateProcessingTests)', 'test_parsing_year_less_than_70 (utils_tests.test_http.HttpDateProcessingTests)']}, 'PASS_TO_PASS': {'success': ['test_input_too_large (utils_tests.test_http.Base36IntTests)', 'test_invalid_literal (utils_tests.test_http.Base36IntTests)', 'test_negative_input (utils_tests.test_http.Base36IntTests)', 'test_roundtrip (utils_tests.test_http.Base36IntTests)', 'test_to_base36_errors (utils_tests.test_http.Base36IntTests)', 'test_to_int_errors (utils_tests.test_http.Base36IntTests)', 'test_values (utils_tests.test_http.Base36IntTests)', 'test (utils_tests.test_http.EscapeLeadingSlashesTests)', 'test_quote (utils_tests.test_http.URLQuoteTests)', 'test_quote_plus (utils_tests.test_http.URLQuoteTests)', 'test_unquote (utils_tests.test_http.URLQuoteTests)', 'test_unquote_plus (utils_tests.test_http.URLQuoteTests)', 'test_parsing (utils_tests.test_http.ETagProcessingTests)', 'test_quoting (utils_tests.test_http.ETagProcessingTests)', 'test_allowed_hosts_str (utils_tests.test_http.IsSafeURLTests)', 'test_bad_urls (utils_tests.test_http.IsSafeURLTests)', 'test_basic_auth (utils_tests.test_http.IsSafeURLTests)', 'test_good_urls (utils_tests.test_http.IsSafeURLTests)', 'test_is_safe_url_deprecated (utils_tests.test_http.IsSafeURLTests)', 'test_no_allowed_hosts (utils_tests.test_http.IsSafeURLTests)', 'test_secure_param_https_urls (utils_tests.test_http.IsSafeURLTests)', 'test_secure_param_non_https_urls (utils_tests.test_http.IsSafeURLTests)', 'test_bad (utils_tests.test_http.IsSameDomainTests)', 'test_good (utils_tests.test_http.IsSameDomainTests)', 'test_roundtrip (utils_tests.test_http.URLSafeBase64Tests)', 'test_http_date (utils_tests.test_http.HttpDateProcessingTests)', 'test_parsing_asctime (utils_tests.test_http.HttpDateProcessingTests)', 'test_parsing_rfc1123 (utils_tests.test_http.HttpDateProcessingTests)', 'test_custom_iterable_not_doseq (utils_tests.test_http.URLEncodeTests)', 'test_dict (utils_tests.test_http.URLEncodeTests)', 'test_dict_containing_empty_sequence_doseq (utils_tests.test_http.URLEncodeTests)', 'test_dict_containing_sequence_doseq (utils_tests.test_http.URLEncodeTests)', 'test_dict_containing_sequence_not_doseq (utils_tests.test_http.URLEncodeTests)', 'test_dict_containing_tuple_not_doseq (utils_tests.test_http.URLEncodeTests)', 'test_dict_with_bytearray (utils_tests.test_http.URLEncodeTests)', 'test_dict_with_bytes_values (utils_tests.test_http.URLEncodeTests)', 'test_dict_with_sequence_of_bytes (utils_tests.test_http.URLEncodeTests)', 'test_generator (utils_tests.test_http.URLEncodeTests)', 'test_multivaluedict (utils_tests.test_http.URLEncodeTests)', 'test_none (utils_tests.test_http.URLEncodeTests)', 'test_none_in_generator (utils_tests.test_http.URLEncodeTests)', 'test_none_in_sequence (utils_tests.test_http.URLEncodeTests)', 'test_tuples (utils_tests.test_http.URLEncodeTests)'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-11848: resolved: False
2025-01-14 21:05:54,516 - INFO - Attempting to stop container sweb.eval.django__django-11848.20250114_210306...
2025-01-14 21:06:09,698 - INFO - Attempting to remove container sweb.eval.django__django-11848.20250114_210306...
2025-01-14 21:06:09,733 - INFO - Container sweb.eval.django__django-11848.20250114_210306 removed.
