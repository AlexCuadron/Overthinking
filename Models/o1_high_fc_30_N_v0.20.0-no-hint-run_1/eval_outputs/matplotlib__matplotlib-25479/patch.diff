diff --git a/check_fix.py b/check_fix.py
new file mode 100644
index 0000000000..69aff67441
--- /dev/null
+++ b/check_fix.py
@@ -0,0 +1,23 @@
+print("Checking colormap name after registering...")
+import sys
+import matplotlib
+print("Matplotlib version:", matplotlib.__version__)
+
+from matplotlib import cm
+from matplotlib.colors import LinearSegmentedColormap
+import matplotlib.pyplot as plt
+
+my_cmap_data = [
+    [1.5e-03, 4.7e-04, 1.4e-02],
+    [2.3e-03, 1.3e-03, 1.8e-02],
+    [3.3e-03, 2.3e-03, 2.4e-02],
+]
+
+my_cmap = LinearSegmentedColormap.from_list("some_cmap_name", my_cmap_data)
+cm.register_cmap(name="my_cmap_name", cmap=my_cmap)
+print("Colormap name after registration:", my_cmap.name)
+
+plt.set_cmap("my_cmap_name")
+plt.imshow([[1,1],[2,2]])
+plt.show()
+
diff --git a/lib/matplotlib/cm.py b/lib/matplotlib/cm.py
index 38158db956..6d5905cfc3 100644
--- a/lib/matplotlib/cm.py
+++ b/lib/matplotlib/cm.py
@@ -145,6 +145,7 @@ class ColormapRegistry(Mapping):
             _api.warn_external(f"Overwriting the cmap {name!r} "
                                "that was already in the registry.")

+        cmap.name = name
         self._cmaps[name] = cmap.copy()

     def unregister(self, name):
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..f0e8cd0430
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,22 @@
+import sys
+import matplotlib
+print("Using matplotlib version", matplotlib.__version__)
+
+from matplotlib import cm
+from matplotlib.colors import LinearSegmentedColormap
+import matplotlib.pyplot as plt
+
+print("Python version:", sys.version)
+
+my_cmap_data = [
+    [1.5e-03, 4.7e-04, 1.4e-02],
+    [2.3e-03, 1.3e-03, 1.8e-02],
+    [3.3e-03, 2.3e-03, 2.4e-02]
+]
+
+my_cmap = LinearSegmentedColormap.from_list('some_cmap_name', my_cmap_data)
+cm.register_cmap(name='my_cmap_name', cmap=my_cmap)
+
+plt.set_cmap('my_cmap_name')
+plt.imshow([[1, 1], [2, 2]])
+plt.show()
