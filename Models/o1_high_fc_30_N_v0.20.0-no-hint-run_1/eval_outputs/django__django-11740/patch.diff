diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py
index 0dc1c77c53..7d1f65e594 100644
--- a/django/db/migrations/autodetector.py
+++ b/django/db/migrations/autodetector.py
@@ -963,6 +963,9 @@ class MigrationAutodetector:
                             preserve_default = False
                     else:
                         field = new_field
+                    dependencies = []
+                    if new_field.remote_field and new_field.remote_field.model:
+                        dependencies.extend(self._get_dependencies_for_foreign_key(new_field))
                     self.add_operation(
                         app_label,
                         operations.AlterField(
@@ -970,7 +973,8 @@ class MigrationAutodetector:
                             name=field_name,
                             field=field,
                             preserve_default=preserve_default,
-                        )
+                        ),
+                        dependencies=dependencies,
                     )
                 else:
                     # We cannot alter between m2m and concrete fields
diff --git a/testproject/db.sqlite3 b/testproject/db.sqlite3
new file mode 100644
index 0000000000..50b360eb8e
Binary files /dev/null and b/testproject/db.sqlite3 differ
diff --git a/testproject/manage.py b/testproject/manage.py
new file mode 100644
index 0000000000..82eef9ee17
--- /dev/null
+++ b/testproject/manage.py
@@ -0,0 +1,15 @@
+#!/usr/bin/env python
+import os
+import sys
+
+if __name__ == "__main__":
+    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "testproject.settings")
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
diff --git a/testproject/repro_bug.py b/testproject/repro_bug.py
new file mode 100644
index 0000000000..a57462394c
--- /dev/null
+++ b/testproject/repro_bug.py
@@ -0,0 +1,15 @@
+import os
+import sys
+import django
+from django.core.management import call_command
+
+if __name__ == "__main__":
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'testproject.settings')
+    django.setup()
+    try:
+        call_command('makemigrations', interactive=False)
+        call_command('migrate', interactive=False)
+        print("Migration complete, no error")
+    except Exception as e:
+        print(f"Error during migration: {e}")
+        sys.exit(1)
diff --git a/testproject/testapp1/models.py b/testproject/testapp1/models.py
new file mode 100644
index 0000000000..e615a74975
--- /dev/null
+++ b/testproject/testapp1/models.py
@@ -0,0 +1,11 @@
+import uuid
+from django.db import models
+from django.utils.translation import gettext_lazy as _
+
+# We'll demonstrate the final state: "another_app" is an FK.
+from testapp2.models import App2
+
+class App1(models.Model):
+    id = models.UUIDField(primary_key=True, unique=True, default=uuid.uuid4, editable=False, verbose_name=_('identifier'))
+    text = models.CharField(max_length=100, verbose_name=_('text'))
+    another_app = models.ForeignKey(App2, null=True, blank=True, on_delete=models.SET_NULL, verbose_name=_('another app'))
diff --git a/testproject/testapp2/models.py b/testproject/testapp2/models.py
new file mode 100644
index 0000000000..a6e2b9dbeb
--- /dev/null
+++ b/testproject/testapp2/models.py
@@ -0,0 +1,7 @@
+import uuid
+from django.db import models
+from django.utils.translation import gettext_lazy as _
+
+class App2(models.Model):
+    id = models.UUIDField(primary_key=True, unique=True, default=uuid.uuid4, editable=False, verbose_name=_('identifier'))
+    text = models.CharField(max_length=100, verbose_name=_('text'))
diff --git a/testproject/testproject/__init__.py b/testproject/testproject/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/testproject/testproject/settings.py b/testproject/testproject/settings.py
new file mode 100644
index 0000000000..da7a5691d4
--- /dev/null
+++ b/testproject/testproject/settings.py
@@ -0,0 +1,22 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+SECRET_KEY = 'fakekey'
+DEBUG = True
+ALLOWED_HOSTS = []
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'testapp1',
+    'testapp2',
+]
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+MIDDLEWARE = []
+ROOT_URLCONF = 'testproject.urls'
+TEMPLATES = []
+WSGI_APPLICATION = 'testproject.wsgi.application'
diff --git a/testproject/testproject/urls.py b/testproject/testproject/urls.py
new file mode 100644
index 0000000000..a848dfb64f
--- /dev/null
+++ b/testproject/testproject/urls.py
@@ -0,0 +1,3 @@
+from django.urls import path
+
+urlpatterns = []
\ No newline at end of file
