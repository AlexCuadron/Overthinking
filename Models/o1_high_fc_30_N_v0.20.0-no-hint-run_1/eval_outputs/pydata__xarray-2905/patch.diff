diff --git a/repro.py b/repro.py
new file mode 100644
index 00000000..777e14ec
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,15 @@
+import xarray as xr
+
+print('Xarray version:', xr.__version__)
+
+good_indexed = xr.DataArray([None], dims=['dim_0'])
+bad_indexed = xr.DataArray([None], dims=['dim_0'])
+
+class HasValues:
+    values = 5
+
+good_indexed.loc[{'dim_0': 0}] = set()
+bad_indexed.loc[{'dim_0': 0}] = HasValues()
+
+print('good_indexed.values =>', good_indexed.values)
+print('bad_indexed.values =>', bad_indexed.values)
diff --git a/xarray/core/variable.py b/xarray/core/variable.py
index 45553eb9..8f6d8cc1 100644
--- a/xarray/core/variable.py
+++ b/xarray/core/variable.py
@@ -218,7 +218,8 @@ def as_compatible_data(data, fastpath=False):
         data = np.timedelta64(getattr(data, "value", data), "ns")

     # we don't want nested self-described arrays
-    data = getattr(data, "values", data)
+    if isinstance(data, (pd.Series, pd.DataFrame)):
+        data = data.values

     if isinstance(data, np.ma.MaskedArray):
         mask = np.ma.getmaskarray(data)
