diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py
index 5e7b23f9a0..b588653f2d 100644
--- a/django/contrib/admin/options.py
+++ b/django/contrib/admin/options.py
@@ -580,9 +580,12 @@ class ModelAdmin(BaseModelAdmin):
     def __str__(self):
         return "%s.%s" % (self.model._meta.app_label, self.__class__.__name__)

+    def get_inlines(self, request, obj=None):
+        return self.inlines
+
     def get_inline_instances(self, request, obj=None):
         inline_instances = []
-        for inline_class in self.inlines:
+        for inline_class in self.get_inlines(request, obj):
             inline = inline_class(self.model, self.admin_site)
             if request:
                 if not (inline.has_view_or_change_permission(request, obj) or
diff --git a/test_reproduce_inlines_error.py b/test_reproduce_inlines_error.py
new file mode 100644
index 0000000000..0fd1ccea59
--- /dev/null
+++ b/test_reproduce_inlines_error.py
@@ -0,0 +1,6 @@
+from django.contrib.admin import ModelAdmin
+
+if not hasattr(ModelAdmin, 'get_inlines'):
+    raise RuntimeError("No 'get_inlines' method found. This is the error we want to fix.")
+else:
+    print("get_inlines found - no error.")
\ No newline at end of file
