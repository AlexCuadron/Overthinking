diff --git a/django/forms/models.py b/django/forms/models.py
index d157c291ef..5edbbd376f 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -83,7 +83,7 @@ def model_to_dict(instance, fields=None, exclude=None):
     for f in chain(opts.concrete_fields, opts.private_fields, opts.many_to_many):
         if not getattr(f, 'editable', False):
             continue
-        if fields and f.name not in fields:
+        if fields is not None and f.name not in fields:
             continue
         if exclude and f.name in exclude:
             continue
diff --git a/test_reproduce_model_to_dict.py b/test_reproduce_model_to_dict.py
new file mode 100644
index 0000000000..1d8cfe299e
--- /dev/null
+++ b/test_reproduce_model_to_dict.py
@@ -0,0 +1,38 @@
+import django
+from django.conf import settings
+from django.db import models
+
+# Configure settings if not already configured.
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=[
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+            '__main__',
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        MIDDLEWARE=[],
+    )
+
+# Set up Django (this must be done after configuring settings, but before using ORM)
+django.setup()
+
+class Example(models.Model):
+    foo = models.CharField(max_length=10, default='abc')
+
+from django.forms.models import model_to_dict
+
+def main():
+    # Create an instance without saving
+    inst = Example(foo='bar')
+    # Call model_to_dict with an empty list of fields
+    result = model_to_dict(inst, fields=[])
+    print('Result with fields=[] =>', result)
+
+if __name__ == '__main__':
+    main()
