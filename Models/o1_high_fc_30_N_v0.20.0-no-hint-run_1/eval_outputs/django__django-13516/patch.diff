diff --git a/django/core/management/base.py b/django/core/management/base.py
index e6cbf8c64f..a4a311bcec 100644
--- a/django/core/management/base.py
+++ b/django/core/management/base.py
@@ -151,6 +151,10 @@ class OutputWrapper(TextIOBase):
         self._out.write(style_func(msg))


+    def flush(self):
+        if hasattr(self._out, 'flush'):
+            self._out.flush()
+
 class BaseCommand:
     """
     The base class from which all management commands ultimately
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..a4e10277f7
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,34 @@
+import os
+import sys
+
+from django.conf import settings
+
+if not settings.configured:
+    settings.configure(
+        SECRET_KEY='xxx',
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:'
+            }
+        }
+    )
+
+import django
+
+django.setup()
+
+from django.core.management import call_command
+
+def main():
+    # We'll run a migrate command with verbosity=2 so we can see partial output, and check if flush is working.
+    print('Starting migrations... (If flush is not working, we will only see final output after the entire operation completes)')
+    call_command('migrate', verbosity=2)
+    print('Done running migrations.')
+
+if __name__ == '__main__':
+    main()
