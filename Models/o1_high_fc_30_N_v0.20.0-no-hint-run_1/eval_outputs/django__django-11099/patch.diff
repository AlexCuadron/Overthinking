diff --git a/django/contrib/auth/validators.py b/django/contrib/auth/validators.py
index b4878cfd45..1304f20a60 100644
--- a/django/contrib/auth/validators.py
+++ b/django/contrib/auth/validators.py
@@ -7,7 +7,7 @@ from django.utils.translation import gettext_lazy as _

 @deconstructible
 class ASCIIUsernameValidator(validators.RegexValidator):
-    regex = r'^[\w.@+-]+$'
+    regex = r'\A[\w.@+-]+\Z'
     message = _(
         'Enter a valid username. This value may contain only English letters, '
         'numbers, and @/./+/-/_ characters.'
@@ -17,7 +17,7 @@ class ASCIIUsernameValidator(validators.RegexValidator):

 @deconstructible
 class UnicodeUsernameValidator(validators.RegexValidator):
-    regex = r'^[\w.@+-]+$'
+    regex = r'\A[\w.@+-]+\Z'
     message = _(
         'Enter a valid username. This value may contain only letters, '
         'numbers, and @/./+/-/_ characters.'
diff --git a/reproduce_username_issue.py b/reproduce_username_issue.py
new file mode 100644
index 0000000000..d22681d122
--- /dev/null
+++ b/reproduce_username_issue.py
@@ -0,0 +1,35 @@
+import django
+from django.conf import settings
+from django.core.exceptions import ValidationError
+from django.contrib.auth.validators import ASCIIUsernameValidator, UnicodeUsernameValidator
+
+if __name__ == "__main__":
+    if not settings.configured:
+        settings.configure(
+            USE_I18N=False,
+            USE_L10N=False,
+            USE_TZ=False,
+            SECRET_KEY='testsecretkey',
+            INSTALLED_APPS=[
+                'django.contrib.auth',
+                'django.contrib.contenttypes',
+            ],
+        )
+    django.setup()
+
+    validator_ascii = ASCIIUsernameValidator()
+    validator_unicode = UnicodeUsernameValidator()
+    test_username = "validusername\n"
+    print("Testing ASCIIUsernameValidator with trailing newline...")
+    try:
+        validator_ascii(test_username)
+        print("Validation succeeded (ASCII), but was expected to fail for trailing newline.")
+    except ValidationError as e:
+        print("Validation error (ASCII) as expected:", e.messages)
+
+    print("\nTesting UnicodeUsernameValidator with trailing newline...")
+    try:
+        validator_unicode(test_username)
+        print("Validation succeeded (Unicode), but was expected to fail for trailing newline.")
+    except ValidationError as e:
+        print("Validation error (Unicode) as expected:", e.messages)
