diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py
index 92fe4affb9..5ebfab3915 100644
--- a/django/db/models/deletion.py
+++ b/django/db/models/deletion.py
@@ -277,6 +277,7 @@ class Collector:
             if self.can_fast_delete(instance):
                 with transaction.mark_for_rollback_on_error():
                     count = sql.DeleteQuery(model).delete_batch([instance.pk], self.using)
+                instance.pk = None
                 return count, {model._meta.label: count}

         with transaction.atomic(using=self.using, savepoint=False):
diff --git a/reproduce_delete_bug.py b/reproduce_delete_bug.py
new file mode 100644
index 0000000000..acbeba2bbd
--- /dev/null
+++ b/reproduce_delete_bug.py
@@ -0,0 +1,32 @@
+import django
+from django.conf import settings
+from django.db import connection, models
+import sys
+
+settings.configure(
+    INSTALLED_APPS=['__main__'],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    SECRET_KEY='this_is_a_secret_key',
+)
+
+django.setup()
+
+class MyModel(models.Model):
+    name = models.CharField(max_length=100)
+
+def main():
+    with connection.schema_editor() as schema_editor:
+        schema_editor.create_model(MyModel)
+
+    obj = MyModel.objects.create(name='test')
+    print("PK before delete:", obj.pk)
+    obj.delete()
+    print("PK after delete:", obj.pk)
+
+if __name__ == '__main__':
+    main()
