diff --git a/django/db/models/enums.py b/django/db/models/enums.py
index f48143ddaf..72c68d25ab 100644
--- a/django/db/models/enums.py
+++ b/django/db/models/enums.py
@@ -59,6 +59,7 @@ class ChoicesMeta(enum.EnumMeta):


 class Choices(enum.Enum, metaclass=ChoicesMeta):
+    do_not_call_in_templates = True
     """Class for creating enumerated choices."""

     def __str__(self):
@@ -70,11 +71,13 @@ class Choices(enum.Enum, metaclass=ChoicesMeta):


 class IntegerChoices(int, Choices):
+    do_not_call_in_templates = True
     """Class for creating enumerated integer choices."""
     pass


 class TextChoices(str, Choices):
+    do_not_call_in_templates = True
     """Class for creating enumerated string choices."""

     def _generate_next_value_(name, start, count, last_values):
diff --git a/scripts/test_enums_error.py b/scripts/test_enums_error.py
new file mode 100644
index 0000000000..c09e6205fa
--- /dev/null
+++ b/scripts/test_enums_error.py
@@ -0,0 +1,45 @@
+import sys
+
+from django.conf import settings
+from django.template import Template, Context
+from django.db import models
+
+class YearInSchool(models.TextChoices):
+    do_not_call_in_templates = True
+    FRESHMAN = 'FR', 'Freshman'
+    SOPHOMORE = 'SO', 'Sophomore'
+    JUNIOR = 'JR', 'Junior'
+    SENIOR = 'SR', 'Senior'
+
+class Student:
+    def __init__(self):
+        self.year_in_school = YearInSchool.FRESHMAN
+
+        print(f"Student year_in_school: {self.year_in_school}, type: {type(self.year_in_school)}")
+        print(f"YearInSchool.FRESHMAN: {YearInSchool.FRESHMAN}, type: {type(YearInSchool.FRESHMAN)}")
+        print(f"Is same object? {self.year_in_school is YearInSchool.FRESHMAN}")
+        print(f"Is equal? {self.year_in_school == YearInSchool.FRESHMAN}")
+def main():
+    if not settings.configured:
+        settings.configure(
+            DEBUG=True,
+            SECRET_KEY='test',
+            TEMPLATES=[{'BACKEND': 'django.template.backends.django.DjangoTemplates'}],
+            INSTALLED_APPS=[],
+        )
+        import django
+        django.setup()
+    template_str = """
+    {% if student.year_in_school == YearInSchool.FRESHMAN %}
+        MATCH!
+    {% else %}
+        NO MATCH
+    {% endif %}
+    """
+    t = Template(template_str)
+    c = Context({'student': Student(), 'YearInSchool': YearInSchool})
+    output = t.render(c)
+    print(output.strip())
+
+if __name__ == '__main__':
+    main()
