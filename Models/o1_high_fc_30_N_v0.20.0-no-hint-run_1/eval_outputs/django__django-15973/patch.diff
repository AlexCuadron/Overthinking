diff --git a/demo_project/demo_project/__init__.py b/demo_project/demo_project/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/demo_project/demo_project/settings.py b/demo_project/demo_project/settings.py
new file mode 100644
index 0000000000..81423c3103
--- /dev/null
+++ b/demo_project/demo_project/settings.py
@@ -0,0 +1,86 @@
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    'variavel',
+    'fonte_variavel',
+    'fonte',
+]
+
+SECRET_KEY = 'test'
+DEBUG = True
+ALLOWED_HOSTS = []
+
+import os
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+MIDDLEWARE = [
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+]
+
+ROOT_URLCONF = 'demo_project.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'demo_project.wsgi.application'\nSECRET_KEY = 'test'
+DEBUG = True
+ALLOWED_HOSTS = []
+
+import os
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+MIDDLEWARE = [
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+]
+
+ROOT_URLCONF = 'demo_project.urls'
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+WSGI_APPLICATION = 'demo_project.wsgi.application'
diff --git a/demo_project/demo_project/urls.py b/demo_project/demo_project/urls.py
new file mode 100644
index 0000000000..6d78fefd21
--- /dev/null
+++ b/demo_project/demo_project/urls.py
@@ -0,0 +1,4 @@
+from django.urls import path
+
+urlpatterns = []
+
diff --git a/demo_project/fonte/__init__.py b/demo_project/fonte/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/demo_project/fonte/models.py b/demo_project/fonte/models.py
new file mode 100644
index 0000000000..79a6acd491
--- /dev/null
+++ b/demo_project/fonte/models.py
@@ -0,0 +1,17 @@
+from django.db import models
+
+class FonteModel(models.Model):
+    nome = models.TextField(unique=True)
+    descricao = models.TextField()
+    data_inicial = models.DateField()
+    data_final = models.DateField(blank=True, null=True)
+    variaveis = models.ManyToManyField("variavel.VariavelModel", through="fonte_variavel.FonteVariavelModel")
+
+    def __str__(self):
+        return self.nome
+
+    class Meta:
+        db_table = "fontes"
+        verbose_name = "Fonte"
+        verbose_name_plural = "Fontes"
+
diff --git a/demo_project/fonte_variavel/__init__.py b/demo_project/fonte_variavel/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/demo_project/fonte_variavel/models.py b/demo_project/fonte_variavel/models.py
new file mode 100644
index 0000000000..e531bd98a7
--- /dev/null
+++ b/demo_project/fonte_variavel/models.py
@@ -0,0 +1,12 @@
+from django.db import models
+from django.db.models import CASCADE
+
+class FonteVariavelModel(models.Model):
+    variavel = models.ForeignKey('variavel.VariavelModel', on_delete=CASCADE)
+    fonte = models.ForeignKey('fonte.FonteModel', on_delete=CASCADE)
+
+    class Meta:
+        db_table = 'fontes_variaveis'
+        verbose_name = 'Fonte'
+        verbose_name_plural = 'Fontes'
+
diff --git a/demo_project/manage.py b/demo_project/manage.py
new file mode 100644
index 0000000000..a7d70902fc
--- /dev/null
+++ b/demo_project/manage.py
@@ -0,0 +1,19 @@
+#!/usr/bin/env python
+import os
+import sys
+
+def main():
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'demo_project.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
+
+if __name__ == '__main__':
+    main()
+
diff --git a/demo_project/test_repro.py b/demo_project/test_repro.py
new file mode 100644
index 0000000000..1acb98baa9
--- /dev/null
+++ b/demo_project/test_repro.py
@@ -0,0 +1,20 @@
+import os
+import subprocess
+import sys
+
+def main():
+    manage_path = os.path.join(os.path.dirname(__file__), 'manage.py')
+    print('==> Running makemigrations')
+    ret = subprocess.run([sys.executable, manage_path, 'makemigrations'], check=False)
+    print(f'makemigrations returned code {ret.returncode}')
+    if ret.returncode != 0:
+        sys.exit(ret.returncode)
+
+    print('==> Running migrate')
+    ret = subprocess.run([sys.executable, manage_path, 'migrate'], check=False)
+    print(f'migrate returned code {ret.returncode}')
+    sys.exit(ret.returncode)
+
+if __name__ == '__main__':
+    main()
+
diff --git a/demo_project/variavel/__init__.py b/demo_project/variavel/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/demo_project/variavel/models.py b/demo_project/variavel/models.py
new file mode 100644
index 0000000000..be2dfa7a33
--- /dev/null
+++ b/demo_project/variavel/models.py
@@ -0,0 +1,11 @@
+from django.db import models
+
+class VariavelModel(models.Model):
+    nome = models.TextField(unique=True)
+    descricao = models.TextField()
+
+    class Meta:
+        db_table = 'variaveis'
+        verbose_name = 'Variável'
+        verbose_name_plural = 'Variáveis'
+
