diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py
index 1ce4594501..9145a5e166 100644
--- a/django/contrib/admindocs/utils.py
+++ b/django/contrib/admindocs/utils.py
@@ -170,7 +170,12 @@ def replace_named_groups(pattern):
             # If brackets are balanced, the end of the string for the current
             # named capture group pattern has been reached.
             if unmatched_open_brackets == 0:
-                group_pattern_and_name.append((pattern[start:end + idx], group_name))
+                gp = pattern[start:end + idx + 1]
+                # If the group capture closed right before a slash, ensure we keep that slash in the final pattern.
+                if len(gp) < len(pattern) and end + idx + 1 < len(pattern) and pattern[end + idx + 1] == '/':
+                    # Donâ€™t include the slash in the group capture.
+                    gp = gp[:-1]
+                group_pattern_and_name.append((gp, group_name))
                 break

             # Check for unescaped `(` and `)`. They mark the start and end of a
@@ -182,6 +187,9 @@ def replace_named_groups(pattern):
             prev_char = val

     # Replace the string for named capture groups with their group names.
+        else:
+            gp = pattern[start:]
+            group_pattern_and_name.append((gp, group_name))
     for group_pattern, group_name in group_pattern_and_name:
         pattern = pattern.replace(group_pattern, group_name)
     return pattern
diff --git a/repro.py b/repro.py
new file mode 100644
index 0000000000..181f596398
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,14 @@
+import sys
+
+sys.path.insert(0, '/workspace/django__django__3.0')
+
+from django.contrib.admindocs.utils import replace_named_groups
+
+def main():
+    pattern = r'entries/(?P<pk>[^/.]+)/relationships/(?P<related_field>\\w+)'
+    print("Original pattern:", pattern)
+    replaced = replace_named_groups(pattern)
+    print("Replaced pattern:", replaced)
+
+if __name__ == "__main__":
+    main()
