diff --git a/django/template/autoreload.py b/django/template/autoreload.py
index 84c8554165..4824dde10d 100644
--- a/django/template/autoreload.py
+++ b/django/template/autoreload.py
@@ -17,7 +17,11 @@ def get_template_directories():
         if not isinstance(backend, DjangoTemplates):
             continue

-        items.update(cwd / to_path(dir) for dir in backend.engine.dirs)
+        items.update(
+            cwd / to_path(dir)
+            for dir in backend.engine.dirs
+            if dir
+        )

         for loader in backend.engine.template_loaders:
             if not hasattr(loader, "get_dirs"):
@@ -25,7 +29,7 @@ def get_template_directories():
             items.update(
                 cwd / to_path(directory)
                 for directory in loader.get_dirs()
-                if not is_django_path(directory)
+                if directory and not is_django_path(directory)
             )
     return items

diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..4b1226c4a0
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,32 @@
+import sys
+from pathlib import Path
+
+from django.conf import settings
+from django.template.autoreload import get_template_directories
+
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY="test",
+    ROOT_URLCONF=__name__,
+    TEMPLATES=[
+        {
+            'BACKEND': 'django.template.backends.django.DjangoTemplates',
+            'DIRS': [""],  # Intentionally include an empty string
+        },
+    ],
+)
+
+import django
+
+django.setup()
+
+dirs = list(get_template_directories())
+print("Template directories:", dirs)
+
+# Check if the empty string ends up normalizing to the current working directory.
+if Path.cwd() in dirs:
+    print("ERROR REPRODUCED: empty string was normalized to the project root!")
+    sys.exit(1)
+else:
+    print("No error encountered.")
+    sys.exit(0)
