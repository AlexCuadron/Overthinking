diff --git a/django/contrib/auth/backends.py b/django/contrib/auth/backends.py
index f4b1722757..a3765ae0f1 100644
--- a/django/contrib/auth/backends.py
+++ b/django/contrib/auth/backends.py
@@ -39,6 +39,8 @@ class ModelBackend(BaseBackend):
     def authenticate(self, request, username=None, password=None, **kwargs):
         if username is None:
             username = kwargs.get(UserModel.USERNAME_FIELD)
+        if username is None or password is None:
+            return
         try:
             user = UserModel._default_manager.get_by_natural_key(username)
         except UserModel.DoesNotExist:
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..9a3accda42
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,35 @@
+import django
+from django.conf import settings
+from django.test.utils import CaptureQueriesContext
+from django.db import connection
+from django.core.management import call_command
+from django.contrib.auth import authenticate
+import sys
+
+def main():
+    if not settings.configured:
+        settings.configure(
+            INSTALLED_APPS=[
+                'django.contrib.auth',
+                'django.contrib.contenttypes',
+            ],
+            DATABASES={
+                'default': {
+                    'ENGINE': 'django.db.backends.sqlite3',
+                    'NAME': ':memory:',
+                }
+            },
+            SECRET_KEY='dummysecretkey',
+        )
+    django.setup()
+    call_command('migrate', run_syncdb=True, interactive=False, verbosity=0)
+    with CaptureQueriesContext(connection) as ctx:
+        user = authenticate(username=None, password=None)
+    print(f"Number of queries: {len(ctx.captured_queries)}")
+    if ctx.captured_queries:
+        print("Queries performed:")
+        for q in ctx.captured_queries:
+            print(q['sql'])
+
+if __name__ == '__main__':
+    sys.exit(main())
\ No newline at end of file
