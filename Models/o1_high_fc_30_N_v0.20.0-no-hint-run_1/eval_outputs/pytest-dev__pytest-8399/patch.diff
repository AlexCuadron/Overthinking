diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..9a9915278
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,15 @@
+import subprocess
+import sys
+import os
+
+if __name__ == "__main__":
+    # Create a file test_unittest_fixture.py containing the user snippet
+    with open("test_unittest_fixture.py", "w") as f:
+        f.write("""import unittest\n\nclass Tests(unittest.TestCase):\n    @classmethod\n    def setUpClass(cls):\n        pass\n\n    def test_1(self):\n        pass\n""")
+
+    # Now we'll run "pytest --fixtures" and print the output
+    result = subprocess.run(["pytest", "--fixtures"], capture_output=True, text=True)
+    print("STDOUT:")
+    print(result.stdout)
+    print("STDERR:")
+    print(result.stderr)
diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py
index 719eb4e88..3f88d7a9e 100644
--- a/src/_pytest/unittest.py
+++ b/src/_pytest/unittest.py
@@ -144,7 +144,7 @@ def _make_xunit_fixture(
         scope=scope,
         autouse=True,
         # Use a unique name to speed up lookup.
-        name=f"unittest_{setup_name}_fixture_{obj.__qualname__}",
+        name=f"_unittest_{setup_name}_fixture_{obj.__qualname__}",
     )
     def fixture(self, request: FixtureRequest) -> Generator[None, None, None]:
         if _is_skipped(self):
diff --git a/test_unittest_fixture.py b/test_unittest_fixture.py
new file mode 100644
index 000000000..6c0386dab
--- /dev/null
+++ b/test_unittest_fixture.py
@@ -0,0 +1,9 @@
+import unittest
+
+class Tests(unittest.TestCase):
+    @classmethod
+    def setUpClass(cls):
+        pass
+
+    def test_1(self):
+        pass
