diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py
index da4ff928aa..3effaa7533 100644
--- a/django/db/models/aggregates.py
+++ b/django/db/models/aggregates.py
@@ -99,6 +99,7 @@ class Aggregate(Func):
 class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):
     function = 'AVG'
     name = 'Avg'
+    allow_distinct = True


 class Count(Aggregate):
@@ -121,11 +122,13 @@ class Count(Aggregate):
 class Max(Aggregate):
     function = 'MAX'
     name = 'Max'
+    allow_distinct = True


 class Min(Aggregate):
     function = 'MIN'
     name = 'Min'
+    allow_distinct = True


 class StdDev(NumericOutputFieldMixin, Aggregate):
@@ -142,6 +145,7 @@ class StdDev(NumericOutputFieldMixin, Aggregate):
 class Sum(FixDurationInputMixin, Aggregate):
     function = 'SUM'
     name = 'Sum'
+    allow_distinct = True


 class Variance(NumericOutputFieldMixin, Aggregate):
diff --git a/scripts/repro_distinct_error.py b/scripts/repro_distinct_error.py
new file mode 100644
index 0000000000..743663b931
--- /dev/null
+++ b/scripts/repro_distinct_error.py
@@ -0,0 +1,17 @@
+import sys
+import os
+
+if __name__ == '__main__':
+    print('Testing distinct on Avg and Sum aggregates')
+    from django.db.models.aggregates import Avg, Sum
+    try:
+        avg_agg = Avg('some_field', distinct=True)
+        print('Avg aggregator with distinct instantiation: OK')
+    except TypeError as e:
+        print(f'Error using distinct with Avg aggregator: {e}')
+
+    try:
+        sum_agg = Sum('some_field', distinct=True)
+        print('Sum aggregator with distinct instantiation: OK')
+    except TypeError as e:
+        print(f'Error using distinct with Sum aggregator: {e}')
