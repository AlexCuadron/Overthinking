diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py
index 137e6faa0f..76bac0beb1 100644
--- a/django/contrib/admin/options.py
+++ b/django/contrib/admin/options.py
@@ -1631,7 +1631,7 @@ class ModelAdmin(BaseModelAdmin):

     def _get_edited_object_pks(self, request, prefix):
         """Return POST data values of list_editable primary keys."""
-        pk_pattern = re.compile(r'{}-\d+-{}$'.format(prefix, self.model._meta.pk.name))
+        pk_pattern = re.compile(r'{}-\\d+-{}$'.format(re.escape(prefix), self.model._meta.pk.name))
         return [value for key, value in request.POST.items() if pk_pattern.match(key)]

     def _get_list_editable_queryset(self, request, prefix):
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..05f11efaee
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,17 @@
+import re
+
+# This script demonstrates the bug when a formset prefix contains regex characters.
+# The original code in django/contrib/admin/options.py uses:
+#   pk_pattern = re.compile(r'{}-\\d+-{}$'.format(prefix, self.model._meta.pk.name))
+# without escaping the prefix.
+
+prefix = "my+prefix"
+pk_name = "id"  # Simulate self.model._meta.pk.name
+pk_pattern = re.compile('{}-\\d+-{}$'.format(re.escape(prefix), pk_name))
+
+# We'll test a string that should match.
+test_str = "my+prefix-123-id"
+
+print("Regex pattern:", pk_pattern.pattern)
+print("Test string:", test_str)
+print("Does it match?", bool(pk_pattern.match(test_str)))
