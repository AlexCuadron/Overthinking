diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py
index d9fb088350..2732f4d1d9 100644
--- a/django/core/management/commands/runserver.py
+++ b/django/core/management/commands/runserver.py
@@ -52,6 +52,12 @@ class Command(BaseCommand):
             help='Tells Django to NOT use the auto-reloader.',
         )

+        parser.add_argument(
+            '--skip-checks',
+            action='store_true',
+            dest='skip_checks',
+            help='Tells Django to skip system checks.'
+        )
     def execute(self, *args, **options):
         if options['no_color']:
             # We rely on the environment because it's currently the only
@@ -114,11 +120,12 @@ class Command(BaseCommand):
         shutdown_message = options.get('shutdown_message', '')
         quit_command = 'CTRL-BREAK' if sys.platform == 'win32' else 'CONTROL-C'

-        self.stdout.write("Performing system checks...\n\n")
-        self.check(display_num_errors=True)
-        # Need to check migrations here, so can't use the
-        # requires_migrations_check attribute.
-        self.check_migrations()
+        if not options['skip_checks']:
+            self.stdout.write("Performing system checks...\n\n")
+            self.check(display_num_errors=True)
+            # Need to check migrations here, so can't use the
+            # requires_migrations_check attribute.
+            self.check_migrations()
         now = datetime.now().strftime('%B %d, %Y - %X')
         self.stdout.write(now)
         self.stdout.write((
diff --git a/repro_script.py b/repro_script.py
new file mode 100644
index 0000000000..95054e0611
--- /dev/null
+++ b/repro_script.py
@@ -0,0 +1,20 @@
+import sys
+import os
+
+os.environ['DJANGO_SETTINGS_MODULE'] = 'test_settings'
+# Make sure our local copy of django (./django) is on the Python path.
+repo_path = os.path.dirname(os.path.abspath(__file__))
+sys.path.insert(0, repo_path)
+
+from django.core.management import execute_from_command_line
+
+if __name__ == "__main__":
+    # We mimic calling "python manage.py runserver --skip-checks".
+    # This should fail at the moment because runserver does not have the --skip-checks option.
+    test_argv = ["manage.py", "runserver", "--skip-checks"]
+    try:
+        execute_from_command_line(test_argv)
+    except SystemExit as e:
+        print(f"SystemExit: {e}")
+    except Exception as e:
+        print(f"Exception: {type(e).__name__}: {e}")
diff --git a/test_settings.py b/test_settings.py
new file mode 100644
index 0000000000..f7fad1c3b2
--- /dev/null
+++ b/test_settings.py
@@ -0,0 +1,15 @@
+DEBUG = True
+SECRET_KEY = 'fake-key'
+ALLOWED_HOSTS = ['localhost', '127.0.0.1']
+
+INSTALLED_APPS = [
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+]
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
