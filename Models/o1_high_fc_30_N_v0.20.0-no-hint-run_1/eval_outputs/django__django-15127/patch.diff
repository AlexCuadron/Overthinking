diff --git a/django/contrib/messages/storage/base.py b/django/contrib/messages/storage/base.py
index 01422066a6..8cdbbd92c7 100644
--- a/django/contrib/messages/storage/base.py
+++ b/django/contrib/messages/storage/base.py
@@ -1,8 +1,6 @@
 from django.conf import settings
 from django.contrib.messages import constants, utils

-LEVEL_TAGS = utils.get_level_tags()
-

 class Message:
     """
@@ -38,7 +36,7 @@ class Message:

     @property
     def level_tag(self):
-        return LEVEL_TAGS.get(self.level, '')
+        return utils.get_level_tags().get(self.level, '')


 class BaseStorage:
diff --git a/reproduce_tag_issue.py b/reproduce_tag_issue.py
new file mode 100644
index 0000000000..9547dbefe3
--- /dev/null
+++ b/reproduce_tag_issue.py
@@ -0,0 +1,39 @@
+import django
+from django.conf import settings
+from django.test import override_settings
+from django.contrib.messages.storage.base import Message
+
+if not settings.configured:
+    settings.configure(
+        SECRET_KEY='testsecret',
+        INSTALLED_APPS=[
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+            'django.contrib.messages',
+            'django.contrib.sessions',
+        ],
+        MIDDLEWARE=[
+            'django.contrib.sessions.middleware.SessionMiddleware',
+            'django.contrib.messages.middleware.MessageMiddleware',
+        ],
+    )
+
+
+# We'll demonstrate the problem:
+# The second time we retrieve msg.level_tag after override_settings,
+# currently it yields an empty string instead of 'mycustomtag'.
+
+
+def check_tags(label):
+    msg = Message(999, 'dummy message')
+    print(f"[{label}] level=999 -> level_tag=", repr(msg.level_tag))
+
+
+def main():
+    django.setup()  # Initialize Django
+    check_tags("Before override")
+    with override_settings(MESSAGE_TAGS={999: 'mycustomtag'}):
+        check_tags("After override")
+
+if __name__ == '__main__':
+    main()
