diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..e9ff667f19
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,11 @@
+from sympy.physics.vector import ReferenceFrame, Vector
+from sympy import symbols
+
+N = ReferenceFrame('N')
+
+# Reproduce the TypeError by summing a Vector with 0 * Vector
+try:
+    result = sum([N.x, (0 * N.x)])
+    print("No error. Result:", result)
+except Exception as e:
+    print("Error occurred:", e)
\ No newline at end of file
diff --git a/sympy/physics/vector/vector.py b/sympy/physics/vector/vector.py
index a048ee57f1..9b5b52539b 100644
--- a/sympy/physics/vector/vector.py
+++ b/sympy/physics/vector/vector.py
@@ -721,6 +721,8 @@ def __init__(self, other, want):


 def _check_vector(other):
-    if not isinstance(other, Vector):
-        raise TypeError('A Vector must be supplied')
-    return other
+    if isinstance(other, Vector):
+        return other
+    if other == 0:
+        return Vector(0)
+    raise TypeError('A Vector must be supplied')
