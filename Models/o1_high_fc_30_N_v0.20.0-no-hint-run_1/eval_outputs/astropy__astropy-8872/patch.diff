diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py
index ded609cbe9..71b6cdc203 100644
--- a/astropy/units/quantity.py
+++ b/astropy/units/quantity.py
@@ -376,10 +376,8 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):
             raise TypeError("The value must be a valid Python or "
                             "Numpy numeric type.")

-        # by default, cast any integer, boolean, etc., to float
-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)
-                                   or value.dtype.fields)
-                              or value.dtype.kind == 'O'):
+        # by default, cast integer, boolean, object to float
+        if dtype is None and (value.dtype.kind in ('i','u','b','O')):
             value = value.astype(float)

         value = value.view(cls)
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..2f3f753073
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,24 @@
+import numpy as np
+import sys
+
+sys.path.insert(0, "/workspace/astropy__astropy__3.1")
+
+import astropy.units as u
+
+print("Testing float16 quantity dtype:")
+print("Value:", np.float16(1))
+q_float16 = (np.float16(1) * u.km)
+print("Quantity:", q_float16)
+print("dtype:", q_float16.dtype)
+
+print("\nTesting float32 quantity dtype:")
+q_float32 = (np.float32(1) * u.km)
+print("dtype:", q_float32.dtype)
+
+print("\nTesting float64 quantity dtype:")
+q_float64 = (np.float64(1) * u.km)
+print("dtype:", q_float64.dtype)
+
+print("\nTesting float128 quantity dtype:")
+q_float128 = (np.float128(1) * u.km)
+print("dtype:", q_float128.dtype)
