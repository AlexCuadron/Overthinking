diff --git a/doc/conf.py b/doc/conf.py
index a721508de..e230c5851 100644
--- a/doc/conf.py
+++ b/doc/conf.py
@@ -192,3 +192,13 @@ def setup(app):
     app.info = lambda *args, **kwargs: logger.info(*args, **kwargs)
     app.warn = lambda *args, **kwargs: logger.warning(*args, **kwargs)
     app.debug = lambda *args, **kwargs: logger.debug(*args, **kwargs)
+
+
+# Enable index and module index
+html_use_index = True
+html_domain_indices = True
+
+# Make sure "search" can be referenced in a toctree.
+html_additional_pages = {
+    'search': 'search.html',
+}
diff --git a/doc/genindex.rst b/doc/genindex.rst
new file mode 100644
index 000000000..a89232939
--- /dev/null
+++ b/doc/genindex.rst
@@ -0,0 +1,10 @@
+.. _genindex:
+
+Indices
+=======
+
+This page redirects you to the real generated index.
+
+.. raw:: html
+
+   <meta http-equiv="refresh" content="0; url=genindex.html">
diff --git a/doc/index.rst b/doc/index.rst
index e795bdb57..e128d584f 100644
--- a/doc/index.rst
+++ b/doc/index.rst
@@ -112,3 +112,15 @@ usecase-driven documentation, see :ref:`get-started` or :ref:`user-guides`.
    glossary
    changes
    examples
+
+
+Indices and tables
+==================
+
+.. toctree::
+   :maxdepth: 1
+   :caption: Indices and tables
+
+   genindex
+   modindex
+   search
diff --git a/doc/modindex.rst b/doc/modindex.rst
new file mode 100644
index 000000000..09126e06d
--- /dev/null
+++ b/doc/modindex.rst
@@ -0,0 +1,8 @@
+Module Index
+============
+
+This page redirects you to the real generated module index.
+
+.. raw:: html
+
+   <meta http-equiv="refresh" content="0; url=py-modindex.html">
diff --git a/doc/search.rst b/doc/search.rst
new file mode 100644
index 000000000..51243f8a1
--- /dev/null
+++ b/doc/search.rst
@@ -0,0 +1,10 @@
+.. _search:
+
+Search Page
+===========
+
+This page redirects you to the real search page.
+
+.. raw:: html
+
+   <meta http-equiv="refresh" content="0; url=search.html">
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..bf0a82bfd
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,8 @@
+import subprocess
+import sys
+
+if __name__ == "__main__":
+    cmd = ["sphinx-build", "-b", "html", "doc", "doc/_build"]
+    print(f"Running: {' '.join(cmd)}")
+    proc = subprocess.run(cmd)
+    sys.exit(proc.returncode)
