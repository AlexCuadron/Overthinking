diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py
index b8efb9f881..93e446e1ac 100644
--- a/django/utils/autoreload.py
+++ b/django/utils/autoreload.py
@@ -221,9 +221,9 @@ def get_child_arguments():
     py_script = Path(sys.argv[0])

     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]
-    if py_script == django_main_path:
-        # The server was started with `python -m django runserver`.
-        args += ['-m', 'django']
+    main_spec = getattr(sys.modules['__main__'], '__spec__', None)
+    if main_spec is not None and main_spec.parent:
+        args += ['-m', main_spec.parent]
         args += sys.argv[1:]
     elif not py_script.exists():
         # sys.argv[0] may not exist for several reasons on Windows.
diff --git a/pkg_other_than_django/__main__.py b/pkg_other_than_django/__main__.py
new file mode 100644
index 0000000000..9e30967a88
--- /dev/null
+++ b/pkg_other_than_django/__main__.py
@@ -0,0 +1,10 @@
+import sys
+from django.core.management import execute_from_command_line
+
+if __name__ == '__main__':
+    import os
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'pkg_other_than_django.mysettings')
+    sys.argv[0] = 'manage.py'
+    if len(sys.argv) < 2 or sys.argv[1] != 'runserver':
+        sys.argv.insert(1, 'runserver')
+    execute_from_command_line(sys.argv)
diff --git a/pkg_other_than_django/mysettings.py b/pkg_other_than_django/mysettings.py
new file mode 100644
index 0000000000..03e2e841a5
--- /dev/null
+++ b/pkg_other_than_django/mysettings.py
@@ -0,0 +1,4 @@
+DEBUG = True
+SECRET_KEY = 'insecure-key'
+ALLOWED_HOSTS = ['*']
+INSTALLED_APPS = []
\ No newline at end of file
diff --git a/test_error.py b/test_error.py
new file mode 100644
index 0000000000..898dfd9723
--- /dev/null
+++ b/test_error.py
@@ -0,0 +1,9 @@
+import os
+import sys
+print('Reproducing the error: Attempting to run server with "python -m pkg_other_than_django runserver"')
+
+# We'll call the command directly.
+# In actual usage, you'd do it from the shell, but let's do it from Python to store logs.
+
+exit_code = os.system('python -m pkg_other_than_django runserver')
+print(f'Finished. Exit code was {exit_code}.')
