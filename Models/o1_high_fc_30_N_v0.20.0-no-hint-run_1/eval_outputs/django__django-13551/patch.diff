diff --git a/django/contrib/auth/tokens.py b/django/contrib/auth/tokens.py
index 93e2d71af2..31a0ad0a57 100644
--- a/django/contrib/auth/tokens.py
+++ b/django/contrib/auth/tokens.py
@@ -94,7 +94,7 @@ class PasswordResetTokenGenerator:
         # Truncate microseconds so that tokens are consistent even if the
         # database doesn't support microseconds.
         login_timestamp = '' if user.last_login is None else user.last_login.replace(microsecond=0, tzinfo=None)
-        return str(user.pk) + user.password + str(login_timestamp) + str(timestamp)
+        return str(user.pk) + user.password + (user.email or '') + str(login_timestamp) + str(timestamp)

     def _num_seconds(self, dt):
         return int((dt - datetime(2001, 1, 1)).total_seconds())
diff --git a/repro_error.py b/repro_error.py
new file mode 100644
index 0000000000..03c756557e
--- /dev/null
+++ b/repro_error.py
@@ -0,0 +1,41 @@
+import django
+from django.conf import settings
+
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.auth',
+        'django.contrib.contenttypes',
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    SECRET_KEY='test-secret-key',
+)
+
+django.setup()
+
+from django.core.management import call_command
+from django.contrib.auth import get_user_model
+from django.contrib.auth.tokens import default_token_generator
+
+# We need to run migrations so the auth tables are created.
+call_command('migrate', run_syncdb=True, interactive=False, verbosity=0)
+
+User = get_user_model()
+
+# Step 1: Create user.
+user = User.objects.create_user(username='testuser', email='foo@example.com', password='12345')
+# Step 2: Generate password reset token for user.
+token = default_token_generator.make_token(user)
+
+# Step 3: Change the user email and save.
+user.email = 'bar@example.com'
+user.save()
+
+# Step 4: Check token validity after email changed.
+valid = default_token_generator.check_token(user, token)
+
+print("Token valid after user email changed?", valid)
