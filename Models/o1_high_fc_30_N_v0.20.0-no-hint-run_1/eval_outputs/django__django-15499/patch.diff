diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py
index 90fc31bee5..b69c431971 100644
--- a/django/db/migrations/operations/models.py
+++ b/django/db/migrations/operations/models.py
@@ -202,6 +202,19 @@ class CreateModel(ModelOperation):
                     managers=self.managers,
                 ),
             ]
+        elif (
+            isinstance(operation, AlterModelManagers)
+            and self.name_lower == operation.name_lower
+        ):
+            return [
+                CreateModel(
+                    self.name,
+                    fields=self.fields,
+                    options=self.options,
+                    bases=self.bases,
+                    managers=operation.managers,
+                ),
+            ]
         elif (
             isinstance(operation, FieldOperation)
             and self.name_lower == operation.model_name_lower
diff --git a/repro.py b/repro.py
new file mode 100644
index 0000000000..77c6fa428a
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,26 @@
+from django.db import migrations, models
+from django.db.migrations.operations.models import CreateModel, AlterModelManagers
+from django.db.migrations.optimizer import MigrationOptimizer
+
+if __name__ == "__main__":
+    ops = [
+        CreateModel(
+            name="TestModel",
+            fields=[("id", models.AutoField(primary_key=True))],
+            options={},
+            managers=[("old_manager", models.Manager())]
+        ),
+        AlterModelManagers(
+            name="TestModel",
+            managers=[("new_manager", models.Manager())]
+        ),
+    ]
+
+    optimizer = MigrationOptimizer()
+    optimized_ops = optimizer.optimize(ops, "app_label")
+
+    print("Original ops:", ops)
+    print("Optimized ops:", optimized_ops)
+    print("Number of optimized ops:", len(optimized_ops))
+
+    # If the optimization is successful, we expect only 1 operation, a CreateModel with new_manager.
\ No newline at end of file
