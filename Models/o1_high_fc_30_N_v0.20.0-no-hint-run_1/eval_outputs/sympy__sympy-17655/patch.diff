diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..ac8dfc5d49
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,9 @@
+from sympy import geometry as ge
+import sympy
+
+point1 = ge.Point(0,0)
+point2 = ge.Point(1,1)
+
+print("point1 + point2 * 2.0 =>", point1 + point2*sympy.sympify(2.0))
+print("point1 + 2.0 * point2 =>", point1 + sympy.sympify(2.0)*point2)
+
diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py
index 7c978c47be..6f2752c8d1 100644
--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -216,6 +216,15 @@ def __add__(self, other):
         try:
             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))
         except TypeError:
+            from sympy import Mul, sympify
+            if isinstance(other, Mul):
+                point_factors = [arg for arg in other.args if isinstance(arg, Point)]
+                if len(point_factors) == 1:
+                    scalar = sympify(1)
+                    for arg in other.args:
+                        if arg is not point_factors[0]:
+                            scalar *= arg
+                    return self + point_factors[0]*scalar
             raise GeometryError("Don't know how to add {} and a Point object".format(other))

         coords = [simplify(a + b) for a, b in zip(s, o)]
@@ -278,6 +287,9 @@ def __mul__(self, factor):
         coords = [simplify(x*factor) for x in self.args]
         return Point(coords, evaluate=False)

+    def __rmul__(self, factor):
+        return self.__mul__(factor)
+
     def __neg__(self):
         """Negate the point."""
         coords = [-x for x in self.args]
