diff --git a/django/db/models/base.py b/django/db/models/base.py
index 4038859cfa..dadc0399e6 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -1297,6 +1297,8 @@ class Model(metaclass=ModelBase):

     @classmethod
     def _check_default_pk(cls):
+        if cls._meta.pk.model is not cls:
+            return []
         if (
             cls._meta.pk.auto_created and
             not settings.is_overridden('DEFAULT_AUTO_FIELD') and
diff --git a/myapp/__init__.py b/myapp/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/myapp/apps.py b/myapp/apps.py
new file mode 100644
index 0000000000..6ba7a2b7c8
--- /dev/null
+++ b/myapp/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class MyappConfig(AppConfig):
+    name = 'myapp'
diff --git a/myapp/reproduce_issue.py b/myapp/reproduce_issue.py
new file mode 100644
index 0000000000..ad0633656a
--- /dev/null
+++ b/myapp/reproduce_issue.py
@@ -0,0 +1,30 @@
+import os, sys
+sys.path.insert(0, os.path.join(os.path.dirname(os.path.abspath(__file__)), '..'))
+
+import django
+from django.conf import settings
+from django.core.management import call_command
+from django.db import models
+
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=["myapp"],
+        DATABASES={"default": {"ENGINE": "django.db.backends.sqlite3", "NAME": ":memory:"}},
+        SECRET_KEY="secret",
+        DEBUG=True,
+    )
+
+django.setup()
+
+class Parent(models.Model):
+    id = models.AutoField(primary_key=True)
+
+    class Meta:
+        app_label = 'myapp'
+
+class Child(Parent):
+    class Meta:
+        app_label = 'myapp'
+
+if __name__ == "__main__":
+    call_command("makemigrations", "myapp", dry_run=True, verbosity=2)
