diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index 54f3258eac..36962c12bf 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -729,8 +729,7 @@ class Query(BaseExpression):
             opts = orig_opts
             for name in parts[:-1]:
                 old_model = cur_model
-                if name in self._filtered_relations:
-                    name = self._filtered_relations[name].relation_name
+
                 source = opts.get_field(name)
                 if is_reverse_o2o(source):
                     cur_model = source.related_model
@@ -1573,6 +1572,16 @@ class Query(BaseExpression):
         filtered_relation.alias = alias
         lookups = dict(get_children_from_q(filtered_relation.condition))
         relation_lookup_parts, relation_field_parts, _ = self.solve_lookup_type(
+        # If there's already a FilteredRelation with the same alias and relation_name,
+        # create a new alias so that multiple definitions for the same underlying relation
+        # don't overwrite each other.
+        if alias in self._filtered_relations:
+            existing = self._filtered_relations[alias]
+            if existing.relation_name == filtered_relation.relation_name:
+                new_alias = f'{alias}__dup_{len(self._filtered_relations)}'
+                filtered_relation.alias = new_alias
+                self._filtered_relations[new_alias] = filtered_relation
+                return
             filtered_relation.relation_name
         )
         if relation_lookup_parts:
@@ -1630,17 +1639,8 @@ class Query(BaseExpression):
             except FieldDoesNotExist:
                 if name in self.annotation_select:
                     field = self.annotation_select[name].output_field
-                elif name in self._filtered_relations and pos == 0:
-                    filtered_relation = self._filtered_relations[name]
-                    if LOOKUP_SEP in filtered_relation.relation_name:
-                        parts = filtered_relation.relation_name.split(LOOKUP_SEP)
-                        filtered_relation_path, field, _, _ = self.names_to_path(
-                            parts,
-                            opts,
-                            allow_many,
-                            fail_on_missing,
-                        )
-                        path.extend(filtered_relation_path[:-1])
+                # Removed block that collapses multiple FilteredRelation references for the same relation.
+
                     else:
                         field = opts.get_field(filtered_relation.relation_name)
             if field is not None:
