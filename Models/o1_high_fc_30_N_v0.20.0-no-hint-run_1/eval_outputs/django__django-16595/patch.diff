diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py
index cd3aab43ad..148dffae6d 100644
--- a/django/db/migrations/operations/fields.py
+++ b/django/db/migrations/operations/fields.py
@@ -264,9 +264,12 @@ class AlterField(FieldOperation):
                     field=self.field,
                 ),
             ]
+        elif isinstance(operation, AlterField) and self.is_same_field_operation(operation):
+            return [operation]
         return super().reduce(operation, app_label)


+
 class RenameField(FieldOperation):
     """Rename a field on the model. Might affect db_column too."""

diff --git a/scripts/reproduce.py b/scripts/reproduce.py
new file mode 100644
index 0000000000..2cf5884259
--- /dev/null
+++ b/scripts/reproduce.py
@@ -0,0 +1,26 @@
+import sys
+import os
+
+# Insert the parent directory to the Python path so we can import Django modules
+sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
+
+from django.db.migrations.operations import AddField, AlterField
+from django.db.migrations.optimizer import MigrationOptimizer
+from django.db import models
+
+def main():
+    ops = [
+        AddField(model_name='book', name='title', field=models.CharField(max_length=256, null=True)),
+        AlterField(model_name='book', name='title', field=models.CharField(max_length=128, null=True)),
+        AlterField(model_name='book', name='title', field=models.CharField(max_length=128, null=True, help_text='help')),
+        AlterField(model_name='book', name='title', field=models.CharField(max_length=128, null=True, help_text='help', default=None)),
+    ]
+    optimizer = MigrationOptimizer()
+    result = optimizer.optimize(ops, app_label='books')
+    print("After optimizing all ops:", result)
+
+    splitted = optimizer.optimize(ops[1:], app_label='books')
+    print("After optimizing splitted ops:", splitted)
+
+if __name__ == '__main__':
+    main()
