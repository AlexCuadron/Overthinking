diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 247e3680c0..5499b1bbe1 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -63,12 +63,17 @@ class ResolverMatch:
         )


-@functools.lru_cache(maxsize=None)
 def get_resolver(urlconf=None):
     if urlconf is None:
         urlconf = settings.ROOT_URLCONF
+    return _get_resolver_cached(urlconf)
+
+@functools.lru_cache(maxsize=None)
+def _get_resolver_cached(urlconf):
     return URLResolver(RegexPattern(r'^/'), urlconf)

+get_resolver.cache_clear = _get_resolver_cached.cache_clear
+

 @functools.lru_cache(maxsize=None)
 def get_ns_resolver(ns_pattern, resolver, converters):
diff --git a/scripts/reproduce_bug.py b/scripts/reproduce_bug.py
new file mode 100644
index 0000000000..71b3fdc114
--- /dev/null
+++ b/scripts/reproduce_bug.py
@@ -0,0 +1,44 @@
+import sys
+import os
+
+# We set up Django's environment by pointing to the local django package.
+# Weâ€™ll do a minimal script that calls get_resolver with None, then with settings.ROOT_URLCONF
+# and prints whether they differ.
+
+# so sys.path includes the parent directory of django, i.e. /workspace/django__django__3.0
+sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
+
+import django
+from django.conf import settings
+
+# we need to configure Django if not configured
+if not settings.configured:
+    settings.configure(
+        ROOT_URLCONF='django.conf.urls',
+        SECRET_KEY='test',
+        DEBUG=True,
+        ALLOWED_HOSTS=['*'],
+    )
+
+try:
+    django.setup()
+except RuntimeError:
+    pass
+
+from django.urls import get_resolver, clear_url_caches
+
+print("Using ROOT_URLCONF:", settings.ROOT_URLCONF)
+
+# Clear any previously cached resolvers.
+clear_url_caches()
+
+r1 = get_resolver(None)
+r2 = get_resolver(settings.ROOT_URLCONF)
+
+print(f"Resolver for None is {r1}")
+print(f"Resolver for ROOT_URLCONF is {r2}")
+
+if r1 is r2:
+    print("They are the same object!")
+else:
+    print("They differ! Potentially multiple resolvers/caches.")
