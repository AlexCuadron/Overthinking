diff --git a/django/core/management/commands/loaddata.py b/django/core/management/commands/loaddata.py
index ac97f13161..f720f5bd6c 100644
--- a/django/core/management/commands/loaddata.py
+++ b/django/core/management/commands/loaddata.py
@@ -361,8 +361,9 @@ class Command(BaseCommand):
         current directory.
         """
         dirs = []
-        fixture_dirs = settings.FIXTURE_DIRS
-        if len(fixture_dirs) != len(set(fixture_dirs)):
+        raw_fixture_dirs = [str(d) for d in settings.FIXTURE_DIRS]
+        normalized_fixture_dirs = [os.path.realpath(d) for d in raw_fixture_dirs]
+        if len(normalized_fixture_dirs) != len(set(normalized_fixture_dirs)):
             raise ImproperlyConfigured("settings.FIXTURE_DIRS contains duplicates.")
         for app_config in apps.get_app_configs():
             app_label = app_config.label
diff --git a/reproduce_fixture_dup_error.py b/reproduce_fixture_dup_error.py
new file mode 100644
index 0000000000..a56097844d
--- /dev/null
+++ b/reproduce_fixture_dup_error.py
@@ -0,0 +1,35 @@
+import sys
+import os
+from pathlib import Path
+
+import django
+from django.conf import settings
+from django.core.exceptions import ImproperlyConfigured
+from django.core.management.commands.loaddata import Command
+
+def main():
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY='test',
+        ROOT_URLCONF='',
+        FIXTURE_DIRS = [Path('fixtures'), 'fixtures'],
+        INSTALLED_APPS = [
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:'
+            }
+        },
+    )
+    django.setup()
+    try:
+        Command().run_from_argv(['manage.py', 'loaddata', 'dummy_fixture'])
+        print("No error raised for duplicates.")
+    except ImproperlyConfigured as e:
+        print(f"ImproperlyConfigured raised: {e}")
+
+if __name__ == "__main__":
+    main()
