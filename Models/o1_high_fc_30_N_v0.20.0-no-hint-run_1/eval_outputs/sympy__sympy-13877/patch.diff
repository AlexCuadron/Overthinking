diff --git a/repro_bug.py b/repro_bug.py
new file mode 100644
index 0000000000..f158ae8d10
--- /dev/null
+++ b/repro_bug.py
@@ -0,0 +1,8 @@
+from sympy import *
+from sympy.abc import a
+
+# The code snippet from the PR description
+f = lambda n: det(Matrix([[i + a*j for i in range(n)] for j in range(n)]))
+
+print("f(5)=", f(5))  # Should produce nan
+print("f(6)=", f(6))  # Should produce the traceback
\ No newline at end of file
diff --git a/sympy/matrices/matrices.py b/sympy/matrices/matrices.py
index 97cde62e26..5dac9bf73c 100644
--- a/sympy/matrices/matrices.py
+++ b/sympy/matrices/matrices.py
@@ -207,13 +207,16 @@ def bareiss(mat, cumm=1):

             def entry(i, j):
                 ret = (pivot_val*tmp_mat[i, j + 1] - mat[pivot_pos, j + 1]*tmp_mat[i, 0]) / cumm
-                if not ret.is_Atom:
-                    cancel(ret)
+                # Removing factor cancellation step due to invalid NaN comparison concerns
+# if not ret.is_Atom:
+#     cancel(ret)
+
                 return ret

             return sign*bareiss(self._new(mat.rows - 1, mat.cols - 1, entry), pivot_val)

-        return cancel(bareiss(self))
+        # Removing final cancel call to avoid invalid NaN comparison
+        return bareiss(self)

     def _eval_det_berkowitz(self):
         """ Use the Berkowitz algorithm to compute the determinant."""
