diff --git a/sympy/stats/crv_types.py b/sympy/stats/crv_types.py
index fff7da80ae..8618a1fa99 100644
--- a/sympy/stats/crv_types.py
+++ b/sympy/stats/crv_types.py
@@ -152,6 +152,15 @@ class ArcsinDistribution(SingleContinuousDistribution):

     def pdf(self, x):
         return 1/(pi*sqrt((x - self.a)*(self.b - x)))
+    def _cdf(self, x):
+        from sympy import Piecewise, asin, sqrt, S, pi
+        a, b = self.a, self.b
+        return Piecewise(
+            (0, x <= a),
+            (1, x >= b),
+            (1/pi*asin(sqrt((x - a)/(b - a))), True)
+        )
+

 def Arcsin(name, a=0, b=1):
     r"""
@@ -662,6 +671,13 @@ def ChiSquared(name, k):
 #-------------------------------------------------------------------------------
 # Dagum distribution -----------------------------------------------------------

+    def _cdf(self, x):
+        from sympy import Piecewise
+        p, a, b = self.p, self.a, self.b
+        return Piecewise(
+            (0, x <= 0),
+            (1 - (1 + (x/b)**a)**(-p), True)
+        )

 class DagumDistribution(SingleContinuousDistribution):
     _argnames = ('p', 'a', 'b')
@@ -717,6 +733,13 @@ def Dagum(name, p, a, b):
     .. [1] http://en.wikipedia.org/wiki/Dagum_distribution
     """

+    def _cdf(self, x):
+        from sympy import Piecewise, lowergamma, gamma
+        k, lam = self.k, self.l
+        return Piecewise(
+            (0, x < 0),
+            (lowergamma(k, lam*x)/gamma(k), True)
+        )
     return rv(name, DagumDistribution, (p, a, b))

 #-------------------------------------------------------------------------------
@@ -1040,6 +1063,13 @@ def __new__(cls, a, s=1, m=0):

     def pdf(self, x):
         a, s, m = self.a, self.s, self.m
+    def _cdf(self, x):
+        from sympy import Piecewise, exp
+        alpha, s, m = self.alpha, self.s, self.m
+        return Piecewise(
+            (0, x <= m),
+            (exp(-((x - m)/s)**(-alpha)), True)
+        )
         return a/s * ((x-m)/s)**(-1-a) * exp(-((x-m)/s)**(-a))

 def Frechet(name, a, s=1, m=0):
@@ -1100,6 +1130,13 @@ class GammaDistribution(SingleContinuousDistribution):
     set = Interval(0, oo)

     @staticmethod
+    def _cdf(self, x):
+        from sympy import Piecewise, lowergamma, gamma
+        k, theta = self.k, self.theta
+        return Piecewise(
+            (0, x < 0),
+            (lowergamma(k, x/theta) / gamma(k), True)
+        )
     def check(k, theta):
         _value_check(k > 0, "k must be positive")
         _value_check(theta > 0, "Theta must be positive")
@@ -1187,6 +1224,13 @@ def Gamma(name, k, theta):
 # Inverse Gamma distribution ---------------------------------------------------

 class GammaInverseDistribution(SingleContinuousDistribution):
+    def _cdf(self, x):
+        from sympy import Piecewise, uppergamma, gamma
+        alpha, beta = self.alpha, self.beta
+        return Piecewise(
+            (0, x < 0),
+            (1 - uppergamma(alpha, beta/x)/gamma(alpha), True)
+        )
     _argnames = ('a', 'b')

     set = Interval(0, oo)
@@ -1379,6 +1423,14 @@ class KumaraswamyDistribution(SingleContinuousDistribution):
     @staticmethod
     def check(a, b):
         _value_check(a > 0, "a must be positive")
+    def _cdf(self, x):
+        from sympy import Piecewise
+        a, b = self.a, self.b
+        return Piecewise(
+            (0, x <= 0),
+            (1, x >= 1),
+            (1 - (1 - x**a)**b, True)
+        )
         _value_check(b > 0, "b must be positive")

     def pdf(self, x):
@@ -1433,6 +1485,13 @@ def Kumaraswamy(name, a, b):
     """

     return rv(name, KumaraswamyDistribution, (a, b))
+    def _cdf(self, x):
+        from sympy import Piecewise, exp
+        mu, b = self.mu, self.b
+        return Piecewise(
+            (exp((x - mu)/b)/2, x < mu),
+            (1 - exp(-(x - mu)/b)/2, True)
+        )

 #-------------------------------------------------------------------------------
 # Laplace distribution ---------------------------------------------------------
diff --git a/testcdf.py b/testcdf.py
new file mode 100644
index 0000000000..59473d7515
--- /dev/null
+++ b/testcdf.py
@@ -0,0 +1,7 @@
+from sympy import S, Symbol
+from sympy.stats import cdf
+from sympy.stats import Arcsin
+
+# Simple script to reproduce the arcsin cdf issue.
+expr = cdf(Arcsin('x', 0, 3))(1)
+print(expr)
