diff --git a/sympy/core/_print_helpers.py b/sympy/core/_print_helpers.py
index 96d7e72676..b72e022e68 100644
--- a/sympy/core/_print_helpers.py
+++ b/sympy/core/_print_helpers.py
@@ -6,6 +6,7 @@
 """

 class Printable:
+    __slots__ = ()
     """
     The default implementation of printing for SymPy classes.

diff --git a/sympy/core/basic.py b/sympy/core/basic.py
index 9f609177dd..a365285a25 100644
--- a/sympy/core/basic.py
+++ b/sympy/core/basic.py
@@ -810,6 +810,7 @@ def subs(self, *args, **kwargs):
         nan

         This has the added feature of not allowing subsequent substitutions
+    __slots__ = ()
         to affect those already made:

         >>> ((x + y)/y).subs({x + y: y, y: x + y})
@@ -1810,6 +1811,7 @@ def _exec_constructor_postprocessors(cls, obj):
         return obj

 class Atom(Basic):
+    __slots__ = ()
     """
     A parent class for atomic things. An atom is an expression with no subexpressions.

diff --git a/sympy/core/expr.py b/sympy/core/expr.py
index 5f6b429dfd..88634c6cb0 100644
--- a/sympy/core/expr.py
+++ b/sympy/core/expr.py
@@ -3854,6 +3854,7 @@ def _eval_derivative_matrix_lines(self, x):

 class AtomicExpr(Atom, Expr):
     """
+    __slots__ = ()
     A parent class for object which are both atoms and Exprs.

     For example: Symbol, Number, Rational, Integer, ...
diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py
index 70e6953559..5ebf25135e 100644
--- a/sympy/core/symbol.py
+++ b/sympy/core/symbol.py
@@ -200,7 +200,7 @@ class Symbol(AtomicExpr, Boolean):

     is_comparable = False

-    __slots__ = ('name',)
+    __slots__ = ('name','_assumptions','__weakref__')

     is_Symbol = True
     is_symbol = True
diff --git a/sympy/logic/boolalg.py b/sympy/logic/boolalg.py
index c01628fe58..2033e3d434 100644
--- a/sympy/logic/boolalg.py
+++ b/sympy/logic/boolalg.py
@@ -62,7 +62,6 @@ def as_Boolean(e):
 @sympify_method_args
 class Boolean(Basic):
     """A boolean object is an object for which logic operations make sense."""
-
     __slots__ = ()

     @sympify_return([('other', 'Boolean')], NotImplemented)
diff --git a/test_repro.py b/test_repro.py
new file mode 100644
index 0000000000..c0e30f2b13
--- /dev/null
+++ b/test_repro.py
@@ -0,0 +1,8 @@
+import sympy
+
+s = sympy.Symbol('s')
+print('Symbol has __dict__:', hasattr(s, '__dict__'))
+try:
+    print('s.__dict__ =', s.__dict__)
+except AttributeError as e:
+    print('Caught AttributeError:', e)
