diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py
index 25eab7fdf..878ffaef3 100644
--- a/src/_pytest/capture.py
+++ b/src/_pytest/capture.py
@@ -432,10 +432,8 @@ class EncodedFile(object):
     def write(self, obj):
         if isinstance(obj, six.text_type):
             obj = obj.encode(self.encoding, "replace")
-        elif _PY3:
-            raise TypeError(
-                "write() argument must be str, not {}".format(type(obj).__name__)
-            )
+        elif isinstance(obj, bytes):
+            pass  # allow bytes to be written directly
         self.buffer.write(obj)

     def writelines(self, linelist):
@@ -447,6 +445,14 @@ class EncodedFile(object):
         """Ensure that file.name is a string."""
         return repr(self.buffer)

+    @property
+    def mode(self):
+        real_mode = getattr(self.buffer, 'mode', None)
+        if real_mode:
+            return real_mode.replace('b', '')
+        # fallback, if for some reason the buffer has no mode
+        return 'r+'
+
     def __getattr__(self, name):
         return getattr(object.__getattribute__(self, "buffer"), name)

diff --git a/test.py b/test.py
new file mode 100644
index 000000000..1e3b2995e
--- /dev/null
+++ b/test.py
@@ -0,0 +1,5 @@
+import youtube_dl
+import pytest
+
+def test_foo():
+    youtube_dl.YoutubeDL().extract_info('http://example.com/')
