diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 000000000..249fc8687
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,11 @@
+import numpy as np
+from sklearn.metrics.cluster import fowlkes_mallows_score
+
+# Attempt to produce an overflow in pk*qk in fowlkes_mallows_score
+# We will create large arrays of 500_000 zeros and 500_000 ones
+# This should provoke overflow in int32 if sums are not handled properly
+labels_true = np.array([0]*500_000 + [1]*500_000)
+labels_pred = np.array([0]*500_000 + [1]*500_000)
+
+score = fowlkes_mallows_score(labels_true, labels_pred)
+print("Fowlkes-Mallows Score:", score)
diff --git a/sklearn/metrics/cluster/supervised.py b/sklearn/metrics/cluster/supervised.py
index a987778ae..9bcca75a2 100644
--- a/sklearn/metrics/cluster/supervised.py
+++ b/sklearn/metrics/cluster/supervised.py
@@ -856,7 +856,7 @@ def fowlkes_mallows_score(labels_true, labels_pred, sparse=False):
     tk = np.dot(c.data, c.data) - n_samples
     pk = np.sum(np.asarray(c.sum(axis=0)).ravel() ** 2) - n_samples
     qk = np.sum(np.asarray(c.sum(axis=1)).ravel() ** 2) - n_samples
-    return tk / np.sqrt(pk * qk) if tk != 0. else 0.
+    return np.sqrt(tk / pk) * np.sqrt(tk / qk) if tk != 0. else 0.


 def entropy(labels):
