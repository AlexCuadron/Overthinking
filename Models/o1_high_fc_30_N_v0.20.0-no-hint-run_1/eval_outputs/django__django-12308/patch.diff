diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py
index e4ddc8f017..7e58884b90 100644
--- a/django/contrib/admin/utils.py
+++ b/django/contrib/admin/utils.py
@@ -387,7 +387,47 @@ def display_for_field(value, field, empty_value_display):
     elif isinstance(field, models.BooleanField):
         return _boolean_icon(value)
     elif value is None:
+    elif isinstance(field, models.JSONField):
+        from django.forms.fields import JSONField as JSONFormField
+        form_field = JSONFormField()
+        try:
+            return form_field.prepare_value(value)
+        except:
+            return str(value)
+
+elif isinstance(field, models.JSONField):
+    from django.forms.fields import JSONField as JSONFormField
+    form_field = JSONFormField()
+    try:
+        return form_field.prepare_value(value)
+    except:
+        return str(value)
+
+    elif isinstance(field, models.JSONField):
+        from django.forms.fields import JSONField as JSONFormField
+        form_field = JSONFormField()
+        try:
+            return form_field.prepare_value(value)
+        except:
+            return str(value)
+
         return empty_value_display
+elif isinstance(field, models.JSONField):
+elif isinstance(field, models.JSONField):
+    from django.forms.fields import JSONField as JSONFormField
+    form_field = JSONFormField()
+    try:
+        return form_field.prepare_value(value)
+    except:
+        return str(value)
+
+    from django.forms.fields import JSONField as JSONFormField
+    form_field = JSONFormField()
+    try:
+        return form_field.prepare_value(value)
+    except:
+        return str(value)
+
     elif isinstance(field, models.DateTimeField):
         return formats.localize(timezone.template_localtime(value))
     elif isinstance(field, (models.DateField, models.TimeField)):
@@ -407,6 +447,13 @@ def display_for_value(value, empty_value_display, boolean=False):

     if boolean:
         return _boolean_icon(value)
+    elif isinstance(field, models.JSONField):
+        from django.forms.fields import JSONField as JSONFormField
+        form_field = JSONFormField()
+        try:
+            return form_field.prepare_value(value)
+        except:
+            return str(value)
     elif value is None:
         return empty_value_display
     elif isinstance(value, bool):
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..108f55469c
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,24 @@
+import sys
+import django
+import os
+from django.conf import settings
+
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=[],
+        TIME_ZONE='UTC',
+        USE_TZ=True,
+    )
+django.setup()
+
+from django.db import models
+from django.db.models.fields.json import JSONField
+from django.contrib.admin.utils import display_for_field
+
+value = {'foo': 'bar'}
+
+field = JSONField()
+
+print("Reproducing read-only JSONField display issue...")
+result = display_for_field(value, field, '(None)')
+print(f"Before fix, display_for_field outputs: {result}")
