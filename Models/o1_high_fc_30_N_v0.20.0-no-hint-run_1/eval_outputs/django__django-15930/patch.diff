diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py
index 866e38df83..ed0469d458 100644
--- a/django/db/models/lookups.py
+++ b/django/db/models/lookups.py
@@ -442,7 +442,7 @@ class In(FieldGetDbPrepValueIterableMixin, BuiltinLookup):
                 rhs = [r for r in self.rhs if r is not None]

             if not rhs:
-                raise EmptyResultSet
+                return '(0=1)', []

             # rhs should be an iterable; use batch_process_rhs() to
             # prepare/transform those values.
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..ee11183d22
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,34 @@
+import django
+from django.conf import settings
+from django.db import models, connection
+from django.db.models import Case, When, Value, Q, BooleanField
+
+def main():
+    settings.configure(
+        SECRET_KEY='secret',
+        INSTALLED_APPS=['__main__'],
+        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
+    )
+    django.setup()
+
+    class MyUser(models.Model):
+        pass
+
+    with connection.schema_editor() as schema_editor:
+        schema_editor.create_model(MyUser)
+
+    MyUser.objects.create()
+    try:
+        qs = MyUser.objects.annotate(
+            _a=Case(
+                When(~Q(pk__in=[]), then=Value(True)),
+                default=Value(False),
+                output_field=BooleanField(),
+            )
+        ).order_by("-_a").values("pk")
+        print(list(qs))
+    except Exception as e:
+        print("Error encountered:", e)
+
+if __name__ == '__main__':
+    main()
