diff --git a/django/utils/dateformat.py b/django/utils/dateformat.py
index afd36d79e0..49c8e9d095 100644
--- a/django/utils/dateformat.py
+++ b/django/utils/dateformat.py
@@ -326,7 +326,7 @@ class DateFormat(TimeFormat):

     def y(self):
         "Year, 2 digits; e.g. '99'"
-        return str(self.data.year)[2:]
+        return f"{self.data.year % 100:02d}"

     def Y(self):
         "Year, 4 digits; e.g. '1999'"
diff --git a/repro.py b/repro.py
new file mode 100644
index 0000000000..add77d56cf
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,31 @@
+import os
+import django
+from django.conf import settings
+
+if not settings.configured:
+    settings.configure(
+        TIME_ZONE='UTC',
+        USE_TZ=True,
+    )
+django.setup()
+
+import datetime
+from django.utils import dateformat
+
+# Reproduction script for the dateformat 'y' issue
+
+dates_to_test = [
+    datetime.datetime(9, 4, 5, 6, 7),
+    datetime.datetime(99, 4, 5, 6, 7),
+    datetime.datetime(123, 4, 5, 6, 7),
+    datetime.datetime(999, 4, 5, 6, 7),
+    datetime.datetime(1001, 4, 5, 6, 7),
+    datetime.datetime(2023, 4, 5, 6, 7),
+]
+
+for d in dates_to_test:
+    # We want to see the 2-digit year that Django prints using the format "y".
+    # Compare it with Python's strftime("%y") for clarity.
+    django_y = dateformat.format(d, "y")
+    python_y = d.strftime("%y")
+    print(f"Year={d.year}, Django='y' -> {django_y}, Python strftime('%y') -> {python_y}")
