2025-01-14 18:29:04,448 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_4z61qrv6848cyz8e_qroup3d3os79ipoo
2025-01-14 18:31:10,606 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_4z61qrv6848cyz8e_qroup3d3os79ipoo] build finished.
2025-01-14 18:31:10,676 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_4z61qrv6848cyz8e_qroup3d3os79ipoo] with more generic tag [oh_v0.20.0_4z61qrv6848cyz8e]
2025-01-14 18:31:10,679 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_4z61qrv6848cyz8e_qroup3d3os79ipoo, oh_v0.20.0_4z61qrv6848cyz8e] built successfully
2025-01-14 18:31:10,690 - INFO - [runtime 33b46af2-b88f-4367-8709-b5d8c67a96b6-e01d8e5d0250a647] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_4z61qrv6848cyz8e_qroup3d3os79ipoo
2025-01-14 18:31:11,716 - INFO - [runtime 33b46af2-b88f-4367-8709-b5d8c67a96b6-e01d8e5d0250a647] Container started: openhands-runtime-33b46af2-b88f-4367-8709-b5d8c67a96b6-e01d8e5d0250a647. VSCode URL: None
2025-01-14 18:31:11,716 - INFO - [runtime 33b46af2-b88f-4367-8709-b5d8c67a96b6-e01d8e5d0250a647] Waiting for client to become ready at http://localhost:31621...
2025-01-14 18:31:41,824 - INFO - [runtime 33b46af2-b88f-4367-8709-b5d8c67a96b6-e01d8e5d0250a647] Runtime is ready.
2025-01-14 18:31:42,474 - INFO - ------------------------------
2025-01-14 18:31:42,474 - INFO - BEGIN Runtime Initialization Fn
2025-01-14 18:31:42,474 - INFO - ------------------------------
2025-01-14 18:31:42,474 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sphinx-doc__sphinx-9658' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-14 18:31:43,106 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:31:43,106 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-14 18:31:43,738 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:31:43,739 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-14 18:31:44,370 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:31:44,380 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-14 18:31:45,049 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=sphinx-doc__sphinx-9658
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:31:45,055 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-14 18:31:45,706 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:31:45,707 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-14 18:31:45,707 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-14 18:31:46,840 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sphinx-doc__sphinx__4.3
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:31:46,841 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sphinx-doc__sphinx__4.3
2025-01-14 18:31:47,471 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:31:47,472 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-14 18:31:48,101 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 232dbe41c Merge pull request #9673 from tk0miya/9651_autodoc_typehints_description_target
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:31:48,102 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-14 18:31:48,731 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:31:48,731 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-14 18:31:49,362 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:31:49,362 - INFO - ------------------------------
2025-01-14 18:31:49,362 - INFO - END Runtime Initialization Fn
2025-01-14 18:31:49,362 - INFO - ------------------------------
2025-01-14 18:31:49,381 - INFO - [runtime 33b46af2-b88f-4367-8709-b5d8c67a96b6-e01d8e5d0250a647] Found 0 local microagents.
2025-01-14 18:31:49,384 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-14 18:31:49,385 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-14 18:32:12,421 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-14 18:32:33,391 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-14 18:32:45,634 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-14 18:33:10,819 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-14 18:33:25,528 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-14 18:33:41,547 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-14 18:34:32,499 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-14 18:35:18,652 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-14 18:35:37,010 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-14 18:35:46,815 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-14 18:35:55,121 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-14 18:36:18,143 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-14 18:36:49,136 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-14 18:37:23,160 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-14 18:37:37,648 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-14 18:37:42,158 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-14 18:38:19,363 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-14 18:38:57,217 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-14 18:39:17,535 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-14 18:39:43,941 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-14 18:39:59,522 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-14 18:40:15,557 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-14 18:40:29,583 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-14 18:40:36,507 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-14 18:40:57,613 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-14 18:41:25,483 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-14 18:41:37,715 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-14 18:42:55,296 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-14 18:43:19,205 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-14 18:43:27,496 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-14 18:43:27,496 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-14 18:43:27,497 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-14 18:43:27,497 - WARNING - Stopping agent due to traffic control
2025-01-14 18:43:27,497 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-14 18:43:28,071 - INFO - ------------------------------
2025-01-14 18:43:28,071 - INFO - BEGIN Runtime Completion Fn
2025-01-14 18:43:28,071 - INFO - ------------------------------
2025-01-14 18:43:28,071 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sphinx-doc__sphinx__4.3
2025-01-14 18:43:28,204 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:43:28,204 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-14 18:43:28,838 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:43:28,839 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-14 18:43:29,468 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:43:29,469 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 232dbe41c5250eb7d559d40438c4743483e95f15
2025-01-14 18:43:30,102 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "0c0ee33e9e09",
  "working_dir": "/workspace/sphinx-doc__sphinx__4.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 000000000..00f1d5b49
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,65 @@
+import os
+import subprocess
+
+# This script attempts to demonstrate the Sphinx bug described in the PR.
+# In particular, it tests how classes inheriting a mocked torch.nn.Module are documented.
+# We'll build a small Sphinx project that mocks torch and references such a class.
+
+def main():
+    project_dir = os.path.join(os.getcwd(), 'mocked_project')
+    os.makedirs(project_dir, exist_ok=True)
+
+    conf_py = """
+import os
+import sys
+sys.path.insert(0, os.path.abspath('.'))
+
+extensions = ["sphinx.ext.autodoc"]
+
+autodoc_mock_imports = ["torch"]
+
+master_doc = 'index'
+"""
+
+    index_rst = """
+My Project
+==========
+
+.. automodule:: mymodule
+   :members:
+"""
+    mymodule_py = """
+class MockInheritedClass:
+    """A mocked base class (normally torch.nn.Module)."""
+    pass
+
+class MyClass(MockInheritedClass):
+    """Example class that inherits from a mocked base class."""
+    pass
+"""
+
+
+    with open(os.path.join(project_dir, 'conf.py'), 'w') as f:
+        f.write(conf_py)
+
+    with open(os.path.join(project_dir, 'index.rst'), 'w') as f:
+        f.write(index_rst)
+
+    with open(os.path.join(project_dir, 'mymodule.py'), 'w') as f:
+        f.write(mymodule_py)
+
+    # Now let's run sphinx-build
+    out_dir = os.path.join(project_dir, '_build')
+    os.makedirs(out_dir, exist_ok=True)
+
+    sphinx_cmd = ["sphinx-build", "-b", "html", project_dir, out_dir]
+    print(f"Running: {' '.join(sphinx_cmd)}")
+    res = subprocess.run(sphinx_cmd, capture_output=True)
+    print("Return code:", res.returncode)
+    print("STDOUT:\n", res.stdout.decode('utf-8', errors='replace'))
+    print("STDERR:\n", res.stderr.decode('utf-8', errors='replace'))
+
+    print("\nCheck the output in _build/html/index.html to see how 'Bases' is documented.")
+
+if __name__ == "__main__":
+    main()
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index a255c0691..cdc5b4e42 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -1664,7 +1664,12 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:
             self.env.events.emit('autodoc-process-bases',
                                  self.fullname, self.object, self.options, bases)

-            base_classes = [restify(cls) for cls in bases]
+            base_classes = []
+            for base in bases:
+                text = restify(base)
+                if text.endswith('.'):
+                    text += getattr(base, '__name__', 'Module')
+                base_classes.append(text)
             sourcename = self.get_sourcename()
             self.add_line('', sourcename)
             self.add_line('   ' + _('Bases: %s') % ', '.join(base_classes), sourcename)
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__4.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 18:43:30,102 - INFO - ------------------------------
2025-01-14 18:43:30,102 - INFO - END Runtime Completion Fn
2025-01-14 18:43:30,102 - INFO - ------------------------------
2025-01-14 18:43:30,102 - INFO - Got git diff for instance sphinx-doc__sphinx-9658:
--------
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 000000000..00f1d5b49
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,65 @@
+import os
+import subprocess
+
+# This script attempts to demonstrate the Sphinx bug described in the PR.
+# In particular, it tests how classes inheriting a mocked torch.nn.Module are documented.
+# We'll build a small Sphinx project that mocks torch and references such a class.
+
+def main():
+    project_dir = os.path.join(os.getcwd(), 'mocked_project')
+    os.makedirs(project_dir, exist_ok=True)
+
+    conf_py = """
+import os
+import sys
+sys.path.insert(0, os.path.abspath('.'))
+
+extensions = ["sphinx.ext.autodoc"]
+
+autodoc_mock_imports = ["torch"]
+
+master_doc = 'index'
+"""
+
+    index_rst = """
+My Project
+==========
+
+.. automodule:: mymodule
+   :members:
+"""
+    mymodule_py = """
+class MockInheritedClass:
+    """A mocked base class (normally torch.nn.Module)."""
+    pass
+
+class MyClass(MockInheritedClass):
+    """Example class that inherits from a mocked base class."""
+    pass
+"""
+
+
+    with open(os.path.join(project_dir, 'conf.py'), 'w') as f:
+        f.write(conf_py)
+
+    with open(os.path.join(project_dir, 'index.rst'), 'w') as f:
+        f.write(index_rst)
+
+    with open(os.path.join(project_dir, 'mymodule.py'), 'w') as f:
+        f.write(mymodule_py)
+
+    # Now let's run sphinx-build
+    out_dir = os.path.join(project_dir, '_build')
+    os.makedirs(out_dir, exist_ok=True)
+
+    sphinx_cmd = ["sphinx-build", "-b", "html", project_dir, out_dir]
+    print(f"Running: {' '.join(sphinx_cmd)}")
+    res = subprocess.run(sphinx_cmd, capture_output=True)
+    print("Return code:", res.returncode)
+    print("STDOUT:\n", res.stdout.decode('utf-8', errors='replace'))
+    print("STDERR:\n", res.stderr.decode('utf-8', errors='replace'))
+
+    print("\nCheck the output in _build/html/index.html to see how 'Bases' is documented.")
+
+if __name__ == "__main__":
+    main()
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index a255c0691..cdc5b4e42 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -1664,7 +1664,12 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:
             self.env.events.emit('autodoc-process-bases',
                                  self.fullname, self.object, self.options, bases)

-            base_classes = [restify(cls) for cls in bases]
+            base_classes = []
+            for base in bases:
+                text = restify(base)
+                if text.endswith('.'):
+                    text += getattr(base, '__name__', 'Module')
+                base_classes.append(text)
             sourcename = self.get_sourcename()
             self.add_line('', sourcename)
             self.add_line('   ' + _('Bases: %s') % ', '.join(base_classes), sourcename)
--------
2025-01-14 18:43:31,109 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.sympy_s_sympy-15017. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-14 18:43:31,109 - INFO - Logging LLM completions for instance sympy__sympy-15017 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/sympy__sympy-15017
