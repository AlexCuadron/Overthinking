2025-01-13 22:34:21,634 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_ycymjqq9emmg3woy_492h283ma6jm1v1e
2025-01-13 22:37:00,597 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_ycymjqq9emmg3woy_492h283ma6jm1v1e
2025-01-13 22:37:51,867 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_ycymjqq9emmg3woy_492h283ma6jm1v1e
2025-01-13 22:40:59,371 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_ycymjqq9emmg3woy_492h283ma6jm1v1e] build finished.
2025-01-13 22:40:59,392 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_ycymjqq9emmg3woy_492h283ma6jm1v1e] with more generic tag [oh_v0.20.0_ycymjqq9emmg3woy]
2025-01-13 22:40:59,395 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_ycymjqq9emmg3woy_492h283ma6jm1v1e, oh_v0.20.0_ycymjqq9emmg3woy] built successfully
2025-01-13 22:40:59,427 - INFO - [runtime d02db6fa-96eb-4cd2-8846-93e6ddb60181-36df7d5d911264ad] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_ycymjqq9emmg3woy_492h283ma6jm1v1e
2025-01-13 22:40:59,992 - INFO - [runtime d02db6fa-96eb-4cd2-8846-93e6ddb60181-36df7d5d911264ad] Container started: openhands-runtime-d02db6fa-96eb-4cd2-8846-93e6ddb60181-36df7d5d911264ad. VSCode URL: None
2025-01-13 22:40:59,992 - INFO - [runtime d02db6fa-96eb-4cd2-8846-93e6ddb60181-36df7d5d911264ad] Waiting for client to become ready at http://localhost:36725...
2025-01-13 22:41:42,152 - INFO - [runtime d02db6fa-96eb-4cd2-8846-93e6ddb60181-36df7d5d911264ad] Runtime is ready.
2025-01-13 22:41:42,809 - INFO - ------------------------------
2025-01-13 22:41:42,809 - INFO - BEGIN Runtime Initialization Fn
2025-01-13 22:41:42,809 - INFO - ------------------------------
2025-01-13 22:41:42,810 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=astropy__astropy-13453' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-13 22:41:43,449 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 22:41:43,450 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-13 22:41:44,093 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 22:41:44,093 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-13 22:41:44,750 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 22:41:44,762 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-13 22:41:45,395 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=astropy__astropy-13453
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 22:41:45,395 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-13 22:41:46,030 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 22:41:46,030 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-13 22:41:46,030 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-13 22:41:47,242 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: astropy__astropy__5.0
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 22:41:47,242 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/astropy__astropy__5.0
2025-01-13 22:41:47,931 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 22:41:47,932 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-13 22:41:48,565 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 19cc804717 Merge pull request #13444 from eerovaher/unit-format-docs
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 22:41:48,565 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-13 22:41:49,209 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 22:41:49,209 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-13 22:41:49,879 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 22:41:49,880 - INFO - ------------------------------
2025-01-13 22:41:49,880 - INFO - END Runtime Initialization Fn
2025-01-13 22:41:49,880 - INFO - ------------------------------
2025-01-13 22:41:49,903 - INFO - [runtime d02db6fa-96eb-4cd2-8846-93e6ddb60181-36df7d5d911264ad] Found 0 local microagents.
2025-01-13 22:41:49,907 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-13 22:41:49,922 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-13 22:41:56,530 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-13 22:42:07,331 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-13 22:42:58,744 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-13 22:43:59,341 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-13 22:44:44,650 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-13 22:45:10,494 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-13 22:45:20,699 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-13 22:45:33,293 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-13 22:46:16,737 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-13 22:46:20,295 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-13 22:48:35,019 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-13 22:49:23,638 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-13 22:50:03,848 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-13 22:51:21,183 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-13 22:51:36,027 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-13 22:52:27,044 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-13 22:52:35,755 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-13 22:54:23,972 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-13 22:55:03,835 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-13 22:55:09,812 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-13 22:55:56,977 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-13 22:57:04,212 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-13 22:59:20,127 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-13 23:00:02,601 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-13 23:00:26,258 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-13 23:00:34,950 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-13 23:01:22,087 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-13 23:02:05,358 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-13 23:02:55,198 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-13 23:03:31,811 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-13 23:03:31,812 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-13 23:03:31,813 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-13 23:03:31,813 - WARNING - Stopping agent due to traffic control
2025-01-13 23:03:31,813 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-13 23:03:32,207 - INFO - ------------------------------
2025-01-13 23:03:32,207 - INFO - BEGIN Runtime Completion Fn
2025-01-13 23:03:32,207 - INFO - ------------------------------
2025-01-13 23:03:32,208 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/astropy__astropy__5.0
2025-01-13 23:03:32,841 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:03:32,842 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-13 23:03:33,472 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:03:33,473 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-13 23:03:34,103 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:03:34,103 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 19cc80471739bcb67b7e8099246b391c355023ee
2025-01-13 23:03:34,737 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2c3e29dbc8a2",
  "working_dir": "/workspace/astropy__astropy__5.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py
index 266cf229cc..7f14123ce2 100644
--- a/astropy/io/ascii/html.py
+++ b/astropy/io/ascii/html.py
@@ -319,17 +319,17 @@ class HTML(core.BaseReader):

     max_ndim = 2  # HTML supports writing 2-d columns with shape (n, m)

-    def __init__(self, htmldict={}):
-        """
-        Initialize classes for HTML reading and writing.
-        """
+    def __init__(self, htmldict=None, formats=None):
+        if htmldict is None:
+            htmldict = {}
         super().__init__()
         self.html = deepcopy(htmldict)
-        if 'multicol' not in htmldict:
+        if 'multicol' not in self.html:
             self.html['multicol'] = True
-        if 'table_id' not in htmldict:
+        if 'table_id' not in self.html:
             self.html['table_id'] = 1
         self.inputter.html = self.html
+        self.formats = formats if formats else {}

     def read(self, table):
         """
@@ -355,6 +355,15 @@ class HTML(core.BaseReader):

         self.data._set_fill_values(cols)

+        if self.formats:
+            for colname, colformat in self.formats.items():
+                if colname in table.colnames:
+                    if callable(colformat):
+                        table[colname].formatter = colformat
+                    else:
+                        table[colname].format = colformat
+                # End debug snippet
+
         lines = []

         # Set HTML escaping to False for any column in the raw_html_cols input
@@ -429,9 +438,13 @@ class HTML(core.BaseReader):
                                 for i in range(span):
                                     # Split up multicolumns into separate columns
                                     new_col = Column([el[i] for el in col])
+                                    if col.info.formatter is not None:
+                                        new_col.info.formatter = col.info.formatter
+                                    if col.info.format is not None:
+                                        new_col.info.format = col.info.format

                                     new_col_iter_str_vals = self.fill_values(
-                                        col, new_col.info.iter_str_vals())
+                                        new_col, new_col.info.iter_str_vals())
                                     col_str_iters.append(new_col_iter_str_vals)
                                     new_cols_escaped.append(col_escaped)
                                     new_cols.append(new_col)
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..25ed415319
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,16 @@
+from astropy.table import Table
+from io import StringIO
+
+# This script reproduces the HTML formatting bug described in the PR.
+# We expect the output for column 'a' to be formatted with 2 decimal places.
+
+if __name__ == "__main__":
+    t = Table([(1.23875234858e-24, 3.2348748432e-15), (2, 4)], names=('a', 'b'))
+    tc = t.copy()
+
+    with StringIO() as sp:
+        tc.write(sp, format="html", formats={"a": lambda x: f"{{x:.2e}}"})
+        output = sp.getvalue()
+        print(output)
+
+    # Expected: table cells for column 'a' should show 1.24e-24 and 3.23e-15, not the full float representation.
\ No newline at end of file
diff --git a/test_format_callable.py b/test_format_callable.py
new file mode 100644
index 0000000000..161acc223d
--- /dev/null
+++ b/test_format_callable.py
@@ -0,0 +1,11 @@
+import astropy
+from astropy.table import Column
+
+def test_callable_format():
+    col = Column([1.23875234858e-24, 3.2348748432e-15], name='a')
+    col.info.format = lambda x: f"{x:.2e}"
+    return list(col.info.iter_str_vals())
+
+if __name__ == "__main__":
+    vals = test_callable_format()
+    print(vals)
\ No newline at end of file
[The command completed with exit code 0.]
[Current working directory: /workspace/astropy__astropy__5.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:03:34,738 - INFO - ------------------------------
2025-01-13 23:03:34,738 - INFO - END Runtime Completion Fn
2025-01-13 23:03:34,738 - INFO - ------------------------------
2025-01-13 23:03:34,738 - INFO - Got git diff for instance astropy__astropy-13453:
--------
diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py
index 266cf229cc..7f14123ce2 100644
--- a/astropy/io/ascii/html.py
+++ b/astropy/io/ascii/html.py
@@ -319,17 +319,17 @@ class HTML(core.BaseReader):

     max_ndim = 2  # HTML supports writing 2-d columns with shape (n, m)

-    def __init__(self, htmldict={}):
-        """
-        Initialize classes for HTML reading and writing.
-        """
+    def __init__(self, htmldict=None, formats=None):
+        if htmldict is None:
+            htmldict = {}
         super().__init__()
         self.html = deepcopy(htmldict)
-        if 'multicol' not in htmldict:
+        if 'multicol' not in self.html:
             self.html['multicol'] = True
-        if 'table_id' not in htmldict:
+        if 'table_id' not in self.html:
             self.html['table_id'] = 1
         self.inputter.html = self.html
+        self.formats = formats if formats else {}

     def read(self, table):
         """
@@ -355,6 +355,15 @@ class HTML(core.BaseReader):

         self.data._set_fill_values(cols)

+        if self.formats:
+            for colname, colformat in self.formats.items():
+                if colname in table.colnames:
+                    if callable(colformat):
+                        table[colname].formatter = colformat
+                    else:
+                        table[colname].format = colformat
+                # End debug snippet
+
         lines = []

         # Set HTML escaping to False for any column in the raw_html_cols input
@@ -429,9 +438,13 @@ class HTML(core.BaseReader):
                                 for i in range(span):
                                     # Split up multicolumns into separate columns
                                     new_col = Column([el[i] for el in col])
+                                    if col.info.formatter is not None:
+                                        new_col.info.formatter = col.info.formatter
+                                    if col.info.format is not None:
+                                        new_col.info.format = col.info.format

                                     new_col_iter_str_vals = self.fill_values(
-                                        col, new_col.info.iter_str_vals())
+                                        new_col, new_col.info.iter_str_vals())
                                     col_str_iters.append(new_col_iter_str_vals)
                                     new_cols_escaped.append(col_escaped)
                                     new_cols.append(new_col)
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..25ed415319
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,16 @@
+from astropy.table import Table
+from io import StringIO
+
+# This script reproduces the HTML formatting bug described in the PR.
+# We expect the output for column 'a' to be formatted with 2 decimal places.
+
+if __name__ == "__main__":
+    t = Table([(1.23875234858e-24, 3.2348748432e-15), (2, 4)], names=('a', 'b'))
+    tc = t.copy()
+
+    with StringIO() as sp:
+        tc.write(sp, format="html", formats={"a": lambda x: f"{{x:.2e}}"})
+        output = sp.getvalue()
+        print(output)
+
+    # Expected: table cells for column 'a' should show 1.24e-24 and 3.23e-15, not the full float representation.
\ No newline at end of file
diff --git a/test_format_callable.py b/test_format_callable.py
new file mode 100644
index 0000000000..161acc223d
--- /dev/null
+++ b/test_format_callable.py
@@ -0,0 +1,11 @@
+import astropy
+from astropy.table import Column
+
+def test_callable_format():
+    col = Column([1.23875234858e-24, 3.2348748432e-15], name='a')
+    col.info.format = lambda x: f"{x:.2e}"
+    return list(col.info.iter_str_vals())
+
+if __name__ == "__main__":
+    vals = test_callable_format()
+    print(vals)
\ No newline at end of file
--------
2025-01-13 23:03:35,570 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.django_s_django-11555. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-13 23:03:35,571 - INFO - Logging LLM completions for instance django__django-11555 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/django__django-11555
