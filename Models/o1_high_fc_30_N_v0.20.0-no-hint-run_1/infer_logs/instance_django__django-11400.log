2025-01-13 22:58:57,693 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_himdto5qs3z6xexk_492h283ma6jm1v1e
2025-01-13 23:01:51,538 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_himdto5qs3z6xexk_492h283ma6jm1v1e] build finished.
2025-01-13 23:01:51,556 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_himdto5qs3z6xexk_492h283ma6jm1v1e] with more generic tag [oh_v0.20.0_himdto5qs3z6xexk]
2025-01-13 23:01:51,559 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_himdto5qs3z6xexk_492h283ma6jm1v1e, oh_v0.20.0_himdto5qs3z6xexk] built successfully
2025-01-13 23:01:51,573 - INFO - [runtime 69d228e4-ff65-4f6d-bab9-3db3edb8b3ed-0e57dc83dd3c2ba8] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_himdto5qs3z6xexk_492h283ma6jm1v1e
2025-01-13 23:01:52,603 - INFO - [runtime 69d228e4-ff65-4f6d-bab9-3db3edb8b3ed-0e57dc83dd3c2ba8] Container started: openhands-runtime-69d228e4-ff65-4f6d-bab9-3db3edb8b3ed-0e57dc83dd3c2ba8. VSCode URL: None
2025-01-13 23:01:52,603 - INFO - [runtime 69d228e4-ff65-4f6d-bab9-3db3edb8b3ed-0e57dc83dd3c2ba8] Waiting for client to become ready at http://localhost:39129...
2025-01-13 23:02:22,711 - INFO - [runtime 69d228e4-ff65-4f6d-bab9-3db3edb8b3ed-0e57dc83dd3c2ba8] Runtime is ready.
2025-01-13 23:02:23,359 - INFO - ------------------------------
2025-01-13 23:02:23,359 - INFO - BEGIN Runtime Initialization Fn
2025-01-13 23:02:23,359 - INFO - ------------------------------
2025-01-13 23:02:23,359 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-11400' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-13 23:02:23,991 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:02:23,992 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-13 23:02:24,625 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:02:24,625 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-13 23:02:25,258 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:02:25,270 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-13 23:02:25,906 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=django__django-11400
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:02:25,906 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-13 23:02:26,539 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:02:26,540 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-13 23:02:26,540 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-13 23:02:28,183 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__3.0
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:02:28,183 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.0
2025-01-13 23:02:28,816 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace/django__django__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:02:28,816 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-13 23:02:29,953 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace/django__django__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 1f8382d34d Fixed #30672 -- Fixed crash of JSONField/HStoreField key transforms on expressions with params.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:02:29,953 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-13 23:02:30,585 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace/django__django__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:02:30,586 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-13 23:02:31,218 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace/django__django__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:02:31,218 - INFO - ------------------------------
2025-01-13 23:02:31,218 - INFO - END Runtime Initialization Fn
2025-01-13 23:02:31,218 - INFO - ------------------------------
2025-01-13 23:02:31,235 - INFO - [runtime 69d228e4-ff65-4f6d-bab9-3db3edb8b3ed-0e57dc83dd3c2ba8] Found 0 local microagents.
2025-01-13 23:02:31,238 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-13 23:02:31,240 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-13 23:02:43,966 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-13 23:02:49,468 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-13 23:03:06,213 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-13 23:03:19,601 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-13 23:03:40,373 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-13 23:04:13,784 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-13 23:04:35,194 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-13 23:04:55,254 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-13 23:05:06,344 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-13 23:05:23,217 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-13 23:05:39,454 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-13 23:05:44,892 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-13 23:05:56,736 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-13 23:06:16,073 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-13 23:06:23,820 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-13 23:06:39,723 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-13 23:07:26,810 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-13 23:07:42,284 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-13 23:08:00,565 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-13 23:08:11,893 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-13 23:08:27,023 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-13 23:09:10,785 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-13 23:09:27,397 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-13 23:09:56,520 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-13 23:10:30,894 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-13 23:11:05,809 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-13 23:11:47,491 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-13 23:12:04,642 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-13 23:12:11,785 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-13 23:12:27,651 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-13 23:12:27,651 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-13 23:12:27,652 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-13 23:12:27,653 - WARNING - Stopping agent due to traffic control
2025-01-13 23:12:27,653 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-13 23:12:27,849 - INFO - ------------------------------
2025-01-13 23:12:27,849 - INFO - BEGIN Runtime Completion Fn
2025-01-13 23:12:27,849 - INFO - ------------------------------
2025-01-13 23:12:27,850 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.0
2025-01-13 23:12:28,483 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace/django__django__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:28,483 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-13 23:12:29,114 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace/django__django__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:29,114 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-13 23:12:29,746 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace/django__django__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:29,746 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 1f8382d34d54061eddc41df6994e20ee38c60907
2025-01-13 23:12:30,384 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "643ab35abf52",
  "working_dir": "/workspace/django__django__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/django/contrib/admin/filters.py b/django/contrib/admin/filters.py
index d65e01d5e2..f6710f7e68 100644
--- a/django/contrib/admin/filters.py
+++ b/django/contrib/admin/filters.py
@@ -198,6 +198,8 @@ class RelatedFieldListFilter(FieldListFilter):
         related_admin = model_admin.admin_site._registry.get(field.remote_field.model)
         if related_admin is not None:
             ordering = related_admin.get_ordering(request)
+        if not ordering:
+            ordering = field.remote_field.model._meta.ordering or ()
         return field.get_choices(include_blank=False, ordering=ordering)

     def choices(self, changelist):
@@ -419,4 +421,10 @@ FieldListFilter.register(lambda f: True, AllValuesFieldListFilter)
 class RelatedOnlyFieldListFilter(RelatedFieldListFilter):
     def field_choices(self, field, request, model_admin):
         pk_qs = model_admin.get_queryset(request).distinct().values_list('%s__pk' % self.field_path, flat=True)
-        return field.get_choices(include_blank=False, limit_choices_to={'pk__in': pk_qs})
+        ordering = ()
+        related_admin = model_admin.admin_site._registry.get(field.remote_field.model)
+        if related_admin is not None:
+            ordering = related_admin.get_ordering(request)
+        if not ordering:
+            ordering = field.remote_field.model._meta.ordering or ()
+        return field.get_choices(include_blank=False, limit_choices_to={'pk__in': pk_qs}, ordering=ordering)
diff --git a/repro/__init__.py b/repro/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/repro/admin.py b/repro/admin.py
new file mode 100644
index 0000000000..8e2cdaf778
--- /dev/null
+++ b/repro/admin.py
@@ -0,0 +1,10 @@
+from django.contrib import admin
+from .models import Author, Book
+
+@admin.register(Author)
+class AuthorAdmin(admin.ModelAdmin):
+    pass
+
+@admin.register(Book)
+class BookAdmin(admin.ModelAdmin):
+    list_filter = ('author',)
diff --git a/repro/apps.py b/repro/apps.py
new file mode 100644
index 0000000000..1cd625d63f
--- /dev/null
+++ b/repro/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class ReproConfig(AppConfig):
+    name = 'repro'
\ No newline at end of file
diff --git a/repro/models.py b/repro/models.py
new file mode 100644
index 0000000000..81816c3e9f
--- /dev/null
+++ b/repro/models.py
@@ -0,0 +1,11 @@
+from django.db import models
+
+class Author(models.Model):
+    name = models.CharField(max_length=50)
+
+    class Meta:
+        ordering = ['name']
+
+class Book(models.Model):
+    title = models.CharField(max_length=50)
+    author = models.ForeignKey(Author, on_delete=models.CASCADE)
diff --git a/scripts/repro.py b/scripts/repro.py
new file mode 100644
index 0000000000..fca8ab9a40
--- /dev/null
+++ b/scripts/repro.py
@@ -0,0 +1,79 @@
+import os
+import sys
+
+import sys
+sys.path.insert(0, "/workspace/django__django__3.0")
+
+import django
+from django.conf import settings
+
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY='secretkey',
+        ALLOWED_HOSTS=['*'],
+        ROOT_URLCONF=__name__,
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+            'django.contrib.admin',
+            'django.contrib.sessions',
+            'django.contrib.messages',
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        MIDDLEWARE=[
+            'django.contrib.sessions.middleware.SessionMiddleware',
+            'django.contrib.auth.middleware.AuthenticationMiddleware',
+        ],
+    )
+
+django.setup()
+
+from django.db import models
+from django.contrib import admin
+from django.http import HttpRequest
+from django.core.management import call_command
+
+from repro.models import Author, Book
+import repro.admin
+
+
+
+
+def test_filter_ordering():
+    Author.objects.all().delete()
+    Book.objects.all().delete()
+
+    Author.objects.create(name='John')
+    Author.objects.create(name='Amy')
+    Author.objects.create(name='Zoe')
+
+    request = HttpRequest()
+    request.user = None
+
+    # Prepare a changelist for Book
+    # use the get_changelist_instance (Django 2.1+)
+    ma = admin.site._registry[Book]
+    ChangeList = ma.get_changelist_instance(request)
+    # The filter specs are in ChangeList.filter_specs
+    filter_spec = ChangeList.filter_specs[0]
+
+    # The field choices for the first filter (author)
+    choices_data = filter_spec.lookup_choices
+    # The second element in each tuple is the display name
+    names = [val for _pk, val in choices_data]
+
+    # We expect them to be sorted by author.name if the fix is in place
+    if names == sorted(names):
+        print("PASS: The authors are ordered by the model's Meta.ordering.")
+    else:
+        print("FAIL: The authors are NOT ordered by the model's Meta.ordering.\n     Found order: ", names)
+
+if __name__ == '__main__':
+    call_command('migrate', verbosity=0)
+    test_filter_ordering()
\ No newline at end of file
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:30,384 - INFO - ------------------------------
2025-01-13 23:12:30,384 - INFO - END Runtime Completion Fn
2025-01-13 23:12:30,384 - INFO - ------------------------------
2025-01-13 23:12:30,385 - INFO - Got git diff for instance django__django-11400:
--------
diff --git a/django/contrib/admin/filters.py b/django/contrib/admin/filters.py
index d65e01d5e2..f6710f7e68 100644
--- a/django/contrib/admin/filters.py
+++ b/django/contrib/admin/filters.py
@@ -198,6 +198,8 @@ class RelatedFieldListFilter(FieldListFilter):
         related_admin = model_admin.admin_site._registry.get(field.remote_field.model)
         if related_admin is not None:
             ordering = related_admin.get_ordering(request)
+        if not ordering:
+            ordering = field.remote_field.model._meta.ordering or ()
         return field.get_choices(include_blank=False, ordering=ordering)

     def choices(self, changelist):
@@ -419,4 +421,10 @@ FieldListFilter.register(lambda f: True, AllValuesFieldListFilter)
 class RelatedOnlyFieldListFilter(RelatedFieldListFilter):
     def field_choices(self, field, request, model_admin):
         pk_qs = model_admin.get_queryset(request).distinct().values_list('%s__pk' % self.field_path, flat=True)
-        return field.get_choices(include_blank=False, limit_choices_to={'pk__in': pk_qs})
+        ordering = ()
+        related_admin = model_admin.admin_site._registry.get(field.remote_field.model)
+        if related_admin is not None:
+            ordering = related_admin.get_ordering(request)
+        if not ordering:
+            ordering = field.remote_field.model._meta.ordering or ()
+        return field.get_choices(include_blank=False, limit_choices_to={'pk__in': pk_qs}, ordering=ordering)
diff --git a/repro/__init__.py b/repro/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/repro/admin.py b/repro/admin.py
new file mode 100644
index 0000000000..8e2cdaf778
--- /dev/null
+++ b/repro/admin.py
@@ -0,0 +1,10 @@
+from django.contrib import admin
+from .models import Author, Book
+
+@admin.register(Author)
+class AuthorAdmin(admin.ModelAdmin):
+    pass
+
+@admin.register(Book)
+class BookAdmin(admin.ModelAdmin):
+    list_filter = ('author',)
diff --git a/repro/apps.py b/repro/apps.py
new file mode 100644
index 0000000000..1cd625d63f
--- /dev/null
+++ b/repro/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class ReproConfig(AppConfig):
+    name = 'repro'
\ No newline at end of file
diff --git a/repro/models.py b/repro/models.py
new file mode 100644
index 0000000000..81816c3e9f
--- /dev/null
+++ b/repro/models.py
@@ -0,0 +1,11 @@
+from django.db import models
+
+class Author(models.Model):
+    name = models.CharField(max_length=50)
+
+    class Meta:
+        ordering = ['name']
+
+class Book(models.Model):
+    title = models.CharField(max_length=50)
+    author = models.ForeignKey(Author, on_delete=models.CASCADE)
diff --git a/scripts/repro.py b/scripts/repro.py
new file mode 100644
index 0000000000..fca8ab9a40
--- /dev/null
+++ b/scripts/repro.py
@@ -0,0 +1,79 @@
+import os
+import sys
+
+import sys
+sys.path.insert(0, "/workspace/django__django__3.0")
+
+import django
+from django.conf import settings
+
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY='secretkey',
+        ALLOWED_HOSTS=['*'],
+        ROOT_URLCONF=__name__,
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+            'django.contrib.admin',
+            'django.contrib.sessions',
+            'django.contrib.messages',
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        MIDDLEWARE=[
+            'django.contrib.sessions.middleware.SessionMiddleware',
+            'django.contrib.auth.middleware.AuthenticationMiddleware',
+        ],
+    )
+
+django.setup()
+
+from django.db import models
+from django.contrib import admin
+from django.http import HttpRequest
+from django.core.management import call_command
+
+from repro.models import Author, Book
+import repro.admin
+
+
+
+
+def test_filter_ordering():
+    Author.objects.all().delete()
+    Book.objects.all().delete()
+
+    Author.objects.create(name='John')
+    Author.objects.create(name='Amy')
+    Author.objects.create(name='Zoe')
+
+    request = HttpRequest()
+    request.user = None
+
+    # Prepare a changelist for Book
+    # use the get_changelist_instance (Django 2.1+)
+    ma = admin.site._registry[Book]
+    ChangeList = ma.get_changelist_instance(request)
+    # The filter specs are in ChangeList.filter_specs
+    filter_spec = ChangeList.filter_specs[0]
+
+    # The field choices for the first filter (author)
+    choices_data = filter_spec.lookup_choices
+    # The second element in each tuple is the display name
+    names = [val for _pk, val in choices_data]
+
+    # We expect them to be sorted by author.name if the fix is in place
+    if names == sorted(names):
+        print("PASS: The authors are ordered by the model's Meta.ordering.")
+    else:
+        print("FAIL: The authors are NOT ordered by the model's Meta.ordering.\n     Found order: ", names)
+
+if __name__ == '__main__':
+    call_command('migrate', verbosity=0)
+    test_filter_ordering()
\ No newline at end of file
--------
2025-01-13 23:12:31,709 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.django_s_django-11951. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-13 23:12:31,709 - INFO - Logging LLM completions for instance django__django-11951 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/django__django-11951
