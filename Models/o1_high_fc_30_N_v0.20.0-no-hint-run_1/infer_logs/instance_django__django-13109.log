2025-01-13 23:33:50,093 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_f20o9ng9d9t58mvw_492h283ma6jm1v1e
2025-01-13 23:36:06,084 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_f20o9ng9d9t58mvw_492h283ma6jm1v1e] build finished.
2025-01-13 23:36:06,100 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_f20o9ng9d9t58mvw_492h283ma6jm1v1e] with more generic tag [oh_v0.20.0_f20o9ng9d9t58mvw]
2025-01-13 23:36:06,103 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_f20o9ng9d9t58mvw_492h283ma6jm1v1e, oh_v0.20.0_f20o9ng9d9t58mvw] built successfully
2025-01-13 23:36:06,121 - INFO - [runtime b7ae24d1-2621-4b9d-a270-972ad678f85a-b0eb635895f5264a] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_f20o9ng9d9t58mvw_492h283ma6jm1v1e
2025-01-13 23:36:06,817 - INFO - [runtime b7ae24d1-2621-4b9d-a270-972ad678f85a-b0eb635895f5264a] Container started: openhands-runtime-b7ae24d1-2621-4b9d-a270-972ad678f85a-b0eb635895f5264a. VSCode URL: None
2025-01-13 23:36:06,818 - INFO - [runtime b7ae24d1-2621-4b9d-a270-972ad678f85a-b0eb635895f5264a] Waiting for client to become ready at http://localhost:33725...
2025-01-13 23:36:36,946 - INFO - [runtime b7ae24d1-2621-4b9d-a270-972ad678f85a-b0eb635895f5264a] Runtime is ready.
2025-01-13 23:36:37,599 - INFO - ------------------------------
2025-01-13 23:36:37,600 - INFO - BEGIN Runtime Initialization Fn
2025-01-13 23:36:37,600 - INFO - ------------------------------
2025-01-13 23:36:37,600 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-13109' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-13 23:36:38,233 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:36:38,233 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-13 23:36:38,866 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:36:38,867 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-13 23:36:39,499 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:36:39,510 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-13 23:36:40,141 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=django__django-13109
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:36:40,141 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-13 23:36:40,770 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:36:40,771 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-13 23:36:40,771 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-13 23:36:42,410 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__3.2
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:36:42,410 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.2
2025-01-13 23:36:43,040 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:36:43,040 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-13 23:36:44,176 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at fbe82f8255 Refs #26761 -- Removed extra space in admin change list result header.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:36:44,176 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-13 23:36:44,809 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:36:44,809 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-13 23:36:45,438 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:36:45,438 - INFO - ------------------------------
2025-01-13 23:36:45,438 - INFO - END Runtime Initialization Fn
2025-01-13 23:36:45,438 - INFO - ------------------------------
2025-01-13 23:36:45,457 - INFO - [runtime b7ae24d1-2621-4b9d-a270-972ad678f85a-b0eb635895f5264a] Found 0 local microagents.
2025-01-13 23:36:45,460 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-13 23:36:45,461 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-13 23:36:57,738 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-13 23:37:11,151 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-13 23:37:36,577 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-13 23:37:44,284 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-13 23:37:55,997 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-13 23:38:15,927 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-13 23:38:29,775 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-13 23:39:01,896 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-13 23:39:44,412 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-13 23:39:50,143 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-13 23:40:10,230 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-13 23:40:27,906 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-13 23:40:48,597 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-13 23:41:26,838 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-13 23:41:46,812 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-13 23:41:58,800 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-13 23:42:29,783 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-13 23:42:41,714 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-13 23:42:52,774 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-13 23:43:06,298 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-13 23:43:16,761 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-13 23:43:27,816 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-13 23:43:41,807 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-13 23:43:55,015 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-13 23:44:21,728 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-13 23:44:47,107 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-13 23:45:01,872 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-13 23:45:43,742 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-13 23:46:13,276 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-13 23:46:49,487 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-13 23:46:49,487 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-13 23:46:49,488 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-13 23:46:49,489 - WARNING - Stopping agent due to traffic control
2025-01-13 23:46:49,489 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-13 23:46:50,082 - INFO - ------------------------------
2025-01-13 23:46:50,082 - INFO - BEGIN Runtime Completion Fn
2025-01-13 23:46:50,082 - INFO - ------------------------------
2025-01-13 23:46:50,083 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.2
2025-01-13 23:46:50,714 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:46:50,715 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-13 23:46:51,347 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:46:51,347 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-13 23:46:51,978 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:46:51,978 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached fbe82f82555bc25dccb476c749ca062f0b522be3
2025-01-13 23:46:52,612 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "94d536612ea2",
  "working_dir": "/workspace/django__django__3.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py
index d517d7269b..f12c0bd10a 100644
--- a/django/db/models/fields/related.py
+++ b/django/db/models/fields/related.py
@@ -914,7 +914,7 @@ class ForeignKey(ForeignObject):
             return

         using = router.db_for_read(self.remote_field.model, instance=model_instance)
-        qs = self.remote_field.model._default_manager.using(using).filter(
+        qs = self.remote_field.model._base_manager.using(using).filter(
             **{self.remote_field.field_name: value}
         )
         qs = qs.complex_filter(self.get_limit_choices_to())
@@ -984,7 +984,7 @@ class ForeignKey(ForeignObject):
                              (self.name, self.remote_field.model))
         return super().formfield(**{
             'form_class': forms.ModelChoiceField,
-            'queryset': self.remote_field.model._default_manager.using(using),
+            'queryset': self.remote_field.model._base_manager.using(using),
             'to_field_name': self.remote_field.field_name,
             **kwargs,
             'blank': self.blank,
diff --git a/reproapp/__init__.py b/reproapp/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/reproapp/apps.py b/reproapp/apps.py
new file mode 100644
index 0000000000..25cecb7889
--- /dev/null
+++ b/reproapp/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class ReproappConfig(AppConfig):
+    name = 'reproapp'
\ No newline at end of file
diff --git a/reproapp/migrations/0001_initial.py b/reproapp/migrations/0001_initial.py
new file mode 100644
index 0000000000..7ec13b5d51
--- /dev/null
+++ b/reproapp/migrations/0001_initial.py
@@ -0,0 +1,30 @@
+# Generated by Django 3.2 on 2025-01-13 23:43
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Article',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('title', models.CharField(max_length=100)),
+                ('archived', models.BooleanField(default=False)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='FavoriteArticle',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reproapp.article')),
+            ],
+        ),
+    ]
diff --git a/reproapp/migrations/__init__.py b/reproapp/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/reproapp/models.py b/reproapp/models.py
new file mode 100644
index 0000000000..d344940efc
--- /dev/null
+++ b/reproapp/models.py
@@ -0,0 +1,13 @@
+from django.db import models
+
+class ArticleManager(models.Manager):
+    def get_queryset(self):
+        return super().get_queryset().filter(archived=False)
+
+class Article(models.Model):
+    title = models.CharField(max_length=100)
+    archived = models.BooleanField(default=False)
+    objects = ArticleManager()
+
+class FavoriteArticle(models.Model):
+    article = models.ForeignKey(Article, on_delete=models.CASCADE)
diff --git a/scripts/reproduce_fk_validate_issue.py b/scripts/reproduce_fk_validate_issue.py
new file mode 100644
index 0000000000..65bac64ba0
--- /dev/null
+++ b/scripts/reproduce_fk_validate_issue.py
@@ -0,0 +1,86 @@
+import os
+import django
+from django.conf import settings
+from django.db import models
+from django import forms
+
+# We'll programmatically configure a minimal Django settings.
+# We'll use an in-memory sqlite DB so we can reproduce the issue.
+
+import sys
+sys.path.insert(0, '/workspace/django__django__3.2')
+
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY='test',
+    ALLOWED_HOSTS=['*'],
+    INSTALLED_APPS=[
+        'django.contrib.auth',
+        'django.contrib.contenttypes',
+        'reproapp.apps.ReproappConfig',  # We can define our models in this main module.
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    MIDDLEWARE_CLASSES=[],
+    TEMPLATES=[
+        {
+            'BACKEND': 'django.template.backends.django.DjangoTemplates',
+            'APP_DIRS': True,
+            'OPTIONS': {
+                'context_processors': [
+                    'django.template.context_processors.debug',
+                    'django.template.context_processors.request',
+                ]
+            },
+        }
+    ]
+)
+
+# Initialize Django
+django.setup()
+
+# Define models:
+from django.apps import apps
+Article = apps.get_model('reproapp', 'Article')
+FavoriteArticle = apps.get_model('reproapp', 'FavoriteArticle')
+
+# Define form:
+class FavoriteArticleForm(forms.ModelForm):
+    class Meta:
+        model = FavoriteArticle
+        fields = '__all__'
+
+    def __init__(self, *args, **kwargs):
+        super().__init__(*args, **kwargs)
+        # We want to allow archived articles, so we override the queryset
+        self.fields['article'].queryset = Article._base_manager.all()
+
+# Let's create the DB tables.
+from django.core.management import call_command
+call_command('makemigrations', 'reproapp', verbosity=0)
+call_command('migrate', run_syncdb=True, verbosity=0)
+
+# Create some data:
+Article.objects.create(title='Active Article #1', archived=False)
+archived_article = Article.objects.create(title='Archived Article', archived=True)
+
+# The form tries to allow archived articles via _base_manager, but the ForeignKey
+# validation uses _default_manager in Django 3.2, meaning it won't find them.
+
+form = FavoriteArticleForm(data={
+    'article': archived_article.pk,
+})
+
+valid = form.is_valid()
+print('Is form valid?', valid)
+print('Errors:', form.errors)
+
+# If the underlying ForeignKey.validate() uses _default_manager, then the form will not be valid,
+# and you'll see an error that the article with this ID does not exist.
+
+# We'll exit with code 0, but we can check if the form is invalid. If it's invalid, it indicates
+# that the bug was reproduced. Once we fix the code, the form should be valid.
\ No newline at end of file
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:46:52,612 - INFO - ------------------------------
2025-01-13 23:46:52,613 - INFO - END Runtime Completion Fn
2025-01-13 23:46:52,613 - INFO - ------------------------------
2025-01-13 23:46:52,613 - INFO - Got git diff for instance django__django-13109:
--------
diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py
index d517d7269b..f12c0bd10a 100644
--- a/django/db/models/fields/related.py
+++ b/django/db/models/fields/related.py
@@ -914,7 +914,7 @@ class ForeignKey(ForeignObject):
             return

         using = router.db_for_read(self.remote_field.model, instance=model_instance)
-        qs = self.remote_field.model._default_manager.using(using).filter(
+        qs = self.remote_field.model._base_manager.using(using).filter(
             **{self.remote_field.field_name: value}
         )
         qs = qs.complex_filter(self.get_limit_choices_to())
@@ -984,7 +984,7 @@ class ForeignKey(ForeignObject):
                              (self.name, self.remote_field.model))
         return super().formfield(**{
             'form_class': forms.ModelChoiceField,
-            'queryset': self.remote_field.model._default_manager.using(using),
+            'queryset': self.remote_field.model._base_manager.using(using),
             'to_field_name': self.remote_field.field_name,
             **kwargs,
             'blank': self.blank,
diff --git a/reproapp/__init__.py b/reproapp/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/reproapp/apps.py b/reproapp/apps.py
new file mode 100644
index 0000000000..25cecb7889
--- /dev/null
+++ b/reproapp/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class ReproappConfig(AppConfig):
+    name = 'reproapp'
\ No newline at end of file
diff --git a/reproapp/migrations/0001_initial.py b/reproapp/migrations/0001_initial.py
new file mode 100644
index 0000000000..7ec13b5d51
--- /dev/null
+++ b/reproapp/migrations/0001_initial.py
@@ -0,0 +1,30 @@
+# Generated by Django 3.2 on 2025-01-13 23:43
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Article',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('title', models.CharField(max_length=100)),
+                ('archived', models.BooleanField(default=False)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='FavoriteArticle',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reproapp.article')),
+            ],
+        ),
+    ]
diff --git a/reproapp/migrations/__init__.py b/reproapp/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/reproapp/models.py b/reproapp/models.py
new file mode 100644
index 0000000000..d344940efc
--- /dev/null
+++ b/reproapp/models.py
@@ -0,0 +1,13 @@
+from django.db import models
+
+class ArticleManager(models.Manager):
+    def get_queryset(self):
+        return super().get_queryset().filter(archived=False)
+
+class Article(models.Model):
+    title = models.CharField(max_length=100)
+    archived = models.BooleanField(default=False)
+    objects = ArticleManager()
+
+class FavoriteArticle(models.Model):
+    article = models.ForeignKey(Article, on_delete=models.CASCADE)
diff --git a/scripts/reproduce_fk_validate_issue.py b/scripts/reproduce_fk_validate_issue.py
new file mode 100644
index 0000000000..65bac64ba0
--- /dev/null
+++ b/scripts/reproduce_fk_validate_issue.py
@@ -0,0 +1,86 @@
+import os
+import django
+from django.conf import settings
+from django.db import models
+from django import forms
+
+# We'll programmatically configure a minimal Django settings.
+# We'll use an in-memory sqlite DB so we can reproduce the issue.
+
+import sys
+sys.path.insert(0, '/workspace/django__django__3.2')
+
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY='test',
+    ALLOWED_HOSTS=['*'],
+    INSTALLED_APPS=[
+        'django.contrib.auth',
+        'django.contrib.contenttypes',
+        'reproapp.apps.ReproappConfig',  # We can define our models in this main module.
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    MIDDLEWARE_CLASSES=[],
+    TEMPLATES=[
+        {
+            'BACKEND': 'django.template.backends.django.DjangoTemplates',
+            'APP_DIRS': True,
+            'OPTIONS': {
+                'context_processors': [
+                    'django.template.context_processors.debug',
+                    'django.template.context_processors.request',
+                ]
+            },
+        }
+    ]
+)
+
+# Initialize Django
+django.setup()
+
+# Define models:
+from django.apps import apps
+Article = apps.get_model('reproapp', 'Article')
+FavoriteArticle = apps.get_model('reproapp', 'FavoriteArticle')
+
+# Define form:
+class FavoriteArticleForm(forms.ModelForm):
+    class Meta:
+        model = FavoriteArticle
+        fields = '__all__'
+
+    def __init__(self, *args, **kwargs):
+        super().__init__(*args, **kwargs)
+        # We want to allow archived articles, so we override the queryset
+        self.fields['article'].queryset = Article._base_manager.all()
+
+# Let's create the DB tables.
+from django.core.management import call_command
+call_command('makemigrations', 'reproapp', verbosity=0)
+call_command('migrate', run_syncdb=True, verbosity=0)
+
+# Create some data:
+Article.objects.create(title='Active Article #1', archived=False)
+archived_article = Article.objects.create(title='Archived Article', archived=True)
+
+# The form tries to allow archived articles via _base_manager, but the ForeignKey
+# validation uses _default_manager in Django 3.2, meaning it won't find them.
+
+form = FavoriteArticleForm(data={
+    'article': archived_article.pk,
+})
+
+valid = form.is_valid()
+print('Is form valid?', valid)
+print('Errors:', form.errors)
+
+# If the underlying ForeignKey.validate() uses _default_manager, then the form will not be valid,
+# and you'll see an error that the article with this ID does not exist.
+
+# We'll exit with code 0, but we can check if the form is invalid. If it's invalid, it indicates
+# that the bug was reproduced. Once we fix the code, the form should be valid.
\ No newline at end of file
--------
2025-01-13 23:46:58,232 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.django_s_django-13410. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-13 23:46:58,233 - INFO - Logging LLM completions for instance django__django-13410 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/django__django-13410
