2025-01-13 23:23:46,873 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_nujdhcaqdpo5u6wb_492h283ma6jm1v1e
2025-01-13 23:26:02,942 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_nujdhcaqdpo5u6wb_492h283ma6jm1v1e] build finished.
2025-01-13 23:26:02,957 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_nujdhcaqdpo5u6wb_492h283ma6jm1v1e] with more generic tag [oh_v0.20.0_nujdhcaqdpo5u6wb]
2025-01-13 23:26:02,960 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_nujdhcaqdpo5u6wb_492h283ma6jm1v1e, oh_v0.20.0_nujdhcaqdpo5u6wb] built successfully
2025-01-13 23:26:02,975 - INFO - [runtime 9b5a9b92-d067-486c-9ec8-3a842649a7f7-95702b0cee1f4ae7] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_nujdhcaqdpo5u6wb_492h283ma6jm1v1e
2025-01-13 23:26:03,998 - INFO - [runtime 9b5a9b92-d067-486c-9ec8-3a842649a7f7-95702b0cee1f4ae7] Container started: openhands-runtime-9b5a9b92-d067-486c-9ec8-3a842649a7f7-95702b0cee1f4ae7. VSCode URL: None
2025-01-13 23:26:03,998 - INFO - [runtime 9b5a9b92-d067-486c-9ec8-3a842649a7f7-95702b0cee1f4ae7] Waiting for client to become ready at http://localhost:37105...
2025-01-13 23:26:34,107 - INFO - [runtime 9b5a9b92-d067-486c-9ec8-3a842649a7f7-95702b0cee1f4ae7] Runtime is ready.
2025-01-13 23:26:34,755 - INFO - ------------------------------
2025-01-13 23:26:34,755 - INFO - BEGIN Runtime Initialization Fn
2025-01-13 23:26:34,755 - INFO - ------------------------------
2025-01-13 23:26:34,755 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-12325' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-13 23:26:35,387 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:26:35,387 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-13 23:26:36,019 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:26:36,019 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-13 23:26:36,652 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:26:36,662 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-13 23:26:37,294 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=django__django-12325
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:26:37,294 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-13 23:26:37,929 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:26:37,930 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-13 23:26:37,930 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-13 23:26:39,574 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__3.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:26:39,574 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.1
2025-01-13 23:26:40,208 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:26:40,208 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-13 23:26:41,346 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 29c126bb34 Fixed #31124 -- Fixed setting of get_FOO_display() when overriding inherited choices.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:26:41,346 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-13 23:26:41,997 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:26:41,998 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-13 23:26:42,630 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:26:42,630 - INFO - ------------------------------
2025-01-13 23:26:42,630 - INFO - END Runtime Initialization Fn
2025-01-13 23:26:42,631 - INFO - ------------------------------
2025-01-13 23:26:42,649 - INFO - [runtime 9b5a9b92-d067-486c-9ec8-3a842649a7f7-95702b0cee1f4ae7] Found 0 local microagents.
2025-01-13 23:26:42,652 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-13 23:26:42,654 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-13 23:27:13,595 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-13 23:27:32,807 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-13 23:27:50,344 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-13 23:28:00,853 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-13 23:28:46,608 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-13 23:29:28,463 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-13 23:30:15,756 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-13 23:30:42,919 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-13 23:30:52,896 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-13 23:31:13,548 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-13 23:31:41,000 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-13 23:32:43,226 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-13 23:33:26,028 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-13 23:33:37,716 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-13 23:34:38,927 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-13 23:35:44,529 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-13 23:36:21,419 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-13 23:36:44,218 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-13 23:37:11,052 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-13 23:37:25,790 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-13 23:37:55,825 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-13 23:38:27,255 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-13 23:38:59,700 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-13 23:40:03,897 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-13 23:40:27,715 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-13 23:41:39,343 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-13 23:41:54,995 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-13 23:42:42,232 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-13 23:43:28,613 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-13 23:44:05,100 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-13 23:44:05,100 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-13 23:44:05,101 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-13 23:44:05,102 - WARNING - Stopping agent due to traffic control
2025-01-13 23:44:05,102 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-13 23:44:05,699 - INFO - ------------------------------
2025-01-13 23:44:05,700 - INFO - BEGIN Runtime Completion Fn
2025-01-13 23:44:05,700 - INFO - ------------------------------
2025-01-13 23:44:05,700 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.1
2025-01-13 23:44:06,333 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:44:06,333 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-13 23:44:06,966 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:44:06,967 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-13 23:44:07,600 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:44:07,600 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 29c126bb349526b5f1cd78facbe9f25906f18563
2025-01-13 23:44:08,234 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "19847ddc0da9",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 8ea6c05ef9..ccd1e61046 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -202,9 +202,11 @@ class ModelBase(type):
                 continue
             # Locate OneToOneField instances.
             for field in base._meta.local_fields:
-                if isinstance(field, OneToOneField):
+                if isinstance(field, OneToOneField) and field.remote_field.parent_link:
                     related = resolve_relation(new_class, field.remote_field.model)
-                    parent_links[make_model_tuple(related)] = field
+                    existing_field = parent_links.get(make_model_tuple(related))
+          if existing_field is None or (field.remote_field.parent_link and not (existing_field.remote_field and existing_field.remote_field.parent_link)):
+              parent_links[make_model_tuple(related)] = field

         # Track fields inherited from base models.
         inherited_attributes = set()
@@ -265,7 +267,11 @@ class ModelBase(type):
                         new_class.add_to_class(attr_name, field)
                 else:
                     field = None
-                new_class._meta.parents[base] = field
+                existing_field = new_class._meta.parents.get(base)
+                if existing_field is not None and existing_field.remote_field and existing_field.remote_field.parent_link:
+                    pass
+                else:
+                    new_class._meta.parents[base] = field
             else:
                 base_parents = base._meta.parents.copy()

diff --git a/django/db/models/options.py b/django/db/models/options.py
index a375f6ba1d..e77b9c8204 100644
--- a/django/db/models/options.py
+++ b/django/db/models/options.py
@@ -240,9 +240,13 @@ class Options:

         if self.pk is None:
             if self.parents:
-                # Promote the first parent link in lieu of adding yet another
-                # field.
-                field = next(iter(self.parents.values()))
+                # If there's a field with parent_link=True, pick that first, else pick the first parent
+                parent_fields = list(self.parents.values())
+                preferred_parent_fields = [fld for fld in parent_fields if fld.remote_field and fld.remote_field.parent_link]
+                if preferred_parent_fields:
+                    field = preferred_parent_fields[0]
+                else:
+                    field = parent_fields[0]
                 # Look for a local field with the same name as the
                 # first parent link. If a local field has already been
                 # created, use it instead of promoting the parent
@@ -252,9 +256,9 @@ class Options:
                 field.primary_key = True
                 self.setup_pk(field)
                 if not field.remote_field.parent_link:
-                    raise ImproperlyConfigured(
-                        'Add parent_link=True to %s.' % field,
-                    )
+                    fields_with_parent_link = [p for p in parent_fields if p.remote_field and p.remote_field.parent_link]
+                    if not fields_with_parent_link:
+                        raise ImproperlyConfigured('Add parent_link=True to %s.' % field)
             else:
                 auto = AutoField(verbose_name='ID', primary_key=True, auto_created=True)
                 model.add_to_class('id', auto)
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..224bf5296f
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,32 @@
+import django
+from django.conf import settings
+from django.db import models
+
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=["__main__"],
+        SECRET_KEY="xxx",
+        DATABASES={
+            "default": {
+                "ENGINE": "django.db.backends.sqlite3",
+                "NAME": ":memory:",
+            }
+        },
+    )
+
+django.setup()
+
+class Document(models.Model):
+    pass
+
+class Picking(Document):
+    document_ptr = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')
+    origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)
+
+# Accessing model metadata can trigger Django's internal checks.
+# If there's an error with how parent_link is handled, that should show up here.
+
+for model in (Document, Picking):
+    opts = model._meta
+    print(f"Model: {opts.label}")
+print("Script finished.")
\ No newline at end of file
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:44:08,235 - INFO - ------------------------------
2025-01-13 23:44:08,235 - INFO - END Runtime Completion Fn
2025-01-13 23:44:08,235 - INFO - ------------------------------
2025-01-13 23:44:08,235 - INFO - Got git diff for instance django__django-12325:
--------
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 8ea6c05ef9..ccd1e61046 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -202,9 +202,11 @@ class ModelBase(type):
                 continue
             # Locate OneToOneField instances.
             for field in base._meta.local_fields:
-                if isinstance(field, OneToOneField):
+                if isinstance(field, OneToOneField) and field.remote_field.parent_link:
                     related = resolve_relation(new_class, field.remote_field.model)
-                    parent_links[make_model_tuple(related)] = field
+                    existing_field = parent_links.get(make_model_tuple(related))
+          if existing_field is None or (field.remote_field.parent_link and not (existing_field.remote_field and existing_field.remote_field.parent_link)):
+              parent_links[make_model_tuple(related)] = field

         # Track fields inherited from base models.
         inherited_attributes = set()
@@ -265,7 +267,11 @@ class ModelBase(type):
                         new_class.add_to_class(attr_name, field)
                 else:
                     field = None
-                new_class._meta.parents[base] = field
+                existing_field = new_class._meta.parents.get(base)
+                if existing_field is not None and existing_field.remote_field and existing_field.remote_field.parent_link:
+                    pass
+                else:
+                    new_class._meta.parents[base] = field
             else:
                 base_parents = base._meta.parents.copy()

diff --git a/django/db/models/options.py b/django/db/models/options.py
index a375f6ba1d..e77b9c8204 100644
--- a/django/db/models/options.py
+++ b/django/db/models/options.py
@@ -240,9 +240,13 @@ class Options:

         if self.pk is None:
             if self.parents:
-                # Promote the first parent link in lieu of adding yet another
-                # field.
-                field = next(iter(self.parents.values()))
+                # If there's a field with parent_link=True, pick that first, else pick the first parent
+                parent_fields = list(self.parents.values())
+                preferred_parent_fields = [fld for fld in parent_fields if fld.remote_field and fld.remote_field.parent_link]
+                if preferred_parent_fields:
+                    field = preferred_parent_fields[0]
+                else:
+                    field = parent_fields[0]
                 # Look for a local field with the same name as the
                 # first parent link. If a local field has already been
                 # created, use it instead of promoting the parent
@@ -252,9 +256,9 @@ class Options:
                 field.primary_key = True
                 self.setup_pk(field)
                 if not field.remote_field.parent_link:
-                    raise ImproperlyConfigured(
-                        'Add parent_link=True to %s.' % field,
-                    )
+                    fields_with_parent_link = [p for p in parent_fields if p.remote_field and p.remote_field.parent_link]
+                    if not fields_with_parent_link:
+                        raise ImproperlyConfigured('Add parent_link=True to %s.' % field)
             else:
                 auto = AutoField(verbose_name='ID', primary_key=True, auto_created=True)
                 model.add_to_class('id', auto)
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..224bf5296f
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,32 @@
+import django
+from django.conf import settings
+from django.db import models
+
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=["__main__"],
+        SECRET_KEY="xxx",
+        DATABASES={
+            "default": {
+                "ENGINE": "django.db.backends.sqlite3",
+                "NAME": ":memory:",
+            }
+        },
+    )
+
+django.setup()
+
+class Document(models.Model):
+    pass
+
+class Picking(Document):
+    document_ptr = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')
+    origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)
+
+# Accessing model metadata can trigger Django's internal checks.
+# If there's an error with how parent_link is handled, that should show up here.
+
+for model in (Document, Picking):
+    opts = model._meta
+    print(f"Model: {opts.label}")
+print("Script finished.")
\ No newline at end of file
--------
2025-01-13 23:44:09,568 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.django_s_django-13346. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-13 23:44:09,569 - INFO - Logging LLM completions for instance django__django-13346 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/django__django-13346
