2025-01-14 17:20:14,310 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_yd77w6rjg16qqb8h_qroup3d3os79ipoo
2025-01-14 17:22:27,356 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_yd77w6rjg16qqb8h_qroup3d3os79ipoo] build finished.
2025-01-14 17:22:27,375 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_yd77w6rjg16qqb8h_qroup3d3os79ipoo] with more generic tag [oh_v0.20.0_yd77w6rjg16qqb8h]
2025-01-14 17:22:27,377 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_yd77w6rjg16qqb8h_qroup3d3os79ipoo, oh_v0.20.0_yd77w6rjg16qqb8h] built successfully
2025-01-14 17:22:27,400 - INFO - [runtime e51b99cf-add7-40ba-9263-1cb6e7ad07d0-dab96f0f88b5ecc8] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_yd77w6rjg16qqb8h_qroup3d3os79ipoo
2025-01-14 17:22:29,628 - INFO - [runtime e51b99cf-add7-40ba-9263-1cb6e7ad07d0-dab96f0f88b5ecc8] Container started: openhands-runtime-e51b99cf-add7-40ba-9263-1cb6e7ad07d0-dab96f0f88b5ecc8. VSCode URL: None
2025-01-14 17:22:29,628 - INFO - [runtime e51b99cf-add7-40ba-9263-1cb6e7ad07d0-dab96f0f88b5ecc8] Waiting for client to become ready at http://localhost:32451...
2025-01-14 17:22:55,710 - INFO - [runtime e51b99cf-add7-40ba-9263-1cb6e7ad07d0-dab96f0f88b5ecc8] Runtime is ready.
2025-01-14 17:22:56,351 - INFO - ------------------------------
2025-01-14 17:22:56,351 - INFO - BEGIN Runtime Initialization Fn
2025-01-14 17:22:56,351 - INFO - ------------------------------
2025-01-14 17:22:56,351 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=pylint-dev__pylint-4661' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-14 17:22:56,980 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:22:56,980 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-14 17:22:57,607 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:22:57,608 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-14 17:22:58,235 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:22:58,243 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-14 17:22:58,871 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=pylint-dev__pylint-4661
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:22:58,871 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-14 17:22:59,501 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:22:59,501 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-14 17:22:59,501 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-14 17:23:00,129 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: pylint-dev__pylint__2.10
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:23:00,129 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pylint-dev__pylint__2.10
2025-01-14 17:23:00,757 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace/pylint-dev__pylint__2.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__2.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:23:00,757 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-14 17:23:01,385 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace/pylint-dev__pylint__2.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 1d1619ef9 Performance improvment of the Similarity checker (#4565)
[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__2.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:23:01,385 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-14 17:23:02,023 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace/pylint-dev__pylint__2.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__2.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:23:02,023 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-14 17:23:02,652 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace/pylint-dev__pylint__2.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__2.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:23:02,653 - INFO - ------------------------------
2025-01-14 17:23:02,653 - INFO - END Runtime Initialization Fn
2025-01-14 17:23:02,653 - INFO - ------------------------------
2025-01-14 17:23:02,668 - INFO - [runtime e51b99cf-add7-40ba-9263-1cb6e7ad07d0-dab96f0f88b5ecc8] Found 0 local microagents.
2025-01-14 17:23:02,671 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-14 17:23:02,675 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-14 17:23:24,232 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-14 17:23:33,397 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-14 17:23:42,450 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-14 17:24:52,013 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-14 17:25:10,011 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-14 17:26:01,465 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-14 17:26:33,021 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-14 17:26:43,438 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-14 17:27:01,168 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-14 17:27:15,305 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-14 17:27:25,807 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-14 17:27:35,156 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-14 17:27:39,066 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-01-14 17:27:39,939 - INFO - ------------------------------
2025-01-14 17:27:39,940 - INFO - BEGIN Runtime Completion Fn
2025-01-14 17:27:39,940 - INFO - ------------------------------
2025-01-14 17:27:39,940 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pylint-dev__pylint__2.10
2025-01-14 17:27:40,578 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace/pylint-dev__pylint__2.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__2.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:27:40,578 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-14 17:27:41,209 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace/pylint-dev__pylint__2.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__2.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:27:41,209 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-14 17:27:41,840 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace/pylint-dev__pylint__2.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__2.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:27:41,841 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 1d1619ef913b99b06647d2030bddff4800abdf63
2025-01-14 17:27:42,470 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d3f4af10fc84",
  "working_dir": "/workspace/pylint-dev__pylint__2.10",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/doc/faq.rst b/doc/faq.rst
index c817855f8..c580f141f 100644
--- a/doc/faq.rst
+++ b/doc/faq.rst
@@ -73,16 +73,16 @@ or if "directory" is in the python path.

 "pylint /whatever/directory/mymodule.py" will work if either:

-       - "/whatever/directory" is in the python path
+        - "/whatever/directory" is in the python path

-       - your cwd is "/whatever/directory"
+        - your cwd is "/whatever/directory"

-       - "directory" is a python package and "/whatever" is in the python
+        - "directory" is a python package and "/whatever" is in the python
           path

         - "directory" is an implicit namespace package and is in the python path.

-       - "directory" is a python package and your cwd is "/whatever" and so
+        - "directory" is a python package and your cwd is "/whatever" and so
           on...

 3.2 Where is the persistent data stored to compare between successive runs?
@@ -93,10 +93,10 @@ localized using the following rules:

 * value of the PYLINTHOME environment variable if set

-* ".pylint.d" subdirectory of the user's home directory if it is found
-       (not always findable on Windows platforms)
+* If "XDG_DATA_HOME" is set, we use $XDG_DATA_HOME/pylint
+        (not always findable on Windows platforms)

-* ".pylint.d" directory in the current directory
+* Otherwise, we use $HOME/.local/share/pylint

 3.3 How do I find the option name (for pylintrc) corresponding to a specific command line option?
 --------------------------------------------------------------------------------------------------------
@@ -107,7 +107,7 @@ the rc file

 For example::

-       pylint --disable=bare-except,invalid-name --class-rgx='[A-Z][a-z]+' --generate-rcfile
+        pylint --disable=bare-except,invalid-name --class-rgx='[A-Z][a-z]+' --generate-rcfile

 3.4 I'd rather not run Pylint from the command line. Can I integrate it with my editor?
 ---------------------------------------------------------------------------------------
@@ -132,8 +132,8 @@ Yes, you can disable or enable (globally disabled) messages at the
 module level by adding the corresponding option in a comment at the
 top of the file: ::

-       # pylint: disable=wildcard-import, method-hidden
-       # pylint: enable=too-many-lines
+        # pylint: disable=wildcard-import, method-hidden
+        # pylint: enable=too-many-lines

 4.3 How can I tell Pylint to never check a given module?
 --------------------------------------------------------
diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py
index 84774d0e3..31e3c9bf6 100644
--- a/pylint/config/__init__.py
+++ b/pylint/config/__init__.py
@@ -60,10 +60,10 @@ if "PYLINTHOME" in os.environ:
     PYLINT_HOME = os.environ["PYLINTHOME"]
     if USER_HOME == "~":
         USER_HOME = os.path.dirname(PYLINT_HOME)
-elif USER_HOME == "~":
-    PYLINT_HOME = ".pylint.d"
+elif "XDG_DATA_HOME" in os.environ:
+    PYLINT_HOME = os.path.join(os.environ["XDG_DATA_HOME"], "pylint")
 else:
-    PYLINT_HOME = os.path.join(USER_HOME, ".pylint.d")
+    PYLINT_HOME = os.path.join(USER_HOME, ".local", "share", "pylint")


 def _get_pdata_path(base_name, recurs):
diff --git a/reproduce_xdg_issue.py b/reproduce_xdg_issue.py
new file mode 100644
index 000000000..075e5983d
--- /dev/null
+++ b/reproduce_xdg_issue.py
@@ -0,0 +1,48 @@
+import os
+import subprocess
+import sys
+
+here = os.path.abspath(os.path.dirname(__file__))
+
+def main():
+    # We'll run pylint on one of the Python files in the repo
+    target_file = os.path.join(here, 'pylint', '__main__.py')
+
+    # Clear any pre-existing directories
+    if os.path.exists(os.path.join(os.path.expanduser('~'), '.pylint.d')):
+        print('Cleaning up existing ~/.pylint.d directory...')
+        import shutil
+        shutil.rmtree(os.path.join(os.path.expanduser('~'), '.pylint.d'))
+
+    if 'XDG_DATA_HOME' in os.environ:
+        data_home = os.environ['XDG_DATA_HOME']
+        pylint_data_dir = os.path.join(data_home, 'pylint')
+        if os.path.exists(pylint_data_dir):
+            print('Cleaning up existing XDG_DATA_HOME/pylint directory...')
+            import shutil
+            shutil.rmtree(pylint_data_dir)
+
+    # We'll run pylint in a subprocess to see where it stores its data
+    print('Running pylint on', target_file)
+    try:
+        subprocess.run([sys.executable, '-m', 'pylint', target_file], check=False)
+    except Exception as e:
+        print('Error running pylint:', e)
+
+    # Now let's see if .pylint.d got created in HOME or the alternate location
+    homedir_pylint_d = os.path.join(os.path.expanduser('~'), '.pylint.d')
+    if os.path.exists(homedir_pylint_d):
+        print('~/.pylint.d was created, indicating that the old behavior is still present.')
+    else:
+        print('No ~/.pylint.d was created!')
+
+    if 'XDG_DATA_HOME' in os.environ:
+        data_home = os.environ['XDG_DATA_HOME']
+        pylint_data_dir = os.path.join(data_home, 'pylint')
+        if os.path.exists(pylint_data_dir):
+            print('Persistent data was found in:', pylint_data_dir)
+        else:
+            print('No persistent data was found in:', pylint_data_dir)
+
+if __name__ == '__main__':
+    main()
[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__2.10]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:27:42,471 - INFO - ------------------------------
2025-01-14 17:27:42,471 - INFO - END Runtime Completion Fn
2025-01-14 17:27:42,471 - INFO - ------------------------------
2025-01-14 17:27:42,471 - INFO - Got git diff for instance pylint-dev__pylint-4661:
--------
diff --git a/doc/faq.rst b/doc/faq.rst
index c817855f8..c580f141f 100644
--- a/doc/faq.rst
+++ b/doc/faq.rst
@@ -73,16 +73,16 @@ or if "directory" is in the python path.

 "pylint /whatever/directory/mymodule.py" will work if either:

-       - "/whatever/directory" is in the python path
+        - "/whatever/directory" is in the python path

-       - your cwd is "/whatever/directory"
+        - your cwd is "/whatever/directory"

-       - "directory" is a python package and "/whatever" is in the python
+        - "directory" is a python package and "/whatever" is in the python
           path

         - "directory" is an implicit namespace package and is in the python path.

-       - "directory" is a python package and your cwd is "/whatever" and so
+        - "directory" is a python package and your cwd is "/whatever" and so
           on...

 3.2 Where is the persistent data stored to compare between successive runs?
@@ -93,10 +93,10 @@ localized using the following rules:

 * value of the PYLINTHOME environment variable if set

-* ".pylint.d" subdirectory of the user's home directory if it is found
-       (not always findable on Windows platforms)
+* If "XDG_DATA_HOME" is set, we use $XDG_DATA_HOME/pylint
+        (not always findable on Windows platforms)

-* ".pylint.d" directory in the current directory
+* Otherwise, we use $HOME/.local/share/pylint

 3.3 How do I find the option name (for pylintrc) corresponding to a specific command line option?
 --------------------------------------------------------------------------------------------------------
@@ -107,7 +107,7 @@ the rc file

 For example::

-       pylint --disable=bare-except,invalid-name --class-rgx='[A-Z][a-z]+' --generate-rcfile
+        pylint --disable=bare-except,invalid-name --class-rgx='[A-Z][a-z]+' --generate-rcfile

 3.4 I'd rather not run Pylint from the command line. Can I integrate it with my editor?
 ---------------------------------------------------------------------------------------
@@ -132,8 +132,8 @@ Yes, you can disable or enable (globally disabled) messages at the
 module level by adding the corresponding option in a comment at the
 top of the file: ::

-       # pylint: disable=wildcard-import, method-hidden
-       # pylint: enable=too-many-lines
+        # pylint: disable=wildcard-import, method-hidden
+        # pylint: enable=too-many-lines

 4.3 How can I tell Pylint to never check a given module?
 --------------------------------------------------------
diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py
index 84774d0e3..31e3c9bf6 100644
--- a/pylint/config/__init__.py
+++ b/pylint/config/__init__.py
@@ -60,10 +60,10 @@ if "PYLINTHOME" in os.environ:
     PYLINT_HOME = os.environ["PYLINTHOME"]
     if USER_HOME == "~":
         USER_HOME = os.path.dirname(PYLINT_HOME)
-elif USER_HOME == "~":
-    PYLINT_HOME = ".pylint.d"
+elif "XDG_DATA_HOME" in os.environ:
+    PYLINT_HOME = os.path.join(os.environ["XDG_DATA_HOME"], "pylint")
 else:
-    PYLINT_HOME = os.path.join(USER_HOME, ".pylint.d")
+    PYLINT_HOME = os.path.join(USER_HOME, ".local", "share", "pylint")


 def _get_pdata_path(base_name, recurs):
diff --git a/reproduce_xdg_issue.py b/reproduce_xdg_issue.py
new file mode 100644
index 000000000..075e5983d
--- /dev/null
+++ b/reproduce_xdg_issue.py
@@ -0,0 +1,48 @@
+import os
+import subprocess
+import sys
+
+here = os.path.abspath(os.path.dirname(__file__))
+
+def main():
+    # We'll run pylint on one of the Python files in the repo
+    target_file = os.path.join(here, 'pylint', '__main__.py')
+
+    # Clear any pre-existing directories
+    if os.path.exists(os.path.join(os.path.expanduser('~'), '.pylint.d')):
+        print('Cleaning up existing ~/.pylint.d directory...')
+        import shutil
+        shutil.rmtree(os.path.join(os.path.expanduser('~'), '.pylint.d'))
+
+    if 'XDG_DATA_HOME' in os.environ:
+        data_home = os.environ['XDG_DATA_HOME']
+        pylint_data_dir = os.path.join(data_home, 'pylint')
+        if os.path.exists(pylint_data_dir):
+            print('Cleaning up existing XDG_DATA_HOME/pylint directory...')
+            import shutil
+            shutil.rmtree(pylint_data_dir)
+
+    # We'll run pylint in a subprocess to see where it stores its data
+    print('Running pylint on', target_file)
+    try:
+        subprocess.run([sys.executable, '-m', 'pylint', target_file], check=False)
+    except Exception as e:
+        print('Error running pylint:', e)
+
+    # Now let's see if .pylint.d got created in HOME or the alternate location
+    homedir_pylint_d = os.path.join(os.path.expanduser('~'), '.pylint.d')
+    if os.path.exists(homedir_pylint_d):
+        print('~/.pylint.d was created, indicating that the old behavior is still present.')
+    else:
+        print('No ~/.pylint.d was created!')
+
+    if 'XDG_DATA_HOME' in os.environ:
+        data_home = os.environ['XDG_DATA_HOME']
+        pylint_data_dir = os.path.join(data_home, 'pylint')
+        if os.path.exists(pylint_data_dir):
+            print('Persistent data was found in:', pylint_data_dir)
+        else:
+            print('No persistent data was found in:', pylint_data_dir)
+
+if __name__ == '__main__':
+    main()
--------
2025-01-14 17:27:43,910 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.pytest-dev_s_pytest-5262. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-14 17:27:43,911 - INFO - Logging LLM completions for instance pytest-dev__pytest-5262 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/pytest-dev__pytest-5262
