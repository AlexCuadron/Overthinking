2025-01-14 01:15:09,154 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_kql5vtlrr3c8sqfj_492h283ma6jm1v1e
2025-01-14 01:16:08,298 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_kql5vtlrr3c8sqfj_492h283ma6jm1v1e] build finished.
2025-01-14 01:16:08,309 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_kql5vtlrr3c8sqfj_492h283ma6jm1v1e] with more generic tag [oh_v0.20.0_kql5vtlrr3c8sqfj]
2025-01-14 01:16:08,313 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_kql5vtlrr3c8sqfj_492h283ma6jm1v1e, oh_v0.20.0_kql5vtlrr3c8sqfj] built successfully
2025-01-14 01:16:08,329 - INFO - [runtime bbd0046e-136f-494a-a494-2a1dace5a760-257c2d304f7a03dd] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_kql5vtlrr3c8sqfj_492h283ma6jm1v1e
2025-01-14 01:16:09,656 - INFO - [runtime bbd0046e-136f-494a-a494-2a1dace5a760-257c2d304f7a03dd] Container started: openhands-runtime-bbd0046e-136f-494a-a494-2a1dace5a760-257c2d304f7a03dd. VSCode URL: None
2025-01-14 01:16:09,656 - INFO - [runtime bbd0046e-136f-494a-a494-2a1dace5a760-257c2d304f7a03dd] Waiting for client to become ready at http://localhost:37858...
2025-01-14 01:16:35,750 - INFO - [runtime bbd0046e-136f-494a-a494-2a1dace5a760-257c2d304f7a03dd] Runtime is ready.
2025-01-14 01:16:36,400 - INFO - ------------------------------
2025-01-14 01:16:36,400 - INFO - BEGIN Runtime Initialization Fn
2025-01-14 01:16:36,400 - INFO - ------------------------------
2025-01-14 01:16:36,400 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-15278' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-14 01:16:37,034 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:16:37,034 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-14 01:16:37,668 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:16:37,668 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-14 01:16:38,299 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:16:38,309 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-14 01:16:38,941 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=django__django-15278
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:16:38,941 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-14 01:16:39,571 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:16:39,571 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-14 01:16:39,572 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-14 01:16:41,214 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__4.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:16:41,214 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__4.1
2025-01-14 01:16:41,846 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:16:41,846 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-14 01:16:43,004 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 0ab58c1209 Refs #29026 -- Allowed customizing InteractiveMigrationQuestioner's prompt destination.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:16:43,005 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-14 01:16:43,640 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:16:43,640 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-14 01:16:44,281 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:16:44,282 - INFO - ------------------------------
2025-01-14 01:16:44,282 - INFO - END Runtime Initialization Fn
2025-01-14 01:16:44,282 - INFO - ------------------------------
2025-01-14 01:16:44,306 - INFO - [runtime bbd0046e-136f-494a-a494-2a1dace5a760-257c2d304f7a03dd] Found 0 local microagents.
2025-01-14 01:16:44,309 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-14 01:16:44,310 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-14 01:17:02,625 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-14 01:17:56,808 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-14 01:18:14,539 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-14 01:18:34,910 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-14 01:18:39,063 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-14 01:19:08,666 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-14 01:19:19,584 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-14 01:19:32,322 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-14 01:20:08,996 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-14 01:20:24,323 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-14 01:20:58,990 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-14 01:21:21,867 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-14 01:21:40,684 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-14 01:21:54,368 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-14 01:22:03,230 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-14 01:22:11,481 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-14 01:22:25,313 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-14 01:22:38,384 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-14 01:23:08,359 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-14 01:23:14,983 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-14 01:23:21,635 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-01-14 01:23:21,701 - INFO - ------------------------------
2025-01-14 01:23:21,701 - INFO - BEGIN Runtime Completion Fn
2025-01-14 01:23:21,701 - INFO - ------------------------------
2025-01-14 01:23:21,701 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__4.1
2025-01-14 01:23:22,335 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:23:22,336 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-14 01:23:22,966 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:23:22,967 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-14 01:23:23,599 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:23:23,599 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 0ab58c120939093fea90822f376e1866fc714d1f
2025-01-14 01:23:24,243 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "503fe23bb53b",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py
index 6752a8e3c0..80fa3e8bc0 100644
--- a/django/db/backends/sqlite3/schema.py
+++ b/django/db/backends/sqlite3/schema.py
@@ -327,7 +327,7 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
         # Fields with default values cannot by handled by ALTER TABLE ADD
         # COLUMN statement because DROP DEFAULT is not supported in
         # ALTER TABLE.
-        if not field.null or self.effective_default(field) is not None:
+        if not field.null or self.effective_default(field) is not None or field.unique:
             self._remake_table(model, create_field=field)
         else:
             super().add_field(model, field)
diff --git a/oauth2_provider/__init__.py b/oauth2_provider/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/oauth2_provider/apps.py b/oauth2_provider/apps.py
new file mode 100644
index 0000000000..6e681c0c95
--- /dev/null
+++ b/oauth2_provider/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class Oauth2ProviderConfig(AppConfig):
+    name = 'oauth2_provider'
diff --git a/oauth2_provider/migrations/0001_initial.py b/oauth2_provider/migrations/0001_initial.py
new file mode 100644
index 0000000000..9a4a904004
--- /dev/null
+++ b/oauth2_provider/migrations/0001_initial.py
@@ -0,0 +1,26 @@
+# Generated by Django 4.1.dev20220103113051 on 2025-01-14 01:23
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='AccessToken',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+            ],
+        ),
+        migrations.CreateModel(
+            name='RefreshToken',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+            ],
+        ),
+    ]
diff --git a/oauth2_provider/migrations/0002_add_one_to_one.py b/oauth2_provider/migrations/0002_add_one_to_one.py
new file mode 100644
index 0000000000..3a8460c94d
--- /dev/null
+++ b/oauth2_provider/migrations/0002_add_one_to_one.py
@@ -0,0 +1,17 @@
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('oauth2_provider', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AddField(
+            model_name='accesstoken',
+            name='source_refresh_token',
+            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='oauth2_provider.refreshtoken', related_name='refreshed_access_token'),
+        ),
+    ]
diff --git a/oauth2_provider/migrations/__init__.py b/oauth2_provider/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/oauth2_provider/models.py b/oauth2_provider/models.py
new file mode 100644
index 0000000000..5d1132f9ab
--- /dev/null
+++ b/oauth2_provider/models.py
@@ -0,0 +1,7 @@
+from django.db import models
+
+class RefreshToken(models.Model):
+    pass
+
+class AccessToken(models.Model):
+    pass
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..826244eac4
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,89 @@
+import os
+import shutil
+import sys
+
+import django
+from django.conf import settings
+from django.core.management import call_command
+
+def configure_settings():
+    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+    DATABASE_FILENAME = os.path.join(BASE_DIR, 'testdb.sqlite3')
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY='test-key',
+        ROOT_URLCONF=__name__,
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': DATABASE_FILENAME,
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+            'django.contrib.sessions',
+            'django.contrib.messages',
+            'django.contrib.staticfiles',
+            'oauth2_provider.apps.Oauth2ProviderConfig',
+        ],
+        MIDDLEWARE=[],
+    )
+
+
+def main():
+    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+    db_file = os.path.join(BASE_DIR, 'testdb.sqlite3')
+    if os.path.exists(db_file):
+        os.remove(db_file)
+
+    # In case we left a previous migration folder, remove it.
+    migrations_dir = os.path.join(BASE_DIR, 'oauth2_provider', 'migrations')
+    if os.path.exists(migrations_dir):
+        shutil.rmtree(migrations_dir)
+    os.makedirs(migrations_dir, exist_ok=True)
+
+    # Create an __init__.py so Django recognizes it as a package.
+    init_path = os.path.join(migrations_dir, '__init__.py')
+    with open(init_path, 'w') as init_file:
+        init_file.write('')
+
+    configure_settings()
+    django.setup()
+
+    # Create initial migration with the existing models.
+    call_command('makemigrations', 'oauth2_provider', verbosity=0)
+    call_command('migrate', verbosity=0)
+
+    # Next, simulate adding a OneToOneField in a second migration.
+    second_migration = """
+from django.db import migrations, models
+import django.db.models.deletion
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('oauth2_provider', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AddField(
+            model_name='accesstoken',
+            name='source_refresh_token',
+            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='oauth2_provider.refreshtoken', related_name='refreshed_access_token'),
+        ),
+    ]
+"""
+    second_file = os.path.join(migrations_dir, '0002_add_one_to_one.py')
+    with open(second_file, 'w') as f2:
+        f2.write(second_migration)
+
+    try:
+        call_command('migrate', verbosity=1)
+        print("No error encountered: The issue may not have reproduced.")
+    except Exception as exc:
+        print("ERROR REPRODUCED:", exc)
+        sys.exit(1)
+
+if __name__ == '__main__':
+    main()
diff --git a/testdb.sqlite3 b/testdb.sqlite3
new file mode 100644
index 0000000000..854f71b099
Binary files /dev/null and b/testdb.sqlite3 differ
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:23:24,243 - INFO - ------------------------------
2025-01-14 01:23:24,243 - INFO - END Runtime Completion Fn
2025-01-14 01:23:24,243 - INFO - ------------------------------
2025-01-14 01:23:24,243 - INFO - Got git diff for instance django__django-15278:
--------
diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py
index 6752a8e3c0..80fa3e8bc0 100644
--- a/django/db/backends/sqlite3/schema.py
+++ b/django/db/backends/sqlite3/schema.py
@@ -327,7 +327,7 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
         # Fields with default values cannot by handled by ALTER TABLE ADD
         # COLUMN statement because DROP DEFAULT is not supported in
         # ALTER TABLE.
-        if not field.null or self.effective_default(field) is not None:
+        if not field.null or self.effective_default(field) is not None or field.unique:
             self._remake_table(model, create_field=field)
         else:
             super().add_field(model, field)
diff --git a/oauth2_provider/__init__.py b/oauth2_provider/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/oauth2_provider/apps.py b/oauth2_provider/apps.py
new file mode 100644
index 0000000000..6e681c0c95
--- /dev/null
+++ b/oauth2_provider/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class Oauth2ProviderConfig(AppConfig):
+    name = 'oauth2_provider'
diff --git a/oauth2_provider/migrations/0001_initial.py b/oauth2_provider/migrations/0001_initial.py
new file mode 100644
index 0000000000..9a4a904004
--- /dev/null
+++ b/oauth2_provider/migrations/0001_initial.py
@@ -0,0 +1,26 @@
+# Generated by Django 4.1.dev20220103113051 on 2025-01-14 01:23
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='AccessToken',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+            ],
+        ),
+        migrations.CreateModel(
+            name='RefreshToken',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+            ],
+        ),
+    ]
diff --git a/oauth2_provider/migrations/0002_add_one_to_one.py b/oauth2_provider/migrations/0002_add_one_to_one.py
new file mode 100644
index 0000000000..3a8460c94d
--- /dev/null
+++ b/oauth2_provider/migrations/0002_add_one_to_one.py
@@ -0,0 +1,17 @@
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('oauth2_provider', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AddField(
+            model_name='accesstoken',
+            name='source_refresh_token',
+            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='oauth2_provider.refreshtoken', related_name='refreshed_access_token'),
+        ),
+    ]
diff --git a/oauth2_provider/migrations/__init__.py b/oauth2_provider/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/oauth2_provider/models.py b/oauth2_provider/models.py
new file mode 100644
index 0000000000..5d1132f9ab
--- /dev/null
+++ b/oauth2_provider/models.py
@@ -0,0 +1,7 @@
+from django.db import models
+
+class RefreshToken(models.Model):
+    pass
+
+class AccessToken(models.Model):
+    pass
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..826244eac4
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,89 @@
+import os
+import shutil
+import sys
+
+import django
+from django.conf import settings
+from django.core.management import call_command
+
+def configure_settings():
+    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+    DATABASE_FILENAME = os.path.join(BASE_DIR, 'testdb.sqlite3')
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY='test-key',
+        ROOT_URLCONF=__name__,
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': DATABASE_FILENAME,
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+            'django.contrib.sessions',
+            'django.contrib.messages',
+            'django.contrib.staticfiles',
+            'oauth2_provider.apps.Oauth2ProviderConfig',
+        ],
+        MIDDLEWARE=[],
+    )
+
+
+def main():
+    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+    db_file = os.path.join(BASE_DIR, 'testdb.sqlite3')
+    if os.path.exists(db_file):
+        os.remove(db_file)
+
+    # In case we left a previous migration folder, remove it.
+    migrations_dir = os.path.join(BASE_DIR, 'oauth2_provider', 'migrations')
+    if os.path.exists(migrations_dir):
+        shutil.rmtree(migrations_dir)
+    os.makedirs(migrations_dir, exist_ok=True)
+
+    # Create an __init__.py so Django recognizes it as a package.
+    init_path = os.path.join(migrations_dir, '__init__.py')
+    with open(init_path, 'w') as init_file:
+        init_file.write('')
+
+    configure_settings()
+    django.setup()
+
+    # Create initial migration with the existing models.
+    call_command('makemigrations', 'oauth2_provider', verbosity=0)
+    call_command('migrate', verbosity=0)
+
+    # Next, simulate adding a OneToOneField in a second migration.
+    second_migration = """
+from django.db import migrations, models
+import django.db.models.deletion
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('oauth2_provider', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AddField(
+            model_name='accesstoken',
+            name='source_refresh_token',
+            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='oauth2_provider.refreshtoken', related_name='refreshed_access_token'),
+        ),
+    ]
+"""
+    second_file = os.path.join(migrations_dir, '0002_add_one_to_one.py')
+    with open(second_file, 'w') as f2:
+        f2.write(second_migration)
+
+    try:
+        call_command('migrate', verbosity=1)
+        print("No error encountered: The issue may not have reproduced.")
+    except Exception as exc:
+        print("ERROR REPRODUCED:", exc)
+        sys.exit(1)
+
+if __name__ == '__main__':
+    main()
diff --git a/testdb.sqlite3 b/testdb.sqlite3
new file mode 100644
index 0000000000..854f71b099
Binary files /dev/null and b/testdb.sqlite3 differ
--------
2025-01-14 01:23:25,583 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.django_s_django-15561. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-14 01:23:25,583 - INFO - Logging LLM completions for instance django__django-15561 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/django__django-15561
