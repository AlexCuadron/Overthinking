2025-01-14 00:46:03,877 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_fhits1cxir4se0th_492h283ma6jm1v1e
2025-01-14 00:48:32,826 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_fhits1cxir4se0th_492h283ma6jm1v1e] build finished.
2025-01-14 00:48:32,838 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_fhits1cxir4se0th_492h283ma6jm1v1e] with more generic tag [oh_v0.20.0_fhits1cxir4se0th]
2025-01-14 00:48:32,840 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_fhits1cxir4se0th_492h283ma6jm1v1e, oh_v0.20.0_fhits1cxir4se0th] built successfully
2025-01-14 00:48:32,852 - INFO - [runtime aebf369d-856e-448c-b3d1-c60f7402271c-2749a5afd05d9bd2] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_fhits1cxir4se0th_492h283ma6jm1v1e
2025-01-14 00:48:33,717 - INFO - [runtime aebf369d-856e-448c-b3d1-c60f7402271c-2749a5afd05d9bd2] Container started: openhands-runtime-aebf369d-856e-448c-b3d1-c60f7402271c-2749a5afd05d9bd2. VSCode URL: None
2025-01-14 00:48:33,717 - INFO - [runtime aebf369d-856e-448c-b3d1-c60f7402271c-2749a5afd05d9bd2] Waiting for client to become ready at http://localhost:38261...
2025-01-14 00:49:01,834 - INFO - [runtime aebf369d-856e-448c-b3d1-c60f7402271c-2749a5afd05d9bd2] Runtime is ready.
2025-01-14 00:49:02,482 - INFO - ------------------------------
2025-01-14 00:49:02,482 - INFO - BEGIN Runtime Initialization Fn
2025-01-14 00:49:02,482 - INFO - ------------------------------
2025-01-14 00:49:02,482 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-13964' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-14 00:49:03,113 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 00:49:03,113 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-14 00:49:03,745 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 00:49:03,745 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-14 00:49:04,375 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 00:49:04,385 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-14 00:49:05,015 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=django__django-13964
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 00:49:05,015 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-14 00:49:05,645 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 00:49:05,645 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-14 00:49:05,646 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-14 00:49:07,287 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__4.0
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 00:49:07,288 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__4.0
2025-01-14 00:49:07,925 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace/django__django__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 00:49:07,925 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-14 00:49:09,063 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace/django__django__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at f39634ff22 Refs #32390 -- Bumped required cx_Oracle to 7.0.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 00:49:09,063 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-14 00:49:09,694 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace/django__django__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 00:49:09,694 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-14 00:49:10,323 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace/django__django__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 00:49:10,324 - INFO - ------------------------------
2025-01-14 00:49:10,324 - INFO - END Runtime Initialization Fn
2025-01-14 00:49:10,324 - INFO - ------------------------------
2025-01-14 00:49:10,341 - INFO - [runtime aebf369d-856e-448c-b3d1-c60f7402271c-2749a5afd05d9bd2] Found 0 local microagents.
2025-01-14 00:49:10,344 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-14 00:49:10,345 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-14 00:49:34,716 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-14 00:49:47,348 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-14 00:50:43,630 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-14 00:51:00,983 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-14 00:51:31,350 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-14 00:51:54,799 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-14 00:52:06,453 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-14 00:52:56,204 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-14 00:53:55,671 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-14 00:54:18,621 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-14 00:54:41,213 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-14 00:55:05,590 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-14 00:55:27,027 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-14 00:55:34,543 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-14 00:55:41,375 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-14 00:55:49,358 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-14 00:56:17,187 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-14 00:56:42,747 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-14 00:56:50,707 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-14 00:57:00,450 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-14 00:58:34,157 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-14 00:59:44,398 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-14 01:00:53,833 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-14 01:01:50,892 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-14 01:02:19,866 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-14 01:03:03,665 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-14 01:03:10,095 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-14 01:04:25,563 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-14 01:06:15,871 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-14 01:07:50,968 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-14 01:07:50,968 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-14 01:07:50,970 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-14 01:07:50,970 - WARNING - Stopping agent due to traffic control
2025-01-14 01:07:50,971 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-14 01:07:51,459 - INFO - ------------------------------
2025-01-14 01:07:51,459 - INFO - BEGIN Runtime Completion Fn
2025-01-14 01:07:51,459 - INFO - ------------------------------
2025-01-14 01:07:51,459 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__4.0
2025-01-14 01:07:52,092 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace/django__django__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:07:52,092 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-14 01:07:52,722 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace/django__django__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:07:52,722 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-14 01:07:53,857 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace/django__django__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:07:53,857 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached f39634ff229887bf7790c069d0c411b38494ca38
2025-01-14 01:07:54,487 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "b423a832bfa3",
  "working_dir": "/workspace/django__django__4.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 2428218696..914d15b725 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -740,6 +740,30 @@ class Model(metaclass=ModelBase):
         """
         using = using or router.db_for_write(self.__class__, instance=self)
         assert not (force_insert and (force_update or update_fields))
+        if not raw:
+            # Ensure local fk fields referencing unsaved parent objects are synced
+            # after the parent pk is assigned (e.g. non-auto primary keys)
+            for f in self._meta.concrete_fields:
+                if f.is_relation and f.many_to_one and not f.remote_field.parent_link:
+                    parent = getattr(self, f.name, None)
+                    if parent is not None:
+                        if parent.pk is None:
+                            parent.save(using=using)
+                        setattr(self, f.attname, parent.pk)
+
+        # Ensure foreign key fields are in sync with related object PKs
+        # even if that PK was assigned after the initial assignment.
+        for f in self._meta.concrete_fields:
+            if f.is_relation and f.many_to_one and not f.remote_field.parent_link:
+                obj = getattr(self, f.name, None)
+                if obj is not None:
+                    if obj.pk is None:
+                        obj.save(using=using)
+                    current_fk_val = getattr(self, f.attname)
+                    if current_fk_val != obj.pk:
+                        setattr(self, f.attname, obj.pk)
+
+
         assert update_fields is None or update_fields
         cls = origin = self.__class__
         # Skip proxies, but keep the origin as the proxy model.
diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py
index 872a4c98dc..ec85a9a2db 100644
--- a/django/db/models/fields/related_descriptors.py
+++ b/django/db/models/fields/related_descriptors.py
@@ -228,6 +228,9 @@ class ForwardManyToOneDescriptor:
             if not router.allow_relation(value, instance):
                 raise ValueError('Cannot assign "%r": the current database router prevents this relation.' % value)

+        if value is not None and value.pk is None:
+            value.save()
+
         remote_field = self.field.remote_field
         # If we're setting the value of a OneToOneField to None, we need to clear
         # out the cache on any old related object. Otherwise, deleting the
diff --git a/scripts/reproduce_error.py b/scripts/reproduce_error.py
new file mode 100644
index 0000000000..57fec8714e
--- /dev/null
+++ b/scripts/reproduce_error.py
@@ -0,0 +1,57 @@
+import sys
+import django
+from django.conf import settings
+
+if not settings.configured:
+    settings.configure(
+        SECRET_KEY='test',
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+        ],
+        MIDDLEWARE_CLASSES=[],
+        MIDDLEWARE=[],
+    )
+
+django.setup()
+
+from django.db import models, connection, transaction
+
+class Product(models.Model):
+    sku = models.CharField(primary_key=True, max_length=50)
+
+    class Meta:
+        app_label = 'test_app'
+
+class Order(models.Model):
+    product = models.ForeignKey(Product, on_delete=models.CASCADE)
+
+    class Meta:
+        app_label = 'test_app'
+
+with connection.schema_editor() as editor:
+    editor.create_model(Product)
+    editor.create_model(Order)
+
+try:
+    with transaction.atomic():
+        order = Order()
+        order.product = Product()
+        order.product.sku = "foo"
+        order.product.save()
+        order.save()
+        if Order.objects.filter(product_id="").exists():
+            print("Test failed: Found an Order with an empty product_id!")
+        else:
+            print("All good: No Order with empty product_id.")
+except Exception as e:
+    print(f"Error: {e}")
+    sys.exit(1)
+
+print("The script completed.")
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 01:07:54,488 - INFO - ------------------------------
2025-01-14 01:07:54,488 - INFO - END Runtime Completion Fn
2025-01-14 01:07:54,488 - INFO - ------------------------------
2025-01-14 01:07:54,488 - INFO - Got git diff for instance django__django-13964:
--------
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 2428218696..914d15b725 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -740,6 +740,30 @@ class Model(metaclass=ModelBase):
         """
         using = using or router.db_for_write(self.__class__, instance=self)
         assert not (force_insert and (force_update or update_fields))
+        if not raw:
+            # Ensure local fk fields referencing unsaved parent objects are synced
+            # after the parent pk is assigned (e.g. non-auto primary keys)
+            for f in self._meta.concrete_fields:
+                if f.is_relation and f.many_to_one and not f.remote_field.parent_link:
+                    parent = getattr(self, f.name, None)
+                    if parent is not None:
+                        if parent.pk is None:
+                            parent.save(using=using)
+                        setattr(self, f.attname, parent.pk)
+
+        # Ensure foreign key fields are in sync with related object PKs
+        # even if that PK was assigned after the initial assignment.
+        for f in self._meta.concrete_fields:
+            if f.is_relation and f.many_to_one and not f.remote_field.parent_link:
+                obj = getattr(self, f.name, None)
+                if obj is not None:
+                    if obj.pk is None:
+                        obj.save(using=using)
+                    current_fk_val = getattr(self, f.attname)
+                    if current_fk_val != obj.pk:
+                        setattr(self, f.attname, obj.pk)
+
+
         assert update_fields is None or update_fields
         cls = origin = self.__class__
         # Skip proxies, but keep the origin as the proxy model.
diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py
index 872a4c98dc..ec85a9a2db 100644
--- a/django/db/models/fields/related_descriptors.py
+++ b/django/db/models/fields/related_descriptors.py
@@ -228,6 +228,9 @@ class ForwardManyToOneDescriptor:
             if not router.allow_relation(value, instance):
                 raise ValueError('Cannot assign "%r": the current database router prevents this relation.' % value)

+        if value is not None and value.pk is None:
+            value.save()
+
         remote_field = self.field.remote_field
         # If we're setting the value of a OneToOneField to None, we need to clear
         # out the cache on any old related object. Otherwise, deleting the
diff --git a/scripts/reproduce_error.py b/scripts/reproduce_error.py
new file mode 100644
index 0000000000..57fec8714e
--- /dev/null
+++ b/scripts/reproduce_error.py
@@ -0,0 +1,57 @@
+import sys
+import django
+from django.conf import settings
+
+if not settings.configured:
+    settings.configure(
+        SECRET_KEY='test',
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+        ],
+        MIDDLEWARE_CLASSES=[],
+        MIDDLEWARE=[],
+    )
+
+django.setup()
+
+from django.db import models, connection, transaction
+
+class Product(models.Model):
+    sku = models.CharField(primary_key=True, max_length=50)
+
+    class Meta:
+        app_label = 'test_app'
+
+class Order(models.Model):
+    product = models.ForeignKey(Product, on_delete=models.CASCADE)
+
+    class Meta:
+        app_label = 'test_app'
+
+with connection.schema_editor() as editor:
+    editor.create_model(Product)
+    editor.create_model(Order)
+
+try:
+    with transaction.atomic():
+        order = Order()
+        order.product = Product()
+        order.product.sku = "foo"
+        order.product.save()
+        order.save()
+        if Order.objects.filter(product_id="").exists():
+            print("Test failed: Found an Order with an empty product_id!")
+        else:
+            print("All good: No Order with empty product_id.")
+except Exception as e:
+    print(f"Error: {e}")
+    sys.exit(1)
+
+print("The script completed.")
--------
2025-01-14 01:07:56,824 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.django_s_django-14915. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-14 01:07:56,824 - INFO - Logging LLM completions for instance django__django-14915 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/django__django-14915
