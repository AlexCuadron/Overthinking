2025-01-14 18:57:43,854 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_u9gwv04byzigg9d8_qroup3d3os79ipoo
2025-01-14 19:00:16,446 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_u9gwv04byzigg9d8_qroup3d3os79ipoo] build finished.
2025-01-14 19:00:16,457 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_u9gwv04byzigg9d8_qroup3d3os79ipoo] with more generic tag [oh_v0.20.0_u9gwv04byzigg9d8]
2025-01-14 19:00:16,459 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_u9gwv04byzigg9d8_qroup3d3os79ipoo, oh_v0.20.0_u9gwv04byzigg9d8] built successfully
2025-01-14 19:00:16,467 - INFO - [runtime 79c5cc54-6fed-4c2a-9074-0141835b463d-82abfda5aa06f1b4] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_u9gwv04byzigg9d8_qroup3d3os79ipoo
2025-01-14 19:00:18,046 - INFO - [runtime 79c5cc54-6fed-4c2a-9074-0141835b463d-82abfda5aa06f1b4] Container started: openhands-runtime-79c5cc54-6fed-4c2a-9074-0141835b463d-82abfda5aa06f1b4. VSCode URL: None
2025-01-14 19:00:18,046 - INFO - [runtime 79c5cc54-6fed-4c2a-9074-0141835b463d-82abfda5aa06f1b4] Waiting for client to become ready at http://localhost:34540...
2025-01-14 19:00:46,129 - INFO - [runtime 79c5cc54-6fed-4c2a-9074-0141835b463d-82abfda5aa06f1b4] Runtime is ready.
2025-01-14 19:00:46,777 - INFO - ------------------------------
2025-01-14 19:00:46,777 - INFO - BEGIN Runtime Initialization Fn
2025-01-14 19:00:46,777 - INFO - ------------------------------
2025-01-14 19:00:46,777 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sympy__sympy-20428' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-14 19:00:47,437 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:00:47,437 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-14 19:00:48,076 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:00:48,076 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-14 19:00:48,713 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:00:48,737 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-14 19:00:49,376 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=sympy__sympy-20428
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:00:49,376 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-14 19:00:50,011 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:00:50,012 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-14 19:00:50,012 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-14 19:00:51,154 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sympy__sympy__1.8
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:00:51,155 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sympy__sympy__1.8
2025-01-14 19:00:51,790 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:00:51,790 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-14 19:00:52,426 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at c0e8516040 Merge pull request #20384 from sayandip18/pprint
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:00:52,426 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-14 19:00:53,060 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:00:53,061 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-14 19:00:53,703 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:00:53,703 - INFO - ------------------------------
2025-01-14 19:00:53,703 - INFO - END Runtime Initialization Fn
2025-01-14 19:00:53,703 - INFO - ------------------------------
2025-01-14 19:00:53,719 - INFO - [runtime 79c5cc54-6fed-4c2a-9074-0141835b463d-82abfda5aa06f1b4] Found 0 local microagents.
2025-01-14 19:00:53,721 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-14 19:00:53,722 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-14 19:01:03,051 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-14 19:01:48,009 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-14 19:02:16,581 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-14 19:02:45,108 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-14 19:03:03,837 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-14 19:03:08,391 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-14 19:03:15,685 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-14 19:03:24,332 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-14 19:03:50,917 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-14 19:04:23,557 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-14 19:05:08,563 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-14 19:05:30,704 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-14 19:05:58,740 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-14 19:06:15,351 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-14 19:07:35,967 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-14 19:07:52,568 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-14 19:08:31,376 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-14 19:08:46,169 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-14 19:09:26,197 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-14 19:09:38,927 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-14 19:09:58,588 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-14 19:10:25,280 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-14 19:10:40,865 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-14 19:10:51,433 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-14 19:11:46,434 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-14 19:11:57,626 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-14 19:12:19,035 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-14 19:12:33,465 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-14 19:12:54,758 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-14 19:13:06,964 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-01-14 19:13:07,448 - INFO - ------------------------------
2025-01-14 19:13:07,448 - INFO - BEGIN Runtime Completion Fn
2025-01-14 19:13:07,448 - INFO - ------------------------------
2025-01-14 19:13:07,448 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sympy__sympy__1.8
2025-01-14 19:13:08,075 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:13:08,075 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-14 19:13:08,702 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:13:08,702 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-14 19:13:09,328 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:13:09,328 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached c0e85160406f9bf2bcaa2992138587668a1cd0bc
2025-01-14 19:13:09,955 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d16c7571189f",
  "working_dir": "/workspace/sympy__sympy__1.8",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/repro/reproduce_bug.py b/repro/reproduce_bug.py
new file mode 100644
index 0000000000..13fa4c1cbf
--- /dev/null
+++ b/repro/reproduce_bug.py
@@ -0,0 +1,23 @@
+from sympy import symbols, sympify, Poly, sqrt
+
+x = symbols('x')
+
+expr_str = ('-117968192370600*18**(1/3)/(217603955769048*(24201 + 253*sqrt(9165))**(1/3) + '            '2273005839412*sqrt(9165)*(24201 + 253*sqrt(9165))**(1/3)) '            '- 15720318185*2**(2/3)*3**(1/3)*(24201 + 253*sqrt(9165))**(2/3)/(217603955769048*(24201 + 253*sqrt(9165))**(1/3) + '            '2273005839412*sqrt(9165)*(24201 + 253*sqrt(9165))**(1/3)) '            '+ 15720318185*12**(1/3)*(24201 + 253*sqrt(9165))**(2/3)/(217603955769048*(24201 + 253*sqrt(9165))**(1/3) + '            '2273005839412*sqrt(9165)*(24201 + 253*sqrt(9165))**(1/3)) '            '+ 117968192370600*2**(1/3)*3**(2/3)/(217603955769048*(24201 + 253*sqrt(9165))**(1/3) + '            '2273005839412*sqrt(9165)*(24201 + 253*sqrt(9165))**(1/3))')
+
+f = Poly(sympify(expr_str), x)
+coeff, bad_poly = f.clear_denoms()
+
+print('coeff:', coeff)
+print('bad_poly:', bad_poly)
+print('bad_poly.is_zero:', bad_poly.is_zero)
+
+# This sometimes triggers IndexError in .terms_gcd() if the polynomial is incorrectly formed.
+print('bad_poly.as_expr() =>', bad_poly.as_expr())
+print('bad_poly.as_expr().is_zero =>', bad_poly.as_expr().is_zero)
+
+try:
+    tc = bad_poly.terms_gcd()
+    print('terms_gcd:', tc)
+except Exception as e:
+    print('Exception in terms_gcd():', e)
+
diff --git a/sympy/polys/densebasic.py b/sympy/polys/densebasic.py
index 1caeb8f629..9b0d610f93 100644
--- a/sympy/polys/densebasic.py
+++ b/sympy/polys/densebasic.py
@@ -1673,6 +1673,45 @@ def dmp_terms_gcd(f, u, K):
     >>> dmp_terms_gcd(f, 1, ZZ)
     ((2, 1), [[1], [1, 0]])

+    """
+    # First strip trailing zeros:
+    f = dmp_strip(f, u)
+    # If now ground or zero polynomial, return (0,..., 0), f
+    if dmp_ground_TC(f, u, K) or dmp_zero_p(f, u):
+        return (0,)*(u + 1), f
+
+    F = dmp_to_dict(f, u)
+    G = monomial_min(*list(F.keys()))
+
+    if all(g == 0 for g in G):
+        return G, f
+
+    newf = {}
+    for monom, coeff in F.items():
+        newf[monomial_div(monom, G)] = coeff
+
+    return G, dmp_from_dict(newf, u, K)
+
+    # Strip trailing zeros first:
+    f = dmp_strip(f, u)
+    F = dmp_to_dict(f, u)
+    if not F:
+        # This is effectively the zero polynomial
+        return (0,)*(u + 1), f
+    """
+    Remove GCD of terms from ``f`` in ``K[X]``.
+
+    Examples
+    ========
+
+    >>> from sympy.polys.domains import ZZ
+    >>> from sympy.polys.densebasic import dmp_terms_gcd
+
+    >>> f = ZZ.map([[1, 0], [1, 0, 0], [], []])
+
+    >>> dmp_terms_gcd(f, 1, ZZ)
+    ((2, 1), [[1], [1, 0]])
+
     """
     if dmp_ground_TC(f, u, K) or dmp_zero_p(f, u):
         return (0,)*(u + 1), f
diff --git a/sympy/polys/densetools.py b/sympy/polys/densetools.py
index f057824642..9e2f28dce8 100644
--- a/sympy/polys/densetools.py
+++ b/sympy/polys/densetools.py
@@ -197,6 +197,7 @@ def dmp_diff(f, m, u, K):

     """
     if not u:
+    f = dup_strip(f)
         return dup_diff(f, m, K)
     if m <= 0:
         return f
@@ -1197,6 +1198,7 @@ def dup_clear_denoms(f, K0, K1=None, convert=False):

     if not K1.is_one(common):
         f = dup_mul_ground(f, common, K0)
+        f = dup_strip(f)

     if not convert:
         return common, f
diff --git a/sympy/polys/polyclasses.py b/sympy/polys/polyclasses.py
index 238a0f0b25..7dcfceeb66 100644
--- a/sympy/polys/polyclasses.py
+++ b/sympy/polys/polyclasses.py
@@ -155,6 +155,7 @@ def __init__(self, rep, dom, lev=None, ring=None):
         else:
             rep, lev = dmp_validate(rep)

+            rep = dmp_strip(rep, lev)
         self.rep = rep
         self.lev = lev
         self.dom = dom
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.8]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:13:09,956 - INFO - ------------------------------
2025-01-14 19:13:09,956 - INFO - END Runtime Completion Fn
2025-01-14 19:13:09,956 - INFO - ------------------------------
2025-01-14 19:13:09,956 - INFO - Got git diff for instance sympy__sympy-20428:
--------
diff --git a/repro/reproduce_bug.py b/repro/reproduce_bug.py
new file mode 100644
index 0000000000..13fa4c1cbf
--- /dev/null
+++ b/repro/reproduce_bug.py
@@ -0,0 +1,23 @@
+from sympy import symbols, sympify, Poly, sqrt
+
+x = symbols('x')
+
+expr_str = ('-117968192370600*18**(1/3)/(217603955769048*(24201 + 253*sqrt(9165))**(1/3) + '            '2273005839412*sqrt(9165)*(24201 + 253*sqrt(9165))**(1/3)) '            '- 15720318185*2**(2/3)*3**(1/3)*(24201 + 253*sqrt(9165))**(2/3)/(217603955769048*(24201 + 253*sqrt(9165))**(1/3) + '            '2273005839412*sqrt(9165)*(24201 + 253*sqrt(9165))**(1/3)) '            '+ 15720318185*12**(1/3)*(24201 + 253*sqrt(9165))**(2/3)/(217603955769048*(24201 + 253*sqrt(9165))**(1/3) + '            '2273005839412*sqrt(9165)*(24201 + 253*sqrt(9165))**(1/3)) '            '+ 117968192370600*2**(1/3)*3**(2/3)/(217603955769048*(24201 + 253*sqrt(9165))**(1/3) + '            '2273005839412*sqrt(9165)*(24201 + 253*sqrt(9165))**(1/3))')
+
+f = Poly(sympify(expr_str), x)
+coeff, bad_poly = f.clear_denoms()
+
+print('coeff:', coeff)
+print('bad_poly:', bad_poly)
+print('bad_poly.is_zero:', bad_poly.is_zero)
+
+# This sometimes triggers IndexError in .terms_gcd() if the polynomial is incorrectly formed.
+print('bad_poly.as_expr() =>', bad_poly.as_expr())
+print('bad_poly.as_expr().is_zero =>', bad_poly.as_expr().is_zero)
+
+try:
+    tc = bad_poly.terms_gcd()
+    print('terms_gcd:', tc)
+except Exception as e:
+    print('Exception in terms_gcd():', e)
+
diff --git a/sympy/polys/densebasic.py b/sympy/polys/densebasic.py
index 1caeb8f629..9b0d610f93 100644
--- a/sympy/polys/densebasic.py
+++ b/sympy/polys/densebasic.py
@@ -1673,6 +1673,45 @@ def dmp_terms_gcd(f, u, K):
     >>> dmp_terms_gcd(f, 1, ZZ)
     ((2, 1), [[1], [1, 0]])

+    """
+    # First strip trailing zeros:
+    f = dmp_strip(f, u)
+    # If now ground or zero polynomial, return (0,..., 0), f
+    if dmp_ground_TC(f, u, K) or dmp_zero_p(f, u):
+        return (0,)*(u + 1), f
+
+    F = dmp_to_dict(f, u)
+    G = monomial_min(*list(F.keys()))
+
+    if all(g == 0 for g in G):
+        return G, f
+
+    newf = {}
+    for monom, coeff in F.items():
+        newf[monomial_div(monom, G)] = coeff
+
+    return G, dmp_from_dict(newf, u, K)
+
+    # Strip trailing zeros first:
+    f = dmp_strip(f, u)
+    F = dmp_to_dict(f, u)
+    if not F:
+        # This is effectively the zero polynomial
+        return (0,)*(u + 1), f
+    """
+    Remove GCD of terms from ``f`` in ``K[X]``.
+
+    Examples
+    ========
+
+    >>> from sympy.polys.domains import ZZ
+    >>> from sympy.polys.densebasic import dmp_terms_gcd
+
+    >>> f = ZZ.map([[1, 0], [1, 0, 0], [], []])
+
+    >>> dmp_terms_gcd(f, 1, ZZ)
+    ((2, 1), [[1], [1, 0]])
+
     """
     if dmp_ground_TC(f, u, K) or dmp_zero_p(f, u):
         return (0,)*(u + 1), f
diff --git a/sympy/polys/densetools.py b/sympy/polys/densetools.py
index f057824642..9e2f28dce8 100644
--- a/sympy/polys/densetools.py
+++ b/sympy/polys/densetools.py
@@ -197,6 +197,7 @@ def dmp_diff(f, m, u, K):

     """
     if not u:
+    f = dup_strip(f)
         return dup_diff(f, m, K)
     if m <= 0:
         return f
@@ -1197,6 +1198,7 @@ def dup_clear_denoms(f, K0, K1=None, convert=False):

     if not K1.is_one(common):
         f = dup_mul_ground(f, common, K0)
+        f = dup_strip(f)

     if not convert:
         return common, f
diff --git a/sympy/polys/polyclasses.py b/sympy/polys/polyclasses.py
index 238a0f0b25..7dcfceeb66 100644
--- a/sympy/polys/polyclasses.py
+++ b/sympy/polys/polyclasses.py
@@ -155,6 +155,7 @@ def __init__(self, rep, dom, lev=None, ring=None):
         else:
             rep, lev = dmp_validate(rep)

+            rep = dmp_strip(rep, lev)
         self.rep = rep
         self.lev = lev
         self.dom = dom
--------
