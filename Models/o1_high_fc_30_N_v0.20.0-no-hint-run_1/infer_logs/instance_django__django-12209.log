2025-01-13 23:18:57,505 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_ifv63qgzyn0mr2vi_492h283ma6jm1v1e
2025-01-13 23:21:26,195 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_ifv63qgzyn0mr2vi_492h283ma6jm1v1e] build finished.
2025-01-13 23:21:26,212 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_ifv63qgzyn0mr2vi_492h283ma6jm1v1e] with more generic tag [oh_v0.20.0_ifv63qgzyn0mr2vi]
2025-01-13 23:21:26,216 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_ifv63qgzyn0mr2vi_492h283ma6jm1v1e, oh_v0.20.0_ifv63qgzyn0mr2vi] built successfully
2025-01-13 23:21:26,242 - INFO - [runtime 563bbc40-6001-4c70-97bd-e6d2306f5151-8405747cd2c08376] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_ifv63qgzyn0mr2vi_492h283ma6jm1v1e
2025-01-13 23:21:27,666 - INFO - [runtime 563bbc40-6001-4c70-97bd-e6d2306f5151-8405747cd2c08376] Container started: openhands-runtime-563bbc40-6001-4c70-97bd-e6d2306f5151-8405747cd2c08376. VSCode URL: None
2025-01-13 23:21:27,666 - INFO - [runtime 563bbc40-6001-4c70-97bd-e6d2306f5151-8405747cd2c08376] Waiting for client to become ready at http://localhost:33560...
2025-01-13 23:21:55,768 - INFO - [runtime 563bbc40-6001-4c70-97bd-e6d2306f5151-8405747cd2c08376] Runtime is ready.
2025-01-13 23:21:56,418 - INFO - ------------------------------
2025-01-13 23:21:56,418 - INFO - BEGIN Runtime Initialization Fn
2025-01-13 23:21:56,418 - INFO - ------------------------------
2025-01-13 23:21:56,418 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-12209' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-13 23:21:57,051 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:21:57,052 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-13 23:21:57,691 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:21:57,691 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-13 23:21:58,333 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:21:58,344 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-13 23:21:58,980 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=django__django-12209
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:21:58,980 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-13 23:21:59,613 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:21:59,614 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-13 23:21:59,614 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-13 23:22:01,257 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__3.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:22:01,257 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.1
2025-01-13 23:22:01,891 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:22:01,891 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-13 23:22:03,029 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 5a68f02498 Fixed random models_fields.test_uuid.TestQuerying failures.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:22:03,030 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-13 23:22:03,661 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:22:03,662 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-13 23:22:04,293 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:22:04,294 - INFO - ------------------------------
2025-01-13 23:22:04,294 - INFO - END Runtime Initialization Fn
2025-01-13 23:22:04,294 - INFO - ------------------------------
2025-01-13 23:22:04,316 - INFO - [runtime 563bbc40-6001-4c70-97bd-e6d2306f5151-8405747cd2c08376] Found 0 local microagents.
2025-01-13 23:22:04,318 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-13 23:22:04,320 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-13 23:22:23,476 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-13 23:22:37,105 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-13 23:23:17,865 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-13 23:23:45,454 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-13 23:24:30,721 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-13 23:24:45,659 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-13 23:25:31,474 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-13 23:25:38,668 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-13 23:26:11,705 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-13 23:26:28,917 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-13 23:27:08,568 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-13 23:27:13,697 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-13 23:27:59,179 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-13 23:28:08,790 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-13 23:28:55,479 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-13 23:30:28,736 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-13 23:31:59,876 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-13 23:34:10,337 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-13 23:34:48,888 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-13 23:35:19,024 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-13 23:35:59,394 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-13 23:37:07,987 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-13 23:37:23,231 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-13 23:37:33,029 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-13 23:38:01,825 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-13 23:38:30,577 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-13 23:38:40,428 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-13 23:39:44,405 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-13 23:39:50,787 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-13 23:40:45,060 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-13 23:40:45,061 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-13 23:40:45,062 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-13 23:40:45,062 - WARNING - Stopping agent due to traffic control
2025-01-13 23:40:45,063 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-13 23:40:45,442 - INFO - ------------------------------
2025-01-13 23:40:45,443 - INFO - BEGIN Runtime Completion Fn
2025-01-13 23:40:45,443 - INFO - ------------------------------
2025-01-13 23:40:45,443 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.1
2025-01-13 23:40:46,076 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:40:46,076 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-13 23:40:46,709 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:40:46,709 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-13 23:40:47,344 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:40:47,345 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 5a68f024987e6d16c2626a31bf653a2edddea579
2025-01-13 23:40:47,982 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "691fde0eda90",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/django/db/models/base.py b/django/db/models/base.py
index e3b14a41a0..232b2aa561 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -844,24 +844,28 @@ class Model(metaclass=ModelBase):
             pk_val = meta.pk.get_pk_value_on_save(self)
             setattr(self, meta.pk.attname, pk_val)
         pk_set = pk_val is not None
+        if pk_set and isinstance(pk_val, uuid.UUID):
+            pk_val = str(pk_val)
         if not pk_set and (force_update or update_fields):
             raise ValueError("Cannot force an update in save() with no primary key.")
+        if self._state.adding and pk_set and not force_insert:
+            from django.db import connections
+            pk_val_db = meta.pk.get_db_prep_value(pk_val, connection=connections[using])
+            if cls._base_manager.using(using).filter(pk=pk_val_db).exists():
+                self._state.adding = False
+                force_update = True
+                setattr(self, meta.pk.attname, pk_val_db)
         updated = False
-        # Skip an UPDATE when adding an instance and primary key has a default.
-        if (
-            not force_insert and
-            self._state.adding and
-            self._meta.pk.default and
-            self._meta.pk.default is not NOT_PROVIDED
-        ):
-            force_insert = True
+
         # If possible, try an UPDATE. If that doesn't update anything, do an INSERT.
         if pk_set and not force_insert:
             base_qs = cls._base_manager.using(using)
             values = [(f, None, (getattr(self, f.attname) if raw else f.pre_save(self, False)))
                       for f in non_pks]
             forced_update = update_fields or force_update
-            updated = self._do_update(base_qs, using, pk_val, values, update_fields,
+            from django.db import connections
+            pk_val_db = meta.pk.get_db_prep_value(pk_val, connection=connections[using])
+            updated = self._do_update(base_qs, using, pk_val_db, values, update_fields,
                                       forced_update)
             if force_update and not updated:
                 raise DatabaseError("Forced update did not affect any rows.")
diff --git a/scripts/repro_bug.py b/scripts/repro_bug.py
new file mode 100644
index 0000000000..602ff1f1f7
--- /dev/null
+++ b/scripts/repro_bug.py
@@ -0,0 +1,41 @@
+import django
+import uuid
+from django.conf import settings
+from django.db import models, connection
+
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY='secret',
+    INSTALLED_APPS=['__main__'],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:'
+        }
+    },
+    TIME_ZONE='UTC',
+    USE_TZ=True,
+)
+
+django.setup()
+
+class Sample(models.Model):
+    id = models.UUIDField(primary_key=True, default=uuid.uuid4)
+    name = models.CharField(blank=True, max_length=100)
+
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(Sample)
+
+Sample.objects.all().delete()
+
+s0 = Sample.objects.create()
+print('Created s0 with pk =', s0.pk)
+
+s1 = Sample(pk=s0.pk, name='Test 1')
+try:
+    s1.save()
+    print('Update done with s1')
+except Exception as e:
+    print('Encountered an error when saving s1:', e)
+
+print('All objects in DB =', list(Sample.objects.all()))
\ No newline at end of file
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:40:47,982 - INFO - ------------------------------
2025-01-13 23:40:47,982 - INFO - END Runtime Completion Fn
2025-01-13 23:40:47,982 - INFO - ------------------------------
2025-01-13 23:40:47,982 - INFO - Got git diff for instance django__django-12209:
--------
diff --git a/django/db/models/base.py b/django/db/models/base.py
index e3b14a41a0..232b2aa561 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -844,24 +844,28 @@ class Model(metaclass=ModelBase):
             pk_val = meta.pk.get_pk_value_on_save(self)
             setattr(self, meta.pk.attname, pk_val)
         pk_set = pk_val is not None
+        if pk_set and isinstance(pk_val, uuid.UUID):
+            pk_val = str(pk_val)
         if not pk_set and (force_update or update_fields):
             raise ValueError("Cannot force an update in save() with no primary key.")
+        if self._state.adding and pk_set and not force_insert:
+            from django.db import connections
+            pk_val_db = meta.pk.get_db_prep_value(pk_val, connection=connections[using])
+            if cls._base_manager.using(using).filter(pk=pk_val_db).exists():
+                self._state.adding = False
+                force_update = True
+                setattr(self, meta.pk.attname, pk_val_db)
         updated = False
-        # Skip an UPDATE when adding an instance and primary key has a default.
-        if (
-            not force_insert and
-            self._state.adding and
-            self._meta.pk.default and
-            self._meta.pk.default is not NOT_PROVIDED
-        ):
-            force_insert = True
+
         # If possible, try an UPDATE. If that doesn't update anything, do an INSERT.
         if pk_set and not force_insert:
             base_qs = cls._base_manager.using(using)
             values = [(f, None, (getattr(self, f.attname) if raw else f.pre_save(self, False)))
                       for f in non_pks]
             forced_update = update_fields or force_update
-            updated = self._do_update(base_qs, using, pk_val, values, update_fields,
+            from django.db import connections
+            pk_val_db = meta.pk.get_db_prep_value(pk_val, connection=connections[using])
+            updated = self._do_update(base_qs, using, pk_val_db, values, update_fields,
                                       forced_update)
             if force_update and not updated:
                 raise DatabaseError("Forced update did not affect any rows.")
diff --git a/scripts/repro_bug.py b/scripts/repro_bug.py
new file mode 100644
index 0000000000..602ff1f1f7
--- /dev/null
+++ b/scripts/repro_bug.py
@@ -0,0 +1,41 @@
+import django
+import uuid
+from django.conf import settings
+from django.db import models, connection
+
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY='secret',
+    INSTALLED_APPS=['__main__'],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:'
+        }
+    },
+    TIME_ZONE='UTC',
+    USE_TZ=True,
+)
+
+django.setup()
+
+class Sample(models.Model):
+    id = models.UUIDField(primary_key=True, default=uuid.uuid4)
+    name = models.CharField(blank=True, max_length=100)
+
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(Sample)
+
+Sample.objects.all().delete()
+
+s0 = Sample.objects.create()
+print('Created s0 with pk =', s0.pk)
+
+s1 = Sample(pk=s0.pk, name='Test 1')
+try:
+    s1.save()
+    print('Update done with s1')
+except Exception as e:
+    print('Encountered an error when saving s1:', e)
+
+print('All objects in DB =', list(Sample.objects.all()))
\ No newline at end of file
--------
2025-01-13 23:40:50,040 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.django_s_django-13212. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-13 23:40:50,040 - INFO - Logging LLM completions for instance django__django-13212 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/django__django-13212
