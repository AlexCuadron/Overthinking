2025-01-14 17:23:14,092 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_m3l2k9lfa2ia1zn0_qroup3d3os79ipoo
2025-01-14 17:25:42,884 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_m3l2k9lfa2ia1zn0_qroup3d3os79ipoo] build finished.
2025-01-14 17:25:42,901 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_m3l2k9lfa2ia1zn0_qroup3d3os79ipoo] with more generic tag [oh_v0.20.0_m3l2k9lfa2ia1zn0]
2025-01-14 17:25:42,903 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_m3l2k9lfa2ia1zn0_qroup3d3os79ipoo, oh_v0.20.0_m3l2k9lfa2ia1zn0] built successfully
2025-01-14 17:25:42,910 - INFO - [runtime f0888d27-4755-4921-8d8c-826f047651e4-8a78c25a681749dd] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_m3l2k9lfa2ia1zn0_qroup3d3os79ipoo
2025-01-14 17:25:43,675 - INFO - [runtime f0888d27-4755-4921-8d8c-826f047651e4-8a78c25a681749dd] Container started: openhands-runtime-f0888d27-4755-4921-8d8c-826f047651e4-8a78c25a681749dd. VSCode URL: None
2025-01-14 17:25:43,675 - INFO - [runtime f0888d27-4755-4921-8d8c-826f047651e4-8a78c25a681749dd] Waiting for client to become ready at http://localhost:33014...
2025-01-14 17:26:07,750 - INFO - [runtime f0888d27-4755-4921-8d8c-826f047651e4-8a78c25a681749dd] Runtime is ready.
2025-01-14 17:26:08,395 - INFO - ------------------------------
2025-01-14 17:26:08,395 - INFO - BEGIN Runtime Initialization Fn
2025-01-14 17:26:08,395 - INFO - ------------------------------
2025-01-14 17:26:08,395 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=pylint-dev__pylint-8898' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-14 17:26:09,027 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:26:09,028 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-14 17:26:09,659 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:26:09,659 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-14 17:26:10,286 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:26:10,295 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-14 17:26:10,921 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=pylint-dev__pylint-8898
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:26:10,921 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-14 17:26:11,550 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:26:11,550 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-14 17:26:11,550 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-14 17:26:12,179 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: pylint-dev__pylint__3.0
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:26:12,179 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pylint-dev__pylint__3.0
2025-01-14 17:26:12,807 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace/pylint-dev__pylint__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:26:12,807 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-14 17:26:13,436 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace/pylint-dev__pylint__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 1f8c4d9eb Add test result that was hidden
[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:26:13,438 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-14 17:26:14,068 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace/pylint-dev__pylint__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:26:14,068 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-14 17:26:14,695 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace/pylint-dev__pylint__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:26:14,696 - INFO - ------------------------------
2025-01-14 17:26:14,696 - INFO - END Runtime Initialization Fn
2025-01-14 17:26:14,696 - INFO - ------------------------------
2025-01-14 17:26:14,712 - INFO - [runtime f0888d27-4755-4921-8d8c-826f047651e4-8a78c25a681749dd] Found 0 local microagents.
2025-01-14 17:26:14,714 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-14 17:26:14,715 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-14 17:26:33,287 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-14 17:26:47,078 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-14 17:27:35,487 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-14 17:28:13,669 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-14 17:28:34,935 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-14 17:28:48,264 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-14 17:29:05,606 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-14 17:29:56,228 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-14 17:30:40,993 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-14 17:31:53,391 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-14 17:32:06,797 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-14 17:32:27,219 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-14 17:32:59,236 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-14 17:33:08,517 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-14 17:34:03,303 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-14 17:34:24,501 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-14 17:34:56,604 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-14 17:36:26,673 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-14 17:38:03,896 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-14 17:38:16,522 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-14 17:38:55,198 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-14 17:38:59,896 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-01-14 17:39:00,469 - INFO - ------------------------------
2025-01-14 17:39:00,469 - INFO - BEGIN Runtime Completion Fn
2025-01-14 17:39:00,469 - INFO - ------------------------------
2025-01-14 17:39:00,470 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pylint-dev__pylint__3.0
2025-01-14 17:39:01,101 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace/pylint-dev__pylint__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:39:01,101 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-14 17:39:01,747 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace/pylint-dev__pylint__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:39:01,748 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-14 17:39:02,374 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace/pylint-dev__pylint__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:39:02,375 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 1f8c4d9eb185c16a2c1d881c054f015e1c2eb334
2025-01-14 17:39:03,006 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "692f3ee1f28f",
  "working_dir": "/workspace/pylint-dev__pylint__3.0",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py
index 514bdcd81..64a8010f2 100644
--- a/pylint/config/config_initialization.py
+++ b/pylint/config/config_initialization.py
@@ -111,17 +111,18 @@ def _config_initialization(
         )

     # TODO 3.1: Change this to emit unknown-option-value
-    for exc_name in linter.config.overgeneral_exceptions:
-        if "." not in exc_name:
-            warnings.warn_explicit(
-                f"'{exc_name}' is not a proper value for the 'overgeneral-exceptions' option. "
-                f"Use fully qualified name (maybe 'builtins.{exc_name}' ?) instead. "
-                "This will cease to be checked at runtime in 3.1.0.",
-                category=UserWarning,
-                filename="pylint: Command line or configuration file",
-                lineno=1,
-                module="pylint",
-            )
+    if hasattr(linter.config, "overgeneral_exceptions"):
+        for exc_name in linter.config.overgeneral_exceptions:
+            if "." not in exc_name:
+                warnings.warn_explicit(
+                    f"'{exc_name}' is not a proper value for the 'overgeneral-exceptions' option. "
+                    f"Use fully qualified name (maybe 'builtins.{exc_name}' ?) instead. "
+                    "This will cease to be checked at runtime in 3.1.0.",
+                    category=UserWarning,
+                    filename="pylint: Command line or configuration file",
+                    lineno=1,
+                    module="pylint",
+                )

     linter._emit_stashed_messages()

diff --git a/pylint/utils/utils.py b/pylint/utils/utils.py
index fa7f7b92f..4bc7bd0c8 100644
--- a/pylint/utils/utils.py
+++ b/pylint/utils/utils.py
@@ -210,26 +210,17 @@ def register_plugins(linter: PyLinter, directory: str) -> None:


 def _splitstrip(string: str, sep: str = ",") -> list[str]:
-    """Return a list of stripped string by splitting the string given as
-    argument on `sep` (',' by default), empty strings are discarded.
+    """Return a list of stripped strings by splitting on "sep" (',' by default),
+    but extends the logic to handle quoted segments if the string is enclosed in
+    double quotes.

-    >>> _splitstrip('a, b, c   ,  4,,')
-    ['a', 'b', 'c', '4']
-    >>> _splitstrip('a')
-    ['a']
-    >>> _splitstrip('a,\nb,\nc,')
-    ['a', 'b', 'c']
-
-    :type string: str or unicode
-    :param string: a csv line
-
-    :type sep: str or unicode
-    :param sep: field separator, default to the comma (',')
-
-    :rtype: str or unicode
-    :return: the unquoted string (or the input string if it wasn't quoted)
+    Commas within quoted sections will no longer split the input.
+    Empty strings are discarded.
     """
-    return [word.strip() for word in string.split(sep) if word.strip()]
+    import csv
+    reader = csv.reader([string], delimiter=sep, quotechar='"')
+    tokens = next(reader)
+    return [t.strip() for t in tokens if t.strip()]


 def _unquote(string: str) -> str:
diff --git a/pylint_test.ini b/pylint_test.ini
new file mode 100644
index 000000000..d19cc5519
--- /dev/null
+++ b/pylint_test.ini
@@ -0,0 +1,2 @@
+[BASIC]
+bad-names-rgxs = "(foo{1,3})"
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 000000000..1fba304bf
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,25 @@
+import subprocess
+import sys
+
+CONFIG_CONTENT = """[BASIC]\nbad-names-rgxs = "(foo{1,3})"\n"""
+
+CODE_CONTENT = """def foo():\n    pass\n"""
+
+def main():
+    # Create an ini file to reproduce.
+    with open("pylint_test.ini", "w") as f:
+        f.write(CONFIG_CONTENT)
+
+    # Create a minimal Python file.
+    with open("test_foo.py", "w") as f:
+        f.write(CODE_CONTENT)
+
+    # Attempt to run pylint with the config.
+    cmd = [sys.executable, "-m", "pylint", "test_foo.py", "--rcfile=pylint_test.ini"]
+    proc = subprocess.run(cmd, capture_output=True, text=True)
+    print("STDOUT:\n", proc.stdout)
+    print("STDERR:\n", proc.stderr)
+    print("RETURN CODE:", proc.returncode)
+
+if __name__ == "__main__":
+    main()
diff --git a/test_foo.py b/test_foo.py
new file mode 100644
index 000000000..9332a2735
--- /dev/null
+++ b/test_foo.py
@@ -0,0 +1,2 @@
+def foo():
+    pass
[The command completed with exit code 0.]
[Current working directory: /workspace/pylint-dev__pylint__3.0]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:39:03,006 - INFO - ------------------------------
2025-01-14 17:39:03,006 - INFO - END Runtime Completion Fn
2025-01-14 17:39:03,006 - INFO - ------------------------------
2025-01-14 17:39:03,006 - INFO - Got git diff for instance pylint-dev__pylint-8898:
--------
diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py
index 514bdcd81..64a8010f2 100644
--- a/pylint/config/config_initialization.py
+++ b/pylint/config/config_initialization.py
@@ -111,17 +111,18 @@ def _config_initialization(
         )

     # TODO 3.1: Change this to emit unknown-option-value
-    for exc_name in linter.config.overgeneral_exceptions:
-        if "." not in exc_name:
-            warnings.warn_explicit(
-                f"'{exc_name}' is not a proper value for the 'overgeneral-exceptions' option. "
-                f"Use fully qualified name (maybe 'builtins.{exc_name}' ?) instead. "
-                "This will cease to be checked at runtime in 3.1.0.",
-                category=UserWarning,
-                filename="pylint: Command line or configuration file",
-                lineno=1,
-                module="pylint",
-            )
+    if hasattr(linter.config, "overgeneral_exceptions"):
+        for exc_name in linter.config.overgeneral_exceptions:
+            if "." not in exc_name:
+                warnings.warn_explicit(
+                    f"'{exc_name}' is not a proper value for the 'overgeneral-exceptions' option. "
+                    f"Use fully qualified name (maybe 'builtins.{exc_name}' ?) instead. "
+                    "This will cease to be checked at runtime in 3.1.0.",
+                    category=UserWarning,
+                    filename="pylint: Command line or configuration file",
+                    lineno=1,
+                    module="pylint",
+                )

     linter._emit_stashed_messages()

diff --git a/pylint/utils/utils.py b/pylint/utils/utils.py
index fa7f7b92f..4bc7bd0c8 100644
--- a/pylint/utils/utils.py
+++ b/pylint/utils/utils.py
@@ -210,26 +210,17 @@ def register_plugins(linter: PyLinter, directory: str) -> None:


 def _splitstrip(string: str, sep: str = ",") -> list[str]:
-    """Return a list of stripped string by splitting the string given as
-    argument on `sep` (',' by default), empty strings are discarded.
+    """Return a list of stripped strings by splitting on "sep" (',' by default),
+    but extends the logic to handle quoted segments if the string is enclosed in
+    double quotes.

-    >>> _splitstrip('a, b, c   ,  4,,')
-    ['a', 'b', 'c', '4']
-    >>> _splitstrip('a')
-    ['a']
-    >>> _splitstrip('a,\nb,\nc,')
-    ['a', 'b', 'c']
-
-    :type string: str or unicode
-    :param string: a csv line
-
-    :type sep: str or unicode
-    :param sep: field separator, default to the comma (',')
-
-    :rtype: str or unicode
-    :return: the unquoted string (or the input string if it wasn't quoted)
+    Commas within quoted sections will no longer split the input.
+    Empty strings are discarded.
     """
-    return [word.strip() for word in string.split(sep) if word.strip()]
+    import csv
+    reader = csv.reader([string], delimiter=sep, quotechar='"')
+    tokens = next(reader)
+    return [t.strip() for t in tokens if t.strip()]


 def _unquote(string: str) -> str:
diff --git a/pylint_test.ini b/pylint_test.ini
new file mode 100644
index 000000000..d19cc5519
--- /dev/null
+++ b/pylint_test.ini
@@ -0,0 +1,2 @@
+[BASIC]
+bad-names-rgxs = "(foo{1,3})"
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 000000000..1fba304bf
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,25 @@
+import subprocess
+import sys
+
+CONFIG_CONTENT = """[BASIC]\nbad-names-rgxs = "(foo{1,3})"\n"""
+
+CODE_CONTENT = """def foo():\n    pass\n"""
+
+def main():
+    # Create an ini file to reproduce.
+    with open("pylint_test.ini", "w") as f:
+        f.write(CONFIG_CONTENT)
+
+    # Create a minimal Python file.
+    with open("test_foo.py", "w") as f:
+        f.write(CODE_CONTENT)
+
+    # Attempt to run pylint with the config.
+    cmd = [sys.executable, "-m", "pylint", "test_foo.py", "--rcfile=pylint_test.ini"]
+    proc = subprocess.run(cmd, capture_output=True, text=True)
+    print("STDOUT:\n", proc.stdout)
+    print("STDERR:\n", proc.stderr)
+    print("RETURN CODE:", proc.returncode)
+
+if __name__ == "__main__":
+    main()
diff --git a/test_foo.py b/test_foo.py
new file mode 100644
index 000000000..9332a2735
--- /dev/null
+++ b/test_foo.py
@@ -0,0 +1,2 @@
+def foo():
+    pass
--------
2025-01-14 17:39:04,347 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.scikit-learn_s_scikit-learn-11310. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-14 17:39:04,347 - INFO - Logging LLM completions for instance scikit-learn__scikit-learn-11310 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/scikit-learn__scikit-learn-11310
