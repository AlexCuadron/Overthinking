2025-01-13 23:09:49,928 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_mq6d6hxn5s1ancw5_492h283ma6jm1v1e
2025-01-13 23:12:01,388 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_mq6d6hxn5s1ancw5_492h283ma6jm1v1e] build finished.
2025-01-13 23:12:01,401 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_mq6d6hxn5s1ancw5_492h283ma6jm1v1e] with more generic tag [oh_v0.20.0_mq6d6hxn5s1ancw5]
2025-01-13 23:12:01,403 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_mq6d6hxn5s1ancw5_492h283ma6jm1v1e, oh_v0.20.0_mq6d6hxn5s1ancw5] built successfully
2025-01-13 23:12:01,412 - INFO - [runtime 35293121-fdc6-4658-adb7-167aa09d933e-cf8387aa8db84bd7] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_mq6d6hxn5s1ancw5_492h283ma6jm1v1e
2025-01-13 23:12:01,968 - INFO - [runtime 35293121-fdc6-4658-adb7-167aa09d933e-cf8387aa8db84bd7] Container started: openhands-runtime-35293121-fdc6-4658-adb7-167aa09d933e-cf8387aa8db84bd7. VSCode URL: None
2025-01-13 23:12:01,968 - INFO - [runtime 35293121-fdc6-4658-adb7-167aa09d933e-cf8387aa8db84bd7] Waiting for client to become ready at http://localhost:31619...
2025-01-13 23:12:30,071 - INFO - [runtime 35293121-fdc6-4658-adb7-167aa09d933e-cf8387aa8db84bd7] Runtime is ready.
2025-01-13 23:12:30,718 - INFO - ------------------------------
2025-01-13 23:12:30,718 - INFO - BEGIN Runtime Initialization Fn
2025-01-13 23:12:30,718 - INFO - ------------------------------
2025-01-13 23:12:30,718 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-11820' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-13 23:12:31,349 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:31,350 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-13 23:12:31,981 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:31,981 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-13 23:12:32,613 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:32,623 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-13 23:12:33,256 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=django__django-11820
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:33,257 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-13 23:12:33,890 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:33,890 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-13 23:12:33,890 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-13 23:12:35,532 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__3.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:35,532 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.1
2025-01-13 23:12:36,161 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:36,162 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-13 23:12:37,299 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at c2678e4975 Fixed #27921 -- Clarified usage of make_aware() with is_dst argument.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:37,299 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-13 23:12:37,931 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:37,931 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-13 23:12:38,561 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:12:38,561 - INFO - ------------------------------
2025-01-13 23:12:38,561 - INFO - END Runtime Initialization Fn
2025-01-13 23:12:38,561 - INFO - ------------------------------
2025-01-13 23:12:38,580 - INFO - [runtime 35293121-fdc6-4658-adb7-167aa09d933e-cf8387aa8db84bd7] Found 0 local microagents.
2025-01-13 23:12:38,582 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-13 23:12:38,584 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-13 23:12:53,077 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-13 23:13:11,415 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-13 23:13:36,258 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-13 23:14:06,943 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-13 23:14:12,760 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-13 23:14:49,030 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-13 23:14:55,484 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-13 23:15:14,863 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-13 23:16:45,072 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-13 23:17:07,954 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-13 23:17:54,005 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-13 23:18:14,840 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-13 23:19:08,871 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-13 23:19:43,612 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-13 23:20:14,086 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-13 23:20:39,938 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-13 23:21:13,961 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-13 23:21:26,561 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-13 23:22:01,965 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-13 23:22:26,259 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-13 23:22:37,919 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-13 23:23:49,014 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-13 23:24:16,169 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-13 23:24:33,976 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-13 23:24:53,360 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-13 23:25:19,084 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-13 23:26:11,096 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-13 23:26:43,766 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-13 23:27:03,728 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-13 23:27:44,676 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-13 23:27:44,676 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-13 23:27:44,678 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-13 23:27:44,678 - WARNING - Stopping agent due to traffic control
2025-01-13 23:27:44,678 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-13 23:27:45,473 - INFO - ------------------------------
2025-01-13 23:27:45,473 - INFO - BEGIN Runtime Completion Fn
2025-01-13 23:27:45,473 - INFO - ------------------------------
2025-01-13 23:27:45,474 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__3.1
2025-01-13 23:27:46,105 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:27:46,105 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-13 23:27:46,734 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:27:46,735 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-13 23:27:47,364 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:27:47,365 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached c2678e49759e5c4c329bff0eeca2886267005d21
2025-01-13 23:27:47,999 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "6f0a944c5577",
  "working_dir": "/workspace/django__django__3.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 3ce711f3f1..ccb1ce3ba2 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -736,6 +736,11 @@ class Model(metaclass=ModelBase):
         elif not force_insert and deferred_fields and using == self._state.db:
             field_names = set()
             for field in self._meta.concrete_fields:
+        # Expand valid_fields to include <fk_name>__pk for direct foreign/one-to-one references
+        for field in opts.fields:
+            if field.is_relation and not (field.auto_created and not field.concrete):
+                valid_fields.add(field.name + '__pk')
+
                 if not field.primary_key and not hasattr(field, 'through'):
                     field_names.add(field.attname)
             loaded_fields = field_names.difference(deferred_fields)
@@ -1722,22 +1727,43 @@ class Model(metaclass=ModelBase):
                             )
                         )

-        # Skip ordering on pk. This is always a valid order_by field
-        # but is an alias and therefore won't be found by opts.get_field.
-        fields = {f for f in fields if f != 'pk'}
+        # Skip ordering on pk or <related>__pk. These are always valid order_by fields
+        # but are aliases and therefore won't be found by opts.get_field.
+        fields = {f for f in fields if f != 'pk' and not f.endswith('__pk')}

         # Check for invalid or nonexistent fields in ordering.
         invalid_fields = []

         # Any field name that is not present in field_names does not exist.
         # Also, ordering by m2m fields is not allowed.
+        valid_fields.update(
+            f.name + '__pk'
+            for f in opts.fields
+            if f.is_relation and not (f.auto_created and not f.concrete)
+        )
         opts = cls._meta
+        valid_fields.update(
+            f.name + '__pk'
+            for f in chain(opts.fields, opts.related_objects)
+            if f.is_relation and not (f.auto_created and not f.concrete)
+        )
+
         valid_fields = set(chain.from_iterable(
             (f.name, f.attname) if not (f.auto_created and not f.concrete) else (f.field.related_query_name(),)
             for f in chain(opts.fields, opts.related_objects)
         ))

+        valid_fields.update(
+            f.name + '__pk'
+            for f in chain(opts.fields, opts.related_objects)
+            if f.is_relation and not (f.auto_created and not f.concrete)
+        )
         invalid_fields.extend(fields - valid_fields)
+        valid_fields.update(
+            f.name + '__pk'
+            for f in chain(opts.fields, opts.related_objects)
+            if f.is_relation and not (f.auto_created and not f.concrete)
+        )

         for invalid_field in invalid_fields:
             errors.append(
diff --git a/repro.py b/repro.py
new file mode 100644
index 0000000000..14bcce65d4
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,28 @@
+import django
+from django.conf import settings
+from django.db import models
+
+settings.configure(
+    INSTALLED_APPS=["__main__"],
+    DATABASES={
+        "default": {
+            "ENGINE": "django.db.backends.sqlite3",
+            "NAME": ":memory:",
+        }
+    },
+)
+
+django.setup()
+
+class Option(models.Model):
+    name = models.CharField(max_length=50)
+
+class SomeModel(models.Model):
+    option = models.ForeignKey(Option, on_delete=models.CASCADE)
+
+    class Meta:
+        ordering = ["option__pk"]
+
+if __name__ == "__main__":
+    from django.core.management import call_command
+    call_command("check")
\ No newline at end of file
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__3.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-13 23:27:47,999 - INFO - ------------------------------
2025-01-13 23:27:47,999 - INFO - END Runtime Completion Fn
2025-01-13 23:27:47,999 - INFO - ------------------------------
2025-01-13 23:27:47,999 - INFO - Got git diff for instance django__django-11820:
--------
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 3ce711f3f1..ccb1ce3ba2 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -736,6 +736,11 @@ class Model(metaclass=ModelBase):
         elif not force_insert and deferred_fields and using == self._state.db:
             field_names = set()
             for field in self._meta.concrete_fields:
+        # Expand valid_fields to include <fk_name>__pk for direct foreign/one-to-one references
+        for field in opts.fields:
+            if field.is_relation and not (field.auto_created and not field.concrete):
+                valid_fields.add(field.name + '__pk')
+
                 if not field.primary_key and not hasattr(field, 'through'):
                     field_names.add(field.attname)
             loaded_fields = field_names.difference(deferred_fields)
@@ -1722,22 +1727,43 @@ class Model(metaclass=ModelBase):
                             )
                         )

-        # Skip ordering on pk. This is always a valid order_by field
-        # but is an alias and therefore won't be found by opts.get_field.
-        fields = {f for f in fields if f != 'pk'}
+        # Skip ordering on pk or <related>__pk. These are always valid order_by fields
+        # but are aliases and therefore won't be found by opts.get_field.
+        fields = {f for f in fields if f != 'pk' and not f.endswith('__pk')}

         # Check for invalid or nonexistent fields in ordering.
         invalid_fields = []

         # Any field name that is not present in field_names does not exist.
         # Also, ordering by m2m fields is not allowed.
+        valid_fields.update(
+            f.name + '__pk'
+            for f in opts.fields
+            if f.is_relation and not (f.auto_created and not f.concrete)
+        )
         opts = cls._meta
+        valid_fields.update(
+            f.name + '__pk'
+            for f in chain(opts.fields, opts.related_objects)
+            if f.is_relation and not (f.auto_created and not f.concrete)
+        )
+
         valid_fields = set(chain.from_iterable(
             (f.name, f.attname) if not (f.auto_created and not f.concrete) else (f.field.related_query_name(),)
             for f in chain(opts.fields, opts.related_objects)
         ))

+        valid_fields.update(
+            f.name + '__pk'
+            for f in chain(opts.fields, opts.related_objects)
+            if f.is_relation and not (f.auto_created and not f.concrete)
+        )
         invalid_fields.extend(fields - valid_fields)
+        valid_fields.update(
+            f.name + '__pk'
+            for f in chain(opts.fields, opts.related_objects)
+            if f.is_relation and not (f.auto_created and not f.concrete)
+        )

         for invalid_field in invalid_fields:
             errors.append(
diff --git a/repro.py b/repro.py
new file mode 100644
index 0000000000..14bcce65d4
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,28 @@
+import django
+from django.conf import settings
+from django.db import models
+
+settings.configure(
+    INSTALLED_APPS=["__main__"],
+    DATABASES={
+        "default": {
+            "ENGINE": "django.db.backends.sqlite3",
+            "NAME": ":memory:",
+        }
+    },
+)
+
+django.setup()
+
+class Option(models.Model):
+    name = models.CharField(max_length=50)
+
+class SomeModel(models.Model):
+    option = models.ForeignKey(Option, on_delete=models.CASCADE)
+
+    class Meta:
+        ordering = ["option__pk"]
+
+if __name__ == "__main__":
+    from django.core.management import call_command
+    call_command("check")
\ No newline at end of file
--------
2025-01-13 23:27:49,983 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.django_s_django-12754. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-13 23:27:49,984 - INFO - Logging LLM completions for instance django__django-12754 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/django__django-12754
