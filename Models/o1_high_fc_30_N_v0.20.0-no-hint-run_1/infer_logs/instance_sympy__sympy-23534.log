2025-01-14 19:06:27,532 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_qo5pbhle7vl0q7p6_qroup3d3os79ipoo
2025-01-14 19:08:28,588 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_qo5pbhle7vl0q7p6_qroup3d3os79ipoo] build finished.
2025-01-14 19:08:28,599 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_qo5pbhle7vl0q7p6_qroup3d3os79ipoo] with more generic tag [oh_v0.20.0_qo5pbhle7vl0q7p6]
2025-01-14 19:08:28,601 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_qo5pbhle7vl0q7p6_qroup3d3os79ipoo, oh_v0.20.0_qo5pbhle7vl0q7p6] built successfully
2025-01-14 19:08:28,638 - INFO - [runtime 65f64a30-eab8-4b03-aa40-4effc9894722-a463203224086fa2] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_qo5pbhle7vl0q7p6_qroup3d3os79ipoo
2025-01-14 19:08:29,871 - INFO - [runtime 65f64a30-eab8-4b03-aa40-4effc9894722-a463203224086fa2] Container started: openhands-runtime-65f64a30-eab8-4b03-aa40-4effc9894722-a463203224086fa2. VSCode URL: None
2025-01-14 19:08:29,871 - INFO - [runtime 65f64a30-eab8-4b03-aa40-4effc9894722-a463203224086fa2] Waiting for client to become ready at http://localhost:38990...
2025-01-14 19:08:53,947 - INFO - [runtime 65f64a30-eab8-4b03-aa40-4effc9894722-a463203224086fa2] Runtime is ready.
2025-01-14 19:08:54,585 - INFO - ------------------------------
2025-01-14 19:08:54,585 - INFO - BEGIN Runtime Initialization Fn
2025-01-14 19:08:54,585 - INFO - ------------------------------
2025-01-14 19:08:54,586 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sympy__sympy-23534' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-14 19:08:55,214 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:08:55,214 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-14 19:08:55,841 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:08:55,841 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-14 19:08:56,469 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:08:56,478 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-14 19:08:57,106 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=sympy__sympy-23534
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:08:57,107 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-14 19:08:57,735 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:08:57,735 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-14 19:08:57,735 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-14 19:08:58,866 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sympy__sympy__1.11
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:08:58,867 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sympy__sympy__1.11
2025-01-14 19:08:59,494 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace/sympy__sympy__1.11",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.11]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:08:59,495 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-14 19:09:00,129 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace/sympy__sympy__1.11",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 832c24fec1 Merge pull request #23522 from Upabjojr/matexpr_expand_fix
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.11]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:09:00,130 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-14 19:09:00,760 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace/sympy__sympy__1.11",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.11]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:09:00,760 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-14 19:09:01,388 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace/sympy__sympy__1.11",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.11]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:09:01,388 - INFO - ------------------------------
2025-01-14 19:09:01,388 - INFO - END Runtime Initialization Fn
2025-01-14 19:09:01,388 - INFO - ------------------------------
2025-01-14 19:09:01,402 - INFO - [runtime 65f64a30-eab8-4b03-aa40-4effc9894722-a463203224086fa2] Found 0 local microagents.
2025-01-14 19:09:01,404 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-14 19:09:01,405 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-14 19:09:24,988 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-14 19:09:43,756 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-14 19:10:01,461 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-14 19:10:28,429 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-14 19:11:02,533 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-14 19:12:30,717 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-14 19:13:01,965 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-14 19:14:42,981 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-14 19:15:51,762 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-14 19:18:45,684 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-14 19:19:52,977 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-14 19:20:23,482 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-14 19:21:16,802 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-14 19:21:33,585 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-14 19:22:56,924 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-14 19:23:54,540 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-14 19:23:59,131 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-14 19:24:28,854 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-14 19:24:59,093 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-14 19:25:31,163 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-14 19:25:41,653 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-14 19:25:58,427 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-14 19:26:39,720 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-14 19:26:44,747 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-14 19:27:14,113 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-14 19:28:23,669 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-14 19:29:10,195 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-14 19:29:51,971 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-14 19:30:03,762 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-14 19:30:19,179 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-14 19:30:19,179 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-14 19:30:19,180 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-14 19:30:19,180 - WARNING - Stopping agent due to traffic control
2025-01-14 19:30:19,180 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-14 19:30:19,672 - INFO - ------------------------------
2025-01-14 19:30:19,672 - INFO - BEGIN Runtime Completion Fn
2025-01-14 19:30:19,672 - INFO - ------------------------------
2025-01-14 19:30:19,673 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sympy__sympy__1.11
2025-01-14 19:30:20,299 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace/sympy__sympy__1.11",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.11]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:30:20,299 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-14 19:30:20,925 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace/sympy__sympy__1.11",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.11]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:30:20,925 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-14 19:30:21,550 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace/sympy__sympy__1.11",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.11]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:30:21,550 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 832c24fec1046eaa544a4cab4c69e3af3e651759
2025-01-14 19:30:22,178 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "91ef497f7037",
  "working_dir": "/workspace/sympy__sympy__1.11",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/reproduce_symbols_bug.py b/reproduce_symbols_bug.py
new file mode 100644
index 0000000000..ae63c2627b
--- /dev/null
+++ b/reproduce_symbols_bug.py
@@ -0,0 +1,5 @@
+import sys
+import sympy as smp
+
+q, u = smp.symbols(('q:2','u:2'), cls=smp.Function)
+print("Type of q[0]:", type(q[0]))
diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py
index f4a555c13f..2867e33dbf 100644
--- a/sympy/core/symbol.py
+++ b/sympy/core/symbol.py
@@ -583,6 +583,13 @@ def matches(self, expr, repl_dict=None, old=False):
 _range = _re.compile('([0-9]*:[0-9]+|[a-zA-Z]?:[a-zA-Z])')


+def _parse_prefix(s):
+    i = len(s)
+    while i > 0 and s[i-1].isdigit():
+        i -= 1
+    return s[:i], s[i:]
+
+
 def symbols(names, *, cls=Symbol, **args) -> Any:
     r"""
     Transform strings into instances of :class:`Symbol` class.
@@ -720,6 +727,8 @@ def literal(s):
             return s

         names = names.strip()
+        while names.startswith('(') and names.endswith(')') and len(names) > 2:
+            names = names[1:-1].strip()
         as_seq = names.endswith(',')
         if as_seq:
             names = names[:-1].rstrip()
@@ -731,12 +740,35 @@ def literal(s):
         if not all(n for n in names):
             raise ValueError('missing symbol between commas')
         # split on spaces
+def _strip_extra_parens(name: str) -> str:
+    # Repeatedly strip matching parentheses around the entire string
+    # as long as that does not empty the string.
+    s = name.strip()
+    while s.startswith("(") and s.endswith(")") and len(s) > 2:
+        s_inner = s[1:-1].strip()
+        # optional: check if the parentheses are balanced inside
+        # but for simplicity just remove the outermost pair
+        s = s_inner
+    return s
+
         for i in range(len(names) - 1, -1, -1):
             names[i: i + 1] = names[i].split()
+        for i in range(len(names)):
+            names[i] = _strip_extra_parens(names[i])
+

         seq = args.pop('seq', as_seq)

-        for name in names:
+        # strip a possible extra outer parentheses from each splitted name
+        stripped_names = []
+        for nm in names:
+            s = nm.strip()
+            while s.startswith('(') and s.endswith(')') and len(s) > 2:
+                s_inner = s[1:-1].strip()
+                s = s_inner
+            stripped_names.append(s)
+
+        for name in stripped_names:
             if not name:
                 raise ValueError('missing symbol')
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.11]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 19:30:22,178 - INFO - ------------------------------
2025-01-14 19:30:22,179 - INFO - END Runtime Completion Fn
2025-01-14 19:30:22,179 - INFO - ------------------------------
2025-01-14 19:30:22,179 - INFO - Got git diff for instance sympy__sympy-23534:
--------
diff --git a/reproduce_symbols_bug.py b/reproduce_symbols_bug.py
new file mode 100644
index 0000000000..ae63c2627b
--- /dev/null
+++ b/reproduce_symbols_bug.py
@@ -0,0 +1,5 @@
+import sys
+import sympy as smp
+
+q, u = smp.symbols(('q:2','u:2'), cls=smp.Function)
+print("Type of q[0]:", type(q[0]))
diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py
index f4a555c13f..2867e33dbf 100644
--- a/sympy/core/symbol.py
+++ b/sympy/core/symbol.py
@@ -583,6 +583,13 @@ def matches(self, expr, repl_dict=None, old=False):
 _range = _re.compile('([0-9]*:[0-9]+|[a-zA-Z]?:[a-zA-Z])')


+def _parse_prefix(s):
+    i = len(s)
+    while i > 0 and s[i-1].isdigit():
+        i -= 1
+    return s[:i], s[i:]
+
+
 def symbols(names, *, cls=Symbol, **args) -> Any:
     r"""
     Transform strings into instances of :class:`Symbol` class.
@@ -720,6 +727,8 @@ def literal(s):
             return s

         names = names.strip()
+        while names.startswith('(') and names.endswith(')') and len(names) > 2:
+            names = names[1:-1].strip()
         as_seq = names.endswith(',')
         if as_seq:
             names = names[:-1].rstrip()
@@ -731,12 +740,35 @@ def literal(s):
         if not all(n for n in names):
             raise ValueError('missing symbol between commas')
         # split on spaces
+def _strip_extra_parens(name: str) -> str:
+    # Repeatedly strip matching parentheses around the entire string
+    # as long as that does not empty the string.
+    s = name.strip()
+    while s.startswith("(") and s.endswith(")") and len(s) > 2:
+        s_inner = s[1:-1].strip()
+        # optional: check if the parentheses are balanced inside
+        # but for simplicity just remove the outermost pair
+        s = s_inner
+    return s
+
         for i in range(len(names) - 1, -1, -1):
             names[i: i + 1] = names[i].split()
+        for i in range(len(names)):
+            names[i] = _strip_extra_parens(names[i])
+

         seq = args.pop('seq', as_seq)

-        for name in names:
+        # strip a possible extra outer parentheses from each splitted name
+        stripped_names = []
+        for nm in names:
+            s = nm.strip()
+            while s.startswith('(') and s.endswith(')') and len(s) > 2:
+                s_inner = s[1:-1].strip()
+                s = s_inner
+            stripped_names.append(s)
+
+        for name in stripped_names:
             if not name:
                 raise ValueError('missing symbol')
--------
