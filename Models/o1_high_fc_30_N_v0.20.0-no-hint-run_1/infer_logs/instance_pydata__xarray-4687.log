2025-01-14 17:11:25,927 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_hqwjn9ebt8uo6gmq_qroup3d3os79ipoo
2025-01-14 17:16:20,168 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_hqwjn9ebt8uo6gmq_qroup3d3os79ipoo] build finished.
2025-01-14 17:16:20,180 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_hqwjn9ebt8uo6gmq_qroup3d3os79ipoo] with more generic tag [oh_v0.20.0_hqwjn9ebt8uo6gmq]
2025-01-14 17:16:20,182 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_hqwjn9ebt8uo6gmq_qroup3d3os79ipoo, oh_v0.20.0_hqwjn9ebt8uo6gmq] built successfully
2025-01-14 17:16:20,208 - INFO - [runtime 81ebbd39-ce7d-4cb3-9ca0-455f93821ad6-4cf33e6b7d683fb2] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_hqwjn9ebt8uo6gmq_qroup3d3os79ipoo
2025-01-14 17:16:21,120 - INFO - [runtime 81ebbd39-ce7d-4cb3-9ca0-455f93821ad6-4cf33e6b7d683fb2] Container started: openhands-runtime-81ebbd39-ce7d-4cb3-9ca0-455f93821ad6-4cf33e6b7d683fb2. VSCode URL: None
2025-01-14 17:16:21,121 - INFO - [runtime 81ebbd39-ce7d-4cb3-9ca0-455f93821ad6-4cf33e6b7d683fb2] Waiting for client to become ready at http://localhost:39569...
2025-01-14 17:16:51,232 - INFO - [runtime 81ebbd39-ce7d-4cb3-9ca0-455f93821ad6-4cf33e6b7d683fb2] Runtime is ready.
2025-01-14 17:16:51,875 - INFO - ------------------------------
2025-01-14 17:16:51,875 - INFO - BEGIN Runtime Initialization Fn
2025-01-14 17:16:51,875 - INFO - ------------------------------
2025-01-14 17:16:51,876 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=pydata__xarray-4687' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-14 17:16:52,507 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:52,507 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-14 17:16:53,134 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:53,135 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-14 17:16:53,761 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:53,771 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-14 17:16:54,402 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=pydata__xarray-4687
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:54,402 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-14 17:16:55,030 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:55,030 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-14 17:16:55,030 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-14 17:16:55,656 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: pydata__xarray__0.12
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:55,657 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pydata__xarray__0.12
2025-01-14 17:16:56,286 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:56,286 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-14 17:16:56,922 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at d3b6aa6d unpin dask again (#6171)
[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:56,923 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-14 17:16:57,559 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:57,560 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-14 17:16:58,189 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:58,189 - INFO - ------------------------------
2025-01-14 17:16:58,189 - INFO - END Runtime Initialization Fn
2025-01-14 17:16:58,189 - INFO - ------------------------------
2025-01-14 17:16:58,206 - INFO - [runtime 81ebbd39-ce7d-4cb3-9ca0-455f93821ad6-4cf33e6b7d683fb2] Found 0 local microagents.
2025-01-14 17:16:58,209 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-14 17:16:58,211 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-14 17:17:17,411 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-14 17:17:27,067 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-14 17:17:39,474 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-14 17:18:00,626 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-14 17:18:21,234 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-14 17:19:02,499 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-14 17:19:14,457 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-14 17:19:30,875 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-14 17:20:48,423 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-14 17:22:24,668 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-14 17:23:04,274 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-14 17:24:15,082 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-14 17:24:20,780 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-14 17:24:56,073 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-14 17:25:21,069 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-14 17:26:01,275 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-14 17:26:49,533 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-14 17:27:04,947 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-14 17:27:37,507 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-14 17:29:19,127 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-14 17:30:13,574 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-14 17:31:03,312 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-14 17:32:33,768 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-14 17:33:45,640 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-14 17:33:53,204 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-14 17:34:08,255 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-14 17:34:27,890 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-14 17:35:34,937 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-14 17:36:06,150 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-14 17:36:55,570 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-14 17:36:55,570 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-14 17:36:55,571 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-14 17:36:55,571 - WARNING - Stopping agent due to traffic control
2025-01-14 17:36:55,572 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-14 17:36:56,396 - INFO - ------------------------------
2025-01-14 17:36:56,396 - INFO - BEGIN Runtime Completion Fn
2025-01-14 17:36:56,396 - INFO - ------------------------------
2025-01-14 17:36:56,396 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pydata__xarray__0.12
2025-01-14 17:36:57,023 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:36:57,024 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-14 17:36:57,649 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:36:57,649 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-14 17:36:58,277 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:36:58,278 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached d3b6aa6d8b997df115a53c001d00222a0f92f63a
2025-01-14 17:36:58,908 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2c02976b72b",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/reproduce_where_attr_issue.py b/reproduce_where_attr_issue.py
new file mode 100644
index 00000000..a69bbb50
--- /dev/null
+++ b/reproduce_where_attr_issue.py
@@ -0,0 +1,18 @@
+import numpy as np
+import xarray as xr
+
+print('\n--- Reproduce where-attributes issue ---\n')
+
+data = xr.DataArray(
+    np.ones([10,10], dtype=np.int8),
+    dims=["x","y"],
+    name="original_data"
+)
+data.attrs["attr_1"] = "test1"
+data.attrs["attr_2"] = "test2"
+
+print("Original Data Attributes:", data.attrs)
+
+# Apply xr.where
+data2 = xr.where(data == 1, 5, 0)
+print("\nWhere output Data Attributes:", data2.attrs)
diff --git a/reproduce_where_attr_issue_modified.py b/reproduce_where_attr_issue_modified.py
new file mode 100644
index 00000000..681adc64
--- /dev/null
+++ b/reproduce_where_attr_issue_modified.py
@@ -0,0 +1,26 @@
+import numpy as np
+import xarray as xr
+
+print('\n--- Reproduce where-attributes issue (modified approach) ---\n')
+
+# Create a DataArray with some attributes
+data = xr.DataArray(
+    np.ones([10, 10], dtype=np.int8),
+    dims=["x","y"],
+    name="original_data"
+)
+data.attrs["attr_1"] = "test1"
+data.attrs["attr_2"] = "test2"
+print("Original Data Attributes:", data.attrs)
+
+# Instead of "data == 1" (which creates a brand new DataArray with no attrs),
+# create a boolean DataArray while preserving attributes.
+# One simple way is to copy the array and transform its values:
+cond = data.copy()            # replicate the array
+cond.data = (cond.data == 1)  # do the comparison in-place
+
+print("\nCondition's Attributes (after copy & in-place eq):", cond.attrs)
+
+# Now use xr.where with cond, providing 5 or 0.
+data2 = xr.where(cond, 5, 0)
+print("\nWhere output Data Attributes:", data2.attrs)
diff --git a/xarray/core/computation.py b/xarray/core/computation.py
index 9fe93c88..b001a158 100644
--- a/xarray/core/computation.py
+++ b/xarray/core/computation.py
@@ -1809,7 +1809,7 @@ def where(cond, x, y):
         equivalent methods
     """
     # alignment for three arguments is complicated, so don't support it yet
-    return apply_ufunc(
+    out = apply_ufunc(
         duck_array_ops.where,
         cond,
         x,
@@ -1818,6 +1818,20 @@ def where(cond, x, y):
         dataset_join="exact",
         dask="allowed",
     )
+    # preserve attributes from whichever of cond, x, or y is a DataArray
+    # prioritize x > y > cond if multiple have attributes.
+    attrs_to_copy = None
+    if hasattr(x, 'attrs') and x.attrs:
+        attrs_to_copy = x.attrs
+    elif hasattr(y, 'attrs') and y.attrs:
+        attrs_to_copy = y.attrs
+    elif hasattr(cond, 'attrs') and cond.attrs:
+        attrs_to_copy = cond.attrs
+
+    if attrs_to_copy is not None and hasattr(out, 'attrs'):
+        out.attrs = dict(attrs_to_copy)
+
+    return out


 def polyval(coord, coeffs, degree_dim="degree"):
diff --git a/xarray/core/ops.py b/xarray/core/ops.py
index 8265035a..3e37cfa2 100644
--- a/xarray/core/ops.py
+++ b/xarray/core/ops.py
@@ -173,7 +173,7 @@ def where_method(self, cond, other=dtypes.NA):

     # alignment for three arguments is complicated, so don't support it yet
     join = "inner" if other is dtypes.NA else "exact"
-    return apply_ufunc(
+    out = apply_ufunc(
         duck_array_ops.where_method,
         self,
         cond,
@@ -183,6 +183,9 @@ def where_method(self, cond, other=dtypes.NA):
         dask="allowed",
         keep_attrs=True,
     )
+    if hasattr(out, "attrs") and hasattr(self, "attrs"):
+        out.attrs = dict(self.attrs)
+    return out


 def _call_possibly_missing_method(arg, name, args, kwargs):
[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:36:58,908 - INFO - ------------------------------
2025-01-14 17:36:58,908 - INFO - END Runtime Completion Fn
2025-01-14 17:36:58,908 - INFO - ------------------------------
2025-01-14 17:36:58,909 - INFO - Got git diff for instance pydata__xarray-4687:
--------
diff --git a/reproduce_where_attr_issue.py b/reproduce_where_attr_issue.py
new file mode 100644
index 00000000..a69bbb50
--- /dev/null
+++ b/reproduce_where_attr_issue.py
@@ -0,0 +1,18 @@
+import numpy as np
+import xarray as xr
+
+print('\n--- Reproduce where-attributes issue ---\n')
+
+data = xr.DataArray(
+    np.ones([10,10], dtype=np.int8),
+    dims=["x","y"],
+    name="original_data"
+)
+data.attrs["attr_1"] = "test1"
+data.attrs["attr_2"] = "test2"
+
+print("Original Data Attributes:", data.attrs)
+
+# Apply xr.where
+data2 = xr.where(data == 1, 5, 0)
+print("\nWhere output Data Attributes:", data2.attrs)
diff --git a/reproduce_where_attr_issue_modified.py b/reproduce_where_attr_issue_modified.py
new file mode 100644
index 00000000..681adc64
--- /dev/null
+++ b/reproduce_where_attr_issue_modified.py
@@ -0,0 +1,26 @@
+import numpy as np
+import xarray as xr
+
+print('\n--- Reproduce where-attributes issue (modified approach) ---\n')
+
+# Create a DataArray with some attributes
+data = xr.DataArray(
+    np.ones([10, 10], dtype=np.int8),
+    dims=["x","y"],
+    name="original_data"
+)
+data.attrs["attr_1"] = "test1"
+data.attrs["attr_2"] = "test2"
+print("Original Data Attributes:", data.attrs)
+
+# Instead of "data == 1" (which creates a brand new DataArray with no attrs),
+# create a boolean DataArray while preserving attributes.
+# One simple way is to copy the array and transform its values:
+cond = data.copy()            # replicate the array
+cond.data = (cond.data == 1)  # do the comparison in-place
+
+print("\nCondition's Attributes (after copy & in-place eq):", cond.attrs)
+
+# Now use xr.where with cond, providing 5 or 0.
+data2 = xr.where(cond, 5, 0)
+print("\nWhere output Data Attributes:", data2.attrs)
diff --git a/xarray/core/computation.py b/xarray/core/computation.py
index 9fe93c88..b001a158 100644
--- a/xarray/core/computation.py
+++ b/xarray/core/computation.py
@@ -1809,7 +1809,7 @@ def where(cond, x, y):
         equivalent methods
     """
     # alignment for three arguments is complicated, so don't support it yet
-    return apply_ufunc(
+    out = apply_ufunc(
         duck_array_ops.where,
         cond,
         x,
@@ -1818,6 +1818,20 @@ def where(cond, x, y):
         dataset_join="exact",
         dask="allowed",
     )
+    # preserve attributes from whichever of cond, x, or y is a DataArray
+    # prioritize x > y > cond if multiple have attributes.
+    attrs_to_copy = None
+    if hasattr(x, 'attrs') and x.attrs:
+        attrs_to_copy = x.attrs
+    elif hasattr(y, 'attrs') and y.attrs:
+        attrs_to_copy = y.attrs
+    elif hasattr(cond, 'attrs') and cond.attrs:
+        attrs_to_copy = cond.attrs
+
+    if attrs_to_copy is not None and hasattr(out, 'attrs'):
+        out.attrs = dict(attrs_to_copy)
+
+    return out


 def polyval(coord, coeffs, degree_dim="degree"):
diff --git a/xarray/core/ops.py b/xarray/core/ops.py
index 8265035a..3e37cfa2 100644
--- a/xarray/core/ops.py
+++ b/xarray/core/ops.py
@@ -173,7 +173,7 @@ def where_method(self, cond, other=dtypes.NA):

     # alignment for three arguments is complicated, so don't support it yet
     join = "inner" if other is dtypes.NA else "exact"
-    return apply_ufunc(
+    out = apply_ufunc(
         duck_array_ops.where_method,
         self,
         cond,
@@ -183,6 +183,9 @@ def where_method(self, cond, other=dtypes.NA):
         dask="allowed",
         keep_attrs=True,
     )
+    if hasattr(out, "attrs") and hasattr(self, "attrs"):
+        out.attrs = dict(self.attrs)
+    return out


 def _call_possibly_missing_method(arg, name, args, kwargs):
--------
2025-01-14 17:36:59,559 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.pytest-dev_s_pytest-7571. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-14 17:36:59,559 - INFO - Logging LLM completions for instance pytest-dev__pytest-7571 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/pytest-dev__pytest-7571
