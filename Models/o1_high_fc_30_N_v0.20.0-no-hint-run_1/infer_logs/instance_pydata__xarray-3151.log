2025-01-14 17:11:25,927 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_5zs8tavh4axcen5v_qroup3d3os79ipoo
2025-01-14 17:16:19,928 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_5zs8tavh4axcen5v_qroup3d3os79ipoo] build finished.
2025-01-14 17:16:19,967 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_5zs8tavh4axcen5v_qroup3d3os79ipoo] with more generic tag [oh_v0.20.0_5zs8tavh4axcen5v]
2025-01-14 17:16:19,981 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_5zs8tavh4axcen5v_qroup3d3os79ipoo, oh_v0.20.0_5zs8tavh4axcen5v] built successfully
2025-01-14 17:16:19,998 - INFO - [runtime dde63b0f-2632-405a-ada4-f61f61abc15a-e4d2db6882a3045d] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_5zs8tavh4axcen5v_qroup3d3os79ipoo
2025-01-14 17:16:20,842 - INFO - [runtime dde63b0f-2632-405a-ada4-f61f61abc15a-e4d2db6882a3045d] Container started: openhands-runtime-dde63b0f-2632-405a-ada4-f61f61abc15a-e4d2db6882a3045d. VSCode URL: None
2025-01-14 17:16:20,842 - INFO - [runtime dde63b0f-2632-405a-ada4-f61f61abc15a-e4d2db6882a3045d] Waiting for client to become ready at http://localhost:37958...
2025-01-14 17:16:50,940 - INFO - [runtime dde63b0f-2632-405a-ada4-f61f61abc15a-e4d2db6882a3045d] Runtime is ready.
2025-01-14 17:16:51,078 - INFO - ------------------------------
2025-01-14 17:16:51,078 - INFO - BEGIN Runtime Initialization Fn
2025-01-14 17:16:51,078 - INFO - ------------------------------
2025-01-14 17:16:51,078 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=pydata__xarray-3151' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-14 17:16:51,705 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:51,706 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-14 17:16:52,334 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:52,334 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-14 17:16:52,960 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:52,970 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-14 17:16:53,596 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=pydata__xarray-3151
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:53,597 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-14 17:16:54,224 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:54,225 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-14 17:16:54,225 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-14 17:16:54,861 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: pydata__xarray__0.12
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:54,861 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pydata__xarray__0.12
2025-01-14 17:16:55,488 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:55,488 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-14 17:16:56,115 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 118f4d99 missing 'about' field (#3146)
[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:56,115 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-14 17:16:56,742 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:56,743 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-14 17:16:57,368 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:16:57,368 - INFO - ------------------------------
2025-01-14 17:16:57,368 - INFO - END Runtime Initialization Fn
2025-01-14 17:16:57,368 - INFO - ------------------------------
2025-01-14 17:16:57,384 - INFO - [runtime dde63b0f-2632-405a-ada4-f61f61abc15a-e4d2db6882a3045d] Found 0 local microagents.
2025-01-14 17:16:57,387 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-14 17:16:57,388 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-14 17:17:28,681 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-14 17:17:55,561 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-14 17:18:05,709 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-14 17:18:51,544 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-14 17:19:17,175 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-14 17:20:09,249 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-14 17:22:55,357 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-14 17:23:05,044 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-14 17:23:09,877 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-01-14 17:23:10,749 - INFO - ------------------------------
2025-01-14 17:23:10,749 - INFO - BEGIN Runtime Completion Fn
2025-01-14 17:23:10,749 - INFO - ------------------------------
2025-01-14 17:23:10,749 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/pydata__xarray__0.12
2025-01-14 17:23:11,381 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:23:11,381 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-14 17:23:12,009 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:23:12,009 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-14 17:23:12,638 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:23:12,638 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 118f4d996e7711c9aced916e6049af9f28d5ec66
2025-01-14 17:23:13,271 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d2bdfb32d479",
  "working_dir": "/workspace/pydata__xarray__0.12",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/repro_nonmonotonic.py b/repro_nonmonotonic.py
new file mode 100644
index 00000000..bf014920
--- /dev/null
+++ b/repro_nonmonotonic.py
@@ -0,0 +1,36 @@
+import xarray as xr
+import numpy as np
+
+yCoord = ['a', 'c', 'b']
+
+ds1 = xr.Dataset(
+    data_vars=dict(
+        data=(['x', 'y'], np.random.rand(3, 3))
+    ),
+    coords=dict(
+        x=[1, 2, 3],
+        y=yCoord
+    )
+)
+
+ds2 = xr.Dataset(
+    data_vars=dict(
+        data=(['x', 'y'], np.random.rand(4, 3))
+    ),
+    coords = dict(
+        x=[4, 5, 6, 7],
+        y=yCoord
+    )
+)
+
+print('\n--- ds1 ---')
+print(ds1)
+print('\n--- ds2 ---')
+print(ds2)
+
+try:
+    ds3 = xr.combine_by_coords((ds1, ds2))
+    print('\n--- ds3 ---')
+    print(ds3)
+except ValueError as e:
+    print('\nERROR RAISED:', e)
\ No newline at end of file
diff --git a/xarray/core/combine.py b/xarray/core/combine.py
index 37ae903b..3dd47bb2 100644
--- a/xarray/core/combine.py
+++ b/xarray/core/combine.py
@@ -503,12 +503,28 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all',
         # Check the overall coordinates are monotonically increasing
         for dim in concatenated.dims:
             if dim in concatenated:
-                indexes = concatenated.indexes.get(dim)
-                if not (indexes.is_monotonic_increasing
-                        or indexes.is_monotonic_decreasing):
-                    raise ValueError("Resulting object does not have monotonic"
-                                     " global indexes along dimension {}"
-                                     .format(dim))
+                # check if coordinate is identical across all sub-datasets
+                all_identical = True
+                try:
+                    first_index = None
+                    for ds_test in datasets_with_same_vars:
+                        if dim not in ds_test.coords:
+                            continue
+                        current_index = ds_test.coords[dim].to_index()
+                        if first_index is None:
+                            first_index = current_index
+                        elif not current_index.equals(first_index):
+                            all_identical = False
+                            break
+                except:
+                    all_identical = False
+                if not all_identical:
+                    indexes = concatenated.indexes.get(dim)
+                    if not (indexes.is_monotonic_increasing
+                            or indexes.is_monotonic_decreasing):
+                        raise ValueError("Resulting object does not have monotonic"
+                                         " global indexes along dimension {}"
+                                         .format(dim))
         concatenated_grouped_by_data_vars.append(concatenated)

     return merge(concatenated_grouped_by_data_vars, compat=compat,
[The command completed with exit code 0.]
[Current working directory: /workspace/pydata__xarray__0.12]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-14 17:23:13,272 - INFO - ------------------------------
2025-01-14 17:23:13,272 - INFO - END Runtime Completion Fn
2025-01-14 17:23:13,272 - INFO - ------------------------------
2025-01-14 17:23:13,272 - INFO - Got git diff for instance pydata__xarray-3151:
--------
diff --git a/repro_nonmonotonic.py b/repro_nonmonotonic.py
new file mode 100644
index 00000000..bf014920
--- /dev/null
+++ b/repro_nonmonotonic.py
@@ -0,0 +1,36 @@
+import xarray as xr
+import numpy as np
+
+yCoord = ['a', 'c', 'b']
+
+ds1 = xr.Dataset(
+    data_vars=dict(
+        data=(['x', 'y'], np.random.rand(3, 3))
+    ),
+    coords=dict(
+        x=[1, 2, 3],
+        y=yCoord
+    )
+)
+
+ds2 = xr.Dataset(
+    data_vars=dict(
+        data=(['x', 'y'], np.random.rand(4, 3))
+    ),
+    coords = dict(
+        x=[4, 5, 6, 7],
+        y=yCoord
+    )
+)
+
+print('\n--- ds1 ---')
+print(ds1)
+print('\n--- ds2 ---')
+print(ds2)
+
+try:
+    ds3 = xr.combine_by_coords((ds1, ds2))
+    print('\n--- ds3 ---')
+    print(ds3)
+except ValueError as e:
+    print('\nERROR RAISED:', e)
\ No newline at end of file
diff --git a/xarray/core/combine.py b/xarray/core/combine.py
index 37ae903b..3dd47bb2 100644
--- a/xarray/core/combine.py
+++ b/xarray/core/combine.py
@@ -503,12 +503,28 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all',
         # Check the overall coordinates are monotonically increasing
         for dim in concatenated.dims:
             if dim in concatenated:
-                indexes = concatenated.indexes.get(dim)
-                if not (indexes.is_monotonic_increasing
-                        or indexes.is_monotonic_decreasing):
-                    raise ValueError("Resulting object does not have monotonic"
-                                     " global indexes along dimension {}"
-                                     .format(dim))
+                # check if coordinate is identical across all sub-datasets
+                all_identical = True
+                try:
+                    first_index = None
+                    for ds_test in datasets_with_same_vars:
+                        if dim not in ds_test.coords:
+                            continue
+                        current_index = ds_test.coords[dim].to_index()
+                        if first_index is None:
+                            first_index = current_index
+                        elif not current_index.equals(first_index):
+                            all_identical = False
+                            break
+                except:
+                    all_identical = False
+                if not all_identical:
+                    indexes = concatenated.indexes.get(dim)
+                    if not (indexes.is_monotonic_increasing
+                            or indexes.is_monotonic_decreasing):
+                        raise ValueError("Resulting object does not have monotonic"
+                                         " global indexes along dimension {}"
+                                         .format(dim))
         concatenated_grouped_by_data_vars.append(concatenated)

     return merge(concatenated_grouped_by_data_vars, compat=compat,
--------
2025-01-14 17:23:14,062 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.pylint-dev_s_pylint-8898. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-14 17:23:14,062 - INFO - Logging LLM completions for instance pylint-dev__pylint-8898 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/pylint-dev__pylint-8898
