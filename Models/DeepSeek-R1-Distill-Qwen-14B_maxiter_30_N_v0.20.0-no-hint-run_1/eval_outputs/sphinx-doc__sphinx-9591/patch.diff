diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py
index af4b47bb0..fbe6d969c 100644
--- a/sphinx/ext/autodoc/typehints.py
+++ b/sphinx/ext/autodoc/typehints.py
@@ -24,15 +24,23 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any,
                      options: Dict, args: str, retann: str) -> None:
     """Record type hints to env object."""
     try:
+        annotations = app.env.temp_data.setdefault('annotations', {})
+        annotation = annotations.setdefault(name, OrderedDict())
+
         if callable(obj):
-            annotations = app.env.temp_data.setdefault('annotations', {})
-            annotation = annotations.setdefault(name, OrderedDict())
             sig = inspect.signature(obj, type_aliases=app.config.autodoc_type_aliases)
             for param in sig.parameters.values():
                 if param.annotation is not param.empty:
                     annotation[param.name] = typing.stringify(param.annotation)
             if sig.return_annotation is not sig.empty:
                 annotation['return'] = typing.stringify(sig.return_annotation)
+        elif isinstance(obj, property):
+            # Handle properties by accessing their underlying function
+            func = obj.fget
+            if func:
+                sig = inspect.signature(func, type_aliases=app.config.autodoc_type_aliases)
+                if sig.return_annotation is not sig.empty:
+                    annotation['return'] = typing.stringify(sig.return_annotation)
     except (TypeError, ValueError):
         pass
