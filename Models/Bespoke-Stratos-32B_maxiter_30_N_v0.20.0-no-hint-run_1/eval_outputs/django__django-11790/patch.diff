diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py
index a0cfed0995..47fc27308b 100644
--- a/django/contrib/auth/forms.py
+++ b/django/contrib/auth/forms.py
@@ -62,11 +62,15 @@ class UsernameField(forms.CharField):
         return unicodedata.normalize('NFKC', super().to_python(value))

     def widget_attrs(self, widget):
-        return {
-            **super().widget_attrs(widget),
+        print("widget_attrs called")
+    attrs = super().widget_attrs(widget)
+        attrs.update({
             'autocapitalize': 'none',
             'autocomplete': 'username',
-        }
+        })
+        if self.max_length is not None:
+            attrs['maxlength'] = str(self.max_length)
+        return attrs


 class UserCreationForm(forms.ModelForm):
@@ -192,6 +196,9 @@ class AuthenticationForm(forms.Form):
         # Set the max length and label for the "username" field.
         self.username_field = UserModel._meta.get_field(UserModel.USERNAME_FIELD)
         self.fields['username'].max_length = self.username_field.max_length or 254
+        self.fields['username'].widget.attrs['maxlength'] = str(self.fields['username'].max_length)
+        self.fields['username'].widget.attrs['maxlength'] = str(self.fields['username'].max_length)
+self.fields['username'].widget.attrs['maxlength'] = str(self.fields['username'].max_length)
         if self.fields['username'].label is None:
             self.fields['username'].label = capfirst(self.username_field.verbose_name)

diff --git a/test_authentication_form.py b/test_authentication_form.py
new file mode 100644
index 0000000000..4f781d4b33
--- /dev/null
+++ b/test_authentication_form.py
@@ -0,0 +1,36 @@
+import django
+from django.conf import settings
+
+settings.configure(
+    SECRET_KEY='dummy-secret-key',
+    INSTALLED_APPS=['django.contrib.auth', 'django.contrib.contenttypes'],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    AUTH_USER_MODEL='auth.User',
+)
+
+django.setup()
+
+from django import forms
+from django.contrib.auth.forms import AuthenticationForm
+from django.contrib.auth.models import User
+from django.template import Context, Template
+
+# No need for a dummy User model instance
+
+# Create an instance of AuthenticationForm
+form = AuthenticationForm()
+print(f"Username field max_length: {form.fields['username'].max_length}")
+
+# Render the form as HTML
+html = form.as_p()
+
+# Check if the username input has maxlength attribute
+if 'maxlength' in html:
+    print("Maxlength attribute is present.")
+else:
+    print(html)
\ No newline at end of file
