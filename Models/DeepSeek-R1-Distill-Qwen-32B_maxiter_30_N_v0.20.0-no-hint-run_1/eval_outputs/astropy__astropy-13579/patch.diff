diff --git a/test_world_to_pixel.py b/test_world_to_pixel.py
new file mode 100644
index 0000000000..bdf06a9156
--- /dev/null
+++ b/test_world_to_pixel.py
@@ -0,0 +1,43 @@
+import numpy as np
+import astropy.wcs
+from astropy.coordinates import SkyCoord
+import astropy.units as u
+
+wcs_header = {
+    'WCSAXES': 3,
+    'CRPIX1': 50.5,
+    'CRPIX2': 12.5,
+    'CRPIX3': 1.0,
+    'PC1_1': 0.0,
+    'PC1_2': -1.0,
+    'PC1_3': 0.0,
+    'PC2_1': 1.0,
+    'PC2_2': 0.0,
+    'PC2_3': -1.0,
+    'CDELT1': 5,
+    'CDELT2': 5,
+    'CDELT3': 0.055,
+    'CUNIT1': 'arcsec',
+    'CUNIT2': 'arcsec',
+    'CUNIT3': 'Angstrom',
+    'CTYPE1': 'HPLN-TAN',
+    'CTYPE2': 'HPLT-TAN',
+    'CTYPE3': 'WAVE',
+    'CRVAL1': 0.0,
+    'CRVAL2': 0.0,
+    'CRVAL3': 1.05,
+}
+
+fits_wcs = astropy.wcs.WCS(header=wcs_header)
+
+pt = SkyCoord(Tx=0*u.arcsec, Ty=0*u.arcsec, frame=astropy.wcs.utils.wcs_to_celestial_frame(fits_wcs))
+
+# Test with full WCS
+full_result = fits_wcs.world_to_pixel(pt, 1.05*u.angstrom)
+print("Full WCS result:", full_result)
+
+# Test with sliced WCS
+ll_sliced_wcs = astropy.wcs.wcsapi.SlicedLowLevelWCS(fits_wcs, 0)
+hl_sliced_wcs = astropy.wcs.wcsapi.HighLevelWCSWrapper(ll_sliced_wcs)
+sliced_result = hl_sliced_wcs.world_to_pixel(pt)
+print("Sliced WCS result:", sliced_result)
\ No newline at end of file
