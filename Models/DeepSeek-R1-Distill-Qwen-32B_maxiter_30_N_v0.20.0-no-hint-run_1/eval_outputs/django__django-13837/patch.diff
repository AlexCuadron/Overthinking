diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py
index b8efb9f881..c414a33c88 100644
--- a/django/utils/autoreload.py
+++ b/django/utils/autoreload.py
@@ -216,15 +216,23 @@ def get_child_arguments():
     executable is reported to not have the .exe extension which can cause bugs
     on reloading.
     """
-    import django.__main__
-    django_main_path = Path(django.__main__.__file__)
-    py_script = Path(sys.argv[0])
-
     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]
-    if py_script == django_main_path:
-        # The server was started with `python -m django runserver`.
-        args += ['-m', 'django']
-        args += sys.argv[1:]
+    try:
+        if hasattr(sys.modules['__main__'], '__spec__') and sys.modules['__main__'].__spec__ is not None:
+            # The server was started with `python -m <package> runserver`
+            package = sys.modules['__main__'].__spec__.parent
+            args += ['-m', package]
+            args += sys.argv[1:]
+        else:
+            py_script = Path(sys.argv[0])
+            if not py_script.exists():
+                exe_entrypoint = py_script.with_suffix('.exe')
+                if exe_entrypoint.exists():
+                    return [str(exe_entrypoint), *sys.argv[1:]]
+                script_entrypoint = py_script.with_name('%s-script.py' % py_script.name)
+                if script_entrypoint.exists():
+                    return [*args, str(script_entrypoint), *sys.argv[1:]]
+                raise RuntimeError('Script %s does not exist.' % py_script)
     elif not py_script.exists():
         # sys.argv[0] may not exist for several reasons on Windows.
         # It may exist with a .exe extension or have a -script.py suffix.
