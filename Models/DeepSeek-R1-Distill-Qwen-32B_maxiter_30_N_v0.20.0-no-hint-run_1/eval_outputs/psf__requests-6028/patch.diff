diff --git a/requests/adapters.py b/requests/adapters.py
index fe22ff45..099d40fe 100644
--- a/requests/adapters.py
+++ b/requests/adapters.py
@@ -62,6 +62,203 @@ class BaseAdapter(object):
     def send(self, request, stream=False, timeout=None, verify=True,
              cert=None, proxies=None):
         """Sends PreparedRequest object. Returns Response object.
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Extract proxy authentication credentials
+        if proxies:
+            proxy_url = proxies.get(request.url.lower())
+            if proxy_url:
+                proxy_auth = get_auth_from_url(proxy_url)
+                if proxy_auth:
+                    # Set the Authorization header if not already present
+                    if 'Authorization' not in request.headers:
+                        request.headers['Authorization'] = _basic_auth_str(*proxy_auth)
+
+        # Ensure Authorization header is set for proxy authentication
+        if proxies:
+            proxy_auth = get_auth_from_url(proxies.get(request.url.lower()))
+            if proxy_auth:
+                if 'Authorization' not in request.headers:
+                    request.headers['Authorization'] = _basic_auth_str(*proxy_auth)

         :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
         :param stream: (optional) Whether to stream the request content.
