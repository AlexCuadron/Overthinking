diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index 2fedef62fc..4a54861a67 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -326,6 +326,9 @@ class SQLCompiler:
                 if isinstance(expr, Value):
                     # output_field must be resolved for constants.
                     expr = Cast(expr, expr.output_field)
+                # Check if the field is a DecimalField and wrap with CAST
+                if isinstance(expr, Window) and isinstance(expr.expression.output_field, models.DecimalField):
+                    expr = Cast(expr, expr.expression.output_field)
                 order_by.append((OrderBy(expr, descending=descending), False))
                 continue

diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..ca026d1301
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,21 @@
+from django.db import models
+from django.db.models import F
+from django.db.models.functions import Lag
+from django.db.models import Window
+
+class LagTest(models.Model):
+    modified = models.DateField()
+    data = models.FloatField()
+    amount = models.DecimalField(decimal_places=4, max_digits=7)
+
+def reproduce_error():
+    w = Window(
+        expression=Lag('amount', 7),
+        partition_by=[F('modified')],
+        order_by=F('modified').asc()
+    )
+    q = LagTest.objects.all().annotate(w=w)
+    print(q.query)
+
+if __name__ == '__main__':
+    reproduce_error()
\ No newline at end of file
