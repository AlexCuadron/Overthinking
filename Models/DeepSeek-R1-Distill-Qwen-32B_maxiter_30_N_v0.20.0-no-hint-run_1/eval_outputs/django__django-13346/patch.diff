diff --git a/django__django__3.2/settings.py b/django__django__3.2/settings.py
new file mode 100644
index 0000000000..890e1e62f6
--- /dev/null
+++ b/django__django__3.2/settings.py
@@ -0,0 +1,80 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+SECRET_KEY = 'django-insecure-your-secret-key'
+
+DEBUG = True
+
+ALLOWED_HOSTS = []
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'django__django__3.2.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'django__django__3.2.wsgi.application'
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+AUTH_PASSWORD_VALIDATORS = [
+    {
+        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
+    },
+]
+
+LANGUAGE_CODE = 'en-us'
+TIME_ZONE = 'UTC'
+USE_I18N = True
+USE_L10N = True
+USE_TZ = True
+
+STATIC_URL = '/static/'
+
+DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
\ No newline at end of file
diff --git a/tests/jsonfield_in_lookup_test.py b/tests/jsonfield_in_lookup_test.py
new file mode 100644
index 0000000000..da1c7c36fa
--- /dev/null
+++ b/tests/jsonfield_in_lookup_test.py
@@ -0,0 +1,39 @@
+import sys
+import os
+
+# Add the current directory to Python path
+sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
+
+# Set Django settings module
+os.environ['DJANGO_SETTINGS_MODULE'] = 'django__django__3_2.settings'
+
+# Import Django and setup
+import django
+django.setup()
+
+from django.db import models
+from django.test import TransactionTestCase
+
+class TestModel(models.Model):
+    data = models.JSONField()
+
+class JSONFieldInLookupTest(TransactionTestCase):
+    def setUp(self):
+        self.create_test_data()
+
+    def create_test_data(self):
+        TestModel.objects.create(data={ 'key': 0 })
+        TestModel.objects.create(data={ 'key': 1 })
+        TestModel.objects.create(data={ 'key': 2 })
+
+    def test_in_lookup(self):
+        # Test __in lookup
+        queryset = TestModel.objects.filter(data__key__in=[0, 1])
+        self.assertEqual(queryset.count(), 2)
+
+        # Test direct lookup
+        queryset = TestModel.objects.filter(data__key=0)
+        self.assertEqual(queryset.count(), 1)
+
+    def tearDown(self):
+        TestModel.objects.all().delete()
\ No newline at end of file
