diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py
index cd3aab43ad..162f16715b 100644
--- a/django/db/migrations/operations/fields.py
+++ b/django/db/migrations/operations/fields.py
@@ -247,6 +247,11 @@ class AlterField(FieldOperation):
         return "alter_%s_%s" % (self.model_name_lower, self.name_lower)

     def reduce(self, operation, app_label):
+        # Check if the next operation is also an AlterField on the same field
+        if isinstance(operation, AlterField) and self.is_same_field_operation(operation):
+            # Merge by returning only the last AlterField operation
+            return [operation]
+        # Check for RemoveField or RenameField
         if isinstance(operation, RemoveField) and self.is_same_field_operation(
             operation
         ):
diff --git a/test_script.py b/test_script.py
new file mode 100644
index 0000000000..cdc4e6cf7f
--- /dev/null
+++ b/test_script.py
@@ -0,0 +1,30 @@
+from django.db import models
+from django.db.migrations.operations import AlterField
+from django.db.migrations.optimizer import MigrationOptimizer
+
+class Book(models.Model):
+    title = models.CharField(max_length=256, null=True)
+
+operations = [
+    AlterField(
+        model_name="book",
+        name="title",
+        field=models.CharField(max_length=128, null=True),
+    ),
+    AlterField(
+        model_name="book",
+        name="title",
+        field=models.CharField(max_length=128, null=True, help_text="help"),
+    ),
+    AlterField(
+        model_name="book",
+        name="title",
+        field=models.CharField(max_length=128, null=True, help_text="help", default=None),
+    ),
+]
+
+optimizer = MigrationOptimizer()
+optimized_ops = optimizer.optimize(operations, "books")
+
+print("Original operations:", operations)
+print("Optimized operations:", optimized_ops)
\ No newline at end of file
