diff --git a/test_bulk_create.py b/test_bulk_create.py
new file mode 100755
index 0000000000..1a24bb8361
--- /dev/null
+++ b/test_bulk_create.py
@@ -0,0 +1,64 @@
+from django.db import models
+from django.conf import settings
+from django.test.utils import setup_test_environment, teardown_test_environment
+import django
+
+# Configure settings before setup
+settings.configure(
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.postgresql',
+            'NAME': 'testdb',
+            'USER': 'postgres',
+            'PASSWORD': 'postgres',
+            'HOST': 'localhost',
+            'PORT': '5432',
+        }
+    },
+    INSTALLED_APPS=[],
+)
+setup_test_environment()
+django.setup()
+from django.test import TestCase
+
+settings.configure(
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.postgresql',
+            'NAME': 'testdb',
+            'USER': 'postgres',
+            'PASSWORD': 'postgres',
+            'HOST': 'localhost',
+            'PORT': '5432',
+        }
+    },
+    INSTALLED_APPS=[],
+)
+setup_test_environment()
+
+class ActivityBlackListed(models.Model):
+    class Meta:
+        db_table = "Activity_BlackListed"
+    blacklistid = models.IntegerField(primary_key=True, db_column="BlacklistID")
+    sectorid = models.IntegerField(null=True, blank=True, db_column="SectorID")
+
+    def __str__(self):
+        return f"ActivityBlackListed({self.blacklistid}, {self.sectorid})"
+
+class BulkCreateTest(TestCase):
+    def test_bulk_create_conflict(self):
+        instances = [
+            ActivityBlackListed(blacklistid=1, sectorid=10),
+            ActivityBlackListed(blacklistid=2, sectorid=20),
+        ]
+        ActivityBlackListed.objects.bulk_create(
+            instances,
+            update_conflicts=True,
+            update_fields=["sectorid"],
+            unique_fields=["blacklistid"]
+        )
+
+if __name__ == "__main__":
+    from django.test.runner import DiscoverRunner
+    runner = DiscoverRunner()
+    runner.run_tests(["__main__.BulkCreateTest"])
\ No newline at end of file
