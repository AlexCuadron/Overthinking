diff --git a/testproject/manage.py b/testproject/manage.py
new file mode 100644
index 0000000000..ad23ce4112
--- /dev/null
+++ b/testproject/manage.py
@@ -0,0 +1,18 @@
+#!/usr/bin/env python
+import os
+import sys
+
+def main():
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'testproject.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
+
+if __name__ == '__main__':
+    main()
\ No newline at end of file
diff --git a/testproject/reproduce_error.py b/testproject/reproduce_error.py
new file mode 100644
index 0000000000..40c2b52ca7
--- /dev/null
+++ b/testproject/reproduce_error.py
@@ -0,0 +1,39 @@
+import os
+import django
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'testproject.settings')
+django.setup()
+
+from testapp1.models import App1
+from testapp2.models import App2
+
+# Create an instance of App2
+app2_instance = App2.objects.create(text='Test App2')
+
+# Create an instance of App1 with a UUID reference to App2
+app1_instance = App1.objects.create(text='Test App1', another_app=app2_instance.id)
+
+# Change the UUID field to a ForeignKey
+from django.db import migrations, models
+import uuid
+from django.utils.translation import gettext_lazy as _
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('testapp1', '0001_initial'),
+        ('testapp2', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='app1',
+            name='another_app',
+            field=models.ForeignKey(App2, null=True, blank=True, on_delete=models.SET_NULL, verbose_name=_('another app')),
+        ),
+    ]
+
+# Apply the migration
+from django.core.management import call_command
+call_command('makemigrations', 'testapp1')
+call_command('migrate')
\ No newline at end of file
diff --git a/testproject/testapp1/__init__.py b/testproject/testapp1/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/testproject/testapp1/models.py b/testproject/testapp1/models.py
new file mode 100644
index 0000000000..8c80ccfe06
--- /dev/null
+++ b/testproject/testapp1/models.py
@@ -0,0 +1,8 @@
+import uuid
+from django.db import models
+from django.utils.translation import gettext_lazy as _
+
+class App1(models.Model):
+    id = models.UUIDField(primary_key=True, unique=True, default=uuid.uuid4, editable=False, verbose_name=_('identifier'))
+    text = models.CharField(max_length=100, verbose_name=_('text'))
+    another_app = models.UUIDField(null=True, blank=True, verbose_name=_('another app'))
\ No newline at end of file
diff --git a/testproject/testapp2/__init__.py b/testproject/testapp2/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/testproject/testapp2/models.py b/testproject/testapp2/models.py
new file mode 100644
index 0000000000..88c222bc73
--- /dev/null
+++ b/testproject/testapp2/models.py
@@ -0,0 +1,7 @@
+import uuid
+from django.db import models
+from django.utils.translation import gettext_lazy as _
+
+class App2(models.Model):
+    id = models.UUIDField(primary_key=True, unique=True, default=uuid.uuid4, editable=False, verbose_name=_('identifier'))
+    text = models.CharField(max_length=100, verbose_name=_('text'))
\ No newline at end of file
diff --git a/testproject/testproject/settings.py b/testproject/testproject/settings.py
new file mode 100644
index 0000000000..25ae56519f
--- /dev/null
+++ b/testproject/testproject/settings.py
@@ -0,0 +1,85 @@
+import os
+from pathlib import Path
+
+BASE_DIR = Path(__file__).resolve().parent.parent
+
+SECRET_KEY = 'your-secret-key'
+
+DEBUG = True
+
+ALLOWED_HOSTS = []
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    'testapp1',
+    'testapp2',
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'testproject.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'testproject.wsgi.application'
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': str(BASE_DIR / 'db.sqlite3'),
+    }
+}
+
+AUTH_PASSWORD_VALIDATORS = [
+    {
+        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
+    },
+]
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_L10N = True
+
+USE_TZ = True
+
+STATIC_URL = '/static/'
\ No newline at end of file
diff --git a/testproject/testproject/urls.py b/testproject/testproject/urls.py
new file mode 100644
index 0000000000..6b669efaa2
--- /dev/null
+++ b/testproject/testproject/urls.py
@@ -0,0 +1,6 @@
+from django.contrib import admin
+from django.urls import path
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+]
\ No newline at end of file
diff --git a/testproject/testproject/wsgi.py b/testproject/testproject/wsgi.py
new file mode 100644
index 0000000000..e61fef25b4
--- /dev/null
+++ b/testproject/testproject/wsgi.py
@@ -0,0 +1,6 @@
+import os
+from django.core.wsgi import get_wsgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'testproject.settings')
+
+application = get_wsgi_application()
\ No newline at end of file
