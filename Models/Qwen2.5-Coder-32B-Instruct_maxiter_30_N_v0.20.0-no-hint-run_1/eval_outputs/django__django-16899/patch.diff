diff --git a/db.sqlite3 b/db.sqlite3
new file mode 100644
index 0000000000..25c18395b8
Binary files /dev/null and b/db.sqlite3 differ
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..008ec0693a
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,74 @@
+import os
+import django
+from django.conf import settings
+from django.contrib import admin
+from django.core.management import call_command
+from django.db import models
+
+# Set up Django settings
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': os.path.join(os.path.dirname(__file__), 'db.sqlite3'),
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.admin',
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        'django.contrib.sessions',
+        'django.contrib.messages',
+        'django.contrib.staticfiles',
+        'test_app',
+    ],
+    ROOT_URLCONF='urls',
+    MIDDLEWARE=[
+        'django.middleware.security.SecurityMiddleware',
+        'django.contrib.sessions.middleware.SessionMiddleware',
+        'django.middleware.common.CommonMiddleware',
+        'django.middleware.csrf.CsrfViewMiddleware',
+        'django.contrib.auth.middleware.AuthenticationMiddleware',
+        'django.contrib.messages.middleware.MessageMiddleware',
+        'django.middleware.clickjacking.XFrameOptionsMiddleware',
+    ],
+    TEMPLATES=[
+        {
+            'BACKEND': 'django.template.backends.django.DjangoTemplates',
+            'DIRS': [],
+            'APP_DIRS': True,
+            'OPTIONS': {
+                'context_processors': [
+                    'django.template.context_processors.debug',
+                    'django.template.context_processors.request',
+                    'django.contrib.auth.context_processors.auth',
+                    'django.contrib.messages.context_processors.messages',
+                ],
+            },
+        },
+    ],
+    STATIC_URL='/static/',
+)
+
+django.setup()
+
+# Create a test app
+
+
+from test_app.models import City
+
+class CityInline(admin.TabularInline):
+    model = City
+    readonly_fields = ['non_existent_field']
+
+class Admin(admin.ModelAdmin):
+    inlines = [CityInline]
+
+admin.site.register(City, Admin)
+
+# Create the database
+call_command('migrate')
+
+# Run the server
+call_command('runserver', '0.0.0.0:8000')
\ No newline at end of file
diff --git a/server.log b/server.log
new file mode 100644
index 0000000000..755ea22a1f
--- /dev/null
+++ b/server.log
@@ -0,0 +1,31 @@
+Operations to perform:
+  Apply all migrations: admin, auth, contenttypes, sessions
+Running migrations:
+  Applying contenttypes.0001_initial... OK
+  Applying auth.0001_initial... OK
+  Applying admin.0001_initial... OK
+  Applying admin.0002_logentry_remove_auto_add... OK
+  Applying admin.0003_logentry_add_action_flag_choices... OK
+  Applying contenttypes.0002_remove_content_type_name... OK
+  Applying auth.0002_alter_permission_name_max_length... OK
+  Applying auth.0003_alter_user_email_max_length... OK
+  Applying auth.0004_alter_user_username_opts... OK
+  Applying auth.0005_alter_user_last_login_null... OK
+  Applying auth.0006_require_contenttypes_0002... OK
+  Applying auth.0007_alter_validators_add_error_messages... OK
+  Applying auth.0008_alter_user_username_max_length... OK
+  Applying auth.0009_alter_user_last_name_max_length... OK
+  Applying auth.0010_alter_group_name_max_length... OK
+  Applying auth.0011_update_proxy_permissions... OK
+  Applying auth.0012_alter_user_first_name_max_length... OK
+  Applying sessions.0001_initial... OK
+Operations to perform:
+  Apply all migrations: admin, auth, contenttypes, sessions
+Running migrations:
+  No migrations to apply.
+Watching for file changes with StatReloader
+January 23, 2025 - 12:40:19
+Django version 5.0.dev20230526101626, using settings None
+Starting development server at http://0.0.0.0:8000/
+Quit the server with CONTROL-C.
+
diff --git a/test_app/__init__.py b/test_app/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_app/models.py b/test_app/models.py
new file mode 100644
index 0000000000..e686867330
--- /dev/null
+++ b/test_app/models.py
@@ -0,0 +1,4 @@
+from django.db import models
+
+class City(models.Model):
+    name = models.CharField(max_length=100)
\ No newline at end of file
