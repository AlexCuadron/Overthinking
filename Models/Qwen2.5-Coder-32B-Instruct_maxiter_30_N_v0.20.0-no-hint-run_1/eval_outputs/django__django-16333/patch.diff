diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..5584e1a562
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,91 @@
+import os
+import django
+from django.conf import settings
+from django.contrib.auth.models import User, Group
+from django.contrib.auth.forms import UserCreationForm
+from django.test import TestCase
+
+# Set up Django settings
+import os
+import django
+from django.conf import settings
+from django.contrib.auth.models import User, Group
+from django.contrib.auth.forms import UserCreationForm
+from django import forms
+from django.test import TestCase
+
+# Set the DJANGO_SETTINGS_MODULE environment variable
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'settings')
+
+# Set up Django settings
+django.setup()
+
+# Create a custom UserCreationForm with a ManyToManyField
+class CustomUserCreationForm(UserCreationForm):
+    groups = forms.ModelMultipleChoiceField(
+        queryset=Group.objects.all(),
+        required=False,
+        help_text='Select the groups this user belongs to.',
+    )
+
+    class Meta:
+        model = User
+        fields = ('username', 'groups')
+
+# Create a test case to reproduce the error
+class UserCreationFormTest(TestCase):
+    def setUp(self):
+        self.group = Group.objects.create(name='Test Group')
+
+    def test_user_creation_form_saves_m2m(self):
+        form_data = {
+            'username': 'testuser',
+            'password1': 'testpassword',
+            'password2': 'testpassword',
+            'groups': [self.group.id],
+        }
+        form = CustomUserCreationForm(data=form_data)
+        self.assertTrue(form.is_valid())
+        user = form.save(commit=False)
+        user.save()
+        form.save_m2m()
+        self.assertIn(self.group, user.groups.all())
+
+if __name__ == '__main__':
+    import unittest
+    unittest.main()
+
+django.setup()
+
+# Create a custom UserCreationForm with a ManyToManyField
+class CustomUserCreationForm(UserCreationForm):
+    groups = forms.ModelMultipleChoiceField(
+        queryset=Group.objects.all(),
+        required=False,
+        help_text='Select the groups this user belongs to.',
+    )
+
+    class Meta:
+        model = User
+        fields = ('username', 'groups')
+
+# Create a test case to reproduce the error
+class UserCreationFormTest(TestCase):
+    def setUp(self):
+        self.group = Group.objects.create(name='Test Group')
+
+    def test_user_creation_form_saves_m2m(self):
+        form_data = {
+            'username': 'testuser',
+            'password1': 'testpassword',
+            'password2': 'testpassword',
+            'groups': [self.group.id],
+        }
+        form = CustomUserCreationForm(data=form_data)
+        self.assertTrue(form.is_valid())
+        user = form.save()
+        self.assertIn(self.group, user.groups.all())
+
+if __name__ == '__main__':
+    import unittest
+    unittest.main()
\ No newline at end of file
diff --git a/settings.py b/settings.py
new file mode 100644
index 0000000000..121570efe1
--- /dev/null
+++ b/settings.py
@@ -0,0 +1,53 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+DEBUG = True
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'test.db'),
+    }
+}
+
+INSTALLED_APPS = [
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+]
+
+AUTH_USER_MODEL = 'auth.User'
+SECRET_KEY = 'secret_key'
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'django.contrib.auth.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'django.contrib.auth.wsgi.application'
+TEST_RUNNER = 'django.test.runner.DiscoverRunner'
\ No newline at end of file
