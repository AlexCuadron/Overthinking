diff --git a/inspectdb_output.txt b/inspectdb_output.txt
new file mode 100644
index 0000000000..c51b12466e
--- /dev/null
+++ b/inspectdb_output.txt
@@ -0,0 +1,26 @@
+# This is an auto-generated Django model module.
+# You'll have to do the following manually to clean this up:
+#   * Rearrange models' order
+#   * Make sure each model has one field with primary_key=True
+#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
+#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
+# Feel free to rename the models, but don't rename db_table values or field names.
+from django.db import models
+
+
+class Bar(models.Model):
+    id = models.TextField(primary_key=True, blank=True, null=True)  # This field type is a guess.
+    other_id = models.IntegerField(blank=True, null=True)
+
+    class Meta:
+        managed = False
+        db_table = 'bar'
+
+
+class Foo(models.Model):
+    id = models.TextField(primary_key=True, blank=True, null=True)  # This field type is a guess.
+    other_id = models.IntegerField(unique=True, blank=True, null=True)
+
+    class Meta:
+        managed = False
+        db_table = 'foo'
diff --git a/reproduce_inspectdb_error.py b/reproduce_inspectdb_error.py
new file mode 100644
index 0000000000..5119a29c61
--- /dev/null
+++ b/reproduce_inspectdb_error.py
@@ -0,0 +1,32 @@
+import os
+import django
+from django.core.management import call_command
+
+# Set up Django environment
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'settings')
+django.setup()
+
+# Create a temporary database
+from django.db import connection
+with connection.cursor() as cursor:
+    cursor.execute("""
+        CREATE TABLE foo (
+            id serial primary key,
+            other_id int UNIQUE
+        );
+    """)
+    cursor.execute("""
+        CREATE TABLE bar (
+            id serial primary key,
+            other_id int,
+            constraint myconst
+            FOREIGN KEY(other_id) references foo(other_id)
+        );
+    """)
+
+# Run inspectdb and capture the output
+output = call_command('inspectdb', stdout=open('inspectdb_output.txt', 'w'))
+
+# Print the output to the console
+with open('inspectdb_output.txt', 'r') as f:
+    print(f.read())
\ No newline at end of file
diff --git a/settings.py b/settings.py
new file mode 100644
index 0000000000..7c8ee87acf
--- /dev/null
+++ b/settings.py
@@ -0,0 +1,8 @@
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': '/workspace/django__django__4.1/testdb.sqlite3',
+    }
+}
+INSTALLED_APPS = []
+SECRET_KEY = 'dummy'
\ No newline at end of file
diff --git a/testdb.sqlite3 b/testdb.sqlite3
new file mode 100644
index 0000000000..ad56840493
Binary files /dev/null and b/testdb.sqlite3 differ
