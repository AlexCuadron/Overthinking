diff --git a/reproduce_mod_error.py b/reproduce_mod_error.py
new file mode 100644
index 0000000000..d5ce5f2364
--- /dev/null
+++ b/reproduce_mod_error.py
@@ -0,0 +1,42 @@
+import os
+import django
+from django.conf import settings
+from django.db import models
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': os.path.join(os.path.dirname(__file__), 'db.sqlite3'),
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+    ],
+    SECRET_KEY='dummy',
+)
+
+django.setup()
+
+# Define a model with Decimal and Integer fields
+class TestModel(models.Model):
+    decimal_field = models.DecimalField(max_digits=10, decimal_places=2)
+    integer_field = models.IntegerField()
+
+# Create the database tables
+TestModel.objects.all().delete()
+TestModel(decimal_field=10.5, integer_field=3).save()
+
+# Perform a query using the MOD operator
+from django.db.models import F, Value
+from django.db.models.functions import Mod
+
+queryset = TestModel.objects.annotate(
+    mod_result=Mod('decimal_field', Value(3))
+).values_list('mod_result', flat=True)
+
+# Print the result
+print(list(queryset))
\ No newline at end of file
diff --git a/temp_app/models.py b/temp_app/models.py
new file mode 100644
index 0000000000..bf710d921f
--- /dev/null
+++ b/temp_app/models.py
@@ -0,0 +1,5 @@
+from django.db import models
+
+class TestModel(models.Model):
+    decimal_field = models.DecimalField(max_digits=10, decimal_places=2)
+    integer_field = models.IntegerField()
\ No newline at end of file
