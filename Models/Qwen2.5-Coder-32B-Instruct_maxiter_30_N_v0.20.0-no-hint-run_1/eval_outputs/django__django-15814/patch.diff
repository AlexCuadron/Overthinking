diff --git a/__main__/__init__.py b/__main__/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/__main__/management/commands/test_proxy.py b/__main__/management/commands/test_proxy.py
new file mode 100644
index 0000000000..0683f87259
--- /dev/null
+++ b/__main__/management/commands/test_proxy.py
@@ -0,0 +1,40 @@
+import os
+import django
+from django.conf import settings
+from django.core.management import execute_from_command_line
+from django.core.management.base import BaseCommand
+from django.core.management import call_command
+from django.db import models
+
+# Set up Django settings
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tests.settings')
+django.setup()
+
+class CustomModel(models.Model):
+    name = models.CharField(max_length=16)
+
+class ProxyCustomModel(CustomModel):
+    class Meta:
+        proxy = True
+
+class AnotherModel(models.Model):
+    custom = models.ForeignKey(
+        ProxyCustomModel,
+        on_delete=models.SET_NULL,
+        null=True,
+        blank=True,
+    )
+
+# Create a command to reproduce the error
+class Command(BaseCommand):
+    def handle(self, *args, **options):
+        # Create migration files
+        call_command('makemigrations', '__main__', interactive=False)
+        # Apply migrations
+        call_command('migrate', interactive=False)
+        # Run the command to reproduce the error
+        objs = list(AnotherModel.objects.select_related("custom").only("custom__name").all())
+        print(objs)
+
+if __name__ == '__main__':
+    execute_from_command_line(['manage.py', 'test_proxy'])
\ No newline at end of file
diff --git a/db.sqlite3 b/db.sqlite3
new file mode 100644
index 0000000000..e23c877b3b
Binary files /dev/null and b/db.sqlite3 differ
diff --git a/manage.py b/manage.py
new file mode 100644
index 0000000000..87731826c3
--- /dev/null
+++ b/manage.py
@@ -0,0 +1,15 @@
+#!/usr/bin/env python
+import os
+import sys
+
+if __name__ == '__main__':
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tests.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
\ No newline at end of file
diff --git a/test_app/__init__.py b/test_app/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_app/admin.py b/test_app/admin.py
new file mode 100644
index 0000000000..8c38f3f3da
--- /dev/null
+++ b/test_app/admin.py
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
diff --git a/test_app/apps.py b/test_app/apps.py
new file mode 100644
index 0000000000..953db2940f
--- /dev/null
+++ b/test_app/apps.py
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class TestAppConfig(AppConfig):
+    default_auto_field = "django.db.models.BigAutoField"
+    name = "test_app"
diff --git a/test_app/migrations/__init__.py b/test_app/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_app/models.py b/test_app/models.py
new file mode 100644
index 0000000000..71a8362390
--- /dev/null
+++ b/test_app/models.py
@@ -0,0 +1,3 @@
+from django.db import models
+
+# Create your models here.
diff --git a/test_app/tests.py b/test_app/tests.py
new file mode 100644
index 0000000000..7ce503c2dd
--- /dev/null
+++ b/test_app/tests.py
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
diff --git a/test_app/views.py b/test_app/views.py
new file mode 100644
index 0000000000..91ea44a218
--- /dev/null
+++ b/test_app/views.py
@@ -0,0 +1,3 @@
+from django.shortcuts import render
+
+# Create your views here.
diff --git a/tests/settings.py b/tests/settings.py
new file mode 100644
index 0000000000..41d8a06bce
--- /dev/null
+++ b/tests/settings.py
@@ -0,0 +1,18 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    '__main__',  # This allows Django to find the models defined in the script
+]
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+SECRET_KEY = 'dummy-secret-key'
\ No newline at end of file
