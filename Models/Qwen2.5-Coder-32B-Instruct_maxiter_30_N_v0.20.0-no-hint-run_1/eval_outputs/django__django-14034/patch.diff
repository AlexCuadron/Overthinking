diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..2ee3c7f943
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,56 @@
+import os
+import django
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'settings')
+django.setup()
+
+from django.forms import (
+    Form,
+    CharField,
+    MultiValueField,
+    MultiWidget,
+    ValidationError,
+)
+
+class MF(MultiValueField):
+    widget = MultiWidget
+    def __init__(self):
+        fields = [
+            CharField(required=False),
+            CharField(required=True),
+        ]
+        widget = self.widget(widgets=[
+            f.widget
+            for f in fields
+        ], attrs={})
+        super(MF, self).__init__(
+            fields=fields,
+            widget=widget,
+            require_all_fields=False,
+            required=False,
+        )
+    def compress(self, value):
+        return []
+
+    def clean(self, value):
+        cleaned_data = super().clean(value)
+        for field, sub_value in zip(self.fields, value):
+            if field.required and not sub_value:
+                raise ValidationError(f'This field is required.')
+        return cleaned_data
+
+class F(Form):
+    mf = MF()
+
+# Test cases
+f1 = F({
+    'mf_0': '',
+    'mf_1': '',
+})
+print(f"f1.is_valid() == {f1.is_valid()}")  # Expected: False
+
+f2 = F({
+    'mf_0': 'xxx',
+    'mf_1': '',
+})
+print(f"f2.is_valid() == {f2.is_valid()}")  # Expected: False
\ No newline at end of file
diff --git a/settings.py b/settings.py
new file mode 100644
index 0000000000..f8548d4197
--- /dev/null
+++ b/settings.py
@@ -0,0 +1,51 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+SECRET_KEY = 'fake-key'
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+]
+
+MIDDLEWARE = []
+
+ROOT_URLCONF = 'urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'wsgi.application'
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_L10N = True
+
+USE_TZ = True
+
+STATIC_URL = '/static/'
\ No newline at end of file
