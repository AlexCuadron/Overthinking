diff --git a/django/utils/formats.py b/django/utils/formats.py
index 3f38322d84..00433d1bf7 100644
--- a/django/utils/formats.py
+++ b/django/utils/formats.py
@@ -139,6 +139,11 @@ def get_format(format_type, lang=None, use_l10n=None):
         for iso_input in ISO_INPUT_FORMATS.get(format_type, ()):
             if iso_input not in val:
                 val.append(iso_input)
+
+    # Resolve lazy strings
+    if isinstance(val, str):
+        val = str(val)
+
     _format_cache[cache_key] = val
     return val

diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..dc3f81dce5
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,15 @@
+import os
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'settings')
+
+from django.utils.formats import get_format
+from django.utils.functional import lazy
+
+# Create a lazy string
+lazy_string = lazy(lambda: 'Y-m-d', str)()
+
+# Try to get the format with the lazy string
+try:
+    format_string = get_format('DATE_FORMAT', lazy_string)
+    print(f"Format string: {format_string}")
+except TypeError as e:
+    print(f"TypeError: {e}")
\ No newline at end of file
diff --git a/settings.py b/settings.py
new file mode 100644
index 0000000000..cd20d0ee23
--- /dev/null
+++ b/settings.py
@@ -0,0 +1,14 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+SECRET_KEY = 'fake-key'
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+]
+
+LANGUAGE_CODE = 'en-us'
+USE_I18N = True
+USE_L10N = True
+USE_TZ = True
\ No newline at end of file
