diff --git a/db.sqlite3 b/db.sqlite3
new file mode 100644
index 0000000000..8a727aec8b
Binary files /dev/null and b/db.sqlite3 differ
diff --git a/reproduce_error.log b/reproduce_error.log
new file mode 100644
index 0000000000..bd1485b678
--- /dev/null
+++ b/reproduce_error.log
@@ -0,0 +1,101 @@
+Operations to perform:
+  Apply all migrations: admin, auth, contenttypes, sessions
+Running migrations:
+  No migrations to apply.
+Operations to perform:
+  Apply all migrations: admin, auth, contenttypes, sessions
+Running migrations:
+  No migrations to apply.
+Watching for file changes with StatReloader
+Exception in thread django-main-thread:
+Traceback (most recent call last):
+  File "/opt/miniconda3/envs/testbed/lib/python3.11/threading.py", line 1045, in _bootstrap_inner
+    self.run()
+  File "/opt/miniconda3/envs/testbed/lib/python3.11/threading.py", line 982, in run
+    self._target(*self._args, **self._kwargs)
+  File "/workspace/django__django__5.0/django/utils/autoreload.py", line 64, in wrapper
+    fn(*args, **kwargs)
+  File "/workspace/django__django__5.0/django/core/management/commands/runserver.py", line 139, in inner_run
+    handler = self.get_handler(*args, **options)
+              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+  File "/workspace/django__django__5.0/django/contrib/staticfiles/management/commands/runserver.py", line 31, in get_handler
+    handler = super().get_handler(*args, **options)
+              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+  File "/workspace/django__django__5.0/django/core/management/commands/runserver.py", line 78, in get_handler
+    return get_internal_wsgi_application()
+           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+  File "/workspace/django__django__5.0/django/core/servers/basehttp.py", line 48, in get_internal_wsgi_application
+    return import_string(app_path)
+           ^^^^^^^^^^^^^^^^^^^^^^^
+  File "/workspace/django__django__5.0/django/utils/module_loading.py", line 30, in import_string
+    return cached_import(module_path, class_name)
+           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+  File "/workspace/django__django__5.0/django/utils/module_loading.py", line 15, in cached_import
+    module = import_module(module_path)
+             ^^^^^^^^^^^^^^^^^^^^^^^^^^
+  File "/opt/miniconda3/envs/testbed/lib/python3.11/importlib/__init__.py", line 126, in import_module
+    return _bootstrap._gcd_import(name[level:], package, level)
+           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
+  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
+  File "<frozen importlib._bootstrap>", line 1126, in _find_and_load_unlocked
+  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
+  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
+  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
+  File "<frozen importlib._bootstrap>", line 1147, in _find_and_load_unlocked
+  File "<frozen importlib._bootstrap>", line 690, in _load_unlocked
+  File "<frozen importlib._bootstrap_external>", line 940, in exec_module
+  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
+  File "/workspace/django__django__5.0/reproduce_error.py", line 9, in <module>
+    settings.configure(
+  File "/workspace/django__django__5.0/django/conf/__init__.py", line 121, in configure
+    raise RuntimeError("Settings already configured.")
+RuntimeError: Settings already configured.
+/workspace/django__django__5.0/reproduce_error.py changed, reloading.
+Traceback (most recent call last):
+  File "/workspace/django__django__5.0/reproduce_error.py", line 25, in <module>
+    django.setup()
+  File "/workspace/django__django__5.0/django/__init__.py", line 19, in setup
+    configure_logging(settings.LOGGING_CONFIG, settings.LOGGING)
+                      ^^^^^^^^^^^^^^^^^^^^^^^
+  File "/workspace/django__django__5.0/django/conf/__init__.py", line 84, in __getattr__
+    self._setup(name)
+  File "/workspace/django__django__5.0/django/conf/__init__.py", line 71, in _setup
+    self._wrapped = Settings(settings_module)
+                    ^^^^^^^^^^^^^^^^^^^^^^^^^
+  File "/workspace/django__django__5.0/django/conf/__init__.py", line 185, in __init__
+    mod = importlib.import_module(self.SETTINGS_MODULE)
+          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+  File "/opt/miniconda3/envs/testbed/lib/python3.11/importlib/__init__.py", line 126, in import_module
+    return _bootstrap._gcd_import(name[level:], package, level)
+           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
+  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
+  File "<frozen importlib._bootstrap>", line 1126, in _find_and_load_unlocked
+  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
+  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
+  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
+  File "<frozen importlib._bootstrap>", line 1147, in _find_and_load_unlocked
+  File "<frozen importlib._bootstrap>", line 690, in _load_unlocked
+  File "<frozen importlib._bootstrap_external>", line 940, in exec_module
+  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
+  File "/workspace/django__django__5.0/reproduce_error.py", line 25, in <module>
+    django.setup()
+  File "/workspace/django__django__5.0/django/__init__.py", line 19, in setup
+    configure_logging(settings.LOGGING_CONFIG, settings.LOGGING)
+                      ^^^^^^^^^^^^^^^^^^^^^^^
+  File "/workspace/django__django__5.0/django/conf/__init__.py", line 84, in __getattr__
+    self._setup(name)
+  File "/workspace/django__django__5.0/django/conf/__init__.py", line 71, in _setup
+    self._wrapped = Settings(settings_module)
+                    ^^^^^^^^^^^^^^^^^^^^^^^^^
+  File "/workspace/django__django__5.0/django/conf/__init__.py", line 185, in __init__
+    mod = importlib.import_module(self.SETTINGS_MODULE)
+          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+  File "/opt/miniconda3/envs/testbed/lib/python3.11/importlib/__init__.py", line 126, in import_module
+    return _bootstrap._gcd_import(name[level:], package, level)
+           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
+  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
+  File "<frozen importlib._bootstrap>", line 1135, in _find_and_load_unlocked
+ModuleNotFoundError: No module named 'reproduce_error.settings'; 'reproduce_error' is not a package
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..b9c0cbbb47
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,40 @@
+import os
+import django
+from django.conf import settings
+from django.core.management import call_command
+from django.test import Client
+
+# Set up Django settings
+
+
+# Create the Django project and app
+os.makedirs('reproduce_error', exist_ok=True)
+with open('reproduce_error/settings.py', 'w') as f:
+    f.write('from .base import *')
+
+with open('reproduce_error/base.py', 'w') as f:
+    f.write('from .settings import *')
+
+with open('reproduce_error/urls.py', 'w') as f:
+    f.write('from django.contrib import admin\nfrom django.urls import path\nurlpatterns = [path("admin/", admin.site.urls),]')
+
+with open('reproduce_error/wsgi.py', 'w') as f:
+    f.write('import os\nfrom django.core.wsgi import get_wsgi_application\nos.environ.setdefault("DJANGO_SETTINGS_MODULE", "reproduce_error.settings")\napplication = get_wsgi_application()')
+
+# Migrate the database
+django.setup()
+call_command('migrate')
+
+# Create a superuser
+from django.contrib.auth.models import User
+if not User.objects.filter(username='admin').exists():
+    call_command('createsuperuser', username='admin', email='admin@example.com', interactive=False)
+
+# Run the server
+call_command('runserver', '0.0.0.0:8000')
+
+# Test the redirect
+client = Client()
+response = client.get('/admin/auth/foo?id=123')
+print(f'Response status code: {response.status_code}')
+print(f'Response URL: {response.url}')
\ No newline at end of file
diff --git a/reproduce_error/base.py b/reproduce_error/base.py
new file mode 100644
index 0000000000..c70020d5f7
--- /dev/null
+++ b/reproduce_error/base.py
@@ -0,0 +1 @@
+from .settings import *
\ No newline at end of file
diff --git a/reproduce_error/settings.py b/reproduce_error/settings.py
new file mode 100644
index 0000000000..773cfc4664
--- /dev/null
+++ b/reproduce_error/settings.py
@@ -0,0 +1 @@
+from .base import *
\ No newline at end of file
diff --git a/reproduce_error/urls.py b/reproduce_error/urls.py
new file mode 100644
index 0000000000..f2175632f0
--- /dev/null
+++ b/reproduce_error/urls.py
@@ -0,0 +1,3 @@
+from django.contrib import admin
+from django.urls import path
+urlpatterns = [path("admin/", admin.site.urls),]
\ No newline at end of file
diff --git a/reproduce_error/wsgi.py b/reproduce_error/wsgi.py
new file mode 100644
index 0000000000..72487d1b78
--- /dev/null
+++ b/reproduce_error/wsgi.py
@@ -0,0 +1,4 @@
+import os
+from django.core.wsgi import get_wsgi_application
+os.environ.setdefault("DJANGO_SETTINGS_MODULE", "reproduce_error.settings")
+application = get_wsgi_application()
\ No newline at end of file
