diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..2d6acaa15e
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,6 @@
+from sympy import symbols, Mod, sympify
+
+i = symbols('i', integer=True)
+expr = Mod(3*i, 2)
+print(f"Original expression: {expr}")
+print(f"Simplified expression: {sympify(expr)}")
\ No newline at end of file
diff --git a/sympy/core/mod.py b/sympy/core/mod.py
index eae25630cc..10c56c7bb5 100644
--- a/sympy/core/mod.py
+++ b/sympy/core/mod.py
@@ -123,6 +123,9 @@ def doit(p, q):
             for arg in p.args:
                 both_l[isinstance(arg, cls)].append(arg)

+was = non_mod_l[:]
+    non_mod_l = [cls(x, q) for x in non_mod_l]
+    changed = was != non_mod_l
             if mod_l and all(inner.args[1] == q for inner in mod_l):
                 # finding distributive term
                 non_mod_l = [cls(x, q) for x in non_mod_l]
