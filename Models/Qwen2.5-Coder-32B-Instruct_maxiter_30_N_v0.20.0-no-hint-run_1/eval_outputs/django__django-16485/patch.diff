diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py
index 23c3a08c67..626840c71c 100644
--- a/django/template/defaultfilters.py
+++ b/django/template/defaultfilters.py
@@ -187,7 +187,7 @@ def floatformat(text, arg=-1):

     # Avoid conversion to scientific notation by accessing `sign`, `digits`,
     # and `exponent` from Decimal.as_tuple() directly.
-    rounded_d = d.quantize(exp, ROUND_HALF_UP, Context(prec=prec))
+    rounded_d = d.quantize(exp, ROUND_HALF_UP, Context(prec=max(prec, 1)))
     sign, digits, exponent = rounded_d.as_tuple()
     digits = [str(digit) for digit in reversed(digits)]
     while len(digits) <= abs(exponent):
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..ba654af2a8
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,19 @@
+import os
+import django
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'settings')
+django.setup()
+
+from decimal import Decimal
+from django.template.defaultfilters import floatformat
+
+print(floatformat('0.00', 0))  # Expected: '0'
+print(floatformat(Decimal('0.00'), 0))  # Expected: '0'
+print(floatformat('0.00', -1))  # Expected: '0'
+print(floatformat(Decimal('0.00'), -1))  # Expected: '0'
+print(floatformat('123.456', 2))  # Expected: '123.46'
+print(floatformat(Decimal('123.456'), 2))  # Expected: '123.46'
+print(floatformat('0.001', 3))  # Expected: '0.001'
+print(floatformat(Decimal('0.001'), 3))  # Expected: '0.001'
+print(floatformat('0.0001', 2))  # Expected: '0.00'
+print(floatformat(Decimal('0.0001'), 2))  # Expected: '0.00'
\ No newline at end of file
diff --git a/settings.py b/settings.py
new file mode 100644
index 0000000000..69c2e5dadc
--- /dev/null
+++ b/settings.py
@@ -0,0 +1,12 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+SECRET_KEY = 'dummy-secret-key'
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+]
+
+USE_I18N = True
+USE_L10N = True
\ No newline at end of file
