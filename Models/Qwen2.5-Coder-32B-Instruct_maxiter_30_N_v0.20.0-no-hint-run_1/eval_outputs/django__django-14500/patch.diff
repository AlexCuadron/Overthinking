diff --git a/manage.py b/manage.py
new file mode 100644
index 0000000000..2ce87881ee
--- /dev/null
+++ b/manage.py
@@ -0,0 +1,16 @@
+
+#!/usr/bin/env python
+import os
+import sys
+
+if __name__ == '__main__':
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reproduce_migration_error.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
diff --git a/migration_error.log b/migration_error.log
new file mode 100644
index 0000000000..e61446889a
--- /dev/null
+++ b/migration_error.log
@@ -0,0 +1,25 @@
+No changes detected in app 'test_app'
+No changes detected in app 'test_app'
+test_app
+ [ ] 0001_initial
+Traceback (most recent call last):
+  File "/workspace/django__django__4.0/django/core/management/commands/squashmigrations.py", line 208, in find_migration
+    return loader.get_migration_by_prefix(app_label, name)
+  File "/workspace/django__django__4.0/django/db/migrations/loader.py", line 152, in get_migration_by_prefix
+    raise KeyError("There no migrations for '%s' with the prefix '%s'" % (app_label, name_prefix))
+KeyError: "There no migrations for 'test_app' with the prefix '0002'"
+
+During handling of the above exception, another exception occurred:
+
+Traceback (most recent call last):
+  File "/workspace/django__django__4.0/reproduce_migration_error.py", line 166, in <module>
+    call_command('squashmigrations', 'test_app', '0001', '0002', '--noinput')
+  File "/workspace/django__django__4.0/django/core/management/__init__.py", line 181, in call_command
+    return command.execute(*args, **defaults)
+  File "/workspace/django__django__4.0/django/core/management/base.py", line 398, in execute
+    output = self.handle(*args, **options)
+  File "/workspace/django__django__4.0/django/core/management/commands/squashmigrations.py", line 68, in handle
+    migration = self.find_migration(loader, app_label, migration_name)
+  File "/workspace/django__django__4.0/django/core/management/commands/squashmigrations.py", line 215, in find_migration
+    raise CommandError(
+django.core.management.base.CommandError: Cannot find a migration matching '0002' from app 'test_app'.
diff --git a/reproduce_migration_error.py b/reproduce_migration_error.py
new file mode 100644
index 0000000000..6300068798
--- /dev/null
+++ b/reproduce_migration_error.py
@@ -0,0 +1,180 @@
+import os
+import sys
+import django
+from django.conf import settings
+from django.core.management import call_command
+from django.db import migrations
+
+# Change the working directory to the root of the Django project
+os.chdir('/workspace/django__django__4.0')
+
+# Add the current working directory to the Python path
+sys.path.append(os.getcwd())
+
+# Set the DJANGO_SETTINGS_MODULE environment variable
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reproduce_migration_error.settings')
+
+# Set up a minimal Django project configuration
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': 'test_db.sqlite3',
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        'test_app',
+    ],
+    MIDDLEWARE=[],
+    ROOT_URLCONF='reproduce_migration_error.urls',
+    TEMPLATES=[],
+    SECRET_KEY='dummy',
+)
+
+django.setup()
+
+# Create the manage.py file
+with open('manage.py', 'w') as f:
+    f.write("""
+#!/usr/bin/env python
+import os
+import sys
+
+if __name__ == '__main__':
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reproduce_migration_error.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
+""")
+
+# Create the reproduce_migration_error directory
+os.makedirs('reproduce_migration_error', exist_ok=True)
+
+# Create the settings.py file
+with open('reproduce_migration_error/settings.py', 'w') as f:
+    f.write("""
+import os
+from pathlib import Path
+
+BASE_DIR = Path(__file__).resolve().parent.parent
+
+SECRET_KEY = 'dummy'
+
+DEBUG = True
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'test_app',
+]
+
+MIDDLEWARE = []
+
+ROOT_URLCONF = 'reproduce_migration_error.urls'
+
+TEMPLATES = []
+
+WSGI_APPLICATION = 'reproduce_migration_error.wsgi.application'
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': BASE_DIR / 'test_db.sqlite3',
+    }
+}
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_L10N = True
+
+USE_TZ = True
+
+STATIC_URL = '/static/'
+""")
+
+# Create the urls.py file
+with open('reproduce_migration_error/urls.py', 'w') as f:
+    f.write("""
+from django.contrib import admin
+from django.urls import path
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+]
+""")
+
+# Create the wsgi.py file
+with open('reproduce_migration_error/wsgi.py', 'w') as f:
+    f.write("""
+import os
+from django.core.wsgi import get_wsgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reproduce_migration_error.settings')
+
+application = get_wsgi_application()
+""")
+
+# Create the test_app directory
+os.makedirs('test_app/migrations', exist_ok=True)
+
+# Create the __init__.py file in test_app
+with open('test_app/__init__.py', 'w') as f:
+    f.write('')
+
+# Create the models.py file in test_app
+with open('test_app/models.py', 'w') as f:
+    f.write("""
+from django.db import models
+
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+""")
+
+# Run makemigrations for test_app
+call_command('makemigrations', 'test_app')
+
+# Update models.py in test_app with a default value for the new field
+with open('test_app/models.py', 'w') as f:
+    f.write("""
+from django.db import models
+
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+    description = models.TextField(default='')
+""")
+
+# Run makemigrations for test_app again
+call_command('makemigrations', 'test_app')
+
+# List migrations to ensure they are created
+call_command('showmigrations', 'test_app')
+
+# Squash migrations
+call_command('squashmigrations', 'test_app', '0001', '0002', '--noinput')
+
+# Unapply the squashed migration
+call_command('migrate', 'test_app', 'zero')
+
+# Check the migration state
+migration_state = migrations.recorder.MigrationRecorder.Migration.objects.all()
+print("Migration state after unapplying squashed migration:")
+for migration in migration_state:
+    print(migration)
+
+# Debugging print statements
+print("Current working directory:", os.getcwd())
+print("INSTALLED_APPS:", settings.INSTALLED_APPS)
+print("Migrations in test_app:", os.listdir('test_app/migrations'))
\ No newline at end of file
diff --git a/reproduce_migration_error/settings.py b/reproduce_migration_error/settings.py
new file mode 100644
index 0000000000..4a7b69991b
--- /dev/null
+++ b/reproduce_migration_error/settings.py
@@ -0,0 +1,42 @@
+
+import os
+from pathlib import Path
+
+BASE_DIR = Path(__file__).resolve().parent.parent
+
+SECRET_KEY = 'dummy'
+
+DEBUG = True
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'test_app',
+]
+
+MIDDLEWARE = []
+
+ROOT_URLCONF = 'reproduce_migration_error.urls'
+
+TEMPLATES = []
+
+WSGI_APPLICATION = 'reproduce_migration_error.wsgi.application'
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': BASE_DIR / 'test_db.sqlite3',
+    }
+}
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_L10N = True
+
+USE_TZ = True
+
+STATIC_URL = '/static/'
diff --git a/reproduce_migration_error/urls.py b/reproduce_migration_error/urls.py
new file mode 100644
index 0000000000..a3c4a89d19
--- /dev/null
+++ b/reproduce_migration_error/urls.py
@@ -0,0 +1,7 @@
+
+from django.contrib import admin
+from django.urls import path
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+]
diff --git a/reproduce_migration_error/wsgi.py b/reproduce_migration_error/wsgi.py
new file mode 100644
index 0000000000..67c1335ca9
--- /dev/null
+++ b/reproduce_migration_error/wsgi.py
@@ -0,0 +1,7 @@
+
+import os
+from django.core.wsgi import get_wsgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reproduce_migration_error.settings')
+
+application = get_wsgi_application()
diff --git a/test_app/__init__.py b/test_app/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_app/migrations/0001_initial.py b/test_app/migrations/0001_initial.py
new file mode 100644
index 0000000000..4b5f350374
--- /dev/null
+++ b/test_app/migrations/0001_initial.py
@@ -0,0 +1,21 @@
+# Generated by Django 4.0.dev20210608054651 on 2025-01-23 12:04
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='TestModel',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('name', models.CharField(max_length=100)),
+            ],
+        ),
+    ]
diff --git a/test_app/migrations/__init__.py b/test_app/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_app/models.py b/test_app/models.py
new file mode 100644
index 0000000000..0d154ec523
--- /dev/null
+++ b/test_app/models.py
@@ -0,0 +1,6 @@
+
+from django.db import models
+
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+    description = models.TextField(default='')
diff --git a/test_db.sqlite3 b/test_db.sqlite3
new file mode 100644
index 0000000000..e69de29bb2
