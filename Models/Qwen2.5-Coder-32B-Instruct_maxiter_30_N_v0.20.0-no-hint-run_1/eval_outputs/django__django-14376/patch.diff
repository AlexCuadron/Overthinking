diff --git a/django/db/backends/mysql/base.py b/django/db/backends/mysql/base.py
index 2c62182d31..8b28a60485 100644
--- a/django/db/backends/mysql/base.py
+++ b/django/db/backends/mysql/base.py
@@ -200,9 +200,9 @@ class DatabaseWrapper(BaseDatabaseWrapper):
         if settings_dict['USER']:
             kwargs['user'] = settings_dict['USER']
         if settings_dict['NAME']:
-            kwargs['db'] = settings_dict['NAME']
+            kwargs['database'] = settings_dict['NAME']
         if settings_dict['PASSWORD']:
-            kwargs['passwd'] = settings_dict['PASSWORD']
+            kwargs['password'] = settings_dict['PASSWORD']
         if settings_dict['HOST'].startswith('/'):
             kwargs['unix_socket'] = settings_dict['HOST']
         elif settings_dict['HOST']:
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..4a04e8ed6f
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,73 @@
+import django
+from django.conf import settings
+from django.db import connections
+
+import warnings
+from django.db.backends.mysql.base import DatabaseWrapper
+
+settings.configure(
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.mysql',
+            'NAME': 'testdb',
+            'USER': 'testuser',
+            'PASSWORD': 'testpass',
+            'HOST': 'localhost',
+            'PORT': '3306',
+            'OPTIONS': {
+                'db': 'testdb',
+                'passwd': 'testpass',
+            },
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.auth',
+        'django.contrib.contenttypes',
+        'django.contrib.sessions',
+        'django.contrib.messages',
+        'django.contrib.staticfiles',
+    ],
+)
+
+import warnings
+from django.conf import settings
+from django.db import connections
+
+if not settings.configured:
+    settings.configure(
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.mysql',
+                'NAME': 'testdb',
+                'USER': 'testuser',
+                'PASSWORD': 'testpass',
+                'HOST': 'localhost',
+                'PORT': '3306',
+                'OPTIONS': {
+                    'db': 'testdb',
+                    'passwd': 'testpass',
+                },
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+            'django.contrib.sessions',
+            'django.contrib.messages',
+            'django.contrib.staticfiles',
+        ],
+    )
+
+django.setup()
+
+# Simulate the deprecation warning
+with warnings.catch_warnings(record=True) as w:
+    warnings.simplefilter("always")
+    try:
+        with connections['default'].cursor() as cursor:
+            cursor.execute("SELECT 1")
+    except Exception as e:
+        pass
+    for warning in w:
+        if "db" in str(warning.message) and "passwd" in str(warning.message):
+            print(f"Deprecation Warning: {warning.message}")
\ No newline at end of file
