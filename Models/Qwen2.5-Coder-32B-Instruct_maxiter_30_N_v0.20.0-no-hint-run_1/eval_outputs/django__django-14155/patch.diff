diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 9b00e24509..d24906029d 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -59,8 +59,16 @@ class ResolverMatch:
         return (self.func, self.args, self.kwargs)[index]

     def __repr__(self):
+        func = self.func
+        if isinstance(func, functools.partial):
+            func = func.func
+            args = self.args
+            kwargs = self.kwargs
+            func_repr = f"{func.__module__}.{func.__name__} with args {args} and kwargs {kwargs}"
+        else:
+            func_repr = f"{self._func_path}"
         return "ResolverMatch(func=%s, args=%s, kwargs=%s, url_name=%s, app_names=%s, namespaces=%s, route=%s)" % (
-            self._func_path, self.args, self.kwargs, self.url_name,
+            func_repr, self.args, self.kwargs, self.url_name,
             self.app_names, self.namespaces, self.route,
         )

diff --git a/reproduce_error_old.py b/reproduce_error_old.py
new file mode 100644
index 0000000000..7eeb4e5ece
--- /dev/null
+++ b/reproduce_error_old.py
@@ -0,0 +1,35 @@
+import os
+import django
+from django.conf import settings
+from django.urls import path, URLResolver, URLPattern, ResolverMatch
+from django.http import HttpResponse
+from functools import partial
+
+# Set up a minimal Django settings module
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')
+settings.configure(
+    DEBUG=True,
+    ROOT_URLCONF=__name__,
+)
+
+# Define a simple view
+def simple_view(request):
+    return HttpResponse("Hello, world!")
+
+# Create a partial function
+partial_view = partial(simple_view)
+
+# Define URL patterns
+urlpatterns = [
+    path('test/', partial_view, name='test_view'),
+]
+
+# Function to reproduce the error
+def reproduce_error():
+    resolver = URLResolver(urlpatterns, 'test')
+    match = resolver.resolve('/test/')
+    print(repr(match))
+
+if __name__ == '__main__':
+    django.setup()
+    reproduce_error()
\ No newline at end of file
