diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..6f031ba463
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,78 @@
+import os
+import django
+from django.core.files.storage import FileSystemStorage, default_storage
+from django.db import models
+import random
+
+# Set up Django environment
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reproduce.settings')
+django.setup()
+
+# Define a custom storage callable
+other_storage = FileSystemStorage(location='/media/other')
+def get_storage():
+    return random.choice([default_storage, other_storage])
+
+# Define a model with a FileField using the callable
+class MyModel(models.Model):
+    my_file = models.FileField(storage=get_storage)
+
+# Create a Django project and app
+# Updated script to reproduce the issue
+import subprocess
+import shutil
+import os
+import sys
+
+# Add the Django repository to the Python path
+sys.path.insert(0, '/workspace/django__django__5.0')
+
+# Create a temporary directory for the project
+project_dir = 'reproduce'
+if os.path.exists(project_dir):
+    shutil.rmtree(project_dir)
+os.makedirs(project_dir)
+
+# Change the working directory to the project directory
+os.chdir(project_dir)
+
+# Create a Django project
+subprocess.run([sys.executable, '-m', 'django', 'admin', 'startproject', 'reproduce', '.'], check=True)
+
+# Set the DJANGO_SETTINGS_MODULE environment variable
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reproduce.settings')
+
+# Set the PYTHONPATH environment variable
+os.environ.setdefault('PYTHONPATH', os.getcwd())
+
+# Create a Django app
+subprocess.run([sys.executable, 'manage.py', 'startapp', 'myapp'], check=True)
+
+# Add the app to INSTALLED_APPS
+settings_path = os.path.join('reproduce', 'settings.py')
+with open(settings_path, 'a') as f:
+    f.write("\nINSTALLED_APPS += ['myapp']\n")
+
+# Create the model file
+models_path = os.path.join('myapp', 'models.py')
+with open(models_path, 'w') as f:
+    f.write("""
+from django.core.files.storage import FileSystemStorage, default_storage
+from django.db import models
+import random
+
+other_storage = FileSystemStorage(location='/media/other')
+def get_storage():
+    return random.choice([default_storage, other_storage])
+
+class MyModel(models.Model):
+    my_file = models.FileField(storage=get_storage)
+""")
+
+# Print the current working directory and DJANGO_SETTINGS_MODULE
+print(f"Current working directory: {os.getcwd()}")
+print(f"DJANGO_SETTINGS_MODULE: {os.environ['DJANGO_SETTINGS_MODULE']}")
+print(f"PYTHONPATH: {os.environ['PYTHONPATH']}")
+
+# Run makemigrations
+subprocess.run([sys.executable, 'manage.py', 'makemigrations', 'myapp'], check=True)
\ No newline at end of file
