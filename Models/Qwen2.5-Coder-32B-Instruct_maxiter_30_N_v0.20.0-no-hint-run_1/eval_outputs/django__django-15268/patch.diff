diff --git a/tests/migrations/test_optimize_foo_together.py b/tests/migrations/test_optimize_foo_together.py
new file mode 100644
index 0000000000..19c3f0bdad
--- /dev/null
+++ b/tests/migrations/test_optimize_foo_together.py
@@ -0,0 +1,26 @@
+from django.db import migrations
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('tests', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AlterUniqueTogether(
+            name='mymodel',
+            unique_together=set(),
+        ),
+        migrations.AlterIndexTogether(
+            name='mymodel',
+            index_together=set(),
+        ),
+        migrations.AlterUniqueTogether(
+            name='mymodel',
+            unique_together={("col",)},
+        ),
+        migrations.AlterIndexTogether(
+            name='mymodel',
+            index_together={("col",)},
+        ),
+    ]
\ No newline at end of file
diff --git a/tests/test_optimize_foo_together.py b/tests/test_optimize_foo_together.py
new file mode 100644
index 0000000000..3e45633534
--- /dev/null
+++ b/tests/test_optimize_foo_together.py
@@ -0,0 +1,26 @@
+import os
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tests.test_settings')
+
+from django.test import TestCase
+from django.db.migrations.autodetector import MigrationAutodetector
+from django.db.migrations.state import ProjectState
+from django.db import models
+from django.db.migrations import operations
+
+class MyModel(models.Model):
+    col = models.IntegerField()
+
+class TestOptimizeFooTogether(TestCase):
+    def test_optimize_foo_together(self):
+        old_state = ProjectState.from_apps(self.apps)
+        new_state = ProjectState.from_apps(self.apps)
+
+        autodetector = MigrationAutodetector(old_state, new_state)
+        changes = autodetector._generate_altered_foo_together(operations.AlterUniqueTogether)
+        changes += autodetector._generate_altered_foo_together(operations.AlterIndexTogether)
+
+        self.assertEqual(len(changes), 2)
+        self.assertIsInstance(changes[0], operations.AlterUniqueTogether)
+        self.assertEqual(changes[0].unique_together, {("col",)})
+        self.assertIsInstance(changes[1], operations.AlterIndexTogether)
+        self.assertEqual(changes[1].index_together, {("col",)})
\ No newline at end of file
diff --git a/tests/test_settings.py b/tests/test_settings.py
new file mode 100644
index 0000000000..df64affb02
--- /dev/null
+++ b/tests/test_settings.py
@@ -0,0 +1,24 @@
+import os
+import django
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+SECRET_KEY = 'fake-key'
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'tests',
+]
+
+# Add the tests directory to the Python path
+import sys
+sys.path.append('/workspace/django__django__4.1/tests')
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'test_db.sqlite3'),
+    }
+}
+
+django.setup()
\ No newline at end of file
