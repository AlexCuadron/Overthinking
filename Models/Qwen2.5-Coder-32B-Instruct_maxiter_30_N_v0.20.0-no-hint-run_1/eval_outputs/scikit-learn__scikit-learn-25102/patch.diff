diff --git a/reproduce_dtype_issue.py b/reproduce_dtype_issue.py
new file mode 100644
index 000000000..6fb23ce43
--- /dev/null
+++ b/reproduce_dtype_issue.py
@@ -0,0 +1,18 @@
+import numpy as np
+from sklearn.datasets import load_iris
+from sklearn.feature_selection import SelectKBest
+from sklearn.feature_selection import chi2
+
+X, y = load_iris(return_X_y=True, as_frame=True)
+X = X.astype(
+   {
+       "petal width (cm)": np.float16,
+       "petal length (cm)": np.float16,
+   }
+)
+X["cat"] = y.astype("category")
+
+selector = SelectKBest(chi2, k=2)
+selector.set_output(transform="pandas")
+X_out = selector.fit_transform(X, y)
+print(X_out.dtypes)
\ No newline at end of file
diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py
index 335773c6a..f639a9f7a 100644
--- a/sklearn/utils/_set_output.py
+++ b/sklearn/utils/_set_output.py
@@ -12,6 +12,7 @@ def _wrap_in_pandas_container(
     *,
     columns,
     index=None,
+    dtypes=None,
 ):
     """Create a Pandas DataFrame.

@@ -59,7 +60,10 @@ def _wrap_in_pandas_container(
             data_to_wrap.index = index
         return data_to_wrap

-    return pd.DataFrame(data_to_wrap, index=index, columns=columns)
+    df = pd.DataFrame(data_to_wrap, index=index, columns=columns)
+    if dtypes is not None:
+        df = df.astype(dtypes)
+    return df


 def _get_output_config(method, estimator=None):
