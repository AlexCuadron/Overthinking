diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 00000000..97e13d1e
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,8 @@
+import numpy as np
+import xarray as xr
+
+dta = xr.DataArray([1., 1., 1.])
+wgt = xr.DataArray(np.array([1, 1, 0], dtype=np.bool))
+
+result = dta.weighted(wgt).mean()
+print(result)
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 00000000..cc4c3f96
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,16 @@
+import numpy as np
+import xarray as xr
+
+# Test case 1: All weights are False (or 0)
+dta1 = xr.DataArray([1., 1., 1.])
+wgt1 = xr.DataArray(np.array([0, 0, 0], dtype=np.bool))
+
+result1 = dta1.weighted(wgt1).mean()
+print("Test case 1 (all weights False):", result1)
+
+# Test case 2: Data array contains missing values
+dta2 = xr.DataArray([1., np.nan, 1.])
+wgt2 = xr.DataArray(np.array([1, 1, 1], dtype=np.bool))
+
+result2 = dta2.weighted(wgt2).mean()
+print("Test case 2 (data with missing values):", result2)
\ No newline at end of file
diff --git a/xarray/core/weighted.py b/xarray/core/weighted.py
index 996d2e4c..aba7df7f 100644
--- a/xarray/core/weighted.py
+++ b/xarray/core/weighted.py
@@ -142,7 +142,7 @@ class Weighted:
         # we need to mask data values that are nan; else the weights are wrong
         mask = da.notnull()

-        sum_of_weights = self._reduce(mask, self.weights, dim=dim, skipna=False)
+        sum_of_weights = self._reduce(mask, self.weights.astype(int), dim=dim, skipna=False)

         # 0-weights are not valid
         valid_weights = sum_of_weights != 0.0
