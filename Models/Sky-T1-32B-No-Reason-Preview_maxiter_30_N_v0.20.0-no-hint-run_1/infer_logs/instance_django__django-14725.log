2025-01-17 14:55:41,932 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_35gokzdisy9zo6jf_1nhip1b65cn5t1ze
2025-01-17 14:55:41,941 - INFO - [runtime 9574d37e-71dd-49a3-87d4-a298a95c9568-7df43f7327b064ac] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_35gokzdisy9zo6jf_1nhip1b65cn5t1ze
2025-01-17 14:55:42,846 - INFO - [runtime 9574d37e-71dd-49a3-87d4-a298a95c9568-7df43f7327b064ac] Container started: openhands-runtime-9574d37e-71dd-49a3-87d4-a298a95c9568-7df43f7327b064ac. VSCode URL: None
2025-01-17 14:55:42,846 - INFO - [runtime 9574d37e-71dd-49a3-87d4-a298a95c9568-7df43f7327b064ac] Waiting for client to become ready at http://localhost:34943...
2025-01-17 14:56:08,913 - INFO - [runtime 9574d37e-71dd-49a3-87d4-a298a95c9568-7df43f7327b064ac] Runtime is ready.
2025-01-17 14:56:09,548 - INFO - ------------------------------
2025-01-17 14:56:09,548 - INFO - BEGIN Runtime Initialization Fn
2025-01-17 14:56:09,548 - INFO - ------------------------------
2025-01-17 14:56:09,548 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-14725' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-17 14:56:10,173 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 14:56:10,173 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-17 14:56:10,798 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 14:56:10,798 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-17 14:56:11,424 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 14:56:11,432 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-17 14:56:12,056 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=django__django-14725
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 14:56:12,057 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-17 14:56:12,681 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 14:56:12,681 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-17 14:56:17,337 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__4.1
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 14:56:17,337 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__4.1
2025-01-17 14:56:17,962 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 14:56:17,962 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-17 14:56:19,090 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 0af9a5fc7d Fixed #33463 -- Fixed QuerySet.bulk_update() with F() expressions.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 14:56:19,090 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-17 14:56:19,716 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 14:56:19,717 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-17 14:56:20,342 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 14:56:20,343 - INFO - ------------------------------
2025-01-17 14:56:20,343 - INFO - END Runtime Initialization Fn
2025-01-17 14:56:20,343 - INFO - ------------------------------
2025-01-17 14:56:20,344 - INFO - Function calling not enabled for model hosted_vllm/NovaSky-AI/Sky-T1-32B-Preview. Mocking function calling via prompting.
2025-01-17 14:56:20,349 - INFO - [runtime 9574d37e-71dd-49a3-87d4-a298a95c9568-7df43f7327b064ac] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-01-17 14:56:20,366 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-17 14:56:20,367 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-17 15:00:07,473 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-17 15:01:00,056 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-17 15:01:56,024 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-17 15:03:07,293 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-17 15:04:20,201 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-17 15:05:32,622 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-17 15:06:51,381 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-17 15:08:25,708 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-17 15:10:15,962 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-17 15:11:20,252 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-17 15:13:23,427 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-17 15:14:43,694 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-17 15:16:31,413 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-17 15:18:11,787 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-17 15:19:06,216 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-17 15:20:12,544 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-17 15:21:40,844 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-17 15:22:38,812 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-17 15:24:35,297 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-17 15:25:40,958 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-17 15:27:03,977 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-17 15:28:44,635 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-17 15:29:45,458 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-17 15:31:30,623 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-17 15:32:45,051 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-17 15:34:21,020 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-17 15:35:25,976 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-17 15:36:22,249 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-17 15:36:22,252 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-17 15:36:22,631 - INFO - ------------------------------
2025-01-17 15:36:22,631 - INFO - BEGIN Runtime Completion Fn
2025-01-17 15:36:22,631 - INFO - ------------------------------
2025-01-17 15:36:22,631 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__4.1
2025-01-17 15:36:23,256 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 15:36:23,257 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-17 15:36:23,880 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 15:36:23,880 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-17 15:36:26,519 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 15:36:26,520 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 0af9a5fc7d765aa05ea784e2c3237675f3bb4b49
2025-01-17 15:36:27,145 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "698976b65226",
  "working_dir": "/workspace/django__django__4.1",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/django/forms/models.py b/django/forms/models.py
index 7effb202e3..6ffa893c71 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -578,6 +578,26 @@ class BaseModelFormSet(BaseFormSet):
         self.initial_extra = initial
         super().__init__(**{'data': data, 'files': files, 'auto_id': auto_id, 'prefix': prefix, **kwargs})

+class EditOnlyModelFormSet(BaseModelFormSet):
+    can_add_new = False
+
+    def add_fields(self, form, index):
+        super().add_fields(form, index)
+        form.fields[self._total_form_count_field].widget.attrs['readonly'] = True
+
+    def _construct_forms(self):
+        forms = super()._construct_forms()
+        if not self.can_add_new:
+            for form in forms:
+                if form.instance.pk is None:
+                    form.cleaned_data = {}
+                    form.instance = None
+        return forms
+
+    def save_new(self, form, commit=True):
+        if not self.can_add_new:
+            return None
+        return super().save_new(form, commit=commit)
     def initial_form_count(self):
         """Return the number of forms that are required in this FormSet."""
         if not self.is_bound:
diff --git a/tests/test_formset.py b/tests/test_formset.py
new file mode 100644
index 0000000000..89ec53e44a
--- /dev/null
+++ b/tests/test_formset.py
@@ -0,0 +1,70 @@
+import unittest
+import django
+from django.conf import settings
+from django.db import models
+from django.test import TestCase, override_settings
+from django.forms import modelformset_factory
+from django.forms.models import BaseModelFormSet
+
+settings.configure(
+    INSTALLED_APPS=['django.forms'],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    DEFAULT_AUTO_FIELD='django.db.models.BigAutoField',
+)
+
+django.setup()
+
+class EditOnlyModelFormSet(BaseModelFormSet):
+    can_add_new = False
+
+    def add_fields(self, form, index):
+        super().add_fields(form, index)
+        form.fields[self._total_form_count_field].widget.attrs['readonly'] = True
+
+    def _construct_forms(self):
+        forms = super()._construct_forms()
+        if not self.can_add_new:
+            for form in forms:
+                if form.instance.pk is None:
+                    form.cleaned_data = {}
+                    form.instance = None
+        return forms
+
+    def save_new(self, form, commit=True):
+        if not self.can_add_new:
+            return None
+        return super().save_new(form, commit=commit)
+
+class SomeModel(models.Model):
+    name = models.CharField(max_length=100)
+
+    class Meta:
+        app_label = 'test_app'
+
+class TestModelFormset(TestCase):
+    @classmethod
+    def setUpTestData(cls):
+        cls.SomeFormSet = modelformset_factory(SomeModel, fields=('name',), formset=EditOnlyModelFormSet, extra=0)
+        SomeModel.objects.create(name='Item 1')
+        SomeModel.objects.create(name='Item 2')
+
+    def test_extra_forms(self):
+        # Simulate POST data with extra forms
+        post_data = {
+            'form-TOTAL_FORMS': '3',  # Asking for 3 forms
+            'form-INITIAL_FORMS': '2',  # 2 initial forms
+            'form-0-id': '1',
+            'form-0-name': 'Item 1 updated',
+            'form-1-id': '2',
+            'form-1-name': 'Item 2 updated',
+            'form-2-name': 'New Item',  # This is an extra form
+        }
+        formset = self.SomeFormSet(post_data, queryset=SomeModel.objects.all(), prefix='form')
+        self.assertTrue(formset.is_valid())
+        formset.save()
+        self.assertEqual(SomeModel.objects.count(), 2)  # New item should not be created
\ No newline at end of file
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.1]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-17 15:36:27,145 - INFO - ------------------------------
2025-01-17 15:36:27,145 - INFO - END Runtime Completion Fn
2025-01-17 15:36:27,145 - INFO - ------------------------------
2025-01-17 15:36:27,145 - INFO - Got git diff for instance django__django-14725:
--------
diff --git a/django/forms/models.py b/django/forms/models.py
index 7effb202e3..6ffa893c71 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -578,6 +578,26 @@ class BaseModelFormSet(BaseFormSet):
         self.initial_extra = initial
         super().__init__(**{'data': data, 'files': files, 'auto_id': auto_id, 'prefix': prefix, **kwargs})

+class EditOnlyModelFormSet(BaseModelFormSet):
+    can_add_new = False
+
+    def add_fields(self, form, index):
+        super().add_fields(form, index)
+        form.fields[self._total_form_count_field].widget.attrs['readonly'] = True
+
+    def _construct_forms(self):
+        forms = super()._construct_forms()
+        if not self.can_add_new:
+            for form in forms:
+                if form.instance.pk is None:
+                    form.cleaned_data = {}
+                    form.instance = None
+        return forms
+
+    def save_new(self, form, commit=True):
+        if not self.can_add_new:
+            return None
+        return super().save_new(form, commit=commit)
     def initial_form_count(self):
         """Return the number of forms that are required in this FormSet."""
         if not self.is_bound:
diff --git a/tests/test_formset.py b/tests/test_formset.py
new file mode 100644
index 0000000000..89ec53e44a
--- /dev/null
+++ b/tests/test_formset.py
@@ -0,0 +1,70 @@
+import unittest
+import django
+from django.conf import settings
+from django.db import models
+from django.test import TestCase, override_settings
+from django.forms import modelformset_factory
+from django.forms.models import BaseModelFormSet
+
+settings.configure(
+    INSTALLED_APPS=['django.forms'],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    DEFAULT_AUTO_FIELD='django.db.models.BigAutoField',
+)
+
+django.setup()
+
+class EditOnlyModelFormSet(BaseModelFormSet):
+    can_add_new = False
+
+    def add_fields(self, form, index):
+        super().add_fields(form, index)
+        form.fields[self._total_form_count_field].widget.attrs['readonly'] = True
+
+    def _construct_forms(self):
+        forms = super()._construct_forms()
+        if not self.can_add_new:
+            for form in forms:
+                if form.instance.pk is None:
+                    form.cleaned_data = {}
+                    form.instance = None
+        return forms
+
+    def save_new(self, form, commit=True):
+        if not self.can_add_new:
+            return None
+        return super().save_new(form, commit=commit)
+
+class SomeModel(models.Model):
+    name = models.CharField(max_length=100)
+
+    class Meta:
+        app_label = 'test_app'
+
+class TestModelFormset(TestCase):
+    @classmethod
+    def setUpTestData(cls):
+        cls.SomeFormSet = modelformset_factory(SomeModel, fields=('name',), formset=EditOnlyModelFormSet, extra=0)
+        SomeModel.objects.create(name='Item 1')
+        SomeModel.objects.create(name='Item 2')
+
+    def test_extra_forms(self):
+        # Simulate POST data with extra forms
+        post_data = {
+            'form-TOTAL_FORMS': '3',  # Asking for 3 forms
+            'form-INITIAL_FORMS': '2',  # 2 initial forms
+            'form-0-id': '1',
+            'form-0-name': 'Item 1 updated',
+            'form-1-id': '2',
+            'form-1-name': 'Item 2 updated',
+            'form-2-name': 'New Item',  # This is an extra form
+        }
+        formset = self.SomeFormSet(post_data, queryset=SomeModel.objects.all(), prefix='form')
+        self.assertTrue(formset.is_valid())
+        formset.save()
+        self.assertEqual(SomeModel.objects.count(), 2)  # New item should not be created
\ No newline at end of file
--------
2025-01-17 15:36:28,879 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.django_s_django-16595. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-17 15:36:28,880 - INFO - Logging LLM completions for instance django__django-16595 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/Sky-T1-32B-Preview_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/django__django-16595
