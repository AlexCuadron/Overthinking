diff --git a/sympy/combinatorics/homomorphisms.py b/sympy/combinatorics/homomorphisms.py
index bb7bdf32ba..2dc89876a4 100644
--- a/sympy/combinatorics/homomorphisms.py
+++ b/sympy/combinatorics/homomorphisms.py
@@ -308,12 +308,15 @@ def homomorphism(domain, codomain, gens, images=(), check=True):
     return GroupHomomorphism(domain, codomain, images)

 def _check_homomorphism(domain, codomain, images):
+    print("Checking homomorphism for domain:", domain)
+    print("Images:", images)
     if hasattr(domain, 'relators'):
         rels = domain.relators
     else:
         gens = domain.presentation().generators
         rels = domain.presentation().relators
     identity = codomain.identity
+    print("Relators:", rels)

     def _image(r):
         if r.is_identity:
@@ -333,10 +336,13 @@ def _image(r):
             # both indices
             while i < len(r):
                 power = r_arr[j][1]
-                if isinstance(domain, PermutationGroup) and r[i] in gens:
-                    s = domain.generators[gens.index(r[i])]
+                image_dict = {gen: image for gen, image in zip(gens, images)}
+                image_dict.update({gen**-1: image**-1 for gen, image in zip(gens, images)})
+
+                if r[i] in image_dict:
+                    s = image_dict[r[i]]
                 else:
-                    s = r[i]
+                    raise ValueError("r[i] is not a generator or its inverse")
                 if s in images:
                     w = w*images[s]**power
                 elif s**-1 in images:
