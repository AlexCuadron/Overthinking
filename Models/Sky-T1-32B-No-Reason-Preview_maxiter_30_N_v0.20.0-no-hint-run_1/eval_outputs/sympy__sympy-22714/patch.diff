diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..d512072bb2
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,3 @@
+import sympy as sp
+with sp.evaluate(False):
+    sp.S('Point2D(Integer(1),Integer(2))')
diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py
index 73c20334d0..0909ad8bb6 100644
--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -108,6 +108,21 @@ class Point(GeometryEntity):

     def __new__(cls, *args, **kwargs):
         evaluate = kwargs.get('evaluate', global_parameters.evaluate)
+print("Coords:", coords)
+print("Coords:", coords)
+print("Coords:", coords)
+print("Coords:", coords)
+print("Coords:", coords)
+print("Coords:", coords)
+print("Coords:", coords)
+print("Coords:", coords)
+print("Coords:", coords)
+print("Coords:", coords)
+print("Coords:", coords)
+print("Coords:", coords)
+print("Coords:", coords)
+print("Coords:", coords)
+print("Coords:", coords)
         on_morph = kwargs.get('on_morph', 'ignore')

         # unpack into coords
@@ -152,6 +167,8 @@ def __new__(cls, *args, **kwargs):
                         'warn' or 'ignore'.'''))
         if any(coords[dim:]):
             raise ValueError('Nonzero coordinates cannot be removed.')
+print("Coords:", coords)
+print("Coords:", coords)
         if any(a.is_number and im(a) for a in coords):
             raise ValueError('Imaginary coordinates are not permitted.')
         if not all(isinstance(a, Expr) for a in coords):
