diff --git a/.github/PULL_REQUEST_TEMPLATE.md b/.github/PULL_REQUEST_TEMPLATE.md
index 7436f7146..f516959bc 100644
--- a/.github/PULL_REQUEST_TEMPLATE.md
+++ b/.github/PULL_REQUEST_TEMPLATE.md
@@ -2,14 +2,15 @@
 Thanks for submitting a PR, your contribution is really appreciated!

 Here is a quick checklist that should be present in PRs.
+(please delete this text from the final description, this is just a guideline)
+-->

 - [ ] Target the `master` branch for bug fixes, documentation updates and trivial changes.
 - [ ] Target the `features` branch for new features, improvements, and removals/deprecations.
 - [ ] Include documentation when adding new features.
 - [ ] Include new tests or update existing tests when applicable.

-Unless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:
+Unless your change is trivial or a small documentation fix (e.g.,  a typo or reword of a small section) please:

 - [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/master/changelog/README.rst) for details.
-- [ ] Add yourself to `AUTHORS` in alphabetical order.
--->
+- [ ] Add yourself to `AUTHORS` in alphabetical order;
diff --git a/doc/en/example/simple.rst b/doc/en/example/simple.rst
index 05ccbc9b2..a7cd06d31 100644
--- a/doc/en/example/simple.rst
+++ b/doc/en/example/simple.rst
@@ -302,31 +302,34 @@ running from a test you can do something like this:

 .. code-block:: python

-    # content of your_module.py
+    # content of conftest.py


-    _called_from_test = False
+    def pytest_configure(config):
+        import sys

-.. code-block:: python
+        sys._called_from_test = True

-    # content of conftest.py

+    def pytest_unconfigure(config):
+        import sys

-    def pytest_configure(config):
-        your_module._called_from_test = True
+        del sys._called_from_test

-and then check for the ``your_module._called_from_test`` flag:
+and then check for the ``sys._called_from_test`` flag:

 .. code-block:: python

-    if your_module._called_from_test:
+    if hasattr(sys, "_called_from_test"):
         # called from within a test run
         ...
     else:
         # called "normally"
         ...

-accordingly in your application.
+accordingly in your application.  It's also a good idea
+to use your own application module rather than ``sys``
+for handling flag.

 Adding info to test report header
 --------------------------------------------------------------
