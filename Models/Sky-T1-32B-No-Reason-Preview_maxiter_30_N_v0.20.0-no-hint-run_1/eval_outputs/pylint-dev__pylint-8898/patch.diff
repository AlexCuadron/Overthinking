diff --git a/pylint/utils/utils.py b/pylint/utils/utils.py
index fa7f7b92f..ec9cea837 100644
--- a/pylint/utils/utils.py
+++ b/pylint/utils/utils.py
@@ -212,13 +212,14 @@ def register_plugins(linter: PyLinter, directory: str) -> None:
 def _splitstrip(string: str, sep: str = ",") -> list[str]:
     """Return a list of stripped string by splitting the string given as
     argument on `sep` (',' by default), empty strings are discarded.
+    Escaped commas (i.e., '\\,') are treated as part of the token.

-    >>> _splitstrip('a, b, c   ,  4,,')
-    ['a', 'b', 'c', '4']
+    >>> _splitstrip('a\\, b, c   ,  4,,')
+    ['a, b', 'c', '4']
     >>> _splitstrip('a')
     ['a']
-    >>> _splitstrip('a,\nb,\nc,')
-    ['a', 'b', 'c']
+    >>> _splitstrip('a\\,\\, b\\, c,')
+    ['a,, b, c', '']

     :type string: str or unicode
     :param string: a csv line
@@ -229,7 +230,25 @@ def _splitstrip(string: str, sep: str = ",") -> list[str]:
     :rtype: str or unicode
     :return: the unquoted string (or the input string if it wasn't quoted)
     """
-    return [word.strip() for word in string.split(sep) if word.strip()]
+    # Split the string by sep, considering escaped sep
+    parts = []
+    escaped = False
+    current = ''
+    for char in string:
+        if escaped:
+            current += char
+            escaped = False
+        elif char == '\\':
+            escaped = True
+        elif char == sep:
+            parts.append(current.strip())
+            current = ''
+        else:
+            current += char
+    if escaped:
+        current += '\\'
+    parts.append(current.strip())
+    return [part for part in parts if part]


 def _unquote(string: str) -> str:
