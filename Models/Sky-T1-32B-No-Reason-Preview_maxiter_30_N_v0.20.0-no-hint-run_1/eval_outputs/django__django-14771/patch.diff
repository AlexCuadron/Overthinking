diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py
index 473fde0de0..0a69dea7c1 100644
--- a/django/core/management/commands/runserver.py
+++ b/django/core/management/commands/runserver.py
@@ -57,6 +57,12 @@ class Command(BaseCommand):
             help='Skip system checks.',
         )

+parser.add_argument(
+        '-X',
+        action='append',
+        dest='xoptions',
+        help='Pass directly to Python interpreter.'
+    )
     def execute(self, *args, **options):
         if options['no_color']:
             # We rely on the environment because it's currently the only
@@ -70,7 +76,43 @@ class Command(BaseCommand):
         return get_internal_wsgi_application()

     def handle(self, *args, **options):
+    xoptions = options.get('xoptions', [])
+xoptions = options.get('xoptions', [])
+    if xoptions:
+        os.environ['PYTHON_XOPTIONS'] = ' '.join(xoptions)
+xoptions = options.get('xoptions', [])
+    if xoptions:
+        os.environ['PYTHON_XOPTIONS'] = ' '.join(xoptions)
+xoptions = options.get('xoptions', [])
+    if xoptions:
+        os.environ['PYTHON_XOPTIONS'] = ' '.join(xoptions)
+xoptions = options.get('xoptions', [])
+    if xoptions:
+        os.environ['PYTHON_XOPTIONS'] = ' '.join(xoptions)
+xoptions = options.get('xoptions', [])
+    if xoptions:
+        os.environ['PYTHON_XOPTIONS'] = ' '.join(xoptions)
+xoptions = options.get('xoptions', [])
+    if xoptions:
+        os.environ['PYTHON_XOPTIONS'] = ' '.join(xoptions)
+xoptions = options.get('xoptions', [])
+    if xoptions:
+        os.environ['PYTHON_XOPTIONS'] = ' '.join(xoptions)
+xoptions = options.get('xoptions', [])
+    if xoptions:
+        os.environ['PYTHON_XOPTIONS'] = ' '.join(xoptions)
+xoptions = options.get('xoptions', [])
+    if xoptions:
+        os.environ['PYTHON_XOPTIONS'] = ' '.join(xoptions)
+xoptions = options.get('xoptions', [])
+    if xoptions:
+        os.environ['PYTHON_XOPTIONS'] = ' '.join(xoptions)
+    if xoptions:
+        os.environ['PYTHON_XOPTIONS'] = ' '.join(xoptions)
         if not settings.DEBUG and not settings.ALLOWED_HOSTS:
+xoptions = options.get('xoptions', [])
+    if xoptions:
+        os.environ['PYTHON_XOPTIONS'] = ' '.join(xoptions)
             raise CommandError('You must set settings.ALLOWED_HOSTS if DEBUG is False.')

         self.use_ipv6 = options['use_ipv6']
