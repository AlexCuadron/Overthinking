2025-01-21 04:27:31,585 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_o4ctee0u5194m3az_4owg5glus4xdu5o9
2025-01-21 04:29:53,714 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_o4ctee0u5194m3az_4owg5glus4xdu5o9] build finished.
2025-01-21 04:29:53,736 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_o4ctee0u5194m3az_4owg5glus4xdu5o9] with more generic tag [oh_v0.20.0_o4ctee0u5194m3az]
2025-01-21 04:29:53,739 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_o4ctee0u5194m3az_4owg5glus4xdu5o9, oh_v0.20.0_o4ctee0u5194m3az] built successfully
2025-01-21 04:29:53,808 - INFO - [runtime 777c9b7d-e447-4fa3-9c46-6c22b2c3a4f4-31c91fdcb38b2789] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_o4ctee0u5194m3az_4owg5glus4xdu5o9
2025-01-21 04:29:55,778 - INFO - [runtime 777c9b7d-e447-4fa3-9c46-6c22b2c3a4f4-31c91fdcb38b2789] Container started: openhands-runtime-777c9b7d-e447-4fa3-9c46-6c22b2c3a4f4-31c91fdcb38b2789. VSCode URL: None
2025-01-21 04:29:55,778 - INFO - [runtime 777c9b7d-e447-4fa3-9c46-6c22b2c3a4f4-31c91fdcb38b2789] Waiting for client to become ready at http://localhost:36405...
2025-01-21 04:30:31,904 - INFO - [runtime 777c9b7d-e447-4fa3-9c46-6c22b2c3a4f4-31c91fdcb38b2789] Runtime is ready.
2025-01-21 04:30:32,552 - INFO - ------------------------------
2025-01-21 04:30:32,553 - INFO - BEGIN Runtime Initialization Fn
2025-01-21 04:30:32,553 - INFO - ------------------------------
2025-01-21 04:30:32,553 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=matplotlib__matplotlib-24149' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-21 04:30:33,184 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:30:33,184 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-21 04:30:33,817 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:30:33,817 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-21 04:30:34,449 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:30:34,464 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-21 04:30:35,094 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=matplotlib__matplotlib-24149
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:30:35,094 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-21 04:30:35,723 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:30:35,724 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-21 04:30:35,724 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-21 04:30:42,409 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: matplotlib__matplotlib__3.6
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:30:42,409 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/matplotlib__matplotlib__3.6
2025-01-21 04:30:43,040 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:30:43,041 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-21 04:30:44,180 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at af39f1edff Merge pull request #24102 from ianthomas23/simple_pyproject
[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:30:44,181 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-21 04:30:44,825 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:30:44,825 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-21 04:30:45,457 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:30:45,457 - INFO - ------------------------------
2025-01-21 04:30:45,458 - INFO - END Runtime Initialization Fn
2025-01-21 04:30:45,458 - INFO - ------------------------------
2025-01-21 04:30:45,460 - INFO - Function calling not enabled for model deepseek/deepseek-reasoner. Mocking function calling via prompting.
2025-01-21 04:30:45,468 - INFO - [runtime 777c9b7d-e447-4fa3-9c46-6c22b2c3a4f4-31c91fdcb38b2789] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-01-21 04:30:45,489 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-21 04:30:45,490 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-21 04:30:56,347 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-21 04:31:13,488 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-21 04:31:26,391 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-21 04:33:09,534 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-21 04:33:56,795 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-21 04:34:36,549 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-21 04:35:52,911 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-21 04:36:02,719 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-21 04:37:33,292 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-21 04:37:48,790 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-21 04:37:55,663 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-01-21 04:37:55,910 - INFO - ------------------------------
2025-01-21 04:37:55,910 - INFO - BEGIN Runtime Completion Fn
2025-01-21 04:37:55,910 - INFO - ------------------------------
2025-01-21 04:37:55,910 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/matplotlib__matplotlib__3.6
2025-01-21 04:37:56,540 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:37:56,540 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-21 04:37:57,169 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:37:57,169 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-21 04:37:57,797 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:37:57,798 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached af39f1edffcd828f05cfdd04f2e59506bb4a27bc
2025-01-21 04:37:58,512 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "24cffe01b36f",
  "working_dir": "/workspace/matplotlib__matplotlib__3.6",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/.circleci/config.yml b/.circleci/config.yml
index bd139de688..2b6ef7c642 100644
--- a/.circleci/config.yml
+++ b/.circleci/config.yml
@@ -141,7 +141,7 @@ commands:
                [ "$CIRCLE_PR_NUMBER" = "" ]; then
               export RELEASE_TAG='-t release'
             fi
-            make html O="-T $RELEASE_TAG -j4 -w /tmp/sphinxerrorswarnings.log"
+            make html O="-T $RELEASE_TAG -j4"
             rm -r build/html/_sources
           working_directory: doc
       - save_cache:
@@ -149,24 +149,6 @@ commands:
           paths:
             - doc/build/doctrees

-  doc-show-errors-warnings:
-    steps:
-      - run:
-          name: Extract possible build errors and warnings
-          command: |
-           (grep "WARNING\|ERROR" /tmp/sphinxerrorswarnings.log ||
-            echo "No errors or warnings")
-
-  doc-show-deprecations:
-    steps:
-      - run:
-          name: Extract possible deprecation warnings in examples and tutorials
-          command: |
-           (grep DeprecationWarning -r -l doc/build/html/gallery ||
-            echo "No deprecation warnings in gallery")
-           (grep DeprecationWarning -r -l doc/build/html/tutorials ||
-            echo "No deprecation warnings in tutorials")
-
   doc-bundle:
     steps:
       - run:
@@ -204,8 +186,6 @@ jobs:
       - doc-deps-install

       - doc-build
-      - doc-show-errors-warnings
-      - doc-show-deprecations

       - doc-bundle

diff --git a/.flake8 b/.flake8
index 7a617c1fed..4cbcd7e288 100644
--- a/.flake8
+++ b/.flake8
@@ -113,4 +113,3 @@ per-file-ignores =
     examples/user_interfaces/pylab_with_gtk4_sgskip.py: E402
     examples/user_interfaces/toolmanager_sgskip.py: E402
     examples/userdemo/pgf_preamble_sgskip.py: E402
-force-check = True
diff --git a/.github/workflows/cibuildsdist.yml b/.github/workflows/cibuildsdist.yml
index d8b609dc73..4e1d9085f5 100644
--- a/.github/workflows/cibuildsdist.yml
+++ b/.github/workflows/cibuildsdist.yml
@@ -62,9 +62,3 @@ jobs:

       - name: Check version number is not 0
         run: python ./ci/check_version_number.py
-
-      - name: Install twine
-        run: pip install twine
-
-      - name: Check README rendering for PyPI
-        run: twine check dist/*
diff --git a/.github/workflows/nightlies.yml b/.github/workflows/nightlies.yml
index 571ebdcac7..48c6e9713a 100644
--- a/.github/workflows/nightlies.yml
+++ b/.github/workflows/nightlies.yml
@@ -49,7 +49,7 @@ jobs:

         # N.B. anaconda-client is only maintained on the main channel
       - name: Install anaconda-client
-        uses: mamba-org/provision-with-micromamba@v13
+        uses: mamba-org/provision-with-micromamba@v12
         with:
           environment-file: false
           environment-name: nightlies
diff --git a/.github/workflows/tests.yml b/.github/workflows/tests.yml
index fd6eac7ce2..0c5b7a08ce 100644
--- a/.github/workflows/tests.yml
+++ b/.github/workflows/tests.yml
@@ -240,13 +240,9 @@ jobs:

           cat mplsetup.cfg

-          if [[ "${{ matrix.name-suffix }}" == '(Minimum Versions)' ]]; then
-            # Minimum versions run does not use build isolation so that it
-            # builds against the pre-installed minver dependencies.
-            python -m pip install --no-deps --no-build-isolation -ve .
-          else
-            python -m pip install --no-deps -ve .
-          fi
+          # All dependencies must have been pre-installed, so that the minver
+          # constraints are held.
+          python -m pip install --no-deps -ve .

           if [[ "${{ runner.os }}" != 'macOS' ]]; then
             unset CPPFLAGS
diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
index 0c2e61dec9..86ceee894c 100644
--- a/.pre-commit-config.yaml
+++ b/.pre-commit-config.yaml
@@ -28,7 +28,7 @@ repos:
     rev: 4.0.1
     hooks:
       - id: flake8
-        additional_dependencies: [pydocstyle>5.1.0, flake8-docstrings>1.4.0, flake8-force]
+        additional_dependencies: [pydocstyle>5.1.0, flake8-docstrings>1.4.0]
         args: ["--docstring-convention=all"]
   - repo: https://github.com/codespell-project/codespell
     rev: v2.1.0
diff --git a/README.md b/README.md
deleted file mode 100644
index d58c26ffcd..0000000000
--- a/README.md
+++ /dev/null
@@ -1,89 +0,0 @@
-[![PyPi](https://badge.fury.io/py/matplotlib.svg)](https://badge.fury.io/py/matplotlib)
-[![Downloads](https://pepy.tech/badge/matplotlib/month)](https://pepy.tech/project/matplotlib)
-[![NUMFocus](https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A)](https://numfocus.org)
-
-[![DiscourseBadge](https://img.shields.io/badge/help_forum-discourse-blue.svg)](https://discourse.matplotlib.org)
-[![Gitter](https://badges.gitter.im/matplotlib/matplotlib.svg)](https://gitter.im/matplotlib/matplotlib)
-[![GitHubIssues](https://img.shields.io/badge/issue_tracking-github-blue.svg)](https://github.com/matplotlib/matplotlib/issues)
-[![GitTutorial](https://img.shields.io/badge/PR-Welcome-%23FF8300.svg?)](https://git-scm.com/book/en/v2/GitHub-Contributing-to-a-Project)
-
-[![GitHubActions](https://github.com/matplotlib/matplotlib/workflows/Tests/badge.svg)](https://github.com/matplotlib/matplotlib/actions?query=workflow%3ATests)
-[![AzurePipelines](https://dev.azure.com/matplotlib/matplotlib/_apis/build/status/matplotlib.matplotlib?branchName=main)](https://dev.azure.com/matplotlib/matplotlib/_build/latest?definitionId=1&branchName=main)
-[![AppVeyor](https://ci.appveyor.com/api/projects/status/github/matplotlib/matplotlib?branch=main&svg=true)](https://ci.appveyor.com/project/matplotlib/matplotlib)
-[![Codecov](https://codecov.io/github/matplotlib/matplotlib/badge.svg?branch=main&service=github)](https://codecov.io/github/matplotlib/matplotlib?branch=main)
-[![LGTM](https://img.shields.io/lgtm/grade/python/github/matplotlib/matplotlib.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/matplotlib/matplotlib)
-
-![image](https://matplotlib.org/_static/logo2.svg)
-
-Matplotlib is a comprehensive library for creating static, animated, and
-interactive visualizations in Python.
-
-Check out our [home page](https://matplotlib.org/) for more information.
-
-![image](https://matplotlib.org/_static/readme_preview.png)
-
-Matplotlib produces publication-quality figures in a variety of hardcopy
-formats and interactive environments across platforms. Matplotlib can be
-used in Python scripts, Python/IPython shells, web application servers,
-and various graphical user interface toolkits.
-
-## Install
-
-See the [install
-documentation](https://matplotlib.org/stable/users/installing/index.html),
-which is generated from `/doc/users/installing/index.rst`
-
-## Contribute
-
-You've discovered a bug or something else you want to change -
-excellent!
-
-You've worked out a way to fix it -- even better!
-
-You want to tell us about it -- best of all!
-
-Start at the [contributing
-guide](https://matplotlib.org/devdocs/devel/contributing.html)!
-
-## Contact
-
-[Discourse](https://discourse.matplotlib.org/) is the discussion forum
-for general questions and discussions and our recommended starting
-point.
-
-Our active mailing lists (which are mirrored on Discourse) are:
-
--   [Users](https://mail.python.org/mailman/listinfo/matplotlib-users)
-    mailing list: <matplotlib-users@python.org>
--   [Announcement](https://mail.python.org/mailman/listinfo/matplotlib-announce)
-    mailing list: <matplotlib-announce@python.org>
--   [Development](https://mail.python.org/mailman/listinfo/matplotlib-devel)
-    mailing list: <matplotlib-devel@python.org>
-
-[Gitter](https://gitter.im/matplotlib/matplotlib) is for coordinating
-development and asking questions directly related to contributing to
-matplotlib.
-
-## Citing Matplotlib
-
-If Matplotlib contributes to a project that leads to publication, please
-acknowledge this by citing Matplotlib.
-
-[A ready-made citation
-entry](https://matplotlib.org/stable/users/project/citing.html) is
-available.
-
-### Research notice
-
-Please note that this repository is participating in a study into
-sustainability of open source projects. Data will be gathered about this
-repository for approximately the next 12 months, starting from June
-2021.
-
-Data collected will include number of contributors, number of PRs, time
-taken to close/merge these PRs, and issues closed.
-
-For more information, please visit [the informational
-page](https://sustainable-open-science-and-software.github.io/) or
-download the [participant information
-sheet](https://sustainable-open-science-and-software.github.io/assets/PIS_sustainable_software.pdf).
diff --git a/README.rst b/README.rst
new file mode 100644
index 0000000000..c07329b14e
--- /dev/null
+++ b/README.rst
@@ -0,0 +1,118 @@
+|PyPi|_ |Downloads|_ |NUMFocus|_
+
+|DiscourseBadge|_ |Gitter|_ |GitHubIssues|_ |GitTutorial|_
+
+|GitHubActions|_ |AzurePipelines|_ |AppVeyor|_ |Codecov|_ |LGTM|_
+
+.. |GitHubActions| image:: https://github.com/matplotlib/matplotlib/workflows/Tests/badge.svg
+.. _GitHubActions: https://github.com/matplotlib/matplotlib/actions?query=workflow%3ATests
+
+.. |AzurePipelines| image:: https://dev.azure.com/matplotlib/matplotlib/_apis/build/status/matplotlib.matplotlib?branchName=main
+.. _AzurePipelines: https://dev.azure.com/matplotlib/matplotlib/_build/latest?definitionId=1&branchName=main
+
+.. |AppVeyor| image:: https://ci.appveyor.com/api/projects/status/github/matplotlib/matplotlib?branch=main&svg=true
+.. _AppVeyor: https://ci.appveyor.com/project/matplotlib/matplotlib
+
+.. |Codecov| image:: https://codecov.io/github/matplotlib/matplotlib/badge.svg?branch=main&service=github
+.. _Codecov: https://codecov.io/github/matplotlib/matplotlib?branch=main
+
+.. |LGTM| image:: https://img.shields.io/lgtm/grade/python/github/matplotlib/matplotlib.svg?logo=lgtm&logoWidth=18
+.. _LGTM: https://lgtm.com/projects/g/matplotlib/matplotlib
+
+.. |DiscourseBadge| image:: https://img.shields.io/badge/help_forum-discourse-blue.svg
+.. _DiscourseBadge: https://discourse.matplotlib.org
+
+.. |Gitter| image:: https://badges.gitter.im/matplotlib/matplotlib.svg
+.. _Gitter: https://gitter.im/matplotlib/matplotlib
+
+.. |GitHubIssues| image:: https://img.shields.io/badge/issue_tracking-github-blue.svg
+.. _GitHubIssues: https://github.com/matplotlib/matplotlib/issues
+
+.. |GitTutorial| image:: https://img.shields.io/badge/PR-Welcome-%23FF8300.svg?
+.. _GitTutorial: https://git-scm.com/book/en/v2/GitHub-Contributing-to-a-Project
+
+.. |PyPi| image:: https://badge.fury.io/py/matplotlib.svg
+.. _PyPi: https://badge.fury.io/py/matplotlib
+
+.. |Downloads| image:: https://pepy.tech/badge/matplotlib/month
+.. _Downloads: https://pepy.tech/project/matplotlib
+
+.. |NUMFocus| image:: https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A
+.. _NUMFocus: https://numfocus.org
+
+.. image:: https://matplotlib.org/_static/logo2.svg
+
+Matplotlib is a comprehensive library for creating static, animated, and
+interactive visualizations in Python.
+
+Check out our `home page <https://matplotlib.org/>`_ for more information.
+
+.. image:: https://matplotlib.org/_static/readme_preview.png
+
+Matplotlib produces publication-quality figures in a variety of hardcopy
+formats and interactive environments across platforms. Matplotlib can be used
+in Python scripts, Python/IPython shells, web application servers, and
+various graphical user interface toolkits.
+
+
+Install
+=======
+
+For installation instructions and requirements, see the `install documentation
+<https://matplotlib.org/stable/users/installing/index.html>`_ or
+`installing.rst <doc/users/installing/index.rst>`_ in the source.
+
+Contribute
+==========
+
+You've discovered a bug or something else you want to change - excellent!
+
+You've worked out a way to fix it – even better!
+
+You want to tell us about it – best of all!
+
+Start at the `contributing guide
+<https://matplotlib.org/devdocs/devel/contributing.html>`_!
+
+Contact
+=======
+
+`Discourse <https://discourse.matplotlib.org/>`_ is the discussion forum for
+general questions and discussions and our recommended starting point.
+
+Our active mailing lists (which are mirrored on Discourse) are:
+
+* `Users <https://mail.python.org/mailman/listinfo/matplotlib-users>`_ mailing
+  list: matplotlib-users@python.org
+* `Announcement
+  <https://mail.python.org/mailman/listinfo/matplotlib-announce>`_ mailing
+  list: matplotlib-announce@python.org
+* `Development <https://mail.python.org/mailman/listinfo/matplotlib-devel>`_
+  mailing list: matplotlib-devel@python.org
+
+Gitter_ is for coordinating development and asking questions directly related
+to contributing to matplotlib.
+
+
+Citing Matplotlib
+=================
+If Matplotlib contributes to a project that leads to publication, please
+acknowledge this by citing Matplotlib.
+
+`A ready-made citation entry <https://matplotlib.org/stable/users/project/citing.html>`_ is
+available.
+
+Research notice
+~~~~~~~~~~~~~~~
+
+Please note that this repository is participating in a study into
+sustainability of open source projects. Data will be gathered about this
+repository for approximately the next 12 months, starting from June 2021.
+
+Data collected will include number of contributors, number of PRs, time taken
+to close/merge these PRs, and issues closed.
+
+For more information, please visit `the informational page
+<https://sustainable-open-science-and-software.github.io/>`__ or download the
+`participant information sheet
+<https://sustainable-open-science-and-software.github.io/assets/PIS_sustainable_software.pdf>`__.
diff --git a/doc/Makefile b/doc/Makefile
index 6316a5ca04..8a9dc61c7a 100644
--- a/doc/Makefile
+++ b/doc/Makefile
@@ -28,11 +28,6 @@ clean:
 show:
        @python -c "import webbrowser; webbrowser.open_new_tab('file://$(shell pwd)/build/html/index.html')"

-html-noplot:
-       $(SPHINXBUILD) -D plot_gallery=0 -b html $(SOURCEDIR) $(BUILDDIR)/html $(SPHINXOPTS) $(O)
-       @echo
-       @echo "Build finished. The HTML pages are in $(BUILDDIR)/html."
-
 # Catch-all target: route all unknown targets to Sphinx using the new
 # "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).
 %: Makefile
diff --git a/doc/_static/switcher.json b/doc/_static/switcher.json
index c72cbac2b2..00dd1ffa6c 100644
--- a/doc/_static/switcher.json
+++ b/doc/_static/switcher.json
@@ -1,6 +1,6 @@
 [
     {
-        "name": "3.6 (stable)",
+        "name": "3.6.1 (stable)",
         "version": "stable",
         "url": "https://matplotlib.org/stable/"
     },
diff --git a/doc/api/animation_api.rst b/doc/api/animation_api.rst
index 1325904567..5a3d53442f 100644
--- a/doc/api/animation_api.rst
+++ b/doc/api/animation_api.rst
@@ -97,11 +97,6 @@ this hopefully minimalist example gives a sense of how ``init_func``
 and ``func`` are used inside of `FuncAnimation` and the theory of how
 'blitting' works.

-.. note::
-
-    The zorder of artists is not taken into account when 'blitting'
-    because the 'blitted' artists are always drawn on top.
-
 The expected signature on ``func`` and ``init_func`` is very simple to
 keep `FuncAnimation` out of your book keeping and plotting logic, but
 this means that the callable objects you pass in must know what
diff --git a/doc/api/next_api_changes/behavior/23579-AL.rst b/doc/api/next_api_changes/behavior/23579-AL.rst
deleted file mode 100644
index dd79e4e25b..0000000000
--- a/doc/api/next_api_changes/behavior/23579-AL.rst
+++ /dev/null
@@ -1,5 +0,0 @@
-``HostAxesBase.get_aux_axes`` now defaults to using the same base axes class as the host axes
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-If using an ``mpl_toolkits.axisartist``-based host Axes, the parasite Axes will
-also be based on ``mpl_toolkits.axisartist``.  This behavior is consistent with
-``HostAxesBase.twin``, ``HostAxesBase.twinx``, and ``HostAxesBase.twiny``.
diff --git a/doc/api/next_api_changes/behavior/23710-ES.rst b/doc/api/next_api_changes/behavior/23710-ES.rst
deleted file mode 100644
index 6b417167a1..0000000000
--- a/doc/api/next_api_changes/behavior/23710-ES.rst
+++ /dev/null
@@ -1,7 +0,0 @@
-``plt.get_cmap`` and ``matplotlib.cm.get_cmap`` return a copy
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-Formerly, `~.pyplot.get_cmap` and `.cm.get_cmap` returned a global version of a
-`.Colormap`. This was prone to errors as modification of the colormap would
-propagate from one location to another without warning. Now, a new copy of the
-colormap is returned.
diff --git a/doc/api/next_api_changes/deprecations/23449-SS.rst b/doc/api/next_api_changes/deprecations/23449-SS.rst
deleted file mode 100644
index cc5123fc0b..0000000000
--- a/doc/api/next_api_changes/deprecations/23449-SS.rst
+++ /dev/null
@@ -1,3 +0,0 @@
-``axes3d.vvec``, ``axes3d.eye``, ``axes3d.sx``, and ``axes3d.sy``
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-... are deprecated without replacement.
diff --git a/doc/api/next_api_changes/deprecations/23720-RS.rst b/doc/api/next_api_changes/deprecations/23720-RS.rst
deleted file mode 100644
index 9e771009aa..0000000000
--- a/doc/api/next_api_changes/deprecations/23720-RS.rst
+++ /dev/null
@@ -1,13 +0,0 @@
-Deprecation aliases in cbook
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-The module ``matplotlib.cbook.deprecation`` was previously deprecated in
-Matplotlib 3.4, along with deprecation-related API in ``matplotlib.cbook``. Due
-to technical issues, ``matplotlib.cbook.MatplotlibDeprecationWarning`` and
-``matplotlib.cbook.mplDeprecation`` did not raise deprecation warnings on use.
-Changes in Python have now made it possible to warn when these aliases are
-being used.
-
-In order to avoid downstream breakage, these aliases will now warn, and their
-removal has been pushed from 3.6 to 3.8 to give time to notice said warnings.
-As replacement, please use `matplotlib.MatplotlibDeprecationWarning`.
diff --git a/doc/api/next_api_changes/deprecations/23735-ES.rst b/doc/api/next_api_changes/deprecations/23735-ES.rst
deleted file mode 100644
index 075abf73d9..0000000000
--- a/doc/api/next_api_changes/deprecations/23735-ES.rst
+++ /dev/null
@@ -1,13 +0,0 @@
-``AXes`` subclasses should override ``clear`` instead of ``cla``
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-For clarity, `.axes.Axes.clear` is now preferred over `.Axes.cla`. However, for
-backwards compatibility, the latter will remain as an alias for the former.
-
-For additional compatibility with third-party libraries, Matplotlib will
-continue to call the ``cla`` method of any `~.axes.Axes` subclasses if they
-define it. In the future, this will no longer occur, and Matplotlib will only
-call the ``clear`` method in `~.axes.Axes` subclasses.
-
-It is recommended to define only the ``clear`` method when on Matplotlib 3.6,
-and only ``cla`` for older versions.
diff --git a/doc/api/next_api_changes/deprecations/23824-OG.rst b/doc/api/next_api_changes/deprecations/23824-OG.rst
deleted file mode 100644
index 3b229725b1..0000000000
--- a/doc/api/next_api_changes/deprecations/23824-OG.rst
+++ /dev/null
@@ -1,16 +0,0 @@
-``draw_gouraud_triangle``
-~~~~~~~~~~~~~~~~~~~~~~~~~
-
-... is deprecated as in most backends this is a redundant call. Use
-`~.RendererBase.draw_gouraud_triangles` instead. A ``draw_gouraud_triangle``
-call in a custom `~matplotlib.artist.Artist` can readily be replaced as::
-
-    self.draw_gouraud_triangles(gc, points.reshape((1, 3, 2)),
-                                colors.reshape((1, 3, 4)), trans)
-
-A `~.RendererBase.draw_gouraud_triangles` method can be implemented from an
-existing ``draw_gouraud_triangle`` method as::
-
-    transform = transform.frozen()
-    for tri, col in zip(triangles_array, colors_array):
-        self.draw_gouraud_triangle(gc, tri, col, transform)
diff --git a/doc/api/next_api_changes/deprecations/24088-JMK.rst b/doc/api/next_api_changes/deprecations/24088-JMK.rst
deleted file mode 100644
index caa7e93a05..0000000000
--- a/doc/api/next_api_changes/deprecations/24088-JMK.rst
+++ /dev/null
@@ -1,9 +0,0 @@
-Colorbars for orphaned mappables are deprecated, but no longer raise
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-Before 3.6.0, Colorbars for mappables that do not have a parent axes would
-steal space from the current Axes.  3.6.0 raised an error on this, but without
-a deprecation cycle.  For 3.6.1 this is reverted, the current axes is used,
-but a deprecation warning is shown instead.  In this undetermined case users
-and libraries should explicitly specify what axes they want space to be stolen
-from: ``fig.colorbar(mappable, ax=plt.gca())``.
diff --git a/doc/api/next_api_changes/deprecations/24140-AL.rst b/doc/api/next_api_changes/deprecations/24140-AL.rst
deleted file mode 100644
index afe10ddc64..0000000000
--- a/doc/api/next_api_changes/deprecations/24140-AL.rst
+++ /dev/null
@@ -1,8 +0,0 @@
-``contour.ClabelText`` and ``ContourLabeler.set_label_props``
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-... are deprecated.
-
-Use ``Text(..., transform_rotates_text=True)`` as a replacement for
-``contour.ClabelText(...)`` and ``text.set(text=text, color=color,
-fontproperties=labeler.labelFontProps, clip_box=labeler.axes.bbox)`` as a
-replacement for the ``ContourLabeler.set_label_props(label, text, color)``.
diff --git a/doc/api/next_api_changes/removals/24128-OG.rst b/doc/api/next_api_changes/removals/24128-OG.rst
deleted file mode 100644
index 2a17a6c546..0000000000
--- a/doc/api/next_api_changes/removals/24128-OG.rst
+++ /dev/null
@@ -1,17 +0,0 @@
-``epoch2num`` and ``num2epoch`` are removed
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-These methods convert from unix timestamps to matplotlib floats, but are not
-used internally to Matplotlib, and should not be needed by end users. To
-convert a unix timestamp to datetime, simply use
-`datetime.datetime.utcfromtimestamp`, or to use NumPy `~numpy.datetime64`
-``dt = np.datetime64(e*1e6, 'us')``.
-
-
-Locator and Formatter wrapper methods
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-The ``set_view_interval``, ``set_data_interval`` and ``set_bounds`` methods of
-`.Locator`\s and `.Formatter`\s (and their common base class, TickHelper) are
-removed. Directly manipulate the view and data intervals on the underlying
-axis instead.
diff --git a/doc/api/prev_api_changes/api_changes_3.3.0/deprecations.rst b/doc/api/prev_api_changes/api_changes_3.3.0/deprecations.rst
index 70babe0f7a..22aa93f899 100644
--- a/doc/api/prev_api_changes/api_changes_3.3.0/deprecations.rst
+++ b/doc/api/prev_api_changes/api_changes_3.3.0/deprecations.rst
@@ -545,8 +545,8 @@ experimental and may change in the future.
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ... is deprecated.

-``epoch2num`` and ``num2epoch`` are deprecated
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+`.epoch2num` and `.num2epoch` are deprecated
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 These are unused and can be easily reproduced by other date tools.
 `.get_epoch` will return Matplotlib's epoch.

diff --git a/doc/api/prev_api_changes/api_changes_3.3.1.rst b/doc/api/prev_api_changes/api_changes_3.3.1.rst
index 3eda8a9a3a..b3383a4e5f 100644
--- a/doc/api/prev_api_changes/api_changes_3.3.1.rst
+++ b/doc/api/prev_api_changes/api_changes_3.3.1.rst
@@ -15,7 +15,7 @@ reverts the deprecation.
 Functions ``epoch2num`` and ``dates.julian2num`` use ``date.epoch`` rcParam
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-Now ``epoch2num`` and (undocumented) ``julian2num`` return floating point
+Now `~.dates.epoch2num` and (undocumented) ``julian2num`` return floating point
 days since `~.dates.get_epoch` as set by :rc:`date.epoch`, instead of
 floating point days since the old epoch of "0000-12-31T00:00:00".  If
 needed, you can translate from the new to old values as
diff --git a/doc/api/prev_api_changes/api_changes_3.6.1.rst b/doc/api/prev_api_changes/api_changes_3.6.1.rst
new file mode 100644
index 0000000000..ad929d4268
--- /dev/null
+++ b/doc/api/prev_api_changes/api_changes_3.6.1.rst
@@ -0,0 +1,15 @@
+API Changes for 3.6.1
+=====================
+
+Deprecations
+------------
+
+Colorbars for orphaned mappables are deprecated, but no longer raise
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+Before 3.6.0, Colorbars for mappables that do not have a parent Axes would
+steal space from the current Axes. 3.6.0 raised an error on this, but without a
+deprecation cycle. For 3.6.1 this is reverted; the current Axes is used, but a
+deprecation warning is shown instead. In this undetermined case, users and
+libraries should explicitly specify what Axes they want space to be stolen
+from: ``fig.colorbar(mappable, ax=plt.gca())``.
diff --git a/doc/conf.py b/doc/conf.py
index 4b9dfdaddb..5aa58a3aca 100644
--- a/doc/conf.py
+++ b/doc/conf.py
@@ -11,7 +11,6 @@
 # All configuration values have a default value; values that are commented out
 # serve to show the default value.

-import logging
 import os
 from pathlib import Path
 import shutil
@@ -58,6 +57,7 @@ warnings.filterwarnings('error', append=True)
 extensions = [
     'sphinx.ext.autodoc',
     'sphinx.ext.autosummary',
+    'sphinx.ext.doctest',
     'sphinx.ext.inheritance_diagram',
     'sphinx.ext.intersphinx',
     'sphinx.ext.ifconfig',
@@ -188,7 +188,6 @@ sphinx_gallery_conf = {
     'junit': '../test-results/sphinx-gallery/junit.xml' if CIRCLECI else '',
     'matplotlib_animations': True,
     'min_reported_time': 1,
-    'plot_gallery': 'True',  # sphinx-gallery/913
     'reference_url': {'matplotlib': None},
     'remove_config_comments': True,
     'reset_modules': (
@@ -202,25 +201,6 @@ sphinx_gallery_conf = {
     'capture_repr': (),
 }

-if 'plot_gallery=0' in sys.argv:
-    # Gallery images are not created.  Suppress warnings triggered where other
-    # parts of the documentation link to these images.
-
-    def gallery_image_warning_filter(record):
-        msg = record.msg
-        for gallery_dir in sphinx_gallery_conf['gallery_dirs']:
-            if msg.startswith(f'image file not readable: {gallery_dir}'):
-                return False
-
-        if msg == 'Could not obtain image size. :scale: option is ignored.':
-            return False
-
-        return True
-
-    logger = logging.getLogger('sphinx')
-    logger.addFilter(gallery_image_warning_filter)
-
-
 mathmpl_fontsize = 11.0
 mathmpl_srcset = ['2x']

diff --git a/doc/devel/coding_guide.rst b/doc/devel/coding_guide.rst
index 83cd15aaf8..cddb135394 100644
--- a/doc/devel/coding_guide.rst
+++ b/doc/devel/coding_guide.rst
@@ -45,7 +45,7 @@ When making a PR, pay attention to:
   on GitHub.
 * When updating your PR, instead of adding new commits to fix something, please
   consider amending your initial commit(s) to keep the history clean.
-  You can achieve this by using
+  You can achieve this using

   .. code-block:: bash

diff --git a/doc/devel/contributing.rst b/doc/devel/contributing.rst
index e38b2c3fbe..2743424423 100644
--- a/doc/devel/contributing.rst
+++ b/doc/devel/contributing.rst
@@ -222,7 +222,7 @@ rules before submitting a pull request:

   or your editor may provide integration with it.  Note that Matplotlib
   intentionally does not use the black_ auto-formatter (1__), in particular due
-  to its inability to understand the semantics of mathematical expressions
+  to its unability to understand the semantics of mathematical expressions
   (2__, 3__).

   .. _PEP8: https://www.python.org/dev/peps/pep-0008/
diff --git a/doc/devel/documenting_mpl.rst b/doc/devel/documenting_mpl.rst
index 23b332925f..a9305d31a0 100644
--- a/doc/devel/documenting_mpl.rst
+++ b/doc/devel/documenting_mpl.rst
@@ -67,10 +67,6 @@ Other useful invocations include

 .. code-block:: sh

-   # Build the html documentation, but skip generation of the gallery images to
-   # save time.
-   make html-noplot
-
    # Delete built files.  May help if you get errors about missing paths or
    # broken links.
    make clean
@@ -90,6 +86,7 @@ You can use the ``O`` variable to set additional options:

 * ``make O=-j4 html`` runs a parallel build with 4 processes.
 * ``make O=-Dplot_formats=png:100 html`` saves figures in low resolution.
+* ``make O=-Dplot_gallery=0 html`` skips the gallery build.

 Multiple options can be combined, e.g. ``make O='-j4 -Dplot_gallery=0'
 html``.
diff --git a/doc/users/explain/backends.rst b/doc/users/explain/backends.rst
index 24031ee957..88c3a927fd 100644
--- a/doc/users/explain/backends.rst
+++ b/doc/users/explain/backends.rst
@@ -107,7 +107,7 @@ allows both interactive work and plotting from scripts, with output to the
 screen and/or to a file, so at least initially, you will not need to worry
 about the backend.  The most common exception is if your Python distribution
 comes without :mod:`tkinter` and you have no other GUI toolkit installed.
-This happens with certain Linux distributions, where you need to install a
+This happens on certain Linux distributions, where you need to install a
 Linux package named ``python-tk`` (or similar).

 If, however, you want to write graphical user interfaces, or a web
diff --git a/doc/users/explain/interactive.rst b/doc/users/explain/interactive.rst
index 8cc1ce7cc3..0fb0a0cdac 100644
--- a/doc/users/explain/interactive.rst
+++ b/doc/users/explain/interactive.rst
@@ -169,7 +169,7 @@ and run the GUI event loop for the specified period of time.

 The GUI event loop being integrated with your command prompt and
 the figures being in interactive mode are independent of each other.
-If you try to use `pyplot.ion` without arranging for the event-loop integration,
+If you use `pyplot.ion` but have not arranged for the event loop integration,
 your figures will appear but will not be interactive while the prompt is waiting for input.
 You will not be able to pan/zoom and the figure may not even render
 (the window might appear black, transparent, or as a snapshot of the
diff --git a/doc/users/faq/troubleshooting_faq.rst b/doc/users/faq/troubleshooting_faq.rst
index f88cb19d13..db1c393199 100644
--- a/doc/users/faq/troubleshooting_faq.rst
+++ b/doc/users/faq/troubleshooting_faq.rst
@@ -157,7 +157,7 @@ the tracker so the issue doesn't get lost.
 Problems with recent git versions
 =================================

-First, make sure you have a clean build and install (see :ref:`clean-install`),
+First make sure you have a clean build and install (see :ref:`clean-install`),
 get the latest git update, install it and run a simple test script in debug
 mode::

diff --git a/doc/users/github_stats.rst b/doc/users/github_stats.rst
index e23d1e8f6f..7e5c3fe14a 100644
--- a/doc/users/github_stats.rst
+++ b/doc/users/github_stats.rst
@@ -1,1295 +1,146 @@
 .. _github-stats:

-GitHub statistics for 3.6.0 (Sep 15, 2022)
+GitHub statistics for 3.6.1 (Oct 08, 2022)
 ==========================================

-GitHub statistics for 2021/11/16 (tag: v3.5.0) - 2022/09/15
+GitHub statistics for 2022/09/16 (tag: v3.6.0) - 2022/10/08

 These lists are automatically generated, and may be incomplete or contain duplicates.

-We closed 202 issues and merged 894 pull requests.
-The full list can be seen `on GitHub <https://github.com/matplotlib/matplotlib/milestone/65?closed=1>`__
+We closed 22 issues and merged 80 pull requests.
+The full list can be seen `on GitHub <https://github.com/matplotlib/matplotlib/milestone/73?closed=1>`__

-The following 174 authors contributed 4425 commits.
+The following 19 authors contributed 129 commits.

-* Abhishek K M
-* Adeel Hassan
-* agra
-* Aitik Gupta
-* ambi7
-* Andras Deak
-* Andres Martinez
-* Andrew Fennell
-* andrzejnovak
-* Andrés Martínez
-* Anna Mastori
-* AnnaMastori
-* Ante Sikic
 * Antony Lee
-* arndRemy
-* Ben Root
-* Biswapriyo Nath
-* cavesdev
-* Clément Phan
-* Clément Walter
-* code-review-doctor
-* Connor Cozad
-* Constantine Evans
-* Croadden
-* daniilS
-* Danilo Palumbo
-* David Gilbertson
-* David Ketcheson
-* David Matos
-* David Poznik
+* baharev
 * David Stansby
-* Davide Sandonà
 * dependabot[bot]
-* dermasugita
-* Diego Solano
-* Dimitri Papadopoulos
-* dj4t9n
-* Dmitriy Fishman
-* DWesl
-* Edouard Berthe
-* eindH
+* Eli Rykoff
 * Elliott Sales de Andrade
-* Eric Firing
-* Eric Larson
-* Eric Prestat
-* Federico Ariza
-* Felix Nößler
-* Fernando
-* Gajendra Pal
-* gajendra0180
-* GavinZhang
+* erykoff
 * Greg Lucas
 * hannah
-* Hansin Ahuja
-* Harshal Prakash Patankar
-* Hassan Kibirige
-* Haziq Khurshid
-* Henry
-* henrybeUM
-* Hood
-* Hood Chatham
 * Ian Hunt-Isaak
-* Ian Thomas
-* igurin-invn
-* ikhebgeenaccount
-* Isha Mehta
-* Jake Bowhay
-* Jake Li
-* Jake Lishman
-* Jake VanderPlas
-* Jakub Klus
-* James Tocknell
-* Jan-Hendrik Müller
-* Jay Joshi
-* Jay Stanley
-* jayjoshi112711
-* Jeff Beck
 * Jody Klymak
-* Joel Frederico
-* Joseph Fox-Rabinovitz
-* Josh Soref
-* Jouni K. Seppänen
-* Kayran Schmidt
-* kdpenner
-* Kian Eliasi
-* Kinshuk Dua
-* kislovskiy
-* KIU Shueng Chuan
-* kjain
-* kolibril13
-* krassowski
-* Krish-sysadmin
-* Leeh Peter
-* lgfunderburk
-* Liam Toney
-* Lucas Ricci
-* Luke Davis
-* luz paz
-* mackopes
-* MAKOMO
-* MalikIdreesHasa
-* Marcin Swaltek
-* Mario
-* Mario Sergio Valdés Tresanco
-* martinRenou
-* Matthew Feickert
-* Matthias Bussonnier
-* Mauricio Collares
-* MeeseeksMachine
 * melissawm
-* Mr-Milk
-* Navid C. Constantinou
-* Nickolaos Giannatos
-* Nicolas P. Rougier
-* Niyas Sait
-* noatamir
-* ojeda-e
-* Olivier Gauthé
 * Oscar Gustafsson
-* patquem
-* Philipp Rohde
-* Pieter Eendebak
-* Pieter P
-* Péter Leéh
-* Qijia Liu
-* Quentin Peter
-* Raphael Quast
-* rditlar9
-* Richard Penney
-* richardsheridan
-* Rike-Benjamin Schuppner
-* Robert Cimrman
-* Roberto Toro
-* root
 * Ruth Comer
-* Ruth G. N
-* Ruth Nainggolan
-* Ryan May
-* Rémi Achard
-* SaumyaBhushan
-* Scott Jones
-* Scott Shambaugh
-* selormtamakloe
-* Simon Hoxbro
-* skywateryang
-* Stefanie Molin
+* slackline
 * Steffen Rehberg
-* stone
-* Sven Eschlbeck
-* sveneschlbeck
-* takimata
-* tfpf
 * Thomas A Caswell
 * Tim Hoffmann
-* Tobias Megies
-* Tomas Hrnciar
-* Tomasz Kuliński
-* trichter
-* unknown
-* Uwe Hubert
-* vfdev-5
-* Vishal Chandratreya
-* Vishal Pankaj Chandratreya
-* Vishnu V K
-* vk0812
-* Vlad Korolev
-* Will Qian
-* William Qian
-* wqh17101
-* wsykala
-* yaaun
-* Yannic Schroeder
-* yuanx749
-* 渡邉 美希
+* مهدي شينون (Mehdi Chinoune)

 GitHub issues and pull requests:

-Pull Requests (894):
-
-* :ghpull:`23814`: Consolidate release notes for 3.6
-* :ghpull:`23899`: Backport PR #23885 on branch v3.6.x (DOC: Rearrange navbar-end elements)
-* :ghpull:`23898`: Backport PR #23892 on branch v3.6.x (DOC: Fix docs for linestyles in contour)
-* :ghpull:`23885`: DOC: Rearrange navbar-end elements
-* :ghpull:`23894`: Backport PR #23881 on branch v3.6.x (Fix Pillow compatibility in example)
-* :ghpull:`23897`: Backport PR #23887 on branch v3.6.x (Add missing label argument to barh docs)
-* :ghpull:`23892`: DOC: Fix docs for linestyles in contour
-* :ghpull:`23887`: Add missing label argument to barh docs
-* :ghpull:`23893`: Backport PR #23886 on branch v3.6.x (CI: prefer (older) binaries over (newer) sdists)
-* :ghpull:`23881`: Fix Pillow compatibility in example
-* :ghpull:`23886`: CI: prefer (older) binaries over (newer) sdists
-* :ghpull:`23880`: Backport PR #23862 on branch v3.6.x (Remove triggering of deprecation warning in AnchoredEllipse)
-* :ghpull:`23862`: Remove triggering of deprecation warning in AnchoredEllipse
-* :ghpull:`23879`: Backport PR #23864 on branch v3.6.x (Correct and improve documentation for anchored artists)
-* :ghpull:`23877`: Backport PR #23841 on branch v3.6.x (clarified that hist computes histogram on unbinned data)
-* :ghpull:`23872`: Backport PR #23871 on branch v3.6.x (DOC: Fix formatting of pick event demo example)
-* :ghpull:`23841`: clarified that hist computes histogram on unbinned data
-* :ghpull:`23864`: Correct and improve documentation for anchored artists
-* :ghpull:`23871`: DOC: Fix formatting of pick event demo example
-* :ghpull:`23869`: Backport PR #23867 on branch v3.6.x (DOC: fix deprecation warnings in examples)
-* :ghpull:`23867`: DOC: fix deprecation warnings in examples
-* :ghpull:`23858`: Backport PR #23855 on branch v3.6.x (DOC: fix deprecation warnings)
-* :ghpull:`23859`: Backport PR #23844 on branch v3.6.x (Further improve dev setup instructions)
-* :ghpull:`23844`: Further improve dev setup instructions
-* :ghpull:`23855`: DOC: fix deprecation warnings
-* :ghpull:`23854`: Backport PR #23852 on branch v3.6.x (Fix cross-compiling internal freetype)
-* :ghpull:`23852`: Fix cross-compiling internal freetype
-* :ghpull:`23853`: Backport PR #23830 on branch v3.6.x (Start testing on Python 3.11)
-* :ghpull:`23830`: Start testing on Python 3.11
-* :ghpull:`23851`: Backport PR #23850 on branch v3.6.x (removed single word in documenting doc)
-* :ghpull:`23850`: removed single word in documenting doc
-* :ghpull:`23848`: Backport PR #23843 on branch v3.6.x (Clarify that pycairo>=1.14.0 is needed.)
-* :ghpull:`23843`: Clarify that pycairo>=1.14.0 is needed.
-* :ghpull:`23842`: Backport PR #23840 on branch v3.6.x (Remove documentation for axes_grid)
-* :ghpull:`23838`: Backport PR #23834 on branch v3.6.x (Revert "Refactor handling of tick and ticklabel visibility in Axis.clear")
-* :ghpull:`23840`: Remove documentation for axes_grid
-* :ghpull:`23837`: Backport PR #23833 on branch v3.6.x (Remove search field from sidebar)
-* :ghpull:`23836`: Backport PR #23823 on branch v3.6.x ([DOC] Improve dev setup description)
-* :ghpull:`23834`: Revert "Refactor handling of tick and ticklabel visibility in Axis.clear"
-* :ghpull:`23833`: Remove search field from sidebar
-* :ghpull:`23823`: [DOC] Improve dev setup description
-* :ghpull:`23822`: Backport PR #23813 on branch v3.6.x (Triplot duplicated label)
-* :ghpull:`23813`: Triplot duplicated label
-* :ghpull:`23811`: Backport PR #23805 on branch v3.6.x (sphinxext: Do not copy plot_directive.css's metadata)
-* :ghpull:`23805`: sphinxext: Do not copy plot_directive.css's metadata
-* :ghpull:`23800`: Backport PR #23785 on branch v3.6.x (FIX: ensure type stability for missing cmaps in ``set_cmap``)
-* :ghpull:`23799`: Backport PR #23790 on branch v3.6.x (DOC: Add cache busting to all static assets)
-* :ghpull:`23785`: FIX: ensure type stability for missing cmaps in ``set_cmap``
-* :ghpull:`23790`: DOC: Add cache busting to all static assets
-* :ghpull:`23791`: Backport PR #23774 on branch v3.6.x (Correct rcParams-name in AutoDateFormatter doc-string)
-* :ghpull:`23792`: Backport PR #23781 on branch v3.6.x (ci: Add plot types to sphinx-gallery artifacts)
-* :ghpull:`23789`: Backport PR #23786 on branch v3.6.x (DOC: fontfallback works for most of the backends)
-* :ghpull:`23788`: Backport PR #23784 on branch v3.6.x (DOC: Fix num2date docstring)
-* :ghpull:`23786`: DOC: fontfallback works for most of the backends
-* :ghpull:`23784`: DOC: Fix num2date docstring
-* :ghpull:`23781`: ci: Add plot types to sphinx-gallery artifacts
-* :ghpull:`23783`: Backport PR #23782 on branch v3.6.x (Remove ``Axes.cla`` from examples)
-* :ghpull:`23782`: Remove ``Axes.cla`` from examples
-* :ghpull:`23774`: Correct rcParams-name in AutoDateFormatter doc-string
-* :ghpull:`23773`: Backport PR #23772 on branch v3.6.x (3d plots what's new cleanups)
-* :ghpull:`23772`: 3d plots what's new cleanups
-* :ghpull:`23765`: Backport PR #23762 on branch v3.6.x (FIX: legend handler warning too liberal)
-* :ghpull:`23762`: FIX: legend handler warning too liberal
-* :ghpull:`23759`: Backport PR #23686 on branch v3.6.x (Improve matplotlib.pyplot importtime by caching ArtistInspector)
-* :ghpull:`23686`: Improve matplotlib.pyplot importtime by caching ArtistInspector
-* :ghpull:`23756`: Backport PR #23569 on branch v3.6.x (Fix hidden xlabel bug in colorbar)
-* :ghpull:`23755`: Backport PR #23742 on branch v3.6.x (FIX: unbreak ipympl)
-* :ghpull:`23569`: Fix hidden xlabel bug in colorbar
-* :ghpull:`23742`: FIX: unbreak ipympl
-* :ghpull:`23752`: Backport PR #23750 on branch v3.6.x (Fix rcParams documentation)
-* :ghpull:`23749`: Backport PR #23735 on branch v3.6.x (Correctly handle Axes subclasses that override cla)
-* :ghpull:`23735`: Correctly handle Axes subclasses that override cla
-* :ghpull:`23748`: Backport PR #23746 on branch v3.6.x (DOC: add numpydoc docstring + commentary to Axis.get_ticklocs)
-* :ghpull:`23747`: Backport PR #23721 on branch v3.6.x (3d plot view angle documentation)
-* :ghpull:`23746`: DOC: add numpydoc docstring + commentary to Axis.get_ticklocs
-* :ghpull:`23721`: 3d plot view angle documentation
-* :ghpull:`23744`: Backport PR #23740 on branch v3.6.x (Clarify error for colorbar with unparented mappable)
-* :ghpull:`23741`: Backport PR #23674 on branch v3.6.x (Re-rename builtin seaborn styles to not include a dot.)
-* :ghpull:`23740`: Clarify error for colorbar with unparented mappable
-* :ghpull:`23674`: Re-rename builtin seaborn styles to not include a dot.
-* :ghpull:`23738`: Backport PR #23639 on branch v3.6.x (Adding the new contributor meeting)
-* :ghpull:`23739`: Backport PR #23712 on branch v3.6.x (FIX: do not try to help CPython with garbage collection)
-* :ghpull:`23712`: FIX: do not try to help CPython with garbage collection
-* :ghpull:`23639`: Adding the new contributor meeting
-* :ghpull:`23732`: Backport PR #23729 on branch v3.6.x (Use cleaner recursion check in PyQt FigureCanvas' resizeEvent.)
-* :ghpull:`23734`: Backport PR #23733 on branch v3.6.x (DOC: Update theme configuration for upcoming changes)
-* :ghpull:`23733`: DOC: Update theme configuration for upcoming changes
-* :ghpull:`23728`: Backport PR #23722 on branch v3.6.x (Restore deprecation class aliases in cbook)
-* :ghpull:`23729`: Use cleaner recursion check in PyQt FigureCanvas' resizeEvent.
-* :ghpull:`23726`: Backport PR #23711 on branch v3.6.x (Fix deprecation messages for vendoring unused things)
-* :ghpull:`23722`: Restore deprecation class aliases in cbook
-* :ghpull:`23727`: Backport PR #23724 on branch v3.6.x (Fix/harmonize spacing in dependencies.rst.)
-* :ghpull:`23724`: Fix/harmonize spacing in dependencies.rst.
-* :ghpull:`23711`: Fix deprecation messages for vendoring unused things
-* :ghpull:`23715`: Backport PR #23708 on branch v3.6.x (Loosen up test_Normalize test)
-* :ghpull:`23713`: Backport PR #23710 on branch v3.6.x (Fix cmap deprecations)
-* :ghpull:`23708`: Loosen up test_Normalize test
-* :ghpull:`23710`: Fix cmap deprecations
-* :ghpull:`23696`: Backport PR #23695 on branch v3.6.x (Document polar handling of _interpolation_steps.)
-* :ghpull:`23706`: Backport PR #23705 on branch v3.6.x (DOC: Added link to class under discussion)
-* :ghpull:`23705`: DOC: Added link to class under discussion
-* :ghpull:`23695`: Document polar handling of _interpolation_steps.
-* :ghpull:`23668`: Api deprecate cmap functions
-* :ghpull:`23049`: Add ``minor`` keyword argument to ``plt.x/yticks``
-* :ghpull:`23665`: Harmonize docstrings for boxstyle/connectionstyle/arrowstyle.
-* :ghpull:`23636`: FIX: macosx flush_events should process all events
-* :ghpull:`23555`: Uncamelcase offsetTrans in draw_path_collection.
-* :ghpull:`23682`: Fix generated documentation for deprecated modules
-* :ghpull:`23678`: Get rcParams from mpl
-* :ghpull:`23571`: Simplify _bind_draw_path_function.
-* :ghpull:`23673`: DOC: Highlight information about avoiding labels in legend
-* :ghpull:`22506`: Replace MathtextBackend mechanism.
-* :ghpull:`23340`: Set correct path for Arc
-* :ghpull:`23562`: Fix issue with get_edgecolor and get_facecolor in 3D plots
-* :ghpull:`23634`: make.bat: Don't override SPHINXOPTS/O from the environment
-* :ghpull:`23675`: Deprecate helper functions in axis3d
-* :ghpull:`23676`: MNT: Get rcParams from mpl
-* :ghpull:`23677`: TST: Use article class when checking for pgf
-* :ghpull:`23669`: CI: Azure update from ubuntu-18.04 to ubuntu-latest and ubuntu-20.04
-* :ghpull:`23670`: Add bar color demo.
-* :ghpull:`23644`: Standardize edge-on axis locations when viewing primary 3d axis planes
-* :ghpull:`23563`: Fix issue with drawing 3D lines where points are from nparray
-* :ghpull:`23666`: MNT: Deprecate macosx prepare subplots tool
-* :ghpull:`23572`: Deprecate ``get_grid_positions(..., raw=True)``.
-* :ghpull:`23525`: Add functionality to label individual bars with Axes.bar()
-* :ghpull:`23667`: Fix flake8 errors introduced by crossed PRs
-* :ghpull:`23554`: MNT: Remove unused imports
-* :ghpull:`23659`: Simplify/fix save_diff_image.
-* :ghpull:`23663`: Small cleanups to _find_fonts_by_props.
-* :ghpull:`23662`: Add tolerance to test failing on ppc64le
-* :ghpull:`23623`: MNT: remove _gridspecs attribute on Figure classes
-* :ghpull:`23654`: Reverts macosx change to ARC
-* :ghpull:`23661`: Remove unused fontsize argument from private mathtext _get_info.
-* :ghpull:`23655`: Merge branch v3.5.x into main
-* :ghpull:`23658`: Increase tolerance on multi-font tests
-* :ghpull:`23657`: Add eps to extension list in image triager
-* :ghpull:`23656`: Fix broken link to MathML torture tests.
-* :ghpull:`23649`: CI: Use anaconda-client v1.10.0 for upload of nightlies
-* :ghpull:`23647`: Allow any color format to be used for axis3d.Axis.set_pane_color
-* :ghpull:`23643`: Enable wheels for PyPy 3.8+
-* :ghpull:`23621`: DOC: update and extend fonts explanation
-* :ghpull:`23612`: CI: try installing a different version of noto on OSX
-* :ghpull:`23619`: add pikepdf  and visual c++ dependency
-* :ghpull:`23631`: Leave out ``barh`` from the basic plot types.
-* :ghpull:`23637`: BLD: Add Python 3.11 builds to CI
-* :ghpull:`23632`: Add discouraged admonitions
-* :ghpull:`23620`: Doc update deps
-* :ghpull:`23627`: Bump pypa/cibuildwheel from 2.8.1 to 2.9.0
-* :ghpull:`23628`: Change Title Case to Upper lower in templates
-* :ghpull:`23206`: Change exception type for incorrect SVG date metadata
-* :ghpull:`23387`: Remove setuptools_scm_git_archive dependency and add sdist test
-* :ghpull:`23605`: Fix issues in examples, docs, and tutorials
-* :ghpull:`23618`: [Doc]: Document the position parameter in apply_aspect()
-* :ghpull:`23355`: Revert "Try to unbreak CI by xfailing OSX Tk tests"
-* :ghpull:`23610`: TST: be more forgiving about IDing Noto
-* :ghpull:`23609`: print version number when building docs
-* :ghpull:`20832`: Implement multi-font embedding for PS Backend
-* :ghpull:`20804`: Implement multi-font embedding for PDF Backend
-* :ghpull:`23202`: MNT: Remove cached renderer from figure
-* :ghpull:`23497`: Avoid gridspec in more examples
-* :ghpull:`23602`: Editing "issues for new contributors"
-* :ghpull:`23600`: DOC: view_init docstring for 3d axes primary view angles
-* :ghpull:`23587`: BUG:datetime list starting with none
-* :ghpull:`23559`: re-base of font fallback for pdf and eps output + SVG support
-* :ghpull:`23557`: BLD: update the manylinux versions used
-* :ghpull:`23596`: Minor cleanup of axes_grid1
-* :ghpull:`23594`: Expire deprecation on passing bytes to FT2Font.set_text
-* :ghpull:`23435`: Add conda env to setup instructions
-* :ghpull:`23574`: Move colorbar() doc to method itself.
-* :ghpull:`23584`: Bump Ubuntu to 20.04 on GitHub Actions
-* :ghpull:`23561`: Clean up code in tri
-* :ghpull:`23582`: Cleanup axis3d.Axis.draw
-* :ghpull:`23510`: Refactor Widget tests
-* :ghpull:`20718`: Circle: Build docs in parallel.
-* :ghpull:`22452`: ENH: add ability to remove layout engine
-* :ghpull:`23516`: warning when scatter plot color settings discarded
-* :ghpull:`23577`: apply_aspect cleanups
-* :ghpull:`23575`: Cleanup parasite_simple example.
-* :ghpull:`23567`: Remove noop setattr_cm.
-* :ghpull:`23412`: Fix dash offset bug in Patch
-* :ghpull:`21756`: MNT: Clean up some UTF strings and memory autorelease
-* :ghpull:`23558`: MNT: Use UTF-8 string in macosx backend
-* :ghpull:`23550`: Change exception types, improve argument checking, and cleanups in mpl_toolkits
-* :ghpull:`23196`: Unify set_pickradius argument
-* :ghpull:`20740`: Implement Font-Fallback in Matplotlib
-* :ghpull:`22566`: Add rcparam for figure label size and weight
-* :ghpull:`23551`: Remove transform arguments from _iter_collection
-* :ghpull:`23444`: Deduplicate common parts in LatexManager.{__init__,_setup_latex_process}
-* :ghpull:`23017`: [ENH] : Provide axis('equal') for Axes3D (replace PR #22705)
-* :ghpull:`22950`: Simplify definition of mathtext symbols & correctly end tokens in mathtext parsing
-* :ghpull:`23409`: Provide axis('equal') for Axes3D (replaces PR #23017)
-* :ghpull:`23434`: Fix array-like linewidth for 3d scatter
-* :ghpull:`23500`: Move the common implementation of Axes.set_x/y/zscale to Axis.
-* :ghpull:`23533`: Add tests for sankey and minor fixes
-* :ghpull:`23535`: Make margins error as claimed in doc-string
-* :ghpull:`23546`: Simplify impl. of functions optionally used as context managers.
-* :ghpull:`23494`: Fix various issues from SonarQube
-* :ghpull:`23529`: Add workflow dispatch GitHub CI
-* :ghpull:`23539`: Small improvements to WebAgg example
-* :ghpull:`23541`: Change doc-build CI install order
-* :ghpull:`23526`: DOC: make "family" less ambiguous in FontProperties docs
-* :ghpull:`23537`: Move the deprecated RendererGTK{3,4}Cairo to a single place.
-* :ghpull:`23140`: [Features] Allow setting legend title alignment
-* :ghpull:`23538`: Fix imprecise docs re: backend dependencies.
-* :ghpull:`23532`: Add test for RGBAxes
-* :ghpull:`23453`: Add more tests for mplot3d
-* :ghpull:`23501`: Let Axes.clear iterate over Axises.
-* :ghpull:`23469`: Inline _init_axis_artists & _init_gridlines into clear.
-* :ghpull:`23475`: Add markerfacealt to pass-through arguments for error bar lines
-* :ghpull:`23527`: STY: fix whitespace on an assert
-* :ghpull:`23495`: Fix sgskip'd examples
-* :ghpull:`23404`: Restore matplotlib.__doc__ in Sphinx docs
-* :ghpull:`23507`: Add hint when More than {max_open_warning} figures have been opened
-* :ghpull:`23499`: Fix outdated comment re: event handlers in test_backends_interactive.
-* :ghpull:`23498`: Fix direct instantiation of webagg_core managers.
-* :ghpull:`23504`: Clarify formatting of the code-for-reproduction field in bug reports.
-* :ghpull:`23489`: Add missing test data to install
-* :ghpull:`23482`: Mathtext spaces must be independent of font style.
-* :ghpull:`23486`: Bump pypa/cibuildwheel from 2.8.0 to 2.8.1
-* :ghpull:`23461`: Tweak Axes repr.
-* :ghpull:`16931`: Make it easier to improve UI event metadata.
-* :ghpull:`23468`: Display grid in floating axes example.
-* :ghpull:`23467`: Remove old handling for factor=None in axisartist.
-* :ghpull:`23443`: Try running the pgf backend off the article class.
-* :ghpull:`23373`: Fix pan/zoom crashing when widget lock is unavailable
-* :ghpull:`23466`: Update filename in example.
-* :ghpull:`23464`: Deprecate macos close handler.
-* :ghpull:`23463`: Deprecate Tick.label
-* :ghpull:`23455`: Deprecate properties w_xaxis, w_yaxis, and w_zaxis
-* :ghpull:`23448`: Tweak callbacks to generate pick events.
-* :ghpull:`23233`: Default stem marker color follows the linecolor
-* :ghpull:`23452`: Generalize Axes __repr__ to 3D
-* :ghpull:`23445`: Compare thread native ids when checking whether running on main thread.
-* :ghpull:`20752`: Set norms using scale names.
-* :ghpull:`23438`: DOC: numpydoc-ify date Locator classes
-* :ghpull:`23427`: Tweak pgf escapes.
-* :ghpull:`23432`: Fixed typo in docs animation api
-* :ghpull:`23420`: Clean up test_chunksize_fails()
-* :ghpull:`23415`: Minor improvements to units_sample example
-* :ghpull:`21339`: Added linear scaling test to Hexbin marginals
-* :ghpull:`23414`: Bump pypa/cibuildwheel from 2.7.0 to 2.8.0
-* :ghpull:`23413`: Combine chunk size tests into one
-* :ghpull:`23403`: Small cleanup to VertexSelector.
-* :ghpull:`23291`: In the new/simplified backend API, don't customize draw_if_interactive.
-* :ghpull:`23350`: Fixed SVG-as-text image comparison tests.
-* :ghpull:`23406`: DOC: Fix calculation of bin centers in multi-histogram
-* :ghpull:`23407`: TST: Add missing warning type to pytest.warns
-* :ghpull:`23402`: Link 3D animation examples to one another.
-* :ghpull:`23401`: Upload wheel artifacts from the correct directory
-* :ghpull:`23374`: GOV: point CoC reports at CoC steering council subcomittee mailing list
-* :ghpull:`23393`: Clean up formatting of custom cmap example
-* :ghpull:`23146`: Update cibuildwheel
-* :ghpull:`23368`: Add a helper to generate closed paths.
-* :ghpull:`20220`: DOC: add mission statement
-* :ghpull:`22364`: Tweak mathtext/tex docs.
-* :ghpull:`23377`: Use tick_params more often over tick iteration
-* :ghpull:`22820`: [Doc] consolidate ``rect`` documentation
-* :ghpull:`23371`: Default animation.convert_args to ["-layers", "OptimizePlus"].
-* :ghpull:`23148`: DOC: change address to send security issues to
-* :ghpull:`23365`: DOC: add new showcase example, replace gendered one
-* :ghpull:`23033`: Fix issue with tex-encoding on non-Unicode platforms
-* :ghpull:`23358`: Shorten/clarify definition of extension types.
-* :ghpull:`23370`: Small cleanups to animation.
-* :ghpull:`23364`: Rename/change signature of PyGlyph_new.
-* :ghpull:`23363`: Simplify FigureCanvas multiple inheritance init by swapping bases order.
-* :ghpull:`23366`: MNT: use devel version of theme
-* :ghpull:`23357`: Fixed decimal points not appearing at end of Mathtext string.
-* :ghpull:`23351`: DOC/MNT install docs with dev version of sphinx theme
-* :ghpull:`23349`: CI: Remove old scipy-wheels-nightly uploads to ensure space
-* :ghpull:`23348`: Support multi-figure MultiCursor; prepare improving its signature.
-* :ghpull:`23360`: embedding_in_tk_sgskip.py: use root.destroy
-* :ghpull:`23354`: MNT: Use list comprehension
-* :ghpull:`23299`: FIX/API: do not reset backend key in rc_context
-* :ghpull:`23191`: ENH: add width_ratios and height_ratios to subplots
-* :ghpull:`23060`: MNT: Change objective C code to Automatic Reference Counting (ARC)
-* :ghpull:`23347`: Simplify/improve check for pycairo in Gtk-based backends.
-* :ghpull:`23316`: DOC: improve spines crosslinking
-* :ghpull:`23100`: Remove custom backend_nbagg.show(), putting logic in manager show.
-* :ghpull:`23342`: FIX: make sure addFont test removes the test font
-* :ghpull:`23266`: negative_linestyles kwarg in contour.py
-* :ghpull:`23332`: Validate Text linespacing on input.
-* :ghpull:`23336`: Remove ineffective exclusion of Arcs without parent Axes.
-* :ghpull:`23341`: MNT: Use '--pytest-test-first' option for naming clarity
-* :ghpull:`23337`: Remove now inexistent "datapath" rcParam from style blacklist.
-* :ghpull:`22004`: Make RendererCairo auto-infer surface size.
-* :ghpull:`23208`: ENH: enable stripey lines
-* :ghpull:`23288`: Correct URL area with rotated texts in PDFs
-* :ghpull:`23197`: Add tests for pan
-* :ghpull:`22167`: Deprecate selector ``visible`` attribute
-* :ghpull:`23322`: Cleanup FontProperties examples.
-* :ghpull:`23321`: Tweak examples capitalization/punctuation.
-* :ghpull:`23270`: Fix handling of nonmath hyphens in mathtext.
-* :ghpull:`23310`: Move Cursor demo from examples/misc to examples/event_handling
-* :ghpull:`23313`: Drop CSS styles that are in mpl-sphinx-theme
-* :ghpull:`23314`: Don't draw invisible 3D Axes
-* :ghpull:`23302`: Deprecate stem(..., use_line_collection=False)
-* :ghpull:`23309`: Remove front page examples
-* :ghpull:`23282`: Backport PR #22865 on branch v3.5.x (Fix issue with colorbar extend and drawedges)
-* :ghpull:`23231`: Add pytest-xvfb as test dependency
-* :ghpull:`23318`: No need to return OrderedDict from _gen_axes_spines.
-* :ghpull:`23295`: Replace re.sub by the faster str.translate.
-* :ghpull:`23300`: Modify example of "Fig Axes Customize Simple"
-* :ghpull:`23014`: Improve consistency in LogLocator and LogFormatter API
-* :ghpull:`23286`: Refactor URL handling in PDF backend
-* :ghpull:`23065`: Fix test_image_comparison_expect_rms
-* :ghpull:`23294`: Simplify binary data handling in ps backend.
-* :ghpull:`23284`: DOC: Switch to HTML5 and cleanup CSS
-* :ghpull:`23276`: Add get/set methods for DPI in SubFigure
-* :ghpull:`23207`: Update build environment and improve test
-* :ghpull:`23213`: DEV: Add name-tests-test to pre-commit hooks
-* :ghpull:`23289`: Properly make Name.hexify go through a deprecation cycle.
-* :ghpull:`23177`: Deprecate positional passing of most Artist constructor parameters
-* :ghpull:`23287`: Minor tweaks to pdf Name.
-* :ghpull:`23285`: In mathtext, replace manual caching (via ``glyphd``) by lru_cache.
-* :ghpull:`23034`: Correctly read the 'style' argument while processing 'genfrac'.
-* :ghpull:`23247`: Support inverted parentheses in mathtext.
-* :ghpull:`23190`: Deprecate unused methods in axis.py
-* :ghpull:`23219`: MNT: Rename example files with 'test' in name
-* :ghpull:`23277`: MNT: Remove dead code in SVG backend
-* :ghpull:`23261`: Bump actions/setup-python from 3 to 4
-* :ghpull:`23264`: Changing environment.yml for it to work on Windows
-* :ghpull:`23269`: MNT: Remove dead code in Colorbar
-* :ghpull:`23262`: Simplify qt_compat, in particular post-removal of qt4 support.
-* :ghpull:`23263`: Private helper to get requested backend without triggering resolution.
-* :ghpull:`23243`: Fix spacing after mathtext operators with sub/superscripts
-* :ghpull:`22839`: Fix spacing after mathtext operators with sub/superscripts
-* :ghpull:`23256`: DOC: Add note about Inkscape install on Windows
-* :ghpull:`23258`: DOC: remove Blue Book url
-* :ghpull:`23255`: Add a helper to generate mathtext error strings.
-* :ghpull:`23246`: Fix argument checking for set_interpolation_stage
-* :ghpull:`22881`: Support not embedding glyphs in svg mathtests.
-* :ghpull:`23198`: Rename ncol parameter in legend to ncols
-* :ghpull:`23251`: Small simplifications to mathtext tests.
-* :ghpull:`23249`: Don't allow ``r"$\left\\|\right.$"``, as in TeX.
-* :ghpull:`23248`: Rename test markers
-* :ghpull:`22507`: Remove *math* parameter of various mathtext internal APIs.
-* :ghpull:`23192`: Add tests, improve error messages in axis/_base, and code cleanup
-* :ghpull:`23241`: Fix invalid value in radio buttons example
-* :ghpull:`23187`: Correct docs and use keyword arguments in _mathtext.py
-* :ghpull:`23045`: MNT: Merge locally defined test marks
-* :ghpull:`22289`: ENH: compressed layout
-* :ghpull:`23237`: Expire BoxStyle._Base deprecation.
-* :ghpull:`23225`: DOC: Fix version switcher links to documentation
-* :ghpull:`23221`: DOC: recommend numpy random number generator class
-* :ghpull:`23223`: Changed offset reference, add small doc
-* :ghpull:`23215`: DOC: link the transforms tutorial from the module
-* :ghpull:`23201`: Rework tricontour and tricontourf documentation
-* :ghpull:`23013`: Add tests for date module
-* :ghpull:`23188`: Mnt new default dates
-* :ghpull:`22745`: MNT: Don't require renderer for window_extent and tightbbox
-* :ghpull:`23077`: MNT: Remove keyword arguments to gca()
-* :ghpull:`23182`: Simplify webagg blitting.
-* :ghpull:`23181`: Init FigureCanvasAgg._lastKey in ``__init__``.
-* :ghpull:`23175`: Point the version switcher to a name listed in switcher.json
-* :ghpull:`22669`: Cleanup documentation generation for pyplot
-* :ghpull:`22519`: fix markevery plot option with nans in data
-* :ghpull:`21584`: Move towards having get_shared_{x,y}_axes return immutable views.
-* :ghpull:`23170`: ENH: update ticks when requesting labels
-* :ghpull:`23169`: DOC: Migrate to sphinx-design
-* :ghpull:`23180`: Improve docstring of triplot() and PatchCollection
-* :ghpull:`23153`: Restore accidentally removed pytest.ini and tests.py.
-* :ghpull:`23166`: Deprecate passing most Legend arguments positionally
-* :ghpull:`23165`: DOCS Fix a few typos
-* :ghpull:`23167`: DOCS fix typo
-* :ghpull:`23062`: Add stackplot to plot types listing
-* :ghpull:`23161`: Added my (open access) book
-* :ghpull:`23141`: Minor fix for astropy units support broken in earlier PR
-* :ghpull:`23156`: No longer call draw_if_interactive in parasite_axes.
-* :ghpull:`23150`: DOC fix typo
-* :ghpull:`23149`: DOCS remove duplicate text
-* :ghpull:`23145`: Fix format error in switcher.json
-* :ghpull:`21755`: MNT: Clean up macosx backend set_message
-* :ghpull:`23128`: DOCS Fix typos
-* :ghpull:`23130`: Drop pytest warning config in nightly tests
-* :ghpull:`23135`: Unpin coverage again
-* :ghpull:`23133`: Make module deprecation messages consistent
-* :ghpull:`23134`: Remove newline from start of deprecation warnings
-* :ghpull:`22964`: Fix spelling errors
-* :ghpull:`22929`: Handle NaN in bar labels and error bars
-* :ghpull:`23093`: MNT: Removing 3.4 deprecations
-* :ghpull:`23090`: Derive new_figure_manager from FigureCanvas.new_manager.
-* :ghpull:`23099`: Remove unneeded cutout for webagg in show().
-* :ghpull:`23097`: Tweak check for IPython pylab mode.
-* :ghpull:`23088`: Improve error for invalid format strings / misspelled data keys.
-* :ghpull:`23092`: Ensure updated monkey-patching of sphinx-gallery EXAMPLE_HEADER
-* :ghpull:`23087`: Fix width/height inversion in dviread debug helper.
-* :ghpull:`23089`: Normalize tk load failures to ImportErrors.
-* :ghpull:`23091`: Move test that fig.add_axes() needs parameters
-* :ghpull:`23067`: more explicit in windows doc build instructions
-* :ghpull:`23081`: MNT: Deprecate date_ticker_factory
-* :ghpull:`23079`: MNT: Remove key_press and button_press from FigureManager
-* :ghpull:`23076`: MNT: Remove positional argument handling in LineCollection
-* :ghpull:`23078`: MNT: Remove deprecated axis.cla()
-* :ghpull:`23054`: Slightly simplify tcl/tk load in extension.
-* :ghpull:`23073`: MNT: Remove dummy_threading because threading is always available
-* :ghpull:`22405`: DOC: put the gallery keywords in the meta tag
-* :ghpull:`23071`: Fix installing contourpy on CI
-* :ghpull:`23068`: Slight refactor of _c_internal_utils to linewrap it better.
-* :ghpull:`23070`: Pathlibify autotools invocation in build.
-* :ghpull:`22755`: Maybe run autogen as part of freetype install
-* :ghpull:`23063`: doc: mathtext example: use axhspan() instead of fill_between() for backdrop rectangle shading
-* :ghpull:`23055`: Cleanup Annotation.update_position.
-* :ghpull:`22567`: Use contourpy for quad contour calculations
-* :ghpull:`22801`: TST: fully parameterize test_lazy_linux_headless
-* :ghpull:`22180`: ENH: Use rcParams savefig.directory on macosx backend
-* :ghpull:`23048`: Add rrulewrapper to docs
-* :ghpull:`23047`: Fix issue with hist and float16 data
-* :ghpull:`23044`: Fix missing section header for nightly builds
-* :ghpull:`23029`: Demonstrate both usetex and non-usetex in demo_text_path.py.
-* :ghpull:`23038`: Factor out errorevery parsing for 2D and 3D errorbars.
-* :ghpull:`23036`: Suppress traceback chaining for tex subprocess failures.
-* :ghpull:`23037`: Suppress exception chaining in FontProperties.
-* :ghpull:`23020`: Add test to close legend issue
-* :ghpull:`23031`: Specify that style files are utf-8.
-* :ghpull:`22991`: Enable ``plt.sca`` on subfigure's axes
-* :ghpull:`23030`: DOC: Fix charset declaration in redirects
-* :ghpull:`23022`: Fix some possible encoding issues for non-utf8 systems.
-* :ghpull:`23023`: Bump docker/setup-qemu-action from 1 to 2
-* :ghpull:`23024`: DOC: do not suggest to sudo pip install Matplotlib
-* :ghpull:`23018`: Fix typo in font family
-* :ghpull:`22627`: ENH: rect for constrained_layout
-* :ghpull:`22891`: Font example monospace
-* :ghpull:`23006`: docs: add subplot-mosaic string compact notation
-* :ghpull:`23009`: Fixed installation guide command typo
-* :ghpull:`22926`: Fix RangeSlider for same init values #22686
-* :ghpull:`22989`: Merge v3.5.x back into main
-* :ghpull:`22993`: STY: Fix typos in colormap
-* :ghpull:`22777`: DEV: Add codespell to pre-commit hooks
-* :ghpull:`22940`: Fixed dpi bug in rainbow text example
-* :ghpull:`22298`: MNT: Remove cmap_d colormap access
-* :ghpull:`22387`: Add a registry for color sequences
-* :ghpull:`21594`: Document text alignment
-* :ghpull:`22967`: TST: Add some tests for QuadMesh contains function
-* :ghpull:`22936`: ENH: Add full-screen toggle to the macosx backend
-* :ghpull:`22886`: MNT: remove mpl_toolkits.axes_grid
-* :ghpull:`22952`: Make MarkerStyle immutable
-* :ghpull:`22953`: MNT: Move set_cursor to the FigureCanvas
-* :ghpull:`18854`: Standardize creation of FigureManager from a given FigureCanvas class.
-* :ghpull:`22925`: Standardize creation of FigureManager from a given FigureCanvas class.
-* :ghpull:`22875`: Remove Forward definitions where possible.
-* :ghpull:`22928`: ENH: Add option to disable raising the window for macosx
-* :ghpull:`22912`: DOC: Better doc of colors
-* :ghpull:`22931`: BUG: Fix regression with ls=(0, ())
-* :ghpull:`22909`: FIX: skip sub directories when finding fonts on windows
-* :ghpull:`22911`: Clarify docstring of [un]install_repl_displayhook()
-* :ghpull:`22919`: CI: Add concurrency skips for GH Actions
-* :ghpull:`22899`: Fix documentation markup issues
-* :ghpull:`22906`: Clarify logic for repl displayhook.
-* :ghpull:`22892`: Remove support for IPython<4.
-* :ghpull:`22896`: Remove python-dateutil as test requirement
-* :ghpull:`22885`: Deprecate two-layered backend_pdf.Op enum.
-* :ghpull:`22883`: Tweak argument checking in tripcolor().
-* :ghpull:`22884`: Missing ``f`` prefix on f-strings fix
-* :ghpull:`22877`: Small cleanups to mathtext.
-* :ghpull:`21374`: Snap selectors
-* :ghpull:`22824`: Remove some unnecessary extra boundaries for colorbars with extensions.
-* :ghpull:`21448`: Use named groups in mathtext parser.
-* :ghpull:`22609`: Improve usability of dviread.Text by third parties.
-* :ghpull:`22809`: STY: Apply pre-commit hooks to codebase
-* :ghpull:`22730`: Fix removed cross-references
-* :ghpull:`22857`: Slightly simplify twin axes detection in MEP22 zoom.
-* :ghpull:`22813`: MNT: Deprecate figure callbacks
-* :ghpull:`22802`: MNT: make Axes.cla an alias for Axes.clear in all cases
-* :ghpull:`22855`: Remove non-needed remove_text=False.
-* :ghpull:`22854`: TST: Avoid floating point errors in asinh ticker
-* :ghpull:`22850`: Simplify tick creation
-* :ghpull:`22841`: Fix Tk error when updating toolbar checkbutton images
-* :ghpull:`22707`: Proposed ENH: Allow user to turn off breaking of streamlines in streamplot (rebased)
-* :ghpull:`22826`: Bump actions/upload-artifact from 2 to 3
-* :ghpull:`22825`: Bump codecov/codecov-action from 2 to 3
-* :ghpull:`22821`: Use bool for bool keyword arguments
-* :ghpull:`22815`: Fix pickling of globally available, dynamically generated norm classes.
-* :ghpull:`22702`: Doc tweak transform tutorial
-* :ghpull:`22613`: DOC: Add links to explicit vs implicit API everywhere "OO" is used
-* :ghpull:`22712`: Use repr in error messages
-* :ghpull:`22794`: Fix ps export of colored hatches with no linewidth
-* :ghpull:`22797`: Deprecate functions in backends
-* :ghpull:`22608`: Axes.inset_axes: enable Axes subclass creation
-* :ghpull:`22795`: Replace "marker simplification" by "marker subsampling" in docs.
-* :ghpull:`22768`: Fix inkscape tests
-* :ghpull:`22791`: Tweak _ConverterError reporting.
-* :ghpull:`22447`: Improve bar_label annotation
-* :ghpull:`22710`: Fix the error- TypeError: 'float' object is not iterable
-* :ghpull:`22444`: Revert "CI: skip test to work around gs bug"
-* :ghpull:`22785`: CI: Update weekly dependency test job
-* :ghpull:`22784`: Fix 'misspelled' transform variable
-* :ghpull:`22778`: Fix LaTeX formatting in examples
-* :ghpull:`22779`: Improve mlab documentation (and example)
-* :ghpull:`22759`: MNT: Skip existing wheels during nightly wheel upload
-* :ghpull:`22751`: BLD: do not put an upper bound on pyparsing
-* :ghpull:`22752`: DOC: Correct nightly wheels pip install command
-* :ghpull:`22742`: Fix deprecation of backend_tools.ToolBase.destroy
-* :ghpull:`22725`: Move towards making texmanager stateless.
-* :ghpull:`22734`: Added clim support to tripcolor
-* :ghpull:`22733`: CI: Add GHA workflow to upload nightly wheels
-* :ghpull:`21637`: Also upload a subset of nightly wheels
-* :ghpull:`22698`: Correct cross-references in documentation
-* :ghpull:`22263`: DOC: condense version switcher
-* :ghpull:`22361`: Revert datetime usetex ticklabels to use default tex font.
-* :ghpull:`22721`: Small style fixes.
-* :ghpull:`22356`: Cleanup tripcolor()
-* :ghpull:`22360`: Let TeX handle multiline strings itself.
-* :ghpull:`22418`: Deprecate auto-removal of overlapping Axes by plt.subplot{,2grid}.
-* :ghpull:`22722`: Rename confusingly-named cm_fallback.
-* :ghpull:`22697`: Deprecate in testing.decorators
-* :ghpull:`22556`: Add text.parse_math rcParams
-* :ghpull:`22163`: Change colour of Tk toolbar icons on dark backgrounds
-* :ghpull:`22704`: Small simplification to textpath.
-* :ghpull:`22498`: TST: increase coverage on tk tests
-* :ghpull:`21425`: Make Axis3D constructor signature closer to the one of 2D axis.
-* :ghpull:`22665`: Improve error message for incorrect color string
-* :ghpull:`22685`: Rewrite plot format detection from sphinx build target
-* :ghpull:`22670`: Update deprecated vmImage 'vs2017-win2016' in azure pipelines
-* :ghpull:`22503`: Deprecate backend_qt.qApp.
-* :ghpull:`22683`: Add missing space before : for parameters
-* :ghpull:`22591`: Fix Path/str-discrepancy in FontManager.addpath and improve documentation
-* :ghpull:`22680`: Bump actions/cache from 2 to 3
-* :ghpull:`22659`: Add description on quiver head parameters
-* :ghpull:`22668`: Raise on missing closing quotes in matplotlibrc
-* :ghpull:`22675`: Tweak colorbar_placement example.
-* :ghpull:`22276`: Merge "Scatter Symbol" and "Scatter Custom Symbol" examples
-* :ghpull:`22658`: Remove reference to now-deleted reminder note.
-* :ghpull:`22652`: Update documentation example and fix See also
-* :ghpull:`22587`: Refactor handling of tick and ticklabel visibility in Axis.clear()
-* :ghpull:`22148`: MNT: Deprecate ``docstring``
-* :ghpull:`22170`: Add example to polygon selector docstring showing how to set vertices programmatically
-* :ghpull:`22650`: Fix new leak in ft2font introduced in #22604
-* :ghpull:`22644`: FIX: Flush events after closing figures in macosx backend
-* :ghpull:`22643`: Suppress exception chaining in colormap lookup.
-* :ghpull:`22639`: ENH: MacOSX backend to use sRGB instead of GenericRGB colorspace
-* :ghpull:`22509`: Simplifications to ToolManager.{add,remove}_tool.
-* :ghpull:`22633`: DOC: remove space in directive.
-* :ghpull:`22631`: Add space between individual transform components in svg output.
-* :ghpull:`22523`: MNT: Use a context manager to change the norm in colorbar code
-* :ghpull:`22615`: FIX: Change get_axis_map to axis_map now
-* :ghpull:`22508`: Move tracking of autoscale status to Axis.
-* :ghpull:`22547`: Small cleanups around TexManager usage.
-* :ghpull:`22511`: Remove redundant rcParam-lookup in patches
-* :ghpull:`22516`: Expire deprecations in backends
-* :ghpull:`22612`: Updated grammar to reflect more common usage of output vs outputted in animation.py
-* :ghpull:`22589`: Support quoted strings in matplotlibrc
-* :ghpull:`22604`: MNT: Fix types in C-code to reduce warnings
-* :ghpull:`22610`: Fix alternative suggestion in epoch2num() deprecation
-* :ghpull:`22554`: Prepare for making create_dummy_axis not necessary.
-* :ghpull:`22607`: ENH: Add dark/light mode theme to the buttons
-* :ghpull:`21790`: FIX: Update blitting and drawing on the macosx backend
-* :ghpull:`22175`: FIX: Update macosx animation handling
-* :ghpull:`22569`: Require non-zero dash value
-* :ghpull:`22544`: Correct paper sizes
-* :ghpull:`20470`: Issues warnings for legend handles without handlers
-* :ghpull:`22558`: MNT: Simplify imports
-* :ghpull:`22580`: fix doc for annotation_clip parameter
-* :ghpull:`22581`: DOC: fix various typos
-* :ghpull:`22573`: Bump actions/setup-python from 2 to 3
-* :ghpull:`22568`: Rename qhull source to _qhull_wrapper.cpp.
-* :ghpull:`22561`: FIX: Handle stopped animation figure resize
-* :ghpull:`22562`: TST: Add a frame test for animations
-* :ghpull:`22514`: Expire deprecations in cbook.deprecation
-* :ghpull:`22555`: Use picklable callbacks for DraggableBase.
-* :ghpull:`22552`: Tweak dependency checking in doc/conf.py.
-* :ghpull:`22550`: Require sphinx>=3 & numpydoc>=1.0 for building docs.
-* :ghpull:`22539`: Deprecate toplevel mpl.text.get_rotation; normalize rotations early.
-* :ghpull:`22502`: Cleanup unused imports and variables in backends
-* :ghpull:`20071`: Document, test, and simplify impl. of auto_adjustable_area.
-* :ghpull:`22366`: Deprecation removal/updates in axes3d
-* :ghpull:`22484`: Simplify the internal API to connect picklable callbacks.
-* :ghpull:`22417`: Support passing rgbaFace as an array to agg's draw_path.
-* :ghpull:`22412`: Turn _get_axis_map() into a property and remove _get_axis_list()
-* :ghpull:`22486`: Expire deprecations in lines and patches
-* :ghpull:`22512`: Increase coverage
-* :ghpull:`22504`: Simplify FontProperties init.
-* :ghpull:`22497`: Remove entries of MathTextParser._backend_mapping deprecated in 3.4.
-* :ghpull:`22487`: Don't key MathTextParser cache off a mutable FontProperties.
-* :ghpull:`22468`: Turn _mathtext.ship into a plain function.
-* :ghpull:`22490`: Deprecate unused, untested Affine2D.identity().
-* :ghpull:`22491`: Linewrap setupext to 79 character lines.
-* :ghpull:`22488`: Some more maintenance for mathtext internal implementation.
-* :ghpull:`22485`: Change string representation of AxesImage
-* :ghpull:`22240`: Add minimum macosx version
-* :ghpull:`22480`: Remove _point_size_reduction.
-* :ghpull:`22204`: Cleanup _mathtext internal API
-* :ghpull:`22469`: Improve readability of mathtext internal structures.
-* :ghpull:`22477`: Un-pyplot some examples which were already explicitly referencing axes.
-* :ghpull:`22467`: Small cleanup to font handling in agg.
-* :ghpull:`21178`: Add asinh axis scaling (*smooth* symmetric logscale)
-* :ghpull:`22411`: Move cbook._define_aliases() to _api.define_aliases()
-* :ghpull:`22465`: Deprecate unused AddList.
-* :ghpull:`22451`: Clarify error message for bad keyword arguments.
-* :ghpull:`21267`: Cleanup AnnotationBbox.
-* :ghpull:`22464`: Small improvements related to radar_chart example.
-* :ghpull:`22421`: Make most params to figure()/Figure() kwonly.
-* :ghpull:`22457`: Copy arrowprops argument to FancyAnnotationBbox.
-* :ghpull:`22454`: move ``_toolbar_2`` from webagg_core to webagg
-* :ghpull:`22413`: Remove some trivial private getters/setters in axisartist
-* :ghpull:`21634`: TST: Add future dependency tests as a weekly CI job
-* :ghpull:`22079`: Share FigureManager class between gtk3 and gtk4.
-* :ghpull:`22440`: Clarify warning about labels with leading underscores.
-* :ghpull:`17488`: Make error message explicit in legend.py
-* :ghpull:`22453`: Simplify impl. of polar limits setting API.
-* :ghpull:`22449`: Small cleanup to quiver.
-* :ghpull:`22415`: Make emit and auto args of set_{x,y,z}lim keyword only.
-* :ghpull:`22422`: Deprecate backend_ps.convert_psfrags.
-* :ghpull:`22194`: Drop support for Python 3.7
-* :ghpull:`22234`: Partial fix for grid alpha
-* :ghpull:`22433`: Fix ambiguous link targets in docs.
-* :ghpull:`22420`: Update plt.figure() docstring.
-* :ghpull:`22388`: Make signature of Axes.annotate() more explicit.
-* :ghpull:`22419`: Remove "Matplotlib version" from docs issue template
-* :ghpull:`22423`: Avoid indiscriminate glob-remove in xpdf_distill.
-* :ghpull:`22406`: [DOC]: Removed a redundant 'The'
-* :ghpull:`21442`: Factor out common limits handling for x/y/z axes.
-* :ghpull:`22397`: Axes capitalization in widgets and axes3d
-* :ghpull:`22394`: Tweak Axes3D docstrings that refer to 2D plotting methods.
-* :ghpull:`22383`: TST: fix doc build
-* :ghpull:`21877`: DOC: attempt to explain the main different APIs
-* :ghpull:`21238`: Raise when unknown signals are connected to CallbackRegistries.
-* :ghpull:`22345`: MNT: make layout deprecations pending
-* :ghpull:`21597`: FIX: Remove the deepcopy override from transforms
-* :ghpull:`22370`: Replace tabs with spaces in C code.
-* :ghpull:`22371`: Corrected a mistake in comments (Issue #22369)
-* :ghpull:`21352`: Refactor hexbin().
-* :ghpull:`19214`: Improve autoscaling for high order Bezier curves
-* :ghpull:`22268`: Deprecated is_decade and is_close_to_int
-* :ghpull:`22359`: Slightly refactor TeX source generation.
-* :ghpull:`22365`: Remove deprecated ``MovieWriter.cleanup``
-* :ghpull:`22363`: Properly capitalize "Unicode".
-* :ghpull:`22025`: Deprecate various custom FigureFrameWx attributes/methods.
-* :ghpull:`21391`: Reuse imsave()'s background-blending code in FigureCanvasAgg.print_jpeg.
-* :ghpull:`22026`: Simplify wxframe deletion.
-* :ghpull:`22351`: Fix "trailing" whitespace in C docstrings.
-* :ghpull:`22342`: Docstrings for _qhull.
-* :ghpull:`21836`: Slightly shorten ft2font init.
-* :ghpull:`21962`: Privatize various internal APIs of backend_pgf.
-* :ghpull:`22114`: Rewrite AxesStack independently of cbook.Stack.
-* :ghpull:`22332`: Let TransformedPatchPath inherit most functionality from TransformedPath.
-* :ghpull:`22292`: Cleanup Axis._translate_tick_kw
-* :ghpull:`22339`: wx.App() should be init'ed in new_figure_manager_given_figure
-* :ghpull:`22315`: More standardization of floating point slop in mpl_toolkits.
-* :ghpull:`22337`: DOC: More cleanup axes -> Axes
-* :ghpull:`22323`: Replace sole use of maxdict by lru_cache.
-* :ghpull:`22229`: FIX: make safe to add / remove artists during ArtistList iteration
-* :ghpull:`22196`: ``dates`` classes and functions support ``tz`` both as string and ``tzinfo``
-* :ghpull:`22161`: Add box when setting ``PolygonSelector.verts``
-* :ghpull:`19368`: Raise warning and downsample if data given to _image.resample is too large
-* :ghpull:`22250`: Unify toolbar init across backends.
-* :ghpull:`22304`: Added tests for ContourSet.legend_elements
-* :ghpull:`21583`: Add pre-commit config and dev instructions
-* :ghpull:`21547`: Custom cap widths in box and whisker plots in bxp() and boxplot()
-* :ghpull:`20887`: Implement a consistent behavior in TkAgg backend for bad blit bbox
-* :ghpull:`22317`: Rename outdated seaborn styles.
-* :ghpull:`22271`: Rework/fix Text layout cache.
-* :ghpull:`22097`: In mpl_toolkits, use the same floating point slop as for standard ticks.
-* :ghpull:`22295`: Display bad format string in error message.
-* :ghpull:`22287`: Removed unused code and variables
-* :ghpull:`22244`: MNT: colorbar locators properties
-* :ghpull:`22270`: Expanded documentation of Axis.set_ticks as per discussion in issue #22262
-* :ghpull:`22280`: Simplify FontProperties.copy().
-* :ghpull:`22174`: Give the Tk toolbar buttons a flat look
-* :ghpull:`22046`: Add the ability to change the focal length of the camera for 3D plots
-* :ghpull:`22251`: Colorbar docstring reorg
-* :ghpull:`21933`: MNT: privatize colorbar attr
-* :ghpull:`22258`: DOC: fix version switcher
-* :ghpull:`22261`: DOC: fix switcher json
-* :ghpull:`22154`: Add some tests for minspan{x,y} in RectangleSelector
-* :ghpull:`22246`: DOC: add dropdown
-* :ghpull:`22133`: Deprecated ``afm``, ``fontconfig_pattern``, and ``type1font``
-* :ghpull:`22249`: DOC: More capitalization of Axes
-* :ghpull:`22021`: Ensure that all toolbar (old/new) subclasses can be init'ed consistently
-* :ghpull:`22213`: Improve ft2font error reporting.
-* :ghpull:`22245`: Deprecate cleared kwarg to get_renderer.
-* :ghpull:`22239`: Fix typos
-* :ghpull:`22216`: turn off the grid after creating colorbar axes
-* :ghpull:`22055`: FIX: Return value instead of enum in get_capstyle/_joinstyle
-* :ghpull:`22228`: Remove some unnecessary getattrs.
-* :ghpull:`20426`: ENH: Layout engine
-* :ghpull:`22224`: Trivial doc fix to annotations tutorial.
-* :ghpull:`21894`: Jointly track x and y in PolygonSelector.
-* :ghpull:`22205`: Bump minimum NumPy to 1.19
-* :ghpull:`22203`: Factor out underline-thickness lookups in mathtext.
-* :ghpull:`22189`: DOC: Add hatch API to reference
-* :ghpull:`22084`: Clean up 3d plot box_aspect zooming
-* :ghpull:`22098`: Expire axes_grid1/axisartist deprecations.
-* :ghpull:`22013`: Use standard toolbar in wx.
-* :ghpull:`22160`: Removed unused variables etc.
-* :ghpull:`22179`: FIX: macosx check case-insensitive app name
-* :ghpull:`22157`: Improved coverage of mathtext and removed unused code
-* :ghpull:`21781`: Use a fixture to get widget testing axes
-* :ghpull:`22140`: Ensure log formatters use Unicode minus
-* :ghpull:`21342`: Fix drawing animated artists changed in selector callback
-* :ghpull:`22134`: Deprecated ``tight_bbox`` and ``tight_layout`` modules
-* :ghpull:`21965`: Switch transOffset to offset_transform.
-* :ghpull:`22145`: Make Tk windows use the same icon as other backends
-* :ghpull:`22107`: Expire mathttext-related deprecations
-* :ghpull:`22139`: FIX: width/height were reversed in macosx rectangle creation
-* :ghpull:`22123`: Deprecate accepting arbitrary parameters in some get_window_extent() methods
-* :ghpull:`22122`: Hint at draw_without_rendering() in Text.get_window_extent
-* :ghpull:`22120`: Drop dependency on scipy in the docs.
-* :ghpull:`22063`: FIX: Autoposition title when yaxis has offset
-* :ghpull:`22119`: Micro-optimize skew().
-* :ghpull:`22109`: Remove unnecessary null checks in macosx.m, and some more maintenance
-* :ghpull:`21977`: Add corner coordinate helper methods to Ellipse/Rectangle
-* :ghpull:`21830`: Add option of bounding box for PolygonSelector
-* :ghpull:`22115`: Turn _localaxes into a plain list.
-* :ghpull:`22108`: Micro-optimize rotation transform.
-* :ghpull:`22043`: Cleanup differential equations examples.
-* :ghpull:`22080`: Simple style(ish) fixes.
-* :ghpull:`22110`: Right-aligned status text in backends
-* :ghpull:`21873`: DOC: Update and consolidate Custom Tick Formatter for Time Series example
-* :ghpull:`22112`: Fix a small typo
-* :ghpull:`20117`: Very soft-deprecate AxesDivider.new_{horizontal,vertical}.
-* :ghpull:`22034`: Update lines_with_ticks_demo.py
-* :ghpull:`22102`: DOC: rename usage tutorial to quick_start
-* :ghpull:`19228`: Validate text rotation in setter
-* :ghpull:`22081`: Expire colorbar-related deprecations.
-* :ghpull:`22008`: Added color keyword argument to math_to_image
-* :ghpull:`22058`: Remove exprired mplot3d deprecations for 3.6
-* :ghpull:`22073`: DOC: Add new tutorial to external resources.
-* :ghpull:`22054`: MNT: Set CapStyle member names automatically
-* :ghpull:`22061`: De-duplicate mplot3D API docs
-* :ghpull:`22075`: Remove unnecessary ``.figure`` qualifier in docs.
-* :ghpull:`22051`: Make required_interactive_framework required on FigureCanvas.
-* :ghpull:`22050`: Deprecate the noop, unused FigureCanvasBase.resize.
-* :ghpull:`22030`: Add explanatory comments to "broken" horizontal bar plot example
-* :ghpull:`22001`: Fix:    [Bug]: triplot with 'ls' argument yields TypeError #21995
-* :ghpull:`22045`: Fill in missing Axes3D box_aspect argument docstring
-* :ghpull:`22042`: Keep FontEntry helpers private.
-* :ghpull:`21042`: Make rcParams.copy() return a new RcParams instance.
-* :ghpull:`22032`: flipy only affects the drawing of texts, not of images.
-* :ghpull:`21993`: Added docstring to rrulewrapper class
-* :ghpull:`21935`: Significantly improve tight layout performance for cartopy axes
-* :ghpull:`22000`: Some gtk cleanups.
-* :ghpull:`21983`: Simplify canvas class control in FigureFrameWx.
-* :ghpull:`21985`: Slightly tighten the _get_layout_cache_key API.
-* :ghpull:`22020`: Simplify wx _print_image.
-* :ghpull:`22010`: Fix syntax highlighting in contrib guide.
-* :ghpull:`22003`: Initialize RendererCairo.{width,height} in constructor.
-* :ghpull:`21992`: Use _make_classic_style_pseudo_toolbar more.
-* :ghpull:`21916`: Fix picklability of make_norm_from_scale norms.
-* :ghpull:`21981`: FigureCanvasCairo can init RendererCairo; kill RendererCairo subclasses.
-* :ghpull:`21986`: InvLogTransform should only return masked arrays for masked inputs.
-* :ghpull:`21991`: PEP8ify wx callback names.
-* :ghpull:`21975`: DOC: remove experimental tag from CL
-* :ghpull:`21989`: Autoinfer norm bounds.
-* :ghpull:`21980`: Removed loaded modules logging
-* :ghpull:`21982`: Deprecate duplicated FigureManagerGTK{3,4}Agg classes.
-* :ghpull:`21963`: Clarify current behavior of draw_path_collection.
-* :ghpull:`21974`: Reword inset axes example.
-* :ghpull:`21835`: Small improvements to interactive examples
-* :ghpull:`21050`: Store dash_pattern as single attribute, not two.
-* :ghpull:`21557`: Fix transparency when exporting to png via pgf backend.
-* :ghpull:`21904`: Added _repr_html_ for fonts
-* :ghpull:`21696`: Use cycling iterators in RendererBase.
-* :ghpull:`21955`: Refactor common parts of ImageMagick{,File}Writer.
-* :ghpull:`21952`: Clarify coordinates for RectangleSelector properties
-* :ghpull:`21964`: Fix some more missing references.
-* :ghpull:`21516`: Make _request_autoscale_view more generalizable to 3D.
-* :ghpull:`21947`: Slightly cleanup RendererBase docs.
-* :ghpull:`21961`: Privatize various internal APIs of backend_pgf.
-* :ghpull:`21956`: Remove tests for avconv animation writers.
-* :ghpull:`21954`: DOC: Move Animation and MovieWriter inheritance diagrams ...
-* :ghpull:`21780`: Add a click_and_move widget test helper
-* :ghpull:`21941`: Merge branch v3.5.x into main
-* :ghpull:`21936`: Small ``__getstate__`` cleanups.
-* :ghpull:`21939`: Update comment re: register_at_fork.
-* :ghpull:`21910`: Fold _rgbacache into _imcache.
-* :ghpull:`21921`: Clean up RectangleSelector move code
-* :ghpull:`21925`: Drop labelling from PR welcome action
-* :ghpull:`14930`: Set Dock icon on the macosx backend
-* :ghpull:`21920`: Improve square state calculation in RectangleSelector
-* :ghpull:`21919`: Fix use_data_coordinates docstring
-* :ghpull:`21881`: Add a PolygonSelector.verts setter
-* :ghpull:`20839`: Fix centre and square state and add rotation for rectangle selector
-* :ghpull:`21874`: DOC: Add Date Tick Locators and Formatters example
-* :ghpull:`21799`: Added get_font_names() to fontManager
-* :ghpull:`21871`: DOC: Code from markevery_prop_cycle moved to test.
-* :ghpull:`21395`: Expire _check_savefig_extra_args-related deprecations.
-* :ghpull:`21867`: Remove unused bbox arg to _convert_agg_to_wx_bitmap.
-* :ghpull:`21868`: Use partialmethod for better signatures in backend_ps.
-* :ghpull:`21520`: Shorten some inset_locator docstrings.
-* :ghpull:`21737`: Update the "Rotating a 3D plot" gallery example to show all 3 rotation axes
-* :ghpull:`21851`: Re-order a widget test function
-* :ghpull:`10762`: Normalization of elevation and azimuth angles for surface plots
-* :ghpull:`21426`: Add ability to roll the camera in 3D plots
-* :ghpull:`21822`: Replace NSDictionary by switch-case.
-* :ghpull:`21512`: MNT: Add modifier key press handling to macosx backend
-* :ghpull:`21784`: Set macOS icon when using Qt backend
-* :ghpull:`21748`: Shorten PyObjectType defs in macosx.m.
-* :ghpull:`21809`: MNT: Turn all macosx warnings into errors while building
-* :ghpull:`21792`: Fix missing return value in closeButtonPressed.
-* :ghpull:`21767`: Inherit many macos backend docstrings.
-* :ghpull:`21766`: Don't hide build log on GHA.
-* :ghpull:`21728`: Factor out some macosx gil handling for py-method calls from callbacks.
-* :ghpull:`21754`: Update gitattributes so that objc diffs are correctly contextualized.
-* :ghpull:`21752`: Add a helper for directly output pdf streams.
-* :ghpull:`21750`: Don't sort pdf dicts.
-* :ghpull:`21745`: DOC: Clarify Coords Report Example
-* :ghpull:`21746`: Fix/add docstring signatures to many C++ methods.
-* :ghpull:`21631`: DOC: change gridspec tutorial to arranging_axes tutorial
-* :ghpull:`21318`: FIX: better error message for shared axes and axis('equal')
-* :ghpull:`21519`: mark_inset should manually unstale axes limits before drawing itself.
-* :ghpull:`21724`: Fix copyright date with SOURCE_DATE_EPOCH set
-* :ghpull:`21398`: FIX: logic of title repositioning
-* :ghpull:`21717`: Simplify macosx toolbar init.
-* :ghpull:`21690`: Whitespace/braces/#defines cleanup to macosx.
-* :ghpull:`21695`: Use _api.check_shape more.
-* :ghpull:`21698`: Small code cleanups and style fixes.
-* :ghpull:`21529`: Delay-load keymaps in toolmanager.
-* :ghpull:`21525`: Fix support for clim in scatter.
-* :ghpull:`21697`: Drop non-significant zeros from ps output.
-* :ghpull:`21692`: CI: Remove CI test runs from forks of matplotlib
-* :ghpull:`21591`: Make ToolFullScreen a Tool, not a ToolToggle.
-* :ghpull:`21677`: Simplify test for negative xerr/yerr.
-* :ghpull:`21657`: Replace some image_comparisons by return-value-tests/check_figures_e…
-* :ghpull:`21664`: Merge 3.5.x into main
-* :ghpull:`21490`: Make Line2D copy its inputs
-* :ghpull:`21639`: Skip some uses of packaging's PEP440 version for non-Python versions.
-* :ghpull:`21604`: Fix centre square rectangle selector part 1
-* :ghpull:`21593`: Check for images added-and-modified in a same PR
-* :ghpull:`20750`: Shorten issue templates
-* :ghpull:`21590`: Make gtk3 full_screen_toggle more robust against external changes.
-* :ghpull:`21582`: Organize checklist in PR template
-* :ghpull:`21580`: Rename/remove _lastCursor, as needed.
-* :ghpull:`21567`: Removed the range parameter from the validate_whiskers function's err…
-* :ghpull:`21565`: Further remove remnants of offset_position.
-* :ghpull:`21542`: [ENH]: Use new style format strings for colorbar ticks
-* :ghpull:`21564`: Skip invisible artists when doing 3d projection.
-* :ghpull:`21558`: Various small fixes for streamplot().
-* :ghpull:`21544`: Return minorticks as array, not as list.
-* :ghpull:`21546`: Added links to the mosaic docs in figure and pyplot module docstrings
-* :ghpull:`21545`: Turn mouseover into a mpl-style getset_property.
-* :ghpull:`21537`: Remove unnecessary False arg when constructing wx.App.
-* :ghpull:`21536`: Reword margins docstrings, and fix bounds on zmargin values.
-* :ghpull:`21535`: typo-correction-on-line-185
-* :ghpull:`21534`: Do not use space in directive calling.
-* :ghpull:`21494`: Adding tutorial links for blitting in widgets.py
-* :ghpull:`21407`: Stash exceptions when FT2Font closes the underlying stream.
-* :ghpull:`21431`: set_ticks([single_tick]) should also expand view limits.
-* :ghpull:`21444`: Make pipong example self-contained.
-* :ghpull:`21392`: Add label about workflow to new contributor PRs
-* :ghpull:`21440`: Install sphinx-panels along with development setup
-* :ghpull:`21434`: Remove coords_flat variable
-* :ghpull:`21415`: Move gui_support.macosx option to packages section.
-* :ghpull:`21412`: Privatize some SVG internal APIs.
-* :ghpull:`21401`: Uncamelcase some internal variables in axis.py; rename _get_tick_bboxes.
-* :ghpull:`21417`: Use Bbox.unit() more.
-* :ghpull:`20253`: Simplify parameter handling in FloatingAxesBase.
-* :ghpull:`21379`: Simplify filename tracking in FT2Font.
-* :ghpull:`21278`: Clear findfont cache when calling addfont().
-* :ghpull:`21400`: Use bbox.{size,bounds,width,height,p0,...} where appropriate.
-* :ghpull:`21408`: Reword annotations tutorial section titles.
-* :ghpull:`21371`: Rename default branch
-* :ghpull:`21389`: Log pixel coordinates in event_handling coords_demo example on terminal/console
-* :ghpull:`21376`: Factor common parts of saving to different formats using pillow.
-* :ghpull:`21377`: Enable tests for text path based markers
-* :ghpull:`21283`: Demonstrate inset_axes in scatter_hist example.
-* :ghpull:`21356`: Raise an exception when find_tex_file fails to find a file.
-* :ghpull:`21362`: Simplify wording of allowed errorbar() error values
-* :ghpull:`21274`: ENH: Add support to save images in WebP format
-* :ghpull:`21289`: Simplify _init_legend_box.
-* :ghpull:`21256`: Make image_comparison work even without the autoclose fixture.
-* :ghpull:`21343`: Fix type1font docstring markup/punctuation.
-* :ghpull:`21341`: Fix trivial docstring typo.
-* :ghpull:`21301`: Simplify ``Colormap.__call__`` a bit.
-* :ghpull:`21280`: Make ``Path.__deepcopy__`` interact better with subclasses, e.g. TextPath.
-* :ghpull:`21266`: Fix #21101 Add validator to errorbar method
-* :ghpull:`20921`: Fix problem with (deep)copy of TextPath
-* :ghpull:`20914`: 19195 rotated markers
-* :ghpull:`21276`: Add language about not assigning issues
-* :ghpull:`20715`: Improve Type-1 font parsing
-* :ghpull:`21218`: Parametrize/simplify test_missing_psfont.
-* :ghpull:`21213`: Compress comments in make_image.
-* :ghpull:`21187`: Deprecate error_msg_foo helpers.
-* :ghpull:`21190`: Deprecate mlab.stride_windows.
-* :ghpull:`21152`: Rename ``**kw`` to ``**kwargs``.
-* :ghpull:`21087`: Move colormap examples from userdemo to images_contours_and_fields.
-* :ghpull:`21074`: Deprecate MarkerStyle(None).
-* :ghpull:`20990`: Explicit registration of canvas-specific tool subclasses.
-* :ghpull:`21049`: Simplify setting Legend attributes
-* :ghpull:`21056`: Deprecate support for no-args MarkerStyle().
-* :ghpull:`21059`: Remove dummy test command from setup.py
-* :ghpull:`21015`: Prepare for rcParams.copy() returning a new RcParams instance in the future
-* :ghpull:`21021`: Factor out for_layout_only backcompat support in get_tightlayout.
-* :ghpull:`21023`: Inline ToolManager._trigger_tool to its sole call site.
-* :ghpull:`21005`: Test the rcParams deprecation machinery.
-* :ghpull:`21010`: Avoid TransformedBbox where unneeded.
-* :ghpull:`21019`: Reword custom_ticker1 example.
-* :ghpull:`20995`: Deprecate some backend_gtk3 helper globals.
-* :ghpull:`21004`: Remove now-unused rcParams _deprecated entries.
-* :ghpull:`20986`: Make HandlerLine2D{,Compound} inherit constructors from HandlerNpoints.
-* :ghpull:`20974`: Rename symbol_name to glyph_name where appropriate.
-* :ghpull:`20961`: Small cleanups to math_to_image.
-* :ghpull:`20957`: legend_handler_map cleanups.
-* :ghpull:`20955`: Remove unused HostAxes._get_legend_handles.
-* :ghpull:`20851`: Try to install the Noto Sans CJK font
-
-Issues (202):
-
-* :ghissue:`23827`: backend_gtk3agg.py calls set_device_scale
-* :ghissue:`23560`: [Doc]: mpl_toolkits.axes_grid still mentioned as maintained
-* :ghissue:`23794`: [Doc]: Version switcher broken in devdocs
-* :ghissue:`23806`: [Bug]: possible regression in axis ticks handling in matplotlib 3.6.0rc2
-* :ghissue:`22965`: [Bug]: triplot duplicates label legend
-* :ghissue:`23807`: streamplot raises ValueError when the input is zeros
-* :ghissue:`23761`: [Bug]: False positive legend handler warnings in 3.6.0.rc1
-* :ghissue:`23398`: [Bug]: Newer versions of matplotlib ignore xlabel on colorbar axis
-* :ghissue:`23699`: [Bug]: Bug with toolbar instantiation in notebook
-* :ghissue:`23745`: [Doc]: Minor rcParams/matplotlibrc doc issues
-* :ghissue:`23717`: [Bug]: AxesSubplot.get_yticks not returning the actual printed ticks
-* :ghissue:`21508`: [Doc]: Create diagram to show rotation directions for 3D plots
-* :ghissue:`23709`: [Bug]: colorbar with unattached mappables can't steal space
-* :ghissue:`23701`: [Bug]: plt.figure(), plt.close() leaks memory
-* :ghissue:`22409`: [Bug]: AttributeError: 'QResizeEvent' object has no attribute 'pos'
-* :ghissue:`19609`: DeprecationWarning when changing color maps
-* :ghissue:`23716`: MatplotlibDeprecationWarning removal hard-breaks seaborn in 3.6rc1
-* :ghissue:`23719`: [Bug]: register_cmap deprecation message seems wrong
-* :ghissue:`23707`: test_Normalize fails on aarch64/ppc64le/s390x
-* :ghissue:`21107`: [MNT]: Should plt.xticks() get a minor keyword argument
-* :ghissue:`23679`: [Doc]: Deprecated modules not in docs
-* :ghissue:`19550`: Arc and pathpatch_2d_to_3d plots full ellipse
-* :ghissue:`23329`: [Bug]: ``plt.autoscale()`` fails for partial ``Arc``
-* :ghissue:`11266`: Arc patch ignoring theta1/theta2 when added to Axes via PatchCollection
-* :ghissue:`4067`: 'Poly3DCollection' object has no attribute '_facecolors2d'
-* :ghissue:`23622`: [MNT]: make.bat not parsing sphinxopt
-* :ghissue:`23459`: [Bug]: 'Line3D' object has no attribute '_verts3d'
-* :ghissue:`23653`: [Bug]: macosx subplot tool causes segfault when window closed
-* :ghissue:`23660`: [Bug]: Test test_figure.py::test_subfigure_ss[png] FAILED on ppc64le
-* :ghissue:`23645`: [MNT]: Python 3.11 manylinux wheels
-* :ghissue:`23650`: TTF fonts loaded from file are not embedded/displayed properly when saved to pdf
-* :ghissue:`23583`: [Doc]: Document the position parameter in apply_aspect()
-* :ghissue:`23386`: setuptools_scm-git-archive is obsolete
-* :ghissue:`23220`: [Doc]: Clarify ``offset`` parameter in linestyle
-* :ghissue:`22746`: [Doc]: Document that rcParams['font.family'] can be a list
-* :ghissue:`8187`: Axes doesn't have ````legends```` attribute?
-* :ghissue:`23580`: [Bug]: TypeError when plotting against list of datetime.date where 0th element of list is None
-* :ghissue:`15514`: Relevant methods are only documented in base classes and thus not easily discoverable
-* :ghissue:`21611`: DOC: Add conda environment instructions to developers guide
-* :ghissue:`23487`: [Bug]: scatter plot color settings discarded unless c given
-* :ghissue:`22977`: [Bug]: offset dash linestyle has no effect in patch objects
-* :ghissue:`18883`: Matplotlib would not try to apply all the font in font list to draw all characters in the given string.
-* :ghissue:`22570`: [ENH]: Provide ``axis('equal')`` for ``Axes3D``.
-* :ghissue:`23433`: [Bug]: array-like linewidth raises an error for scatter3D
-* :ghissue:`12388`: Legend Title Left Alignment
-* :ghissue:`23375`: [Bug]: markerfacecoloralt not supported when drawing errorbars
-* :ghissue:`17973`: DOC: matplotlib.__doc__ not included in online docs ?
-* :ghissue:`23474`: [Bug]: ``\,`` and ``\mathrm{\,}`` are not identical in Mathtext when using CM and STIX
-* :ghissue:`8715`: event handlers have different signatures across backends
-* :ghissue:`18271`: PGF uses the minimal document class
-* :ghissue:`23324`: [Bug]: Exception not handled in widgetlock()
-* :ghissue:`15710`: doc for type of tz parameter is inconsistent throughout dates.py
-* :ghissue:`21165`: Hexbin marginals need a test for linear scaling
-* :ghissue:`23105`: [MNT]: Deprecate per-backend customization of draw_if_interactive
-* :ghissue:`23147`: [Bug]: with setuptools>=60, cannot find msbuild
-* :ghissue:`23379`: [Bug]: Offset notation on y-axis can overlap with a long title
-* :ghissue:`22819`: [Doc]: Make rect argument consistent in the docstrings
-* :ghissue:`23172`: [Bug]: Calling matplotlib.pyplot.show() outside of matplotlib.pyplot.rc_context no longer works
-* :ghissue:`23019`: [Bug]: ``UnicodeDecodeError`` when using some special and accented characters in TeX
-* :ghissue:`23334`: [Doc]: Tk embedding example crashes Spyder
-* :ghissue:`23298`: [Bug]: get_backend() clears figures from Gcf.figs if they were created under rc_context
-* :ghissue:`21942`: [ENH]: add width/height_ratios to subplots and friends
-* :ghissue:`23028`: [ENH]: contour kwarg for negative_linestyle
-* :ghissue:`19223`: Certain non-hashable parameters to text() give cryptic error messages
-* :ghissue:`18351`: Add the ability to plot striped lines
-* :ghissue:`23205`: [Bug]: URL-area not rotated in PDFs
-* :ghissue:`23268`: [Bug]: hyphen renders different length depending on presence of MathText
-* :ghissue:`23308`: [Bug]: set_visible() not working for 3d projection
-* :ghissue:`23296`: Set_color method for line2d object in latest document not work
-* :ghissue:`22992`: [Bug]: test_image_comparison_expect_rms nondeterministic failure
-* :ghissue:`23008`: [ENH]: Use ``\genfrac`` in display style?
-* :ghissue:`23214`: [MNT]: Rename examples with "test" in the name
-* :ghissue:`17852`: Thin space missing after mathtext operators
-* :ghissue:`12078`: Inconsistency in keyword-arguments ncol/ncols, nrow/nrows
-* :ghissue:`23239`: [Doc]: steps is not implemented in line styles.
-* :ghissue:`23151`: [MNT]: default date limits...
-* :ghissue:`9462`: Misaligned bottoms of subplots for png output with bbox_inches='tight'
-* :ghissue:`21369`: [Bug]: ax.invert_xaxis() and ax.invert_yaxis() both flip the X axis
-* :ghissue:`20797`: ``macosx`` cursors break with images
-* :ghissue:`23084`: [TST] Upcoming dependency test failures
-* :ghissue:`22910`: [Bug]: bar_label fails with nan errorbar values
-* :ghissue:`23074`: [Bug]: matplotlib crashes if ``_tkinter`` doesn't have ``__file__``
-* :ghissue:`23083`: [Bug]: Confusing error messages
-* :ghissue:`22391`: [Doc]: Remove "keywords" line at the bottom of all examples
-* :ghissue:`20202`: Daylocator causes frozen computer when used with FuncAnimation
-* :ghissue:`22529`: Replace C++ quad contouring code with use of ContourPy
-* :ghissue:`21710`: [ENH]: macosx backend does not respect rcParams["savefig.directory"]
-* :ghissue:`21880`: [Doc]: rrulewrapper not included in API docs
-* :ghissue:`22622`: [Bug]: Gaps and overlapping areas between bins when using float16
-* :ghissue:`23043`: [TST] Upcoming dependency test failures
-* :ghissue:`17960`: Line2D object markers are lost when retrieved from legend.get_lines() when linestyle='None'
-* :ghissue:`23026`: [MNT]: Require that matplotlibrc/style files use utf-8 (or have an encoding cookie)
-* :ghissue:`22947`: [Bug]: Can't use ``plt.sca()`` on axes created using subfigures
-* :ghissue:`22623`: [ENH]: support rect with constrained_layout ("layout only to part of the figure")
-* :ghissue:`22917`: "ab;cd" missing in subplot_mosaic tutorial
-* :ghissue:`22686`: [Bug]: can not give init value for RangeSlider widget
-* :ghissue:`22740`: [MNT]: Add codespell to pre-commit hooks
-* :ghissue:`22893`: rainbow text example is broken
-* :ghissue:`21571`: [Doc]: Clarify text positioning
-* :ghissue:`22092`: [Bug]: Configure subplots dialog freezes for TkAgg with toolmanager
-* :ghissue:`22760`: [Bug]: Macosx legend picker doesn't work anymore
-* :ghissue:`16369`: Call to input blocks slider input on osx with the default agg 'MacOSX'. It works fine on when TkAgg is used.
-* :ghissue:`22915`: [Bug]: figure.raise_window rcParam does not work on MacOSX backend
-* :ghissue:`22930`: [Bug]: Regression in dashes due to #22569
-* :ghissue:`22859`: [Bug]: findSystemFonts should not look in subdirectories of C:\Windows\Fonts\
-* :ghissue:`22882`: Missing ``f`` prefix on f-strings
-* :ghissue:`22738`: [MNT]: make Axes.cla an alias for Axes.clear in all cases
-* :ghissue:`22708`: [TST] Upcoming dependency test failures
-* :ghissue:`8388`: Proposed ENH: Allow user to turn off breaking of streamlines in streamplot
-* :ghissue:`20755`: [Bug]: make_norm_from_scale should create picklable classes even when used in-line.
-* :ghissue:`18249`: Expand the explanation of the Object-Oriented interface
-* :ghissue:`22792`: [Bug]: .eps greyscale hatching of patches when lw=0
-* :ghissue:`22630`: [ENH]: enable passing of projection keyword to Axes.inset_axes
-* :ghissue:`22414`: [Bug]: bar_label overlaps bars when y-axis is inverted
-* :ghissue:`22726`: [Bug]: tripcolor ignores clim
-* :ghissue:`21635`: [ENH]: Add a nightly wheel build
-* :ghissue:`9994`: document where nightly wheels are published
-* :ghissue:`22350`: [Bug]: text.usetex Vs. DateFormatter
-* :ghissue:`4976`: missing imshow() subplots when using tight_layout()
-* :ghissue:`22150`: [ENH]: Tool icons are hardly visible in Tk when using a dark theme
-* :ghissue:`22662`: Leave color parameter empty should be fine[ENH]:
-* :ghissue:`22671`: [Doc]: plot_format adaption invalidates sphinx cache
-* :ghissue:`22582`: [Bug]: FontManager.addfont doesn't accept pathlib.Path of TTF font
-* :ghissue:`22657`: [ENH]: vector map
-* :ghissue:`16181`: The great API cleanup
-* :ghissue:`22636`: [Bug]: Infinite loop when there is single double quote in matplotlibrc
-* :ghissue:`22266`: [Doc]: Improve examples in documentation
-* :ghissue:`11861`: Figure does not close until script finishes execution
-* :ghissue:`19288`: Escape # character in matplotlibrc
-* :ghissue:`22579`: [Bug]: Replacement for epoch2num behaves differently (does not accept arrays)
-* :ghissue:`22605`: [Bug]: Tool contrast low with dark theme on macosx backend
-* :ghissue:`17642`: bring osx backend flush_events to feature parity with other backend
-* :ghissue:`19268`: Drawing the canvas does not populate ticklabels on MacOSX backend
-* :ghissue:`17445`: MacOSX does not render frames in which new artists are added when blitting
-* :ghissue:`10980`: Current versions cannot reproduce rotate_axes_3d_demo.py
-* :ghissue:`18451`: MacOSX backend fails with animation in certain scripts
-* :ghissue:`22603`: [MNT]: Replace str(n)cpy etc with safe versions (C++)
-* :ghissue:`19121`: Handle and label not created for Text with label
-* :ghissue:`22563`: [Doc]: annotation_clip=None not correctly documented
-* :ghissue:`12528`: Empty axes on draw after blitted animation finishes
-* :ghissue:`20991`: [Bug]: Error when using path effect with a PolyCollection
-* :ghissue:`19563`: path_effects kwarg triggers exception on 3D scatterplot
-* :ghissue:`8650`: System Error in backend_agg. (with a fix!)
-* :ghissue:`20294`: ``AxesImage.__str__`` is wrong if the image does not span the full Axes.
-* :ghissue:`18066`: Document minimum supported OSX version for macos backend
-* :ghissue:`17018`: Add documentation about transparency of frame
-* :ghissue:`22403`: [MNT]: Confusing prompt in docs issue template
-* :ghissue:`8839`: mpl_connect silently does nothing when passed an invalid event type string
-* :ghissue:`22343`: [MNT]: Delay (or make pending) the deprecation of set_constrained_layout/set_tight_layout
-* :ghissue:`21554`: [Bug]: ``ValueError`` upon deepcopy of a ``Figure`` object
-* :ghissue:`22369`: [Doc]: Incorrect comment in example code for creating adjacent subplots
-* :ghissue:`19174`: connectionstyle arc3 with high rad value pushes up data interval of x-axis and y-axis.
-* :ghissue:`8351`: seaborn styles make "+", "x" markers invisible; proposed workaround for shipped styles
-* :ghissue:`22278`: Deprecate/remove maxdict
-* :ghissue:`19276`: imshow with very large arrays not working as expected
-* :ghissue:`22035`: [ENH]: Specify a custom focal length / FOV for the 3d camera
-* :ghissue:`22264`: [Bug]: new constrained_layout causes axes to go invisible(?)
-* :ghissue:`21774`: [MNT]: Improvements to widget tests
-* :ghissue:`18722`: Consider removing AFM+mathtext support
-* :ghissue:`21540`: [Bug]: cm fontset in log scale does not use Unicode minus
-* :ghissue:`22062`: [Bug]: Autopositioned title overlaps with offset text
-* :ghissue:`22093`: [Bug]: AttributeError: 'AxesSubplot' object has no attribute 'add_text'
-* :ghissue:`22012`: [Bug]: Mouseover coordinate/value text should be right aligned
-* :ghissue:`21995`: [Bug]: triplot with 'ls' argument yields TypeError
-* :ghissue:`20249`: MatplotlibDeprecationWarning when updating rcparams
-* :ghissue:`15781`: MatplotlibDeprecationWarning examples.directory is deprecated
-* :ghissue:`13118`: No MatplotlibDeprecationWarning for default rcParams
-* :ghissue:`21978`: Remove logging debug of loaded modules
-* :ghissue:`11738`: pgf backend doesn't make background transparent
-* :ghissue:`18039`: Add ``_repr_html_`` for fonts
-* :ghissue:`21970`: [Bug]: tight layout breaks with toolbar.push_current()
-* :ghissue:`14850`: No icon showing up with macosx backend
-* :ghissue:`17283`: Create Date Formatter/Locator Reference
-* :ghissue:`21761`: [Doc]: add how to know available fonts...
-* :ghissue:`21863`: [Doc]: Remove example "prop_cycle property markevery in rcParams"
-* :ghissue:`10241`: Axes3D.view_init elevation issue between 270 and 360 degrees
-* :ghissue:`14453`: add third angle to view_init()
-* :ghissue:`20486`: Modifier key press events not recognized on MacOSX backend
-* :ghissue:`9837`: MacOS: Key modifiers deprecated
-* :ghissue:`11416`: RuntimeError: adjustable='datalim' is not allowed when both axes are shared.
-* :ghissue:`17711`: inset_locator.mark_inset() misplaces box connectors
-* :ghissue:`20854`: [Doc]: Incorrect copyright start year at the bottom of devdocs page
-* :ghissue:`21394`: [Bug]: Subplot title does not obey padding
-* :ghissue:`20998`: [Bug]: ToolManager does not respect rcParams["keymap.<any>"] set after import time
-* :ghissue:`7075`: Superscripts in axis label cut when saving .eps with bbox_inches="tight"
-* :ghissue:`21514`: [Doc]: Error message of validate_whiskers is not updated
-* :ghissue:`21532`: [Doc]: subplot_mosaic docstring should link to the tutorial
-* :ghissue:`16550`: Docs: performance discussion of tight_layout
-* :ghissue:`21378`: [ENH]: use new style format strings for colorbar ticks
-* :ghissue:`19323`: Streamplot color mapping fails on (near-)empty array.
-* :ghissue:`19559`: Axes.get_xticks() returns a numpy array but Axes.get_xticks(minor=True) returns a plain list
-* :ghissue:`21526`: [Doc]: Little Typo on Introductory Tutorial
-* :ghissue:`19195`: Rotate Markers in functions like plot, scatter, etcetera
-* :ghissue:`21364`: [Bug]: double free when FT2Font constructor is interrupted by KeyboardInterrupt
-* :ghissue:`16581`: Can't not refresh new font in running interpreter
-* :ghissue:`21162`: [ENH]: saving images in webp format
-* :ghissue:`18168`: The example of the testing decorator does not work.
-* :ghissue:`20943`: [Bug]: Deepcopy of TextPath fails
-* :ghissue:`21101`: [Bug]: Errorbars separated from markers with negative errors
-* :ghissue:`17986`: MEP22 per-backend tool registration
-* :ghissue:`4938`: Feature request: add option to disable mathtext parsing
-* :ghissue:`11435`: plt.subplot eats my subplots
+Pull Requests (80):
+
+* :ghpull:`24124`: Backport PR #24111 on branch v3.6.x (FIX: add missing method to ColormapRegistry)
+* :ghpull:`24111`: FIX: add missing method to ColormapRegistry
+* :ghpull:`24117`: Backport PR #24113 on branch v3.6.x (Add exception class to pytest.warns calls)
+* :ghpull:`24116`: Backport PR #24115 on branch v3.6.x (Fix mask lookup in fill_between for NumPy 1.24+)
+* :ghpull:`24113`: Add exception class to pytest.warns calls
+* :ghpull:`24115`: Fix mask lookup in fill_between for NumPy 1.24+
+* :ghpull:`24112`: Backport PR #24109 on branch v3.6.x (DOC: add API change note for colorbar deprecation)
+* :ghpull:`24109`: DOC: add API change note for colorbar deprecation
+* :ghpull:`24107`: Backport PR #24088 on branch v3.6.x (MNT: make orphaned colorbar deprecate versus raise)
+* :ghpull:`24088`: MNT: make orphaned colorbar deprecate versus raise
+* :ghpull:`24103`: Backport PR #23684 on branch v3.6.x (Fix rectangle and hatches for colorbar)
+* :ghpull:`23684`: Fix rectangle and hatches for colorbar
+* :ghpull:`24087`: Backport PR #24084 on branch v3.6.x (Revert argument checking for label_mode)
+* :ghpull:`24084`: Revert argument checking for label_mode
+* :ghpull:`24078`: Backport PR #24047 on branch v3.6.x (Revert #22360: Let TeX handle multiline strings itself)
+* :ghpull:`24047`: Revert #22360: Let TeX handle multiline strings itself
+* :ghpull:`24077`: Backport PR #24054 on branch v3.6.x ( DOC: Move OO-examples from pyplot section)
+* :ghpull:`24054`:  DOC: Move OO-examples from pyplot section
+* :ghpull:`24072`: Backport PR #24069 on branch v3.6.x (Clarification of marker size in scatter)
+* :ghpull:`24073`: Backport PR #24070 on branch v3.6.x (DOC: colorbar may steal from array of axes)
+* :ghpull:`24070`: DOC: colorbar may steal from array of axes
+* :ghpull:`24069`: Clarification of marker size in scatter
+* :ghpull:`24059`: Backport PR #23638 on branch v3.6.x (FIX: correctly handle generic font families in svg text-as-text mode)
+* :ghpull:`23638`: FIX: correctly handle generic font families in svg text-as-text mode
+* :ghpull:`24048`: Backport PR #24045 on branch v3.6.x (Fix _FigureManagerGTK.resize on GTK4)
+* :ghpull:`24055`: Backport PR #24046 on branch v3.6.x (Ignore 'CFMessagePort: bootstrap_register' messages)
+* :ghpull:`24046`: Ignore 'CFMessagePort: bootstrap_register' messages
+* :ghpull:`24051`: Backport PR #24037 on branch v3.6.x ([DOC]: make spanselector example codeblock continuous)
+* :ghpull:`24037`: [DOC]: make spanselector example codeblock continuous
+* :ghpull:`24045`: Fix _FigureManagerGTK.resize on GTK4
+* :ghpull:`24043`: Backport PR #24041 on branch v3.6.x (DOC: Fix incorrect redirect)
+* :ghpull:`24030`: Backport PR #24019 on branch v3.6.x (Don't require FigureCanvas on backend module more)
+* :ghpull:`24040`: Backport PR #24018 on branch v3.6.x (When comparing eps images, run ghostscript with -dEPSCrop.)
+* :ghpull:`24018`: When comparing eps images, run ghostscript with -dEPSCrop.
+* :ghpull:`24033`: Backport PR #24032 on branch v3.6.x (Reword SpanSelector example.)
+* :ghpull:`24029`: Backport PR #24026 on branch v3.6.x (Don't modify Axes property cycle in stackplot)
+* :ghpull:`23994`: Backport PR #23964 on branch v3.6.x (Fix issue with empty line in ps backend)
+* :ghpull:`24019`: Don't require FigureCanvas on backend module more
+* :ghpull:`24026`: Don't modify Axes property cycle in stackplot
+* :ghpull:`24027`: Backport PR #23904 on branch v3.6.x (added a reversing section to colormap reference)
+* :ghpull:`24017`: Backport PR #24014 on branch v3.6.x (Bump pypa/cibuildwheel from 2.10.1 to 2.10.2)
+* :ghpull:`24014`: Bump pypa/cibuildwheel from 2.10.1 to 2.10.2
+* :ghpull:`24007`: Backport PR #24004 on branch v3.6.x (Increase consistency in tutorials and examples)
+* :ghpull:`23964`: Fix issue with empty line in ps backend
+* :ghpull:`23904`: added a reversing section to colormap reference
+* :ghpull:`23990`: Backport PR #23978 on branch v3.6.x (DOC: Suppress IPython output in examples and tutorials where not needed)
+* :ghpull:`23978`: DOC: Suppress IPython output in examples and tutorials where not needed
+* :ghpull:`23916`: Backport PR #23912 on branch v3.6.x (FIX: only expect FigureCanvas on backend module if using new style)
+* :ghpull:`23989`: Backport PR #23944 on branch v3.6.x (FIX: ValueError when hexbin is run with empty arrays and log scaling.)
+* :ghpull:`23944`: FIX: ValueError when hexbin is run with empty arrays and log scaling.
+* :ghpull:`23988`: Backport PR #23987 on branch v3.6.x (FIX: do not set constrained layout on false-y values)
+* :ghpull:`23987`: FIX: do not set constrained layout on false-y values
+* :ghpull:`23982`: Backport PR #23980 on branch v3.6.x (DOC: Move Quick Start Tutorial to first position)
+* :ghpull:`23979`: Backport PR #23975 on branch v3.6.x (Reword docstring of reset_position.)
+* :ghpull:`23975`: Reword docstring of reset_position.
+* :ghpull:`23966`: Backport PR #23930 on branch v3.6.x (Fix edge color, links, wording; closes matplotlib/matplotlib#23895)
+* :ghpull:`23971`: Backport PR #23906 on branch v3.6.x (Edit mplot3d examples for correctness and consistency)
+* :ghpull:`23906`: Edit mplot3d examples for correctness and consistency
+* :ghpull:`23963`: Backport PR #23957 on branch v3.6.x (Bump pypa/cibuildwheel from 2.9.0 to 2.10.1)
+* :ghpull:`23930`: Fix edge color, links, wording; closes matplotlib/matplotlib#23895
+* :ghpull:`23910`: FIX: do not append None to stream in ps
+* :ghpull:`23957`: Bump pypa/cibuildwheel from 2.9.0 to 2.10.1
+* :ghpull:`23960`: Backport PR #23947 on branch v3.6.x (Fix building on MINGW)
+* :ghpull:`23942`: DOC: fix versions in v3.6.x doc switcher
+* :ghpull:`23961`: Backport PR #23958 on branch v3.6.x (DOC: Remove Adding Animations section)
+* :ghpull:`23958`: DOC: Remove Adding Animations section
+* :ghpull:`23947`: Fix building on MINGW
+* :ghpull:`23945`: Backport PR #23941 on branch v3.6.x (consistent notation for minor/patch branches)
+* :ghpull:`23956`: Backport PR #23751 on branch v3.6.x (FIX: show bars when the first location is nan)
+* :ghpull:`23751`: FIX: show bars when the first location is nan
+* :ghpull:`23938`: Backport PR #23919 on branch v3.6.x (DOC: remove dead "Show Source" links)
+* :ghpull:`23952`: Backport PR #23951 on branch v3.6.x (DOC: Make animation continuous)
+* :ghpull:`23949`: DOC: Display "dev" instead of "devdocs" in the version switcher
+* :ghpull:`23940`: Fix typos in github_stats.rst
+* :ghpull:`23936`: Backport PR #23935 on branch v3.6.x (DOC: fix versions is doc switcher)
+* :ghpull:`23933`: Backport PR #23932 on branch v3.6.x (DOC: Fix formatting in image tutorial)
+* :ghpull:`23932`: DOC: Fix formatting in image tutorial
+* :ghpull:`23926`: Backport PR #23925 on branch v3.6.x (FIX: use process_event in dpi changes on macosx backend)
+* :ghpull:`23925`: FIX: use process_event in dpi changes on macosx backend
+* :ghpull:`23912`: FIX: only expect FigureCanvas on backend module if using new style
+
+Issues (22):
+
+* :ghissue:`23981`: [ENH]: Default ``matplotlib.colormaps[None]`` to call ``matplotlib.colormaps[matplotlib.rcParams['image.cmap']]``?
+* :ghissue:`24106`: [Bug]: fill_between gives IndexError with numpy 1.24.0.dev
+* :ghissue:`24053`: Cartopy axes_grid_basic example broken by Matplotlib 3.6
+* :ghissue:`23977`: [Bug]: Eqnarray in AnchoredText results in misplaced text (new in v3.6.0)
+* :ghissue:`23973`: [Bug]: ValueError: Unable to determine Axes to steal space for Colorbar.
+* :ghissue:`23456`: [Bug]: Horizontal colorbars drawn incorrectly with hatches
+* :ghissue:`15922`: Pyplot gallery section is mostly OO examples
+* :ghissue:`23700`: [Doc]: scatter points
+* :ghissue:`23492`: [Bug]: svg backend does not use configured generic family lists
+* :ghissue:`22528`: [Bug]: problem with font property in text elements of svg figures
+* :ghissue:`23911`: [Bug]: 3.6.0 doesn't interact well with pycharm throwing "backend_interagg" exception
+* :ghissue:`24024`: stackplot should not change Axes cycler
+* :ghissue:`23954`: [Bug]: Text label with empty line causes a "TypeError: cannot unpack non-iterable NoneType object" in PostScript backend
+* :ghissue:`23922`: [Bug]: Refactor of hexbin for 3.6.0 crashes with empty arrays and log scaling
+* :ghissue:`23986`: [Bug]: Constrained layout UserWarning even when False
+* :ghissue:`23895`: [Bug]: 3D surface is not plotted for the contour3d_3 example in the gallery
+* :ghissue:`23955`: [Doc]: Adding animations to Youtube channel
+* :ghissue:`23943`: [Bug]: Couldn't build matplotlib 3.6.0 with both Clang-15 and GCC-12
+* :ghissue:`23687`: [Bug]: barplot does not show anything when x or bottom start and end with NaN
+* :ghissue:`23876`: [Doc]: Missing source files
+* :ghissue:`23909`: [Doc]: add animation examples to show animated subplots
+* :ghissue:`23921`: [Bug]: resize_event deprecation warnings when creating figure on macOS with version 3.6.0


 Previous GitHub statistics
diff --git a/doc/users/next_whats_new/3d_plot_aspects_adjustable_keyword.rst b/doc/users/next_whats_new/3d_plot_aspects_adjustable_keyword.rst
deleted file mode 100644
index 5a231024a7..0000000000
--- a/doc/users/next_whats_new/3d_plot_aspects_adjustable_keyword.rst
+++ /dev/null
@@ -1,34 +0,0 @@
-*adjustable* keyword argument for setting equal aspect ratios in 3D
--------------------------------------------------------------------
-
-While setting equal aspect ratios for 3D plots, users can choose to modify
-either the data limits or the bounding box.
-
-.. plot::
-    :include-source: true
-
-    import matplotlib.pyplot as plt
-    import numpy as np
-    from itertools import combinations, product
-
-    aspects = ('auto', 'equal', 'equalxy', 'equalyz', 'equalxz')
-    fig, axs = plt.subplots(1, len(aspects), subplot_kw={'projection': '3d'},
-                            figsize=(12, 6))
-
-    # Draw rectangular cuboid with side lengths [4, 3, 5]
-    r = [0, 1]
-    scale = np.array([4, 3, 5])
-    pts = combinations(np.array(list(product(r, r, r))), 2)
-    for start, end in pts:
-        if np.sum(np.abs(start - end)) == r[1] - r[0]:
-            for ax in axs:
-                ax.plot3D(*zip(start*scale, end*scale), color='C0')
-
-    # Set the aspect ratios
-    for i, ax in enumerate(axs):
-        ax.set_aspect(aspects[i], adjustable='datalim')
-        # Alternatively: ax.set_aspect(aspects[i], adjustable='box')
-        # which will change the box aspect ratio instead of axis data limits.
-        ax.set_title(f"set_aspect('{aspects[i]}')")
-
-    plt.show()
diff --git a/doc/users/next_whats_new/3d_plot_pan_zoom.rst b/doc/users/next_whats_new/3d_plot_pan_zoom.rst
deleted file mode 100644
index a94dfe4c20..0000000000
--- a/doc/users/next_whats_new/3d_plot_pan_zoom.rst
+++ /dev/null
@@ -1,8 +0,0 @@
-3D plot pan and zoom buttons
-----------------------------
-
-The pan and zoom buttons in the toolbar of 3D plots are now enabled.
-Unselect both to rotate the plot. When the zoom button is pressed,
-zoom in by using the left mouse button to draw a bounding box, and
-out by using the right mouse button to draw the box. When zooming a
-3D plot, the current view aspect ratios are kept fixed.
diff --git a/doc/users/next_whats_new/bar_label_formatting.rst b/doc/users/next_whats_new/bar_label_formatting.rst
deleted file mode 100644
index cf64436086..0000000000
--- a/doc/users/next_whats_new/bar_label_formatting.rst
+++ /dev/null
@@ -1,31 +0,0 @@
-Additional format string options in `~matplotlib.axes.Axes.bar_label`
----------------------------------------------------------------------
-
-The ``fmt`` argument of `~matplotlib.axes.Axes.bar_label` now accepts
-{}-style format strings:
-
-.. code-block:: python
-
-    import matplotlib.pyplot as plt
-
-    fruit_names = ['Coffee', 'Salted Caramel', 'Pistachio']
-    fruit_counts = [4000, 2000, 7000]
-
-    fig, ax = plt.subplots()
-    bar_container = ax.bar(fruit_names, fruit_counts)
-    ax.set(ylabel='pints sold', title='Gelato sales by flavor', ylim=(0, 8000))
-    ax.bar_label(bar_container, fmt='{:,.0f}')
-
-It also accepts callables:
-
-.. code-block:: python
-
-    animal_names = ['Lion', 'Gazelle', 'Cheetah']
-    mph_speed = [50, 60, 75]
-
-    fig, ax = plt.subplots()
-    bar_container = ax.bar(animal_names, mph_speed)
-    ax.set(ylabel='speed in MPH', title='Running speeds', ylim=(0, 80))
-    ax.bar_label(
-        bar_container, fmt=lambda x: '{:.1f} km/h'.format(x * 1.61)
-    )
diff --git a/doc/users/next_whats_new/polar_errorbar_caps.rst b/doc/users/next_whats_new/polar_errorbar_caps.rst
deleted file mode 100644
index 1066a2aaaf..0000000000
--- a/doc/users/next_whats_new/polar_errorbar_caps.rst
+++ /dev/null
@@ -1,7 +0,0 @@
-Fixed errorbars in polar plots
-------------------------------
-Caps and error lines are now drawn with respect to polar coordinates,
-when plotting errorbars on polar plots.
-
-.. figure:: /gallery/pie_and_polar_charts/images/sphx_glr_polar_error_caps_001.png
-   :target: ../../gallery/pie_and_polar_charts/polar_error_caps.html
diff --git a/doc/users/prev_whats_new/github_stats_3.6.0.rst b/doc/users/prev_whats_new/github_stats_3.6.0.rst
new file mode 100644
index 0000000000..aac0c0445f
--- /dev/null
+++ b/doc/users/prev_whats_new/github_stats_3.6.0.rst
@@ -0,0 +1,1292 @@
+.. _github-stats-3-6-0:
+
+GitHub statistics for 3.6.0 (Sep 15, 2022)
+==========================================
+
+GitHub statistics for 2021/11/16 (tag: v3.5.0) - 2022/09/15
+
+These lists are automatically generated, and may be incomplete or contain duplicates.
+
+We closed 202 issues and merged 894 pull requests.
+The full list can be seen `on GitHub <https://github.com/matplotlib/matplotlib/milestone/65?closed=1>`__
+
+The following 174 authors contributed 4425 commits.
+
+* Abhishek K M
+* Adeel Hassan
+* agra
+* Aitik Gupta
+* ambi7
+* Andras Deak
+* Andres Martinez
+* Andrew Fennell
+* andrzejnovak
+* Andrés Martínez
+* Anna Mastori
+* AnnaMastori
+* Ante Sikic
+* Antony Lee
+* arndRemy
+* Ben Root
+* Biswapriyo Nath
+* cavesdev
+* Clément Phan
+* Clément Walter
+* code-review-doctor
+* Connor Cozad
+* Constantine Evans
+* Croadden
+* daniilS
+* Danilo Palumbo
+* David Gilbertson
+* David Ketcheson
+* David Matos
+* David Poznik
+* David Stansby
+* Davide Sandonà
+* dependabot[bot]
+* dermasugita
+* Diego Solano
+* Dimitri Papadopoulos
+* dj4t9n
+* Dmitriy Fishman
+* DWesl
+* Edouard Berthe
+* eindH
+* Elliott Sales de Andrade
+* Eric Firing
+* Eric Larson
+* Eric Prestat
+* Federico Ariza
+* Felix Nößler
+* Fernando
+* Gajendra Pal
+* gajendra0180
+* GavinZhang
+* Greg Lucas
+* hannah
+* Hansin Ahuja
+* Harshal Prakash Patankar
+* Hassan Kibirige
+* Haziq Khurshid
+* Henry
+* henrybeUM
+* Hood
+* Hood Chatham
+* Ian Hunt-Isaak
+* Ian Thomas
+* igurin-invn
+* ikhebgeenaccount
+* Isha Mehta
+* Jake Bowhay
+* Jake Li
+* Jake Lishman
+* Jake VanderPlas
+* Jakub Klus
+* James Tocknell
+* Jan-Hendrik Müller
+* Jay Joshi
+* Jay Stanley
+* jayjoshi112711
+* Jeff Beck
+* Jody Klymak
+* Joel Frederico
+* Joseph Fox-Rabinovitz
+* Josh Soref
+* Jouni K. Seppänen
+* Kayran Schmidt
+* kdpenner
+* Kian Eliasi
+* Kinshuk Dua
+* kislovskiy
+* KIU Shueng Chuan
+* kjain
+* kolibril13
+* krassowski
+* Krish-sysadmin
+* Leeh Peter
+* lgfunderburk
+* Liam Toney
+* Lucas Ricci
+* Luke Davis
+* luz paz
+* mackopes
+* MAKOMO
+* MalikIdreesHasa
+* Marcin Swaltek
+* Mario
+* Mario Sergio Valdés Tresanco
+* martinRenou
+* Matthew Feickert
+* Matthias Bussonnier
+* Mauricio Collares
+* MeeseeksMachine
+* melissawm
+* Mr-Milk
+* Navid C. Constantinou
+* Nickolaos Giannatos
+* Nicolas P. Rougier
+* Niyas Sait
+* noatamir
+* ojeda-e
+* Olivier Gauthé
+* Oscar Gustafsson
+* patquem
+* Philipp Rohde
+* Pieter Eendebak
+* Pieter P
+* Péter Leéh
+* Qijia Liu
+* Quentin Peter
+* Raphael Quast
+* rditlar9
+* Richard Penney
+* richardsheridan
+* Rike-Benjamin Schuppner
+* Robert Cimrman
+* Roberto Toro
+* root
+* Ruth Comer
+* Ruth G. N
+* Ruth Nainggolan
+* Ryan May
+* Rémi Achard
+* SaumyaBhushan
+* Scott Jones
+* Scott Shambaugh
+* selormtamakloe
+* Simon Hoxbro
+* skywateryang
+* Stefanie Molin
+* Steffen Rehberg
+* stone
+* Sven Eschlbeck
+* sveneschlbeck
+* takimata
+* tfpf
+* Thomas A Caswell
+* Tim Hoffmann
+* Tobias Megies
+* Tomas Hrnciar
+* Tomasz Kuliński
+* trichter
+* unknown
+* Uwe Hubert
+* vfdev-5
+* Vishal Chandratreya
+* Vishal Pankaj Chandratreya
+* Vishnu V K
+* vk0812
+* Vlad Korolev
+* Will Qian
+* William Qian
+* wqh17101
+* wsykala
+* yaaun
+* Yannic Schroeder
+* yuanx749
+* 渡邉 美希
+
+GitHub issues and pull requests:
+
+Pull Requests (894):
+
+* :ghpull:`23814`: Consolidate release notes for 3.6
+* :ghpull:`23899`: Backport PR #23885 on branch v3.6.x (DOC: Rearrange navbar-end elements)
+* :ghpull:`23898`: Backport PR #23892 on branch v3.6.x (DOC: Fix docs for linestyles in contour)
+* :ghpull:`23885`: DOC: Rearrange navbar-end elements
+* :ghpull:`23894`: Backport PR #23881 on branch v3.6.x (Fix Pillow compatibility in example)
+* :ghpull:`23897`: Backport PR #23887 on branch v3.6.x (Add missing label argument to barh docs)
+* :ghpull:`23892`: DOC: Fix docs for linestyles in contour
+* :ghpull:`23887`: Add missing label argument to barh docs
+* :ghpull:`23893`: Backport PR #23886 on branch v3.6.x (CI: prefer (older) binaries over (newer) sdists)
+* :ghpull:`23881`: Fix Pillow compatibility in example
+* :ghpull:`23886`: CI: prefer (older) binaries over (newer) sdists
+* :ghpull:`23880`: Backport PR #23862 on branch v3.6.x (Remove triggering of deprecation warning in AnchoredEllipse)
+* :ghpull:`23862`: Remove triggering of deprecation warning in AnchoredEllipse
+* :ghpull:`23879`: Backport PR #23864 on branch v3.6.x (Correct and improve documentation for anchored artists)
+* :ghpull:`23877`: Backport PR #23841 on branch v3.6.x (clarified that hist computes histogram on unbinned data)
+* :ghpull:`23872`: Backport PR #23871 on branch v3.6.x (DOC: Fix formatting of pick event demo example)
+* :ghpull:`23841`: clarified that hist computes histogram on unbinned data
+* :ghpull:`23864`: Correct and improve documentation for anchored artists
+* :ghpull:`23871`: DOC: Fix formatting of pick event demo example
+* :ghpull:`23869`: Backport PR #23867 on branch v3.6.x (DOC: fix deprecation warnings in examples)
+* :ghpull:`23867`: DOC: fix deprecation warnings in examples
+* :ghpull:`23858`: Backport PR #23855 on branch v3.6.x (DOC: fix deprecation warnings)
+* :ghpull:`23859`: Backport PR #23844 on branch v3.6.x (Further improve dev setup instructions)
+* :ghpull:`23844`: Further improve dev setup instructions
+* :ghpull:`23855`: DOC: fix deprecation warnings
+* :ghpull:`23854`: Backport PR #23852 on branch v3.6.x (Fix cross-compiling internal freetype)
+* :ghpull:`23852`: Fix cross-compiling internal freetype
+* :ghpull:`23853`: Backport PR #23830 on branch v3.6.x (Start testing on Python 3.11)
+* :ghpull:`23830`: Start testing on Python 3.11
+* :ghpull:`23851`: Backport PR #23850 on branch v3.6.x (removed single word in documenting doc)
+* :ghpull:`23850`: removed single word in documenting doc
+* :ghpull:`23848`: Backport PR #23843 on branch v3.6.x (Clarify that pycairo>=1.14.0 is needed.)
+* :ghpull:`23843`: Clarify that pycairo>=1.14.0 is needed.
+* :ghpull:`23842`: Backport PR #23840 on branch v3.6.x (Remove documentation for axes_grid)
+* :ghpull:`23838`: Backport PR #23834 on branch v3.6.x (Revert "Refactor handling of tick and ticklabel visibility in Axis.clear")
+* :ghpull:`23840`: Remove documentation for axes_grid
+* :ghpull:`23837`: Backport PR #23833 on branch v3.6.x (Remove search field from sidebar)
+* :ghpull:`23836`: Backport PR #23823 on branch v3.6.x ([DOC] Improve dev setup description)
+* :ghpull:`23834`: Revert "Refactor handling of tick and ticklabel visibility in Axis.clear"
+* :ghpull:`23833`: Remove search field from sidebar
+* :ghpull:`23823`: [DOC] Improve dev setup description
+* :ghpull:`23822`: Backport PR #23813 on branch v3.6.x (Triplot duplicated label)
+* :ghpull:`23813`: Triplot duplicated label
+* :ghpull:`23811`: Backport PR #23805 on branch v3.6.x (sphinxext: Do not copy plot_directive.css's metadata)
+* :ghpull:`23805`: sphinxext: Do not copy plot_directive.css's metadata
+* :ghpull:`23800`: Backport PR #23785 on branch v3.6.x (FIX: ensure type stability for missing cmaps in ``set_cmap``)
+* :ghpull:`23799`: Backport PR #23790 on branch v3.6.x (DOC: Add cache busting to all static assets)
+* :ghpull:`23785`: FIX: ensure type stability for missing cmaps in ``set_cmap``
+* :ghpull:`23790`: DOC: Add cache busting to all static assets
+* :ghpull:`23791`: Backport PR #23774 on branch v3.6.x (Correct rcParams-name in AutoDateFormatter doc-string)
+* :ghpull:`23792`: Backport PR #23781 on branch v3.6.x (ci: Add plot types to sphinx-gallery artifacts)
+* :ghpull:`23789`: Backport PR #23786 on branch v3.6.x (DOC: fontfallback works for most of the backends)
+* :ghpull:`23788`: Backport PR #23784 on branch v3.6.x (DOC: Fix num2date docstring)
+* :ghpull:`23786`: DOC: fontfallback works for most of the backends
+* :ghpull:`23784`: DOC: Fix num2date docstring
+* :ghpull:`23781`: ci: Add plot types to sphinx-gallery artifacts
+* :ghpull:`23783`: Backport PR #23782 on branch v3.6.x (Remove ``Axes.cla`` from examples)
+* :ghpull:`23782`: Remove ``Axes.cla`` from examples
+* :ghpull:`23774`: Correct rcParams-name in AutoDateFormatter doc-string
+* :ghpull:`23773`: Backport PR #23772 on branch v3.6.x (3d plots what's new cleanups)
+* :ghpull:`23772`: 3d plots what's new cleanups
+* :ghpull:`23765`: Backport PR #23762 on branch v3.6.x (FIX: legend handler warning too liberal)
+* :ghpull:`23762`: FIX: legend handler warning too liberal
+* :ghpull:`23759`: Backport PR #23686 on branch v3.6.x (Improve matplotlib.pyplot importtime by caching ArtistInspector)
+* :ghpull:`23686`: Improve matplotlib.pyplot importtime by caching ArtistInspector
+* :ghpull:`23756`: Backport PR #23569 on branch v3.6.x (Fix hidden xlabel bug in colorbar)
+* :ghpull:`23755`: Backport PR #23742 on branch v3.6.x (FIX: unbreak ipympl)
+* :ghpull:`23569`: Fix hidden xlabel bug in colorbar
+* :ghpull:`23742`: FIX: unbreak ipympl
+* :ghpull:`23752`: Backport PR #23750 on branch v3.6.x (Fix rcParams documentation)
+* :ghpull:`23749`: Backport PR #23735 on branch v3.6.x (Correctly handle Axes subclasses that override cla)
+* :ghpull:`23735`: Correctly handle Axes subclasses that override cla
+* :ghpull:`23748`: Backport PR #23746 on branch v3.6.x (DOC: add numpydoc docstring + commentary to Axis.get_ticklocs)
+* :ghpull:`23747`: Backport PR #23721 on branch v3.6.x (3d plot view angle documentation)
+* :ghpull:`23746`: DOC: add numpydoc docstring + commentary to Axis.get_ticklocs
+* :ghpull:`23721`: 3d plot view angle documentation
+* :ghpull:`23744`: Backport PR #23740 on branch v3.6.x (Clarify error for colorbar with unparented mappable)
+* :ghpull:`23741`: Backport PR #23674 on branch v3.6.x (Re-rename builtin seaborn styles to not include a dot.)
+* :ghpull:`23740`: Clarify error for colorbar with unparented mappable
+* :ghpull:`23674`: Re-rename builtin seaborn styles to not include a dot.
+* :ghpull:`23738`: Backport PR #23639 on branch v3.6.x (Adding the new contributor meeting)
+* :ghpull:`23739`: Backport PR #23712 on branch v3.6.x (FIX: do not try to help CPython with garbage collection)
+* :ghpull:`23712`: FIX: do not try to help CPython with garbage collection
+* :ghpull:`23639`: Adding the new contributor meeting
+* :ghpull:`23732`: Backport PR #23729 on branch v3.6.x (Use cleaner recursion check in PyQt FigureCanvas' resizeEvent.)
+* :ghpull:`23734`: Backport PR #23733 on branch v3.6.x (DOC: Update theme configuration for upcoming changes)
+* :ghpull:`23733`: DOC: Update theme configuration for upcoming changes
+* :ghpull:`23728`: Backport PR #23722 on branch v3.6.x (Restore deprecation class aliases in cbook)
+* :ghpull:`23729`: Use cleaner recursion check in PyQt FigureCanvas' resizeEvent.
+* :ghpull:`23726`: Backport PR #23711 on branch v3.6.x (Fix deprecation messages for vendoring unused things)
+* :ghpull:`23722`: Restore deprecation class aliases in cbook
+* :ghpull:`23727`: Backport PR #23724 on branch v3.6.x (Fix/harmonize spacing in dependencies.rst.)
+* :ghpull:`23724`: Fix/harmonize spacing in dependencies.rst.
+* :ghpull:`23711`: Fix deprecation messages for vendoring unused things
+* :ghpull:`23715`: Backport PR #23708 on branch v3.6.x (Loosen up test_Normalize test)
+* :ghpull:`23713`: Backport PR #23710 on branch v3.6.x (Fix cmap deprecations)
+* :ghpull:`23708`: Loosen up test_Normalize test
+* :ghpull:`23710`: Fix cmap deprecations
+* :ghpull:`23696`: Backport PR #23695 on branch v3.6.x (Document polar handling of _interpolation_steps.)
+* :ghpull:`23706`: Backport PR #23705 on branch v3.6.x (DOC: Added link to class under discussion)
+* :ghpull:`23705`: DOC: Added link to class under discussion
+* :ghpull:`23695`: Document polar handling of _interpolation_steps.
+* :ghpull:`23668`: Api deprecate cmap functions
+* :ghpull:`23049`: Add ``minor`` keyword argument to ``plt.x/yticks``
+* :ghpull:`23665`: Harmonize docstrings for boxstyle/connectionstyle/arrowstyle.
+* :ghpull:`23636`: FIX: macosx flush_events should process all events
+* :ghpull:`23555`: Uncamelcase offsetTrans in draw_path_collection.
+* :ghpull:`23682`: Fix generated documentation for deprecated modules
+* :ghpull:`23678`: Get rcParams from mpl
+* :ghpull:`23571`: Simplify _bind_draw_path_function.
+* :ghpull:`23673`: DOC: Highlight information about avoiding labels in legend
+* :ghpull:`22506`: Replace MathtextBackend mechanism.
+* :ghpull:`23340`: Set correct path for Arc
+* :ghpull:`23562`: Fix issue with get_edgecolor and get_facecolor in 3D plots
+* :ghpull:`23634`: make.bat: Don't override SPHINXOPTS/O from the environment
+* :ghpull:`23675`: Deprecate helper functions in axis3d
+* :ghpull:`23676`: MNT: Get rcParams from mpl
+* :ghpull:`23677`: TST: Use article class when checking for pgf
+* :ghpull:`23669`: CI: Azure update from ubuntu-18.04 to ubuntu-latest and ubuntu-20.04
+* :ghpull:`23670`: Add bar color demo.
+* :ghpull:`23644`: Standardize edge-on axis locations when viewing primary 3d axis planes
+* :ghpull:`23563`: Fix issue with drawing 3D lines where points are from nparray
+* :ghpull:`23666`: MNT: Deprecate macosx prepare subplots tool
+* :ghpull:`23572`: Deprecate ``get_grid_positions(..., raw=True)``.
+* :ghpull:`23525`: Add functionality to label individual bars with Axes.bar()
+* :ghpull:`23667`: Fix flake8 errors introduced by crossed PRs
+* :ghpull:`23554`: MNT: Remove unused imports
+* :ghpull:`23659`: Simplify/fix save_diff_image.
+* :ghpull:`23663`: Small cleanups to _find_fonts_by_props.
+* :ghpull:`23662`: Add tolerance to test failing on ppc64le
+* :ghpull:`23623`: MNT: remove _gridspecs attribute on Figure classes
+* :ghpull:`23654`: Reverts macosx change to ARC
+* :ghpull:`23661`: Remove unused fontsize argument from private mathtext _get_info.
+* :ghpull:`23655`: Merge branch v3.5.x into main
+* :ghpull:`23658`: Increase tolerance on multi-font tests
+* :ghpull:`23657`: Add eps to extension list in image triager
+* :ghpull:`23656`: Fix broken link to MathML torture tests.
+* :ghpull:`23649`: CI: Use anaconda-client v1.10.0 for upload of nightlies
+* :ghpull:`23647`: Allow any color format to be used for axis3d.Axis.set_pane_color
+* :ghpull:`23643`: Enable wheels for PyPy 3.8+
+* :ghpull:`23621`: DOC: update and extend fonts explanation
+* :ghpull:`23612`: CI: try installing a different version of noto on OSX
+* :ghpull:`23619`: add pikepdf  and visual c++ dependency
+* :ghpull:`23631`: Leave out ``barh`` from the basic plot types.
+* :ghpull:`23637`: BLD: Add Python 3.11 builds to CI
+* :ghpull:`23632`: Add discouraged admonitions
+* :ghpull:`23620`: Doc update deps
+* :ghpull:`23627`: Bump pypa/cibuildwheel from 2.8.1 to 2.9.0
+* :ghpull:`23628`: Change Title Case to Upper lower in templates
+* :ghpull:`23206`: Change exception type for incorrect SVG date metadata
+* :ghpull:`23387`: Remove setuptools_scm_git_archive dependency and add sdist test
+* :ghpull:`23605`: Fix issues in examples, docs, and tutorials
+* :ghpull:`23618`: [Doc]: Document the position parameter in apply_aspect()
+* :ghpull:`23355`: Revert "Try to unbreak CI by xfailing OSX Tk tests"
+* :ghpull:`23610`: TST: be more forgiving about IDing Noto
+* :ghpull:`23609`: print version number when building docs
+* :ghpull:`20832`: Implement multi-font embedding for PS Backend
+* :ghpull:`20804`: Implement multi-font embedding for PDF Backend
+* :ghpull:`23202`: MNT: Remove cached renderer from figure
+* :ghpull:`23497`: Avoid gridspec in more examples
+* :ghpull:`23602`: Editing "issues for new contributors"
+* :ghpull:`23600`: DOC: view_init docstring for 3d axes primary view angles
+* :ghpull:`23587`: BUG:datetime list starting with none
+* :ghpull:`23559`: re-base of font fallback for pdf and eps output + SVG support
+* :ghpull:`23557`: BLD: update the manylinux versions used
+* :ghpull:`23596`: Minor cleanup of axes_grid1
+* :ghpull:`23594`: Expire deprecation on passing bytes to FT2Font.set_text
+* :ghpull:`23435`: Add conda env to setup instructions
+* :ghpull:`23574`: Move colorbar() doc to method itself.
+* :ghpull:`23584`: Bump Ubuntu to 20.04 on GitHub Actions
+* :ghpull:`23561`: Clean up code in tri
+* :ghpull:`23582`: Cleanup axis3d.Axis.draw
+* :ghpull:`23510`: Refactor Widget tests
+* :ghpull:`20718`: Circle: Build docs in parallel.
+* :ghpull:`22452`: ENH: add ability to remove layout engine
+* :ghpull:`23516`: warning when scatter plot color settings discarded
+* :ghpull:`23577`: apply_aspect cleanups
+* :ghpull:`23575`: Cleanup parasite_simple example.
+* :ghpull:`23567`: Remove noop setattr_cm.
+* :ghpull:`23412`: Fix dash offset bug in Patch
+* :ghpull:`21756`: MNT: Clean up some UTF strings and memory autorelease
+* :ghpull:`23558`: MNT: Use UTF-8 string in macosx backend
+* :ghpull:`23550`: Change exception types, improve argument checking, and cleanups in mpl_toolkits
+* :ghpull:`23196`: Unify set_pickradius argument
+* :ghpull:`20740`: Implement Font-Fallback in Matplotlib
+* :ghpull:`22566`: Add rcparam for figure label size and weight
+* :ghpull:`23551`: Remove transform arguments from _iter_collection
+* :ghpull:`23444`: Deduplicate common parts in LatexManager.{__init__,_setup_latex_process}
+* :ghpull:`23017`: [ENH] : Provide axis('equal') for Axes3D (replace PR #22705)
+* :ghpull:`22950`: Simplify definition of mathtext symbols & correctly end tokens in mathtext parsing
+* :ghpull:`23409`: Provide axis('equal') for Axes3D (replaces PR #23017)
+* :ghpull:`23434`: Fix array-like linewidth for 3d scatter
+* :ghpull:`23500`: Move the common implementation of Axes.set_x/y/zscale to Axis.
+* :ghpull:`23533`: Add tests for sankey and minor fixes
+* :ghpull:`23535`: Make margins error as claimed in doc-string
+* :ghpull:`23546`: Simplify impl. of functions optionally used as context managers.
+* :ghpull:`23494`: Fix various issues from SonarQube
+* :ghpull:`23529`: Add workflow dispatch GitHub CI
+* :ghpull:`23539`: Small improvements to WebAgg example
+* :ghpull:`23541`: Change doc-build CI install order
+* :ghpull:`23526`: DOC: make "family" less ambiguous in FontProperties docs
+* :ghpull:`23537`: Move the deprecated RendererGTK{3,4}Cairo to a single place.
+* :ghpull:`23140`: [Features] Allow setting legend title alignment
+* :ghpull:`23538`: Fix imprecise docs re: backend dependencies.
+* :ghpull:`23532`: Add test for RGBAxes
+* :ghpull:`23453`: Add more tests for mplot3d
+* :ghpull:`23501`: Let Axes.clear iterate over Axises.
+* :ghpull:`23469`: Inline _init_axis_artists & _init_gridlines into clear.
+* :ghpull:`23475`: Add markerfacealt to pass-through arguments for error bar lines
+* :ghpull:`23527`: STY: fix whitespace on an assert
+* :ghpull:`23495`: Fix sgskip'd examples
+* :ghpull:`23404`: Restore matplotlib.__doc__ in Sphinx docs
+* :ghpull:`23507`: Add hint when More than {max_open_warning} figures have been opened
+* :ghpull:`23499`: Fix outdated comment re: event handlers in test_backends_interactive.
+* :ghpull:`23498`: Fix direct instantiation of webagg_core managers.
+* :ghpull:`23504`: Clarify formatting of the code-for-reproduction field in bug reports.
+* :ghpull:`23489`: Add missing test data to install
+* :ghpull:`23482`: Mathtext spaces must be independent of font style.
+* :ghpull:`23486`: Bump pypa/cibuildwheel from 2.8.0 to 2.8.1
+* :ghpull:`23461`: Tweak Axes repr.
+* :ghpull:`16931`: Make it easier to improve UI event metadata.
+* :ghpull:`23468`: Display grid in floating axes example.
+* :ghpull:`23467`: Remove old handling for factor=None in axisartist.
+* :ghpull:`23443`: Try running the pgf backend off the article class.
+* :ghpull:`23373`: Fix pan/zoom crashing when widget lock is unavailable
+* :ghpull:`23466`: Update filename in example.
+* :ghpull:`23464`: Deprecate macos close handler.
+* :ghpull:`23463`: Deprecate Tick.label
+* :ghpull:`23455`: Deprecate properties w_xaxis, w_yaxis, and w_zaxis
+* :ghpull:`23448`: Tweak callbacks to generate pick events.
+* :ghpull:`23233`: Default stem marker color follows the linecolor
+* :ghpull:`23452`: Generalize Axes __repr__ to 3D
+* :ghpull:`23445`: Compare thread native ids when checking whether running on main thread.
+* :ghpull:`20752`: Set norms using scale names.
+* :ghpull:`23438`: DOC: numpydoc-ify date Locator classes
+* :ghpull:`23427`: Tweak pgf escapes.
+* :ghpull:`23432`: Fixed typo in docs animation api
+* :ghpull:`23420`: Clean up test_chunksize_fails()
+* :ghpull:`23415`: Minor improvements to units_sample example
+* :ghpull:`21339`: Added linear scaling test to Hexbin marginals
+* :ghpull:`23414`: Bump pypa/cibuildwheel from 2.7.0 to 2.8.0
+* :ghpull:`23413`: Combine chunk size tests into one
+* :ghpull:`23403`: Small cleanup to VertexSelector.
+* :ghpull:`23291`: In the new/simplified backend API, don't customize draw_if_interactive.
+* :ghpull:`23350`: Fixed SVG-as-text image comparison tests.
+* :ghpull:`23406`: DOC: Fix calculation of bin centers in multi-histogram
+* :ghpull:`23407`: TST: Add missing warning type to pytest.warns
+* :ghpull:`23402`: Link 3D animation examples to one another.
+* :ghpull:`23401`: Upload wheel artifacts from the correct directory
+* :ghpull:`23374`: GOV: point CoC reports at CoC steering council subcomittee mailing list
+* :ghpull:`23393`: Clean up formatting of custom cmap example
+* :ghpull:`23146`: Update cibuildwheel
+* :ghpull:`23368`: Add a helper to generate closed paths.
+* :ghpull:`20220`: DOC: add mission statement
+* :ghpull:`22364`: Tweak mathtext/tex docs.
+* :ghpull:`23377`: Use tick_params more often over tick iteration
+* :ghpull:`22820`: [Doc] consolidate ``rect`` documentation
+* :ghpull:`23371`: Default animation.convert_args to ["-layers", "OptimizePlus"].
+* :ghpull:`23148`: DOC: change address to send security issues to
+* :ghpull:`23365`: DOC: add new showcase example, replace gendered one
+* :ghpull:`23033`: Fix issue with tex-encoding on non-Unicode platforms
+* :ghpull:`23358`: Shorten/clarify definition of extension types.
+* :ghpull:`23370`: Small cleanups to animation.
+* :ghpull:`23364`: Rename/change signature of PyGlyph_new.
+* :ghpull:`23363`: Simplify FigureCanvas multiple inheritance init by swapping bases order.
+* :ghpull:`23366`: MNT: use devel version of theme
+* :ghpull:`23357`: Fixed decimal points not appearing at end of Mathtext string.
+* :ghpull:`23351`: DOC/MNT install docs with dev version of sphinx theme
+* :ghpull:`23349`: CI: Remove old scipy-wheels-nightly uploads to ensure space
+* :ghpull:`23348`: Support multi-figure MultiCursor; prepare improving its signature.
+* :ghpull:`23360`: embedding_in_tk_sgskip.py: use root.destroy
+* :ghpull:`23354`: MNT: Use list comprehension
+* :ghpull:`23299`: FIX/API: do not reset backend key in rc_context
+* :ghpull:`23191`: ENH: add width_ratios and height_ratios to subplots
+* :ghpull:`23060`: MNT: Change objective C code to Automatic Reference Counting (ARC)
+* :ghpull:`23347`: Simplify/improve check for pycairo in Gtk-based backends.
+* :ghpull:`23316`: DOC: improve spines crosslinking
+* :ghpull:`23100`: Remove custom backend_nbagg.show(), putting logic in manager show.
+* :ghpull:`23342`: FIX: make sure addFont test removes the test font
+* :ghpull:`23266`: negative_linestyles kwarg in contour.py
+* :ghpull:`23332`: Validate Text linespacing on input.
+* :ghpull:`23336`: Remove ineffective exclusion of Arcs without parent Axes.
+* :ghpull:`23341`: MNT: Use '--pytest-test-first' option for naming clarity
+* :ghpull:`23337`: Remove now inexistent "datapath" rcParam from style blacklist.
+* :ghpull:`22004`: Make RendererCairo auto-infer surface size.
+* :ghpull:`23208`: ENH: enable stripey lines
+* :ghpull:`23288`: Correct URL area with rotated texts in PDFs
+* :ghpull:`23197`: Add tests for pan
+* :ghpull:`22167`: Deprecate selector ``visible`` attribute
+* :ghpull:`23322`: Cleanup FontProperties examples.
+* :ghpull:`23321`: Tweak examples capitalization/punctuation.
+* :ghpull:`23270`: Fix handling of nonmath hyphens in mathtext.
+* :ghpull:`23310`: Move Cursor demo from examples/misc to examples/event_handling
+* :ghpull:`23313`: Drop CSS styles that are in mpl-sphinx-theme
+* :ghpull:`23314`: Don't draw invisible 3D Axes
+* :ghpull:`23302`: Deprecate stem(..., use_line_collection=False)
+* :ghpull:`23309`: Remove front page examples
+* :ghpull:`23282`: Backport PR #22865 on branch v3.5.x (Fix issue with colorbar extend and drawedges)
+* :ghpull:`23231`: Add pytest-xvfb as test dependency
+* :ghpull:`23318`: No need to return OrderedDict from _gen_axes_spines.
+* :ghpull:`23295`: Replace re.sub by the faster str.translate.
+* :ghpull:`23300`: Modify example of "Fig Axes Customize Simple"
+* :ghpull:`23014`: Improve consistency in LogLocator and LogFormatter API
+* :ghpull:`23286`: Refactor URL handling in PDF backend
+* :ghpull:`23065`: Fix test_image_comparison_expect_rms
+* :ghpull:`23294`: Simplify binary data handling in ps backend.
+* :ghpull:`23284`: DOC: Switch to HTML5 and cleanup CSS
+* :ghpull:`23276`: Add get/set methods for DPI in SubFigure
+* :ghpull:`23207`: Update build environment and improve test
+* :ghpull:`23213`: DEV: Add name-tests-test to pre-commit hooks
+* :ghpull:`23289`: Properly make Name.hexify go through a deprecation cycle.
+* :ghpull:`23177`: Deprecate positional passing of most Artist constructor parameters
+* :ghpull:`23287`: Minor tweaks to pdf Name.
+* :ghpull:`23285`: In mathtext, replace manual caching (via ``glyphd``) by lru_cache.
+* :ghpull:`23034`: Correctly read the 'style' argument while processing 'genfrac'.
+* :ghpull:`23247`: Support inverted parentheses in mathtext.
+* :ghpull:`23190`: Deprecate unused methods in axis.py
+* :ghpull:`23219`: MNT: Rename example files with 'test' in name
+* :ghpull:`23277`: MNT: Remove dead code in SVG backend
+* :ghpull:`23261`: Bump actions/setup-python from 3 to 4
+* :ghpull:`23264`: Changing environment.yml for it to work on Windows
+* :ghpull:`23269`: MNT: Remove dead code in Colorbar
+* :ghpull:`23262`: Simplify qt_compat, in particular post-removal of qt4 support.
+* :ghpull:`23263`: Private helper to get requested backend without triggering resolution.
+* :ghpull:`23243`: Fix spacing after mathtext operators with sub/superscripts
+* :ghpull:`22839`: Fix spacing after mathtext operators with sub/superscripts
+* :ghpull:`23256`: DOC: Add note about Inkscape install on Windows
+* :ghpull:`23258`: DOC: remove Blue Book url
+* :ghpull:`23255`: Add a helper to generate mathtext error strings.
+* :ghpull:`23246`: Fix argument checking for set_interpolation_stage
+* :ghpull:`22881`: Support not embedding glyphs in svg mathtests.
+* :ghpull:`23198`: Rename ncol parameter in legend to ncols
+* :ghpull:`23251`: Small simplifications to mathtext tests.
+* :ghpull:`23249`: Don't allow ``r"$\left\\|\right.$"``, as in TeX.
+* :ghpull:`23248`: Rename test markers
+* :ghpull:`22507`: Remove *math* parameter of various mathtext internal APIs.
+* :ghpull:`23192`: Add tests, improve error messages in axis/_base, and code cleanup
+* :ghpull:`23241`: Fix invalid value in radio buttons example
+* :ghpull:`23187`: Correct docs and use keyword arguments in _mathtext.py
+* :ghpull:`23045`: MNT: Merge locally defined test marks
+* :ghpull:`22289`: ENH: compressed layout
+* :ghpull:`23237`: Expire BoxStyle._Base deprecation.
+* :ghpull:`23225`: DOC: Fix version switcher links to documentation
+* :ghpull:`23221`: DOC: recommend numpy random number generator class
+* :ghpull:`23223`: Changed offset reference, add small doc
+* :ghpull:`23215`: DOC: link the transforms tutorial from the module
+* :ghpull:`23201`: Rework tricontour and tricontourf documentation
+* :ghpull:`23013`: Add tests for date module
+* :ghpull:`23188`: Mnt new default dates
+* :ghpull:`22745`: MNT: Don't require renderer for window_extent and tightbbox
+* :ghpull:`23077`: MNT: Remove keyword arguments to gca()
+* :ghpull:`23182`: Simplify webagg blitting.
+* :ghpull:`23181`: Init FigureCanvasAgg._lastKey in ``__init__``.
+* :ghpull:`23175`: Point the version switcher to a name listed in switcher.json
+* :ghpull:`22669`: Cleanup documentation generation for pyplot
+* :ghpull:`22519`: fix markevery plot option with nans in data
+* :ghpull:`21584`: Move towards having get_shared_{x,y}_axes return immutable views.
+* :ghpull:`23170`: ENH: update ticks when requesting labels
+* :ghpull:`23169`: DOC: Migrate to sphinx-design
+* :ghpull:`23180`: Improve docstring of triplot() and PatchCollection
+* :ghpull:`23153`: Restore accidentally removed pytest.ini and tests.py.
+* :ghpull:`23166`: Deprecate passing most Legend arguments positionally
+* :ghpull:`23165`: DOCS Fix a few typos
+* :ghpull:`23167`: DOCS fix typo
+* :ghpull:`23062`: Add stackplot to plot types listing
+* :ghpull:`23161`: Added my (open access) book
+* :ghpull:`23141`: Minor fix for astropy units support broken in earlier PR
+* :ghpull:`23156`: No longer call draw_if_interactive in parasite_axes.
+* :ghpull:`23150`: DOC fix typo
+* :ghpull:`23149`: DOCS remove duplicate text
+* :ghpull:`23145`: Fix format error in switcher.json
+* :ghpull:`21755`: MNT: Clean up macosx backend set_message
+* :ghpull:`23128`: DOCS Fix typos
+* :ghpull:`23130`: Drop pytest warning config in nightly tests
+* :ghpull:`23135`: Unpin coverage again
+* :ghpull:`23133`: Make module deprecation messages consistent
+* :ghpull:`23134`: Remove newline from start of deprecation warnings
+* :ghpull:`22964`: Fix spelling errors
+* :ghpull:`22929`: Handle NaN in bar labels and error bars
+* :ghpull:`23093`: MNT: Removing 3.4 deprecations
+* :ghpull:`23090`: Derive new_figure_manager from FigureCanvas.new_manager.
+* :ghpull:`23099`: Remove unneeded cutout for webagg in show().
+* :ghpull:`23097`: Tweak check for IPython pylab mode.
+* :ghpull:`23088`: Improve error for invalid format strings / misspelled data keys.
+* :ghpull:`23092`: Ensure updated monkey-patching of sphinx-gallery EXAMPLE_HEADER
+* :ghpull:`23087`: Fix width/height inversion in dviread debug helper.
+* :ghpull:`23089`: Normalize tk load failures to ImportErrors.
+* :ghpull:`23091`: Move test that fig.add_axes() needs parameters
+* :ghpull:`23067`: more explicit in windows doc build instructions
+* :ghpull:`23081`: MNT: Deprecate date_ticker_factory
+* :ghpull:`23079`: MNT: Remove key_press and button_press from FigureManager
+* :ghpull:`23076`: MNT: Remove positional argument handling in LineCollection
+* :ghpull:`23078`: MNT: Remove deprecated axis.cla()
+* :ghpull:`23054`: Slightly simplify tcl/tk load in extension.
+* :ghpull:`23073`: MNT: Remove dummy_threading because threading is always available
+* :ghpull:`22405`: DOC: put the gallery keywords in the meta tag
+* :ghpull:`23071`: Fix installing contourpy on CI
+* :ghpull:`23068`: Slight refactor of _c_internal_utils to linewrap it better.
+* :ghpull:`23070`: Pathlibify autotools invocation in build.
+* :ghpull:`22755`: Maybe run autogen as part of freetype install
+* :ghpull:`23063`: doc: mathtext example: use axhspan() instead of fill_between() for backdrop rectangle shading
+* :ghpull:`23055`: Cleanup Annotation.update_position.
+* :ghpull:`22567`: Use contourpy for quad contour calculations
+* :ghpull:`22801`: TST: fully parameterize test_lazy_linux_headless
+* :ghpull:`22180`: ENH: Use rcParams savefig.directory on macosx backend
+* :ghpull:`23048`: Add rrulewrapper to docs
+* :ghpull:`23047`: Fix issue with hist and float16 data
+* :ghpull:`23044`: Fix missing section header for nightly builds
+* :ghpull:`23029`: Demonstrate both usetex and non-usetex in demo_text_path.py.
+* :ghpull:`23038`: Factor out errorevery parsing for 2D and 3D errorbars.
+* :ghpull:`23036`: Suppress traceback chaining for tex subprocess failures.
+* :ghpull:`23037`: Suppress exception chaining in FontProperties.
+* :ghpull:`23020`: Add test to close legend issue
+* :ghpull:`23031`: Specify that style files are utf-8.
+* :ghpull:`22991`: Enable ``plt.sca`` on subfigure's axes
+* :ghpull:`23030`: DOC: Fix charset declaration in redirects
+* :ghpull:`23022`: Fix some possible encoding issues for non-utf8 systems.
+* :ghpull:`23023`: Bump docker/setup-qemu-action from 1 to 2
+* :ghpull:`23024`: DOC: do not suggest to sudo pip install Matplotlib
+* :ghpull:`23018`: Fix typo in font family
+* :ghpull:`22627`: ENH: rect for constrained_layout
+* :ghpull:`22891`: Font example monospace
+* :ghpull:`23006`: docs: add subplot-mosaic string compact notation
+* :ghpull:`23009`: Fixed installation guide command typo
+* :ghpull:`22926`: Fix RangeSlider for same init values #22686
+* :ghpull:`22989`: Merge v3.5.x back into main
+* :ghpull:`22993`: STY: Fix typos in colormap
+* :ghpull:`22777`: DEV: Add codespell to pre-commit hooks
+* :ghpull:`22940`: Fixed dpi bug in rainbow text example
+* :ghpull:`22298`: MNT: Remove cmap_d colormap access
+* :ghpull:`22387`: Add a registry for color sequences
+* :ghpull:`21594`: Document text alignment
+* :ghpull:`22967`: TST: Add some tests for QuadMesh contains function
+* :ghpull:`22936`: ENH: Add full-screen toggle to the macosx backend
+* :ghpull:`22886`: MNT: remove mpl_toolkits.axes_grid
+* :ghpull:`22952`: Make MarkerStyle immutable
+* :ghpull:`22953`: MNT: Move set_cursor to the FigureCanvas
+* :ghpull:`18854`: Standardize creation of FigureManager from a given FigureCanvas class.
+* :ghpull:`22925`: Standardize creation of FigureManager from a given FigureCanvas class.
+* :ghpull:`22875`: Remove Forward definitions where possible.
+* :ghpull:`22928`: ENH: Add option to disable raising the window for macosx
+* :ghpull:`22912`: DOC: Better doc of colors
+* :ghpull:`22931`: BUG: Fix regression with ls=(0, ())
+* :ghpull:`22909`: FIX: skip sub directories when finding fonts on windows
+* :ghpull:`22911`: Clarify docstring of [un]install_repl_displayhook()
+* :ghpull:`22919`: CI: Add concurrency skips for GH Actions
+* :ghpull:`22899`: Fix documentation markup issues
+* :ghpull:`22906`: Clarify logic for repl displayhook.
+* :ghpull:`22892`: Remove support for IPython<4.
+* :ghpull:`22896`: Remove python-dateutil as test requirement
+* :ghpull:`22885`: Deprecate two-layered backend_pdf.Op enum.
+* :ghpull:`22883`: Tweak argument checking in tripcolor().
+* :ghpull:`22884`: Missing ``f`` prefix on f-strings fix
+* :ghpull:`22877`: Small cleanups to mathtext.
+* :ghpull:`21374`: Snap selectors
+* :ghpull:`22824`: Remove some unnecessary extra boundaries for colorbars with extensions.
+* :ghpull:`21448`: Use named groups in mathtext parser.
+* :ghpull:`22609`: Improve usability of dviread.Text by third parties.
+* :ghpull:`22809`: STY: Apply pre-commit hooks to codebase
+* :ghpull:`22730`: Fix removed cross-references
+* :ghpull:`22857`: Slightly simplify twin axes detection in MEP22 zoom.
+* :ghpull:`22813`: MNT: Deprecate figure callbacks
+* :ghpull:`22802`: MNT: make Axes.cla an alias for Axes.clear in all cases
+* :ghpull:`22855`: Remove non-needed remove_text=False.
+* :ghpull:`22854`: TST: Avoid floating point errors in asinh ticker
+* :ghpull:`22850`: Simplify tick creation
+* :ghpull:`22841`: Fix Tk error when updating toolbar checkbutton images
+* :ghpull:`22707`: Proposed ENH: Allow user to turn off breaking of streamlines in streamplot (rebased)
+* :ghpull:`22826`: Bump actions/upload-artifact from 2 to 3
+* :ghpull:`22825`: Bump codecov/codecov-action from 2 to 3
+* :ghpull:`22821`: Use bool for bool keyword arguments
+* :ghpull:`22815`: Fix pickling of globally available, dynamically generated norm classes.
+* :ghpull:`22702`: Doc tweak transform tutorial
+* :ghpull:`22613`: DOC: Add links to explicit vs implicit API everywhere "OO" is used
+* :ghpull:`22712`: Use repr in error messages
+* :ghpull:`22794`: Fix ps export of colored hatches with no linewidth
+* :ghpull:`22797`: Deprecate functions in backends
+* :ghpull:`22608`: Axes.inset_axes: enable Axes subclass creation
+* :ghpull:`22795`: Replace "marker simplification" by "marker subsampling" in docs.
+* :ghpull:`22768`: Fix inkscape tests
+* :ghpull:`22791`: Tweak _ConverterError reporting.
+* :ghpull:`22447`: Improve bar_label annotation
+* :ghpull:`22710`: Fix the error- TypeError: 'float' object is not iterable
+* :ghpull:`22444`: Revert "CI: skip test to work around gs bug"
+* :ghpull:`22785`: CI: Update weekly dependency test job
+* :ghpull:`22784`: Fix 'misspelled' transform variable
+* :ghpull:`22778`: Fix LaTeX formatting in examples
+* :ghpull:`22779`: Improve mlab documentation (and example)
+* :ghpull:`22759`: MNT: Skip existing wheels during nightly wheel upload
+* :ghpull:`22751`: BLD: do not put an upper bound on pyparsing
+* :ghpull:`22752`: DOC: Correct nightly wheels pip install command
+* :ghpull:`22742`: Fix deprecation of backend_tools.ToolBase.destroy
+* :ghpull:`22725`: Move towards making texmanager stateless.
+* :ghpull:`22734`: Added clim support to tripcolor
+* :ghpull:`22733`: CI: Add GHA workflow to upload nightly wheels
+* :ghpull:`21637`: Also upload a subset of nightly wheels
+* :ghpull:`22698`: Correct cross-references in documentation
+* :ghpull:`22263`: DOC: condense version switcher
+* :ghpull:`22361`: Revert datetime usetex ticklabels to use default tex font.
+* :ghpull:`22721`: Small style fixes.
+* :ghpull:`22356`: Cleanup tripcolor()
+* :ghpull:`22360`: Let TeX handle multiline strings itself.
+* :ghpull:`22418`: Deprecate auto-removal of overlapping Axes by plt.subplot{,2grid}.
+* :ghpull:`22722`: Rename confusingly-named cm_fallback.
+* :ghpull:`22697`: Deprecate in testing.decorators
+* :ghpull:`22556`: Add text.parse_math rcParams
+* :ghpull:`22163`: Change colour of Tk toolbar icons on dark backgrounds
+* :ghpull:`22704`: Small simplification to textpath.
+* :ghpull:`22498`: TST: increase coverage on tk tests
+* :ghpull:`21425`: Make Axis3D constructor signature closer to the one of 2D axis.
+* :ghpull:`22665`: Improve error message for incorrect color string
+* :ghpull:`22685`: Rewrite plot format detection from sphinx build target
+* :ghpull:`22670`: Update deprecated vmImage 'vs2017-win2016' in azure pipelines
+* :ghpull:`22503`: Deprecate backend_qt.qApp.
+* :ghpull:`22683`: Add missing space before : for parameters
+* :ghpull:`22591`: Fix Path/str-discrepancy in FontManager.addpath and improve documentation
+* :ghpull:`22680`: Bump actions/cache from 2 to 3
+* :ghpull:`22659`: Add description on quiver head parameters
+* :ghpull:`22668`: Raise on missing closing quotes in matplotlibrc
+* :ghpull:`22675`: Tweak colorbar_placement example.
+* :ghpull:`22276`: Merge "Scatter Symbol" and "Scatter Custom Symbol" examples
+* :ghpull:`22658`: Remove reference to now-deleted reminder note.
+* :ghpull:`22652`: Update documentation example and fix See also
+* :ghpull:`22587`: Refactor handling of tick and ticklabel visibility in Axis.clear()
+* :ghpull:`22148`: MNT: Deprecate ``docstring``
+* :ghpull:`22170`: Add example to polygon selector docstring showing how to set vertices programmatically
+* :ghpull:`22650`: Fix new leak in ft2font introduced in #22604
+* :ghpull:`22644`: FIX: Flush events after closing figures in macosx backend
+* :ghpull:`22643`: Suppress exception chaining in colormap lookup.
+* :ghpull:`22639`: ENH: MacOSX backend to use sRGB instead of GenericRGB colorspace
+* :ghpull:`22509`: Simplifications to ToolManager.{add,remove}_tool.
+* :ghpull:`22633`: DOC: remove space in directive.
+* :ghpull:`22631`: Add space between individual transform components in svg output.
+* :ghpull:`22523`: MNT: Use a context manager to change the norm in colorbar code
+* :ghpull:`22615`: FIX: Change get_axis_map to axis_map now
+* :ghpull:`22508`: Move tracking of autoscale status to Axis.
+* :ghpull:`22547`: Small cleanups around TexManager usage.
+* :ghpull:`22511`: Remove redundant rcParam-lookup in patches
+* :ghpull:`22516`: Expire deprecations in backends
+* :ghpull:`22612`: Updated grammar to reflect more common usage of output vs outputted in animation.py
+* :ghpull:`22589`: Support quoted strings in matplotlibrc
+* :ghpull:`22604`: MNT: Fix types in C-code to reduce warnings
+* :ghpull:`22610`: Fix alternative suggestion in epoch2num() deprecation
+* :ghpull:`22554`: Prepare for making create_dummy_axis not necessary.
+* :ghpull:`22607`: ENH: Add dark/light mode theme to the buttons
+* :ghpull:`21790`: FIX: Update blitting and drawing on the macosx backend
+* :ghpull:`22175`: FIX: Update macosx animation handling
+* :ghpull:`22569`: Require non-zero dash value
+* :ghpull:`22544`: Correct paper sizes
+* :ghpull:`20470`: Issues warnings for legend handles without handlers
+* :ghpull:`22558`: MNT: Simplify imports
+* :ghpull:`22580`: fix doc for annotation_clip parameter
+* :ghpull:`22581`: DOC: fix various typos
+* :ghpull:`22573`: Bump actions/setup-python from 2 to 3
+* :ghpull:`22568`: Rename qhull source to _qhull_wrapper.cpp.
+* :ghpull:`22561`: FIX: Handle stopped animation figure resize
+* :ghpull:`22562`: TST: Add a frame test for animations
+* :ghpull:`22514`: Expire deprecations in cbook.deprecation
+* :ghpull:`22555`: Use picklable callbacks for DraggableBase.
+* :ghpull:`22552`: Tweak dependency checking in doc/conf.py.
+* :ghpull:`22550`: Require sphinx>=3 & numpydoc>=1.0 for building docs.
+* :ghpull:`22539`: Deprecate toplevel mpl.text.get_rotation; normalize rotations early.
+* :ghpull:`22502`: Cleanup unused imports and variables in backends
+* :ghpull:`20071`: Document, test, and simplify impl. of auto_adjustable_area.
+* :ghpull:`22366`: Deprecation removal/updates in axes3d
+* :ghpull:`22484`: Simplify the internal API to connect picklable callbacks.
+* :ghpull:`22417`: Support passing rgbaFace as an array to agg's draw_path.
+* :ghpull:`22412`: Turn _get_axis_map() into a property and remove _get_axis_list()
+* :ghpull:`22486`: Expire deprecations in lines and patches
+* :ghpull:`22512`: Increase coverage
+* :ghpull:`22504`: Simplify FontProperties init.
+* :ghpull:`22497`: Remove entries of MathTextParser._backend_mapping deprecated in 3.4.
+* :ghpull:`22487`: Don't key MathTextParser cache off a mutable FontProperties.
+* :ghpull:`22468`: Turn _mathtext.ship into a plain function.
+* :ghpull:`22490`: Deprecate unused, untested Affine2D.identity().
+* :ghpull:`22491`: Linewrap setupext to 79 character lines.
+* :ghpull:`22488`: Some more maintenance for mathtext internal implementation.
+* :ghpull:`22485`: Change string representation of AxesImage
+* :ghpull:`22240`: Add minimum macosx version
+* :ghpull:`22480`: Remove _point_size_reduction.
+* :ghpull:`22204`: Cleanup _mathtext internal API
+* :ghpull:`22469`: Improve readability of mathtext internal structures.
+* :ghpull:`22477`: Un-pyplot some examples which were already explicitly referencing axes.
+* :ghpull:`22467`: Small cleanup to font handling in agg.
+* :ghpull:`21178`: Add asinh axis scaling (*smooth* symmetric logscale)
+* :ghpull:`22411`: Move cbook._define_aliases() to _api.define_aliases()
+* :ghpull:`22465`: Deprecate unused AddList.
+* :ghpull:`22451`: Clarify error message for bad keyword arguments.
+* :ghpull:`21267`: Cleanup AnnotationBbox.
+* :ghpull:`22464`: Small improvements related to radar_chart example.
+* :ghpull:`22421`: Make most params to figure()/Figure() kwonly.
+* :ghpull:`22457`: Copy arrowprops argument to FancyAnnotationBbox.
+* :ghpull:`22454`: move ``_toolbar_2`` from webagg_core to webagg
+* :ghpull:`22413`: Remove some trivial private getters/setters in axisartist
+* :ghpull:`21634`: TST: Add future dependency tests as a weekly CI job
+* :ghpull:`22079`: Share FigureManager class between gtk3 and gtk4.
+* :ghpull:`22440`: Clarify warning about labels with leading underscores.
+* :ghpull:`17488`: Make error message explicit in legend.py
+* :ghpull:`22453`: Simplify impl. of polar limits setting API.
+* :ghpull:`22449`: Small cleanup to quiver.
+* :ghpull:`22415`: Make emit and auto args of set_{x,y,z}lim keyword only.
+* :ghpull:`22422`: Deprecate backend_ps.convert_psfrags.
+* :ghpull:`22194`: Drop support for Python 3.7
+* :ghpull:`22234`: Partial fix for grid alpha
+* :ghpull:`22433`: Fix ambiguous link targets in docs.
+* :ghpull:`22420`: Update plt.figure() docstring.
+* :ghpull:`22388`: Make signature of Axes.annotate() more explicit.
+* :ghpull:`22419`: Remove "Matplotlib version" from docs issue template
+* :ghpull:`22423`: Avoid indiscriminate glob-remove in xpdf_distill.
+* :ghpull:`22406`: [DOC]: Removed a redundant 'The'
+* :ghpull:`21442`: Factor out common limits handling for x/y/z axes.
+* :ghpull:`22397`: Axes capitalization in widgets and axes3d
+* :ghpull:`22394`: Tweak Axes3D docstrings that refer to 2D plotting methods.
+* :ghpull:`22383`: TST: fix doc build
+* :ghpull:`21877`: DOC: attempt to explain the main different APIs
+* :ghpull:`21238`: Raise when unknown signals are connected to CallbackRegistries.
+* :ghpull:`22345`: MNT: make layout deprecations pending
+* :ghpull:`21597`: FIX: Remove the deepcopy override from transforms
+* :ghpull:`22370`: Replace tabs with spaces in C code.
+* :ghpull:`22371`: Corrected a mistake in comments (Issue #22369)
+* :ghpull:`21352`: Refactor hexbin().
+* :ghpull:`19214`: Improve autoscaling for high order Bezier curves
+* :ghpull:`22268`: Deprecated is_decade and is_close_to_int
+* :ghpull:`22359`: Slightly refactor TeX source generation.
+* :ghpull:`22365`: Remove deprecated ``MovieWriter.cleanup``
+* :ghpull:`22363`: Properly capitalize "Unicode".
+* :ghpull:`22025`: Deprecate various custom FigureFrameWx attributes/methods.
+* :ghpull:`21391`: Reuse imsave()'s background-blending code in FigureCanvasAgg.print_jpeg.
+* :ghpull:`22026`: Simplify wxframe deletion.
+* :ghpull:`22351`: Fix "trailing" whitespace in C docstrings.
+* :ghpull:`22342`: Docstrings for _qhull.
+* :ghpull:`21836`: Slightly shorten ft2font init.
+* :ghpull:`21962`: Privatize various internal APIs of backend_pgf.
+* :ghpull:`22114`: Rewrite AxesStack independently of cbook.Stack.
+* :ghpull:`22332`: Let TransformedPatchPath inherit most functionality from TransformedPath.
+* :ghpull:`22292`: Cleanup Axis._translate_tick_kw
+* :ghpull:`22339`: wx.App() should be init'ed in new_figure_manager_given_figure
+* :ghpull:`22315`: More standardization of floating point slop in mpl_toolkits.
+* :ghpull:`22337`: DOC: More cleanup axes -> Axes
+* :ghpull:`22323`: Replace sole use of maxdict by lru_cache.
+* :ghpull:`22229`: FIX: make safe to add / remove artists during ArtistList iteration
+* :ghpull:`22196`: ``dates`` classes and functions support ``tz`` both as string and ``tzinfo``
+* :ghpull:`22161`: Add box when setting ``PolygonSelector.verts``
+* :ghpull:`19368`: Raise warning and downsample if data given to _image.resample is too large
+* :ghpull:`22250`: Unify toolbar init across backends.
+* :ghpull:`22304`: Added tests for ContourSet.legend_elements
+* :ghpull:`21583`: Add pre-commit config and dev instructions
+* :ghpull:`21547`: Custom cap widths in box and whisker plots in bxp() and boxplot()
+* :ghpull:`20887`: Implement a consistent behavior in TkAgg backend for bad blit bbox
+* :ghpull:`22317`: Rename outdated seaborn styles.
+* :ghpull:`22271`: Rework/fix Text layout cache.
+* :ghpull:`22097`: In mpl_toolkits, use the same floating point slop as for standard ticks.
+* :ghpull:`22295`: Display bad format string in error message.
+* :ghpull:`22287`: Removed unused code and variables
+* :ghpull:`22244`: MNT: colorbar locators properties
+* :ghpull:`22270`: Expanded documentation of Axis.set_ticks as per discussion in issue #22262
+* :ghpull:`22280`: Simplify FontProperties.copy().
+* :ghpull:`22174`: Give the Tk toolbar buttons a flat look
+* :ghpull:`22046`: Add the ability to change the focal length of the camera for 3D plots
+* :ghpull:`22251`: Colorbar docstring reorg
+* :ghpull:`21933`: MNT: privatize colorbar attr
+* :ghpull:`22258`: DOC: fix version switcher
+* :ghpull:`22261`: DOC: fix switcher json
+* :ghpull:`22154`: Add some tests for minspan{x,y} in RectangleSelector
+* :ghpull:`22246`: DOC: add dropdown
+* :ghpull:`22133`: Deprecated ``afm``, ``fontconfig_pattern``, and ``type1font``
+* :ghpull:`22249`: DOC: More capitalization of Axes
+* :ghpull:`22021`: Ensure that all toolbar (old/new) subclasses can be init'ed consistently
+* :ghpull:`22213`: Improve ft2font error reporting.
+* :ghpull:`22245`: Deprecate cleared kwarg to get_renderer.
+* :ghpull:`22239`: Fix typos
+* :ghpull:`22216`: turn off the grid after creating colorbar axes
+* :ghpull:`22055`: FIX: Return value instead of enum in get_capstyle/_joinstyle
+* :ghpull:`22228`: Remove some unnecessary getattrs.
+* :ghpull:`20426`: ENH: Layout engine
+* :ghpull:`22224`: Trivial doc fix to annotations tutorial.
+* :ghpull:`21894`: Jointly track x and y in PolygonSelector.
+* :ghpull:`22205`: Bump minimum NumPy to 1.19
+* :ghpull:`22203`: Factor out underline-thickness lookups in mathtext.
+* :ghpull:`22189`: DOC: Add hatch API to reference
+* :ghpull:`22084`: Clean up 3d plot box_aspect zooming
+* :ghpull:`22098`: Expire axes_grid1/axisartist deprecations.
+* :ghpull:`22013`: Use standard toolbar in wx.
+* :ghpull:`22160`: Removed unused variables etc.
+* :ghpull:`22179`: FIX: macosx check case-insensitive app name
+* :ghpull:`22157`: Improved coverage of mathtext and removed unused code
+* :ghpull:`21781`: Use a fixture to get widget testing axes
+* :ghpull:`22140`: Ensure log formatters use Unicode minus
+* :ghpull:`21342`: Fix drawing animated artists changed in selector callback
+* :ghpull:`22134`: Deprecated ``tight_bbox`` and ``tight_layout`` modules
+* :ghpull:`21965`: Switch transOffset to offset_transform.
+* :ghpull:`22145`: Make Tk windows use the same icon as other backends
+* :ghpull:`22107`: Expire mathttext-related deprecations
+* :ghpull:`22139`: FIX: width/height were reversed in macosx rectangle creation
+* :ghpull:`22123`: Deprecate accepting arbitrary parameters in some get_window_extent() methods
+* :ghpull:`22122`: Hint at draw_without_rendering() in Text.get_window_extent
+* :ghpull:`22120`: Drop dependency on scipy in the docs.
+* :ghpull:`22063`: FIX: Autoposition title when yaxis has offset
+* :ghpull:`22119`: Micro-optimize skew().
+* :ghpull:`22109`: Remove unnecessary null checks in macosx.m, and some more maintenance
+* :ghpull:`21977`: Add corner coordinate helper methods to Ellipse/Rectangle
+* :ghpull:`21830`: Add option of bounding box for PolygonSelector
+* :ghpull:`22115`: Turn _localaxes into a plain list.
+* :ghpull:`22108`: Micro-optimize rotation transform.
+* :ghpull:`22043`: Cleanup differential equations examples.
+* :ghpull:`22080`: Simple style(ish) fixes.
+* :ghpull:`22110`: Right-aligned status text in backends
+* :ghpull:`21873`: DOC: Update and consolidate Custom Tick Formatter for Time Series example
+* :ghpull:`22112`: Fix a small typo
+* :ghpull:`20117`: Very soft-deprecate AxesDivider.new_{horizontal,vertical}.
+* :ghpull:`22034`: Update lines_with_ticks_demo.py
+* :ghpull:`22102`: DOC: rename usage tutorial to quick_start
+* :ghpull:`19228`: Validate text rotation in setter
+* :ghpull:`22081`: Expire colorbar-related deprecations.
+* :ghpull:`22008`: Added color keyword argument to math_to_image
+* :ghpull:`22058`: Remove exprired mplot3d deprecations for 3.6
+* :ghpull:`22073`: DOC: Add new tutorial to external resources.
+* :ghpull:`22054`: MNT: Set CapStyle member names automatically
+* :ghpull:`22061`: De-duplicate mplot3D API docs
+* :ghpull:`22075`: Remove unnecessary ``.figure`` qualifier in docs.
+* :ghpull:`22051`: Make required_interactive_framework required on FigureCanvas.
+* :ghpull:`22050`: Deprecate the noop, unused FigureCanvasBase.resize.
+* :ghpull:`22030`: Add explanatory comments to "broken" horizontal bar plot example
+* :ghpull:`22001`: Fix:    [Bug]: triplot with 'ls' argument yields TypeError #21995
+* :ghpull:`22045`: Fill in missing Axes3D box_aspect argument docstring
+* :ghpull:`22042`: Keep FontEntry helpers private.
+* :ghpull:`21042`: Make rcParams.copy() return a new RcParams instance.
+* :ghpull:`22032`: flipy only affects the drawing of texts, not of images.
+* :ghpull:`21993`: Added docstring to rrulewrapper class
+* :ghpull:`21935`: Significantly improve tight layout performance for cartopy axes
+* :ghpull:`22000`: Some gtk cleanups.
+* :ghpull:`21983`: Simplify canvas class control in FigureFrameWx.
+* :ghpull:`21985`: Slightly tighten the _get_layout_cache_key API.
+* :ghpull:`22020`: Simplify wx _print_image.
+* :ghpull:`22010`: Fix syntax highlighting in contrib guide.
+* :ghpull:`22003`: Initialize RendererCairo.{width,height} in constructor.
+* :ghpull:`21992`: Use _make_classic_style_pseudo_toolbar more.
+* :ghpull:`21916`: Fix picklability of make_norm_from_scale norms.
+* :ghpull:`21981`: FigureCanvasCairo can init RendererCairo; kill RendererCairo subclasses.
+* :ghpull:`21986`: InvLogTransform should only return masked arrays for masked inputs.
+* :ghpull:`21991`: PEP8ify wx callback names.
+* :ghpull:`21975`: DOC: remove experimental tag from CL
+* :ghpull:`21989`: Autoinfer norm bounds.
+* :ghpull:`21980`: Removed loaded modules logging
+* :ghpull:`21982`: Deprecate duplicated FigureManagerGTK{3,4}Agg classes.
+* :ghpull:`21963`: Clarify current behavior of draw_path_collection.
+* :ghpull:`21974`: Reword inset axes example.
+* :ghpull:`21835`: Small improvements to interactive examples
+* :ghpull:`21050`: Store dash_pattern as single attribute, not two.
+* :ghpull:`21557`: Fix transparency when exporting to png via pgf backend.
+* :ghpull:`21904`: Added _repr_html_ for fonts
+* :ghpull:`21696`: Use cycling iterators in RendererBase.
+* :ghpull:`21955`: Refactor common parts of ImageMagick{,File}Writer.
+* :ghpull:`21952`: Clarify coordinates for RectangleSelector properties
+* :ghpull:`21964`: Fix some more missing references.
+* :ghpull:`21516`: Make _request_autoscale_view more generalizable to 3D.
+* :ghpull:`21947`: Slightly cleanup RendererBase docs.
+* :ghpull:`21961`: Privatize various internal APIs of backend_pgf.
+* :ghpull:`21956`: Remove tests for avconv animation writers.
+* :ghpull:`21954`: DOC: Move Animation and MovieWriter inheritance diagrams ...
+* :ghpull:`21780`: Add a click_and_move widget test helper
+* :ghpull:`21941`: Merge branch v3.5.x into main
+* :ghpull:`21936`: Small ``__getstate__`` cleanups.
+* :ghpull:`21939`: Update comment re: register_at_fork.
+* :ghpull:`21910`: Fold _rgbacache into _imcache.
+* :ghpull:`21921`: Clean up RectangleSelector move code
+* :ghpull:`21925`: Drop labelling from PR welcome action
+* :ghpull:`14930`: Set Dock icon on the macosx backend
+* :ghpull:`21920`: Improve square state calculation in RectangleSelector
+* :ghpull:`21919`: Fix use_data_coordinates docstring
+* :ghpull:`21881`: Add a PolygonSelector.verts setter
+* :ghpull:`20839`: Fix centre and square state and add rotation for rectangle selector
+* :ghpull:`21874`: DOC: Add Date Tick Locators and Formatters example
+* :ghpull:`21799`: Added get_font_names() to fontManager
+* :ghpull:`21871`: DOC: Code from markevery_prop_cycle moved to test.
+* :ghpull:`21395`: Expire _check_savefig_extra_args-related deprecations.
+* :ghpull:`21867`: Remove unused bbox arg to _convert_agg_to_wx_bitmap.
+* :ghpull:`21868`: Use partialmethod for better signatures in backend_ps.
+* :ghpull:`21520`: Shorten some inset_locator docstrings.
+* :ghpull:`21737`: Update the "Rotating a 3D plot" gallery example to show all 3 rotation axes
+* :ghpull:`21851`: Re-order a widget test function
+* :ghpull:`10762`: Normalization of elevation and azimuth angles for surface plots
+* :ghpull:`21426`: Add ability to roll the camera in 3D plots
+* :ghpull:`21822`: Replace NSDictionary by switch-case.
+* :ghpull:`21512`: MNT: Add modifier key press handling to macosx backend
+* :ghpull:`21784`: Set macOS icon when using Qt backend
+* :ghpull:`21748`: Shorten PyObjectType defs in macosx.m.
+* :ghpull:`21809`: MNT: Turn all macosx warnings into errors while building
+* :ghpull:`21792`: Fix missing return value in closeButtonPressed.
+* :ghpull:`21767`: Inherit many macos backend docstrings.
+* :ghpull:`21766`: Don't hide build log on GHA.
+* :ghpull:`21728`: Factor out some macosx gil handling for py-method calls from callbacks.
+* :ghpull:`21754`: Update gitattributes so that objc diffs are correctly contextualized.
+* :ghpull:`21752`: Add a helper for directly output pdf streams.
+* :ghpull:`21750`: Don't sort pdf dicts.
+* :ghpull:`21745`: DOC: Clarify Coords Report Example
+* :ghpull:`21746`: Fix/add docstring signatures to many C++ methods.
+* :ghpull:`21631`: DOC: change gridspec tutorial to arranging_axes tutorial
+* :ghpull:`21318`: FIX: better error message for shared axes and axis('equal')
+* :ghpull:`21519`: mark_inset should manually unstale axes limits before drawing itself.
+* :ghpull:`21724`: Fix copyright date with SOURCE_DATE_EPOCH set
+* :ghpull:`21398`: FIX: logic of title repositioning
+* :ghpull:`21717`: Simplify macosx toolbar init.
+* :ghpull:`21690`: Whitespace/braces/#defines cleanup to macosx.
+* :ghpull:`21695`: Use _api.check_shape more.
+* :ghpull:`21698`: Small code cleanups and style fixes.
+* :ghpull:`21529`: Delay-load keymaps in toolmanager.
+* :ghpull:`21525`: Fix support for clim in scatter.
+* :ghpull:`21697`: Drop non-significant zeros from ps output.
+* :ghpull:`21692`: CI: Remove CI test runs from forks of matplotlib
+* :ghpull:`21591`: Make ToolFullScreen a Tool, not a ToolToggle.
+* :ghpull:`21677`: Simplify test for negative xerr/yerr.
+* :ghpull:`21657`: Replace some image_comparisons by return-value-tests/check_figures_e…
+* :ghpull:`21664`: Merge 3.5.x into main
+* :ghpull:`21490`: Make Line2D copy its inputs
+* :ghpull:`21639`: Skip some uses of packaging's PEP440 version for non-Python versions.
+* :ghpull:`21604`: Fix centre square rectangle selector part 1
+* :ghpull:`21593`: Check for images added-and-modified in a same PR
+* :ghpull:`20750`: Shorten issue templates
+* :ghpull:`21590`: Make gtk3 full_screen_toggle more robust against external changes.
+* :ghpull:`21582`: Organize checklist in PR template
+* :ghpull:`21580`: Rename/remove _lastCursor, as needed.
+* :ghpull:`21567`: Removed the range parameter from the validate_whiskers function's err…
+* :ghpull:`21565`: Further remove remnants of offset_position.
+* :ghpull:`21542`: [ENH]: Use new style format strings for colorbar ticks
+* :ghpull:`21564`: Skip invisible artists when doing 3d projection.
+* :ghpull:`21558`: Various small fixes for streamplot().
+* :ghpull:`21544`: Return minorticks as array, not as list.
+* :ghpull:`21546`: Added links to the mosaic docs in figure and pyplot module docstrings
+* :ghpull:`21545`: Turn mouseover into a mpl-style getset_property.
+* :ghpull:`21537`: Remove unnecessary False arg when constructing wx.App.
+* :ghpull:`21536`: Reword margins docstrings, and fix bounds on zmargin values.
+* :ghpull:`21535`: typo-correction-on-line-185
+* :ghpull:`21534`: Do not use space in directive calling.
+* :ghpull:`21494`: Adding tutorial links for blitting in widgets.py
+* :ghpull:`21407`: Stash exceptions when FT2Font closes the underlying stream.
+* :ghpull:`21431`: set_ticks([single_tick]) should also expand view limits.
+* :ghpull:`21444`: Make pipong example self-contained.
+* :ghpull:`21392`: Add label about workflow to new contributor PRs
+* :ghpull:`21440`: Install sphinx-panels along with development setup
+* :ghpull:`21434`: Remove coords_flat variable
+* :ghpull:`21415`: Move gui_support.macosx option to packages section.
+* :ghpull:`21412`: Privatize some SVG internal APIs.
+* :ghpull:`21401`: Uncamelcase some internal variables in axis.py; rename _get_tick_bboxes.
+* :ghpull:`21417`: Use Bbox.unit() more.
+* :ghpull:`20253`: Simplify parameter handling in FloatingAxesBase.
+* :ghpull:`21379`: Simplify filename tracking in FT2Font.
+* :ghpull:`21278`: Clear findfont cache when calling addfont().
+* :ghpull:`21400`: Use bbox.{size,bounds,width,height,p0,...} where appropriate.
+* :ghpull:`21408`: Reword annotations tutorial section titles.
+* :ghpull:`21371`: Rename default branch
+* :ghpull:`21389`: Log pixel coordinates in event_handling coords_demo example on terminal/console
+* :ghpull:`21376`: Factor common parts of saving to different formats using pillow.
+* :ghpull:`21377`: Enable tests for text path based markers
+* :ghpull:`21283`: Demonstrate inset_axes in scatter_hist example.
+* :ghpull:`21356`: Raise an exception when find_tex_file fails to find a file.
+* :ghpull:`21362`: Simplify wording of allowed errorbar() error values
+* :ghpull:`21274`: ENH: Add support to save images in WebP format
+* :ghpull:`21289`: Simplify _init_legend_box.
+* :ghpull:`21256`: Make image_comparison work even without the autoclose fixture.
+* :ghpull:`21343`: Fix type1font docstring markup/punctuation.
+* :ghpull:`21341`: Fix trivial docstring typo.
+* :ghpull:`21301`: Simplify ``Colormap.__call__`` a bit.
+* :ghpull:`21280`: Make ``Path.__deepcopy__`` interact better with subclasses, e.g. TextPath.
+* :ghpull:`21266`: Fix #21101 Add validator to errorbar method
+* :ghpull:`20921`: Fix problem with (deep)copy of TextPath
+* :ghpull:`20914`: 19195 rotated markers
+* :ghpull:`21276`: Add language about not assigning issues
+* :ghpull:`20715`: Improve Type-1 font parsing
+* :ghpull:`21218`: Parametrize/simplify test_missing_psfont.
+* :ghpull:`21213`: Compress comments in make_image.
+* :ghpull:`21187`: Deprecate error_msg_foo helpers.
+* :ghpull:`21190`: Deprecate mlab.stride_windows.
+* :ghpull:`21152`: Rename ``**kw`` to ``**kwargs``.
+* :ghpull:`21087`: Move colormap examples from userdemo to images_contours_and_fields.
+* :ghpull:`21074`: Deprecate MarkerStyle(None).
+* :ghpull:`20990`: Explicit registration of canvas-specific tool subclasses.
+* :ghpull:`21049`: Simplify setting Legend attributes
+* :ghpull:`21056`: Deprecate support for no-args MarkerStyle().
+* :ghpull:`21059`: Remove dummy test command from setup.py
+* :ghpull:`21015`: Prepare for rcParams.copy() returning a new RcParams instance in the future
+* :ghpull:`21021`: Factor out for_layout_only backcompat support in get_tightlayout.
+* :ghpull:`21023`: Inline ToolManager._trigger_tool to its sole call site.
+* :ghpull:`21005`: Test the rcParams deprecation machinery.
+* :ghpull:`21010`: Avoid TransformedBbox where unneeded.
+* :ghpull:`21019`: Reword custom_ticker1 example.
+* :ghpull:`20995`: Deprecate some backend_gtk3 helper globals.
+* :ghpull:`21004`: Remove now-unused rcParams _deprecated entries.
+* :ghpull:`20986`: Make HandlerLine2D{,Compound} inherit constructors from HandlerNpoints.
+* :ghpull:`20974`: Rename symbol_name to glyph_name where appropriate.
+* :ghpull:`20961`: Small cleanups to math_to_image.
+* :ghpull:`20957`: legend_handler_map cleanups.
+* :ghpull:`20955`: Remove unused HostAxes._get_legend_handles.
+* :ghpull:`20851`: Try to install the Noto Sans CJK font
+
+Issues (202):
+
+* :ghissue:`23827`: backend_gtk3agg.py calls set_device_scale
+* :ghissue:`23560`: [Doc]: mpl_toolkits.axes_grid still mentioned as maintained
+* :ghissue:`23794`: [Doc]: Version switcher broken in devdocs
+* :ghissue:`23806`: [Bug]: possible regression in axis ticks handling in matplotlib 3.6.0rc2
+* :ghissue:`22965`: [Bug]: triplot duplicates label legend
+* :ghissue:`23807`: streamplot raises ValueError when the input is zeros
+* :ghissue:`23761`: [Bug]: False positive legend handler warnings in 3.6.0.rc1
+* :ghissue:`23398`: [Bug]: Newer versions of matplotlib ignore xlabel on colorbar axis
+* :ghissue:`23699`: [Bug]: Bug with toolbar instantiation in notebook
+* :ghissue:`23745`: [Doc]: Minor rcParams/matplotlibrc doc issues
+* :ghissue:`23717`: [Bug]: AxesSubplot.get_yticks not returning the actual printed ticks
+* :ghissue:`21508`: [Doc]: Create diagram to show rotation directions for 3D plots
+* :ghissue:`23709`: [Bug]: colorbar with unattached mappables can't steal space
+* :ghissue:`23701`: [Bug]: plt.figure(), plt.close() leaks memory
+* :ghissue:`22409`: [Bug]: AttributeError: 'QResizeEvent' object has no attribute 'pos'
+* :ghissue:`19609`: DeprecationWarning when changing color maps
+* :ghissue:`23716`: MatplotlibDeprecationWarning removal hard-breaks seaborn in 3.6rc1
+* :ghissue:`23719`: [Bug]: register_cmap deprecation message seems wrong
+* :ghissue:`23707`: test_Normalize fails on aarch64/ppc64le/s390x
+* :ghissue:`21107`: [MNT]: Should plt.xticks() get a minor keyword argument
+* :ghissue:`23679`: [Doc]: Deprecated modules not in docs
+* :ghissue:`19550`: Arc and pathpatch_2d_to_3d plots full ellipse
+* :ghissue:`23329`: [Bug]: ``plt.autoscale()`` fails for partial ``Arc``
+* :ghissue:`11266`: Arc patch ignoring theta1/theta2 when added to Axes via PatchCollection
+* :ghissue:`4067`: 'Poly3DCollection' object has no attribute '_facecolors2d'
+* :ghissue:`23622`: [MNT]: make.bat not parsing sphinxopt
+* :ghissue:`23459`: [Bug]: 'Line3D' object has no attribute '_verts3d'
+* :ghissue:`23653`: [Bug]: macosx subplot tool causes segfault when window closed
+* :ghissue:`23660`: [Bug]: Test test_figure.py::test_subfigure_ss[png] FAILED on ppc64le
+* :ghissue:`23645`: [MNT]: Python 3.11 manylinux wheels
+* :ghissue:`23650`: TTF fonts loaded from file are not embedded/displayed properly when saved to pdf
+* :ghissue:`23583`: [Doc]: Document the position parameter in apply_aspect()
+* :ghissue:`23386`: setuptools_scm-git-archive is obsolete
+* :ghissue:`23220`: [Doc]: Clarify ``offset`` parameter in linestyle
+* :ghissue:`22746`: [Doc]: Document that rcParams['font.family'] can be a list
+* :ghissue:`8187`: Axes doesn't have ````legends```` attribute?
+* :ghissue:`23580`: [Bug]: TypeError when plotting against list of datetime.date where 0th element of list is None
+* :ghissue:`15514`: Relevant methods are only documented in base classes and thus not easily discoverable
+* :ghissue:`21611`: DOC: Add conda environment instructions to developers guide
+* :ghissue:`23487`: [Bug]: scatter plot color settings discarded unless c given
+* :ghissue:`22977`: [Bug]: offset dash linestyle has no effect in patch objects
+* :ghissue:`18883`: Matplotlib would not try to apply all the font in font list to draw all characters in the given string.
+* :ghissue:`22570`: [ENH]: Provide ``axis('equal')`` for ``Axes3D``.
+* :ghissue:`23433`: [Bug]: array-like linewidth raises an error for scatter3D
+* :ghissue:`12388`: Legend Title Left Alignment
+* :ghissue:`23375`: [Bug]: markerfacecoloralt not supported when drawing errorbars
+* :ghissue:`17973`: DOC: matplotlib.__doc__ not included in online docs ?
+* :ghissue:`23474`: [Bug]: ``\,`` and ``\mathrm{\,}`` are not identical in Mathtext when using CM and STIX
+* :ghissue:`8715`: event handlers have different signatures across backends
+* :ghissue:`18271`: PGF uses the minimal document class
+* :ghissue:`23324`: [Bug]: Exception not handled in widgetlock()
+* :ghissue:`15710`: doc for type of tz parameter is inconsistent throughout dates.py
+* :ghissue:`21165`: Hexbin marginals need a test for linear scaling
+* :ghissue:`23105`: [MNT]: Deprecate per-backend customization of draw_if_interactive
+* :ghissue:`23147`: [Bug]: with setuptools>=60, cannot find msbuild
+* :ghissue:`23379`: [Bug]: Offset notation on y-axis can overlap with a long title
+* :ghissue:`22819`: [Doc]: Make rect argument consistent in the docstrings
+* :ghissue:`23172`: [Bug]: Calling matplotlib.pyplot.show() outside of matplotlib.pyplot.rc_context no longer works
+* :ghissue:`23019`: [Bug]: ``UnicodeDecodeError`` when using some special and accented characters in TeX
+* :ghissue:`23334`: [Doc]: Tk embedding example crashes Spyder
+* :ghissue:`23298`: [Bug]: get_backend() clears figures from Gcf.figs if they were created under rc_context
+* :ghissue:`21942`: [ENH]: add width/height_ratios to subplots and friends
+* :ghissue:`23028`: [ENH]: contour kwarg for negative_linestyle
+* :ghissue:`19223`: Certain non-hashable parameters to text() give cryptic error messages
+* :ghissue:`18351`: Add the ability to plot striped lines
+* :ghissue:`23205`: [Bug]: URL-area not rotated in PDFs
+* :ghissue:`23268`: [Bug]: hyphen renders different length depending on presence of MathText
+* :ghissue:`23308`: [Bug]: set_visible() not working for 3d projection
+* :ghissue:`23296`: Set_color method for line2d object in latest document not work
+* :ghissue:`22992`: [Bug]: test_image_comparison_expect_rms nondeterministic failure
+* :ghissue:`23008`: [ENH]: Use ``\genfrac`` in display style?
+* :ghissue:`23214`: [MNT]: Rename examples with "test" in the name
+* :ghissue:`17852`: Thin space missing after mathtext operators
+* :ghissue:`12078`: Inconsistency in keyword-arguments ncol/ncols, nrow/nrows
+* :ghissue:`23239`: [Doc]: steps is not implemented in line styles.
+* :ghissue:`23151`: [MNT]: default date limits...
+* :ghissue:`9462`: Misaligned bottoms of subplots for png output with bbox_inches='tight'
+* :ghissue:`21369`: [Bug]: ax.invert_xaxis() and ax.invert_yaxis() both flip the X axis
+* :ghissue:`20797`: ``macosx`` cursors break with images
+* :ghissue:`23084`: [TST] Upcoming dependency test failures
+* :ghissue:`22910`: [Bug]: bar_label fails with nan errorbar values
+* :ghissue:`23074`: [Bug]: matplotlib crashes if ``_tkinter`` doesn't have ``__file__``
+* :ghissue:`23083`: [Bug]: Confusing error messages
+* :ghissue:`22391`: [Doc]: Remove "keywords" line at the bottom of all examples
+* :ghissue:`20202`: Daylocator causes frozen computer when used with FuncAnimation
+* :ghissue:`22529`: Replace C++ quad contouring code with use of ContourPy
+* :ghissue:`21710`: [ENH]: macosx backend does not respect rcParams["savefig.directory"]
+* :ghissue:`21880`: [Doc]: rrulewrapper not included in API docs
+* :ghissue:`22622`: [Bug]: Gaps and overlapping areas between bins when using float16
+* :ghissue:`23043`: [TST] Upcoming dependency test failures
+* :ghissue:`17960`: Line2D object markers are lost when retrieved from legend.get_lines() when linestyle='None'
+* :ghissue:`23026`: [MNT]: Require that matplotlibrc/style files use utf-8 (or have an encoding cookie)
+* :ghissue:`22947`: [Bug]: Can't use ``plt.sca()`` on axes created using subfigures
+* :ghissue:`22623`: [ENH]: support rect with constrained_layout ("layout only to part of the figure")
+* :ghissue:`22917`: "ab;cd" missing in subplot_mosaic tutorial
+* :ghissue:`22686`: [Bug]: can not give init value for RangeSlider widget
+* :ghissue:`22740`: [MNT]: Add codespell to pre-commit hooks
+* :ghissue:`22893`: rainbow text example is broken
+* :ghissue:`21571`: [Doc]: Clarify text positioning
+* :ghissue:`22092`: [Bug]: Configure subplots dialog freezes for TkAgg with toolmanager
+* :ghissue:`22760`: [Bug]: Macosx legend picker doesn't work anymore
+* :ghissue:`16369`: Call to input blocks slider input on osx with the default agg 'MacOSX'. It works fine on when TkAgg is used.
+* :ghissue:`22915`: [Bug]: figure.raise_window rcParam does not work on MacOSX backend
+* :ghissue:`22930`: [Bug]: Regression in dashes due to #22569
+* :ghissue:`22859`: [Bug]: findSystemFonts should not look in subdirectories of C:\Windows\Fonts\
+* :ghissue:`22882`: Missing ``f`` prefix on f-strings
+* :ghissue:`22738`: [MNT]: make Axes.cla an alias for Axes.clear in all cases
+* :ghissue:`22708`: [TST] Upcoming dependency test failures
+* :ghissue:`8388`: Proposed ENH: Allow user to turn off breaking of streamlines in streamplot
+* :ghissue:`20755`: [Bug]: make_norm_from_scale should create picklable classes even when used in-line.
+* :ghissue:`18249`: Expand the explanation of the Object-Oriented interface
+* :ghissue:`22792`: [Bug]: .eps greyscale hatching of patches when lw=0
+* :ghissue:`22630`: [ENH]: enable passing of projection keyword to Axes.inset_axes
+* :ghissue:`22414`: [Bug]: bar_label overlaps bars when y-axis is inverted
+* :ghissue:`22726`: [Bug]: tripcolor ignores clim
+* :ghissue:`21635`: [ENH]: Add a nightly wheel build
+* :ghissue:`9994`: document where nightly wheels are published
+* :ghissue:`22350`: [Bug]: text.usetex Vs. DateFormatter
+* :ghissue:`4976`: missing imshow() subplots when using tight_layout()
+* :ghissue:`22150`: [ENH]: Tool icons are hardly visible in Tk when using a dark theme
+* :ghissue:`22662`: Leave color parameter empty should be fine[ENH]:
+* :ghissue:`22671`: [Doc]: plot_format adaption invalidates sphinx cache
+* :ghissue:`22582`: [Bug]: FontManager.addfont doesn't accept pathlib.Path of TTF font
+* :ghissue:`22657`: [ENH]: vector map
+* :ghissue:`16181`: The great API cleanup
+* :ghissue:`22636`: [Bug]: Infinite loop when there is single double quote in matplotlibrc
+* :ghissue:`22266`: [Doc]: Improve examples in documentation
+* :ghissue:`11861`: Figure does not close until script finishes execution
+* :ghissue:`19288`: Escape # character in matplotlibrc
+* :ghissue:`22579`: [Bug]: Replacement for epoch2num behaves differently (does not accept arrays)
+* :ghissue:`22605`: [Bug]: Tool contrast low with dark theme on macosx backend
+* :ghissue:`17642`: bring osx backend flush_events to feature parity with other backend
+* :ghissue:`19268`: Drawing the canvas does not populate ticklabels on MacOSX backend
+* :ghissue:`17445`: MacOSX does not render frames in which new artists are added when blitting
+* :ghissue:`10980`: Current versions cannot reproduce rotate_axes_3d_demo.py
+* :ghissue:`18451`: MacOSX backend fails with animation in certain scripts
+* :ghissue:`22603`: [MNT]: Replace str(n)cpy etc with safe versions (C++)
+* :ghissue:`19121`: Handle and label not created for Text with label
+* :ghissue:`22563`: [Doc]: annotation_clip=None not correctly documented
+* :ghissue:`12528`: Empty axes on draw after blitted animation finishes
+* :ghissue:`20991`: [Bug]: Error when using path effect with a PolyCollection
+* :ghissue:`19563`: path_effects kwarg triggers exception on 3D scatterplot
+* :ghissue:`8650`: System Error in backend_agg. (with a fix!)
+* :ghissue:`20294`: ``AxesImage.__str__`` is wrong if the image does not span the full Axes.
+* :ghissue:`18066`: Document minimum supported OSX version for macos backend
+* :ghissue:`17018`: Add documentation about transparency of frame
+* :ghissue:`22403`: [MNT]: Confusing prompt in docs issue template
+* :ghissue:`8839`: mpl_connect silently does nothing when passed an invalid event type string
+* :ghissue:`22343`: [MNT]: Delay (or make pending) the deprecation of set_constrained_layout/set_tight_layout
+* :ghissue:`21554`: [Bug]: ``ValueError`` upon deepcopy of a ``Figure`` object
+* :ghissue:`22369`: [Doc]: Incorrect comment in example code for creating adjacent subplots
+* :ghissue:`19174`: connectionstyle arc3 with high rad value pushes up data interval of x-axis and y-axis.
+* :ghissue:`8351`: seaborn styles make "+", "x" markers invisible; proposed workaround for shipped styles
+* :ghissue:`22278`: Deprecate/remove maxdict
+* :ghissue:`19276`: imshow with very large arrays not working as expected
+* :ghissue:`22035`: [ENH]: Specify a custom focal length / FOV for the 3d camera
+* :ghissue:`22264`: [Bug]: new constrained_layout causes axes to go invisible(?)
+* :ghissue:`21774`: [MNT]: Improvements to widget tests
+* :ghissue:`18722`: Consider removing AFM+mathtext support
+* :ghissue:`21540`: [Bug]: cm fontset in log scale does not use Unicode minus
+* :ghissue:`22062`: [Bug]: Autopositioned title overlaps with offset text
+* :ghissue:`22093`: [Bug]: AttributeError: 'AxesSubplot' object has no attribute 'add_text'
+* :ghissue:`22012`: [Bug]: Mouseover coordinate/value text should be right aligned
+* :ghissue:`21995`: [Bug]: triplot with 'ls' argument yields TypeError
+* :ghissue:`20249`: MatplotlibDeprecationWarning when updating rcparams
+* :ghissue:`15781`: MatplotlibDeprecationWarning examples.directory is deprecated
+* :ghissue:`13118`: No MatplotlibDeprecationWarning for default rcParams
+* :ghissue:`21978`: Remove logging debug of loaded modules
+* :ghissue:`11738`: pgf backend doesn't make background transparent
+* :ghissue:`18039`: Add ``_repr_html_`` for fonts
+* :ghissue:`21970`: [Bug]: tight layout breaks with toolbar.push_current()
+* :ghissue:`14850`: No icon showing up with macosx backend
+* :ghissue:`17283`: Create Date Formatter/Locator Reference
+* :ghissue:`21761`: [Doc]: add how to know available fonts...
+* :ghissue:`21863`: [Doc]: Remove example "prop_cycle property markevery in rcParams"
+* :ghissue:`10241`: Axes3D.view_init elevation issue between 270 and 360 degrees
+* :ghissue:`14453`: add third angle to view_init()
+* :ghissue:`20486`: Modifier key press events not recognized on MacOSX backend
+* :ghissue:`9837`: MacOS: Key modifiers deprecated
+* :ghissue:`11416`: RuntimeError: adjustable='datalim' is not allowed when both axes are shared.
+* :ghissue:`17711`: inset_locator.mark_inset() misplaces box connectors
+* :ghissue:`20854`: [Doc]: Incorrect copyright start year at the bottom of devdocs page
+* :ghissue:`21394`: [Bug]: Subplot title does not obey padding
+* :ghissue:`20998`: [Bug]: ToolManager does not respect rcParams["keymap.<any>"] set after import time
+* :ghissue:`7075`: Superscripts in axis label cut when saving .eps with bbox_inches="tight"
+* :ghissue:`21514`: [Doc]: Error message of validate_whiskers is not updated
+* :ghissue:`21532`: [Doc]: subplot_mosaic docstring should link to the tutorial
+* :ghissue:`16550`: Docs: performance discussion of tight_layout
+* :ghissue:`21378`: [ENH]: use new style format strings for colorbar ticks
+* :ghissue:`19323`: Streamplot color mapping fails on (near-)empty array.
+* :ghissue:`19559`: Axes.get_xticks() returns a numpy array but Axes.get_xticks(minor=True) returns a plain list
+* :ghissue:`21526`: [Doc]: Little Typo on Introductory Tutorial
+* :ghissue:`19195`: Rotate Markers in functions like plot, scatter, etcetera
+* :ghissue:`21364`: [Bug]: double free when FT2Font constructor is interrupted by KeyboardInterrupt
+* :ghissue:`16581`: Can't not refresh new font in running interpreter
+* :ghissue:`21162`: [ENH]: saving images in webp format
+* :ghissue:`18168`: The example of the testing decorator does not work.
+* :ghissue:`20943`: [Bug]: Deepcopy of TextPath fails
+* :ghissue:`21101`: [Bug]: Errorbars separated from markers with negative errors
+* :ghissue:`17986`: MEP22 per-backend tool registration
+* :ghissue:`4938`: Feature request: add option to disable mathtext parsing
+* :ghissue:`11435`: plt.subplot eats my subplots
diff --git a/doc/users/release_notes.rst b/doc/users/release_notes.rst
index d90756cdf9..5ec5d47114 100644
--- a/doc/users/release_notes.rst
+++ b/doc/users/release_notes.rst
@@ -7,7 +7,7 @@ Release notes
 =============

 .. include from another document so that it's easy to exclude this for releases
-.. include:: release_notes_next.rst
+.. include: release_notes_next.rst

 Version 3.6
 ===========
@@ -15,8 +15,10 @@ Version 3.6
     :maxdepth: 1

     prev_whats_new/whats_new_3.6.0.rst
+    ../api/prev_api_changes/api_changes_3.6.1.rst
     ../api/prev_api_changes/api_changes_3.6.0.rst
     github_stats.rst
+    prev_whats_new/github_stats_3.6.0.rst

 Version 3.5
 ===========
diff --git a/examples/axes_grid1/inset_locator_demo2.py b/examples/axes_grid1/inset_locator_demo2.py
index bdc0b43589..795cb9471b 100644
--- a/examples/axes_grid1/inset_locator_demo2.py
+++ b/examples/axes_grid1/inset_locator_demo2.py
@@ -1,15 +1,12 @@
 """
-====================
-Inset Locator Demo 2
-====================
+===================
+Inset Locator Demo2
+===================

 This Demo shows how to create a zoomed inset via `.zoomed_inset_axes`.
 In the first subplot an `.AnchoredSizeBar` shows the zoom effect.
 In the second subplot a connection to the region of interest is
 created via `.mark_inset`.
-
-A version of the second subplot, not using the toolkit, is available in
-:doc:`/gallery/subplots_axes_and_figures/zoom_inset_axes`.
 """

 from matplotlib import cbook
diff --git a/examples/axisartist/demo_curvelinear_grid.py b/examples/axisartist/demo_curvelinear_grid.py
index 3efe83a43c..31f6f514a6 100644
--- a/examples/axisartist/demo_curvelinear_grid.py
+++ b/examples/axisartist/demo_curvelinear_grid.py
@@ -95,6 +95,7 @@ def curvelinear_test2(fig):
     ax2 = ax1.get_aux_axes(tr)
     # note that ax2.transData == tr + ax1.transData
     # Anything you draw in ax2 will match the ticks and grids of ax1.
+    ax1.parasites.append(ax2)
     ax2.plot(np.linspace(0, 30, 51), np.linspace(10, 10, 51), linewidth=2)

     ax2.pcolor(np.linspace(0, 90, 4), np.linspace(0, 10, 4),
diff --git a/examples/axisartist/demo_floating_axes.py b/examples/axisartist/demo_floating_axes.py
index ab525ff5d4..06ec693436 100644
--- a/examples/axisartist/demo_floating_axes.py
+++ b/examples/axisartist/demo_floating_axes.py
@@ -9,8 +9,8 @@ Demonstration of features of the :mod:`.floating_axes` module:
   the plot.
 * Using `~.floating_axes.GridHelperCurveLinear` to rotate the plot and set the
   plot boundary.
-* Using `~.Figure.add_subplot` to create a subplot using the return value from
-  `~.floating_axes.GridHelperCurveLinear`.
+* Using `~.floating_axes.FloatingSubplot` to create a subplot using the return
+  value from `~.floating_axes.GridHelperCurveLinear`.
 * Making a sector plot by adding more features to
   `~.floating_axes.GridHelperCurveLinear`.
 """
diff --git a/examples/axisartist/demo_parasite_axes.py b/examples/axisartist/demo_parasite_axes.py
index e502a7a42c..0b7858f645 100644
--- a/examples/axisartist/demo_parasite_axes.py
+++ b/examples/axisartist/demo_parasite_axes.py
@@ -17,15 +17,17 @@ and :mod:`mpl_toolkits.axisartist` is found in the
 :doc:`/gallery/axisartist/demo_parasite_axes2` example.
 """

-from mpl_toolkits.axisartist.parasite_axes import HostAxes
+from mpl_toolkits.axisartist.parasite_axes import HostAxes, ParasiteAxes
 import matplotlib.pyplot as plt


 fig = plt.figure()

 host = fig.add_axes([0.15, 0.1, 0.65, 0.8], axes_class=HostAxes)
-par1 = host.get_aux_axes(viewlim_mode=None, sharex=host)
-par2 = host.get_aux_axes(viewlim_mode=None, sharex=host)
+par1 = ParasiteAxes(host, sharex=host)
+par2 = ParasiteAxes(host, sharex=host)
+host.parasites.append(par1)
+host.parasites.append(par2)

 host.axis["right"].set_visible(False)

diff --git a/examples/images_contours_and_fields/pcolormesh_grids.py b/examples/images_contours_and_fields/pcolormesh_grids.py
index 7fc75f8b6d..3b628efe58 100644
--- a/examples/images_contours_and_fields/pcolormesh_grids.py
+++ b/examples/images_contours_and_fields/pcolormesh_grids.py
@@ -54,10 +54,11 @@ _annotate(ax, x, y, "shading='flat'")
 # -----------------------------
 #
 # Often, however, data is provided where *X* and *Y* match the shape of *Z*.
-# While this makes sense for other ``shading`` types, it is not permitted
-# when ``shading='flat'``. Historically, Matplotlib silently dropped the last
-# row and column of *Z* in this case, to match Matlab's behavior. If this
-# behavior is still desired, simply drop the last row and column manually:
+# While this makes sense for other ``shading`` types, it is no longer permitted
+# when ``shading='flat'`` (and will raise a MatplotlibDeprecationWarning as of
+# Matplotlib v3.3). Historically, Matplotlib silently dropped the last row and
+# column of *Z* in this case, to match Matlab's behavior. If this behavior is
+# still desired, simply drop the last row and column manually:

 x = np.arange(ncols)  # note *not* ncols + 1 as before
 y = np.arange(nrows)
diff --git a/examples/images_contours_and_fields/pcolormesh_levels.py b/examples/images_contours_and_fields/pcolormesh_levels.py
index 5821e4fbf4..d42643f155 100644
--- a/examples/images_contours_and_fields/pcolormesh_levels.py
+++ b/examples/images_contours_and_fields/pcolormesh_levels.py
@@ -52,8 +52,9 @@ ax.pcolormesh(X, Y, Z)
 # Often a user wants to pass *X* and *Y* with the same sizes as *Z* to
 # `.axes.Axes.pcolormesh`. This is also allowed if ``shading='auto'`` is
 # passed (default set by :rc:`pcolor.shading`). Pre Matplotlib 3.3,
-# ``shading='flat'`` would drop the last column and row of *Z*, but now gives
-# an error. If this is really what you want, then simply drop the last row and
+# ``shading='flat'`` would drop the last column and row of *Z*; while that
+# is still allowed for back compatibility purposes, a DeprecationWarning is
+# raised. If this is really what you want, then simply drop the last row and
 # column of Z manually:

 x = np.arange(10)  # len = 10
diff --git a/examples/lines_bars_and_markers/bar_label_demo.py b/examples/lines_bars_and_markers/bar_label_demo.py
index 18c2b0d1bb..3ed3f79018 100644
--- a/examples/lines_bars_and_markers/bar_label_demo.py
+++ b/examples/lines_bars_and_markers/bar_label_demo.py
@@ -21,25 +21,25 @@ import numpy as np
 # Define the data

 N = 5
-coffee_means = (20, 25, -10, 32, 10)
-tea_means = (30, 13, -14, 21, 17)
-coffee_std = (3, 2, 4, 1, 2)
-tea_std = (4, 3, 2, 3, 5)
+menMeans = (20, 35, 30, 35, -27)
+womenMeans = (25, 32, 34, 20, -25)
+menStd = (2, 3, 4, 1, 2)
+womenStd = (3, 5, 2, 3, 3)
 ind = np.arange(N)    # the x locations for the groups
-width = 0.25       # the width of the bars: can also be len(x) sequence
+width = 0.35       # the width of the bars: can also be len(x) sequence

 ###############################################################################
 # Stacked bar plot with error bars

 fig, ax = plt.subplots()

-p1 = ax.bar(ind, coffee_means, width, yerr=coffee_std, label='Coffee')
-p2 = ax.bar(ind, tea_means, width,
-            bottom=coffee_means, yerr=tea_std, label='Tea')
+p1 = ax.bar(ind, menMeans, width, yerr=menStd, label='Men')
+p2 = ax.bar(ind, womenMeans, width,
+            bottom=menMeans, yerr=womenStd, label='Women')

 ax.axhline(0, color='grey', linewidth=0.8)
 ax.set_ylabel('Scores')
-ax.set_title('Scores by group and their beverage choices')
+ax.set_title('Scores by group and gender')
 ax.set_xticks(ind, labels=['G1', 'G2', 'G3', 'G4', 'G5'])
 ax.legend()

@@ -94,30 +94,6 @@ ax.set_xlim(right=16)

 plt.show()

-###############################################################################
-# Bar labels using {}-style format string
-
-fruit_names = ['Coffee', 'Salted Caramel', 'Pistachio']
-fruit_counts = [4000, 2000, 7000]
-
-fig, ax = plt.subplots()
-bar_container = ax.bar(fruit_names, fruit_counts)
-ax.set(ylabel='pints sold', title='Gelato sales by flavor', ylim=(0, 8000))
-ax.bar_label(bar_container, fmt='{:,.0f}')
-
-###############################################################################
-# Bar labels using a callable
-
-animal_names = ['Lion', 'Gazelle', 'Cheetah']
-mph_speed = [50, 60, 75]
-
-fig, ax = plt.subplots()
-bar_container = ax.bar(animal_names, mph_speed)
-ax.set(ylabel='speed in MPH', title='Running speeds', ylim=(0, 80))
-ax.bar_label(
-    bar_container, fmt=lambda x: '{:.1f} km/h'.format(x * 1.61)
-)
-
 #############################################################################
 #
 # .. admonition:: References
diff --git a/examples/lines_bars_and_markers/bar_stacked.py b/examples/lines_bars_and_markers/bar_stacked.py
index a5042abb1a..90e59f9872 100644
--- a/examples/lines_bars_and_markers/bar_stacked.py
+++ b/examples/lines_bars_and_markers/bar_stacked.py
@@ -5,7 +5,7 @@ Stacked bar chart

 This is an example of creating a stacked bar plot with error bars
 using `~matplotlib.pyplot.bar`.  Note the parameters *yerr* used for
-error bars, and *bottom* to stack the coffee's bars on top of the tea's
+error bars, and *bottom* to stack the women's bars on top of the men's
 bars.
 """

@@ -13,20 +13,20 @@ import matplotlib.pyplot as plt


 labels = ['G1', 'G2', 'G3', 'G4', 'G5']
-tea_means = [20, 35, 30, 35, 27]
-coffee_means = [25, 32, 34, 20, 25]
-tea_std = [2, 3, 4, 1, 2]
-coffee_std = [3, 5, 5, 3, 3]
-width = 0.25       # the width of the bars: can also be len(x) sequence
+men_means = [20, 35, 30, 35, 27]
+women_means = [25, 32, 34, 20, 25]
+men_std = [2, 3, 4, 1, 2]
+women_std = [3, 5, 2, 3, 3]
+width = 0.35       # the width of the bars: can also be len(x) sequence

 fig, ax = plt.subplots()

-ax.bar(labels, tea_means, width, yerr=tea_std, label='Tea')
-ax.bar(labels, coffee_means, width, yerr=coffee_std, bottom=tea_means,
-       label='Coffee')
+ax.bar(labels, men_means, width, yerr=men_std, label='Men')
+ax.bar(labels, women_means, width, yerr=women_std, bottom=men_means,
+       label='Women')

 ax.set_ylabel('Scores')
-ax.set_title('Scores by group and beverage preferences')
+ax.set_title('Scores by group and gender')
 ax.legend()

 plt.show()
diff --git a/examples/lines_bars_and_markers/barchart.py b/examples/lines_bars_and_markers/barchart.py
index 1971a50130..8e2dc9f1ed 100644
--- a/examples/lines_bars_and_markers/barchart.py
+++ b/examples/lines_bars_and_markers/barchart.py
@@ -12,19 +12,19 @@ import numpy as np


 labels = ['G1', 'G2', 'G3', 'G4', 'G5']
-tea_means = [20, 34, 31, 35, 27]
-coffee_means = [25, 32, 34, 20, 25]
+men_means = [20, 34, 30, 35, 27]
+women_means = [25, 32, 34, 20, 25]

 x = np.arange(len(labels))  # the label locations
-width = 0.25  # the width of the bars
+width = 0.35  # the width of the bars

 fig, ax = plt.subplots()
-rects1 = ax.bar(x - width/2, tea_means, width, label='Tea')
-rects2 = ax.bar(x + width/2, coffee_means, width, label='Coffee')
+rects1 = ax.bar(x - width/2, men_means, width, label='Men')
+rects2 = ax.bar(x + width/2, women_means, width, label='Women')

 # Add some text for labels, title and custom x-axis tick labels, etc.
 ax.set_ylabel('Scores')
-ax.set_title('Scores by group and beverage preferences')
+ax.set_title('Scores by group and gender')
 ax.set_xticks(x, labels)
 ax.legend()

diff --git a/examples/pie_and_polar_charts/polar_error_caps.py b/examples/pie_and_polar_charts/polar_error_caps.py
deleted file mode 100644
index 009f697346..0000000000
--- a/examples/pie_and_polar_charts/polar_error_caps.py
+++ /dev/null
@@ -1,53 +0,0 @@
-"""
-=================================
-Error bar rendering on polar axis
-=================================
-
-Demo of error bar plot in polar coordinates.
-Theta error bars are curved lines ended with caps oriented towards the
-center.
-Radius error bars are straight lines oriented towards center with
-perpendicular caps.
-"""
-import numpy as np
-import matplotlib.pyplot as plt
-
-theta = np.arange(0, 2 * np.pi, np.pi / 4)
-r = theta / np.pi / 2 + 0.5
-
-fig = plt.figure(figsize=(10, 10))
-ax = fig.add_subplot(projection='polar')
-ax.errorbar(theta, r, xerr=0.25, yerr=0.1, capsize=7, fmt="o", c="seagreen")
-ax.set_title("Pretty polar error bars")
-plt.show()
-
-#############################################################################
-# Please acknowledge that large theta error bars will be overlapping.
-# This may reduce readability of the output plot. See example figure below:
-
-fig = plt.figure(figsize=(10, 10))
-ax = fig.add_subplot(projection='polar')
-ax.errorbar(theta, r, xerr=5.25, yerr=0.1, capsize=7, fmt="o", c="darkred")
-ax.set_title("Overlapping theta error bars")
-plt.show()
-
-#############################################################################
-# On the other hand, large radius error bars will never overlap, they just
-# lead to unwanted scale in the data, reducing the displayed range.
-
-fig = plt.figure(figsize=(10, 10))
-ax = fig.add_subplot(projection='polar')
-ax.errorbar(theta, r, xerr=0.25, yerr=10.1, capsize=7, fmt="o", c="orangered")
-ax.set_title("Large radius error bars")
-plt.show()
-
-
-#############################################################################
-#
-# .. admonition:: References
-#
-#    The use of the following functions, methods, classes and modules is shown
-#    in this example:
-#
-#    - `matplotlib.axes.Axes.errorbar` / `matplotlib.pyplot.errorbar`
-#    - `matplotlib.projections.polar`
diff --git a/examples/style_sheets/style_sheets_reference.py b/examples/style_sheets/style_sheets_reference.py
index c2879e7cd9..657c73aadb 100644
--- a/examples/style_sheets/style_sheets_reference.py
+++ b/examples/style_sheets/style_sheets_reference.py
@@ -12,7 +12,6 @@ line plot and histogram,
 import numpy as np
 import matplotlib.pyplot as plt
 import matplotlib.colors as mcolors
-from matplotlib.patches import Rectangle

 # Fixing random state for reproducibility
 np.random.seed(19680801)
@@ -66,11 +65,8 @@ def plot_colored_circles(ax, prng, nb_samples=15):
     for sty_dict, j in zip(plt.rcParams['axes.prop_cycle'], range(nb_samples)):
         ax.add_patch(plt.Circle(prng.normal(scale=3, size=2),
                                 radius=1.0, color=sty_dict['color']))
-    ax.grid(visible=True)
-
-    # Add title for enabling grid
-    plt.title('ax.grid(True)', family='monospace', fontsize='small')
-
+    # Force the limits to be the same across the styles (because different
+    # styles may have different numbers of available colors).
     ax.set_xlim([-4, 8])
     ax.set_ylim([-5, 6])
     ax.set_aspect('equal', adjustable='box')  # to plot circles as circles
@@ -95,7 +91,6 @@ def plot_histograms(ax, prng, nb_samples=10000):
         values = prng.beta(a, b, size=nb_samples)
         ax.hist(values, histtype="stepfilled", bins=30,
                 alpha=0.8, density=True)
-
     # Add a small annotation.
     ax.annotate('Annotation', xy=(0.25, 4.25),
                 xytext=(0.9, 0.9), textcoords=ax.transAxes,
@@ -115,7 +110,7 @@ def plot_figure(style_label=""):
     prng = np.random.RandomState(96917002)

     fig, axs = plt.subplots(ncols=6, nrows=1, num=style_label,
-                            figsize=(14.8, 2.8), constrained_layout=True)
+                            figsize=(14.8, 2.7), constrained_layout=True)

     # make a suptitle, in the same style for all subfigures,
     # except those with dark backgrounds, which get a lighter color:
@@ -131,15 +126,10 @@ def plot_figure(style_label=""):
     plot_scatter(axs[0], prng)
     plot_image_and_patch(axs[1], prng)
     plot_bar_graphs(axs[2], prng)
-    plot_colored_lines(axs[3])
-    plot_histograms(axs[4], prng)
-    plot_colored_circles(axs[5], prng)
-
-    # add divider
-    rec = Rectangle((1 + 0.025, -2), 0.05, 16,
-                    clip_on=False, color='gray')
+    plot_colored_circles(axs[3], prng)
+    plot_colored_lines(axs[4])
+    plot_histograms(axs[5], prng)

-    axs[4].add_artist(rec)

 if __name__ == "__main__":

diff --git a/examples/units/bar_unit_demo.py b/examples/units/bar_unit_demo.py
index b64784cc5c..7b24a45315 100644
--- a/examples/units/bar_unit_demo.py
+++ b/examples/units/bar_unit_demo.py
@@ -18,21 +18,21 @@ import matplotlib.pyplot as plt


 N = 5
-tea_means = [15*cm, 10*cm, 8*cm, 12*cm, 5*cm]
-tea_std = [2*cm, 1*cm, 1*cm, 4*cm, 2*cm]
+men_means = [150*cm, 160*cm, 146*cm, 172*cm, 155*cm]
+men_std = [20*cm, 30*cm, 32*cm, 10*cm, 20*cm]

 fig, ax = plt.subplots()

 ind = np.arange(N)    # the x locations for the groups
 width = 0.35         # the width of the bars
-ax.bar(ind, tea_means, width, bottom=0*cm, yerr=tea_std, label='Tea')
+ax.bar(ind, men_means, width, bottom=0*cm, yerr=men_std, label='Men')

-coffee_means = (14*cm, 19*cm, 7*cm, 5*cm, 10*cm)
-coffee_std = (3*cm, 5*cm, 2*cm, 1*cm, 2*cm)
-ax.bar(ind + width, coffee_means, width, bottom=0*cm, yerr=coffee_std,
-       label='Coffee')
+women_means = (145*cm, 149*cm, 172*cm, 165*cm, 200*cm)
+women_std = (30*cm, 25*cm, 20*cm, 31*cm, 22*cm)
+ax.bar(ind + width, women_means, width, bottom=0*cm, yerr=women_std,
+       label='Women')

-ax.set_title('Cup height by group and beverage choice')
+ax.set_title('Scores by group and gender')
 ax.set_xticks(ind + width / 2, labels=['G1', 'G2', 'G3', 'G4', 'G5'])

 ax.legend()
diff --git a/lib/matplotlib/_mathtext.py b/lib/matplotlib/_mathtext.py
index 5cc2dc052c..44bb5a9e8f 100644
--- a/lib/matplotlib/_mathtext.py
+++ b/lib/matplotlib/_mathtext.py
@@ -475,14 +475,6 @@ class UnicodeFonts(TruetypeFonts):
     symbol can not be found in the font.
     """

-    # Some glyphs are not present in the `cmr10` font, and must be brought in
-    # from `cmsy10`. Map the Unicode indices of those glyphs to the indices at
-    # which they are found in `cmsy10`.
-    _cmr10_substitutions = {
-        0x00D7: 0x00A3,  # Multiplication sign.
-        0x2212: 0x00A1,  # Minus sign.
-    }
-
     def __init__(self, *args, **kwargs):
         # This must come first so the backend's owner is set correctly
         fallback_rc = mpl.rcParams['mathtext.fallback']
@@ -549,11 +541,11 @@ class UnicodeFonts(TruetypeFonts):
             found_symbol = False
             font = self._get_font(new_fontname)
             if font is not None:
-                if (uniindex in self._cmr10_substitutions
-                        and font.family_name == "cmr10"):
+                if font.family_name == "cmr10" and uniindex == 0x2212:
+                    # minus sign exists in cmsy10 (not cmr10)
                     font = get_font(
                         cbook._get_data_path("fonts/ttf/cmsy10.ttf"))
-                    uniindex = self._cmr10_substitutions[uniindex]
+                    uniindex = 0xa1
                 glyphindex = font.get_char_index(uniindex)
                 if glyphindex != 0:
                     found_symbol = True
diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py
index fdac0f3560..e5e34c9125 100644
--- a/lib/matplotlib/axes/_axes.py
+++ b/lib/matplotlib/axes/_axes.py
@@ -2634,11 +2634,8 @@ class Axes(_AxesBase):
             A list of label texts, that should be displayed. If not given, the
             label texts will be the data values formatted with *fmt*.

-        fmt : str or callable, default: '%g'
-            An unnamed %-style or {}-style format string for the label or a
-            function to call with the value as the first argument.
-            When *fmt* is a string and can be interpreted in both formats,
-            %-style takes precedence over {}-style.
+        fmt : str, default: '%g'
+            A format string for the label.

         label_type : {'edge', 'center'}, default: 'edge'
             The label type. Possible values:
@@ -2727,13 +2724,7 @@ class Axes(_AxesBase):
                 value = extrema

             if label_type == "center":
-                xy = (0.5, 0.5)
-                kwargs["xycoords"] = (
-                    lambda r, b=bar:
-                        mtransforms.Bbox.intersection(
-                            b.get_window_extent(r), b.get_clip_box()
-                        )
-                )
+                xy = xc, yc
             else:  # edge
                 if orientation == "vertical":
                     xy = xc, endpt
@@ -2766,14 +2757,7 @@ class Axes(_AxesBase):
             if np.isnan(dat):
                 lbl = ''

-            if lbl is None:
-                if isinstance(fmt, str):
-                    lbl = cbook._auto_format_str(fmt, value)
-                elif callable(fmt):
-                    lbl = fmt(value)
-                else:
-                    raise TypeError("fmt must be a str or callable")
-            annotation = self.annotate(lbl,
+            annotation = self.annotate(fmt % value if lbl is None else lbl,
                                        xy, xytext, textcoords="offset points",
                                        ha=ha, va=va, **kwargs)
             annotations.append(annotation)
@@ -3573,11 +3557,10 @@ class Axes(_AxesBase):
         eb_cap_style['color'] = ecolor

         barcols = []
-        caplines = {'x': [], 'y': []}
+        caplines = []

         # Vectorized fancy-indexer.
-        def apply_mask(arrays, mask):
-            return [array[mask] for array in arrays]
+        def apply_mask(arrays, mask): return [array[mask] for array in arrays]

         # dep: dependent dataset, indep: independent dataset
         for (dep_axis, dep, err, lolims, uplims, indep, lines_func,
@@ -3608,12 +3591,9 @@ class Axes(_AxesBase):
             #     return dep - elow * ~lolims, dep + ehigh * ~uplims
             # except that broadcast_to would strip units.
             low, high = dep + np.row_stack([-(1 - lolims), 1 - uplims]) * err
+
             barcols.append(lines_func(
                 *apply_mask([indep, low, high], everymask), **eb_lines_style))
-            if self.name == "polar" and dep_axis == "x":
-                for b in barcols:
-                    for p in b.get_paths():
-                        p._interpolation_steps = 2
             # Normal errorbars for points without upper/lower limits.
             nolims = ~(lolims | uplims)
             if nolims.any() and capsize > 0:
@@ -3626,7 +3606,7 @@ class Axes(_AxesBase):
                     line = mlines.Line2D(indep_masked, indep_masked,
                                          marker=marker, **eb_cap_style)
                     line.set(**{f"{dep_axis}data": lh_masked})
-                    caplines[dep_axis].append(line)
+                    caplines.append(line)
             for idx, (lims, hl) in enumerate([(lolims, high), (uplims, low)]):
                 if not lims.any():
                     continue
@@ -3640,29 +3620,15 @@ class Axes(_AxesBase):
                 line = mlines.Line2D(x_masked, y_masked,
                                      marker=hlmarker, **eb_cap_style)
                 line.set(**{f"{dep_axis}data": hl_masked})
-                caplines[dep_axis].append(line)
+                caplines.append(line)
                 if capsize > 0:
-                    caplines[dep_axis].append(mlines.Line2D(
+                    caplines.append(mlines.Line2D(
                         x_masked, y_masked, marker=marker, **eb_cap_style))
-        if self.name == 'polar':
-            for axis in caplines:
-                for l in caplines[axis]:
-                    # Rotate caps to be perpendicular to the error bars
-                    for theta, r in zip(l.get_xdata(), l.get_ydata()):
-                        rotation = mtransforms.Affine2D().rotate(theta)
-                        if axis == 'y':
-                            rotation.rotate(-np.pi / 2)
-                        ms = mmarkers.MarkerStyle(marker=marker,
-                                                  transform=rotation)
-                        self.add_line(mlines.Line2D([theta], [r], marker=ms,
-                                                    **eb_cap_style))
-        else:
-            for axis in caplines:
-                for l in caplines[axis]:
-                    self.add_line(l)
+
+        for l in caplines:
+            self.add_line(l)

         self._request_autoscale_view()
-        caplines = caplines['x'] + caplines['y']
         errorbar_container = ErrorbarContainer(
             (data_line, tuple(caplines), tuple(barcols)),
             has_xerr=(xerr is not None), has_yerr=(yerr is not None),
@@ -6225,7 +6191,7 @@ default: :rc:`scatter.edgecolors`

            - It supports only flat shading (no outlines)
            - It lacks support for log scaling of the axes.
-           - It does not have a pyplot wrapper.
+           - It does not have a have a pyplot wrapper.

         Parameters
         ----------
diff --git a/lib/matplotlib/axes/_secondary_axes.py b/lib/matplotlib/axes/_secondary_axes.py
index 5a65fee154..55aeafa391 100644
--- a/lib/matplotlib/axes/_secondary_axes.py
+++ b/lib/matplotlib/axes/_secondary_axes.py
@@ -1,5 +1,3 @@
-import numbers
-
 import numpy as np

 from matplotlib import _api, _docstring
@@ -19,7 +17,7 @@ class SecondaryAxis(_AxesBase):
         While there is no need for this to be private, it should really be
         called by those higher level functions.
         """
-        _api.check_in_list(["x", "y"], orientation=orientation)
+
         self._functions = functions
         self._parent = parent
         self._orientation = orientation
@@ -30,7 +28,7 @@ class SecondaryAxis(_AxesBase):
             self._axis = self.xaxis
             self._locstrings = ['top', 'bottom']
             self._otherstrings = ['left', 'right']
-        else:  # 'y'
+        elif self._orientation == 'y':
             super().__init__(self._parent.figure, [0, 1., 0.0001, 1], **kwargs)
             self._axis = self.yaxis
             self._locstrings = ['right', 'left']
@@ -42,7 +40,11 @@ class SecondaryAxis(_AxesBase):
         self.set_functions(functions)

         # styling:
-        otheraxis = self.yaxis if self._orientation == 'x' else self.xaxis
+        if self._orientation == 'x':
+            otheraxis = self.yaxis
+        else:
+            otheraxis = self.xaxis
+
         otheraxis.set_major_locator(mticker.NullLocator())
         otheraxis.set_ticks_position('none')

@@ -61,8 +63,8 @@ class SecondaryAxis(_AxesBase):

         Parameters
         ----------
-        align : {'top', 'bottom', 'left', 'right'}
-            Either 'top' or 'bottom' for orientation='x' or
+        align : str
+            either 'top' or 'bottom' for orientation='x' or
             'left' or 'right' for orientation='y' axis.
         """
         _api.check_in_list(self._locstrings, align=align)
@@ -90,22 +92,23 @@ class SecondaryAxis(_AxesBase):

         # This puts the rectangle into figure-relative coordinates.
         if isinstance(location, str):
-            _api.check_in_list(self._locstrings, location=location)
-            self._pos = 1. if location in ('top', 'right') else 0.
-        elif isinstance(location, numbers.Real):
-            self._pos = location
+            if location in ['top', 'right']:
+                self._pos = 1.
+            elif location in ['bottom', 'left']:
+                self._pos = 0.
+            else:
+                raise ValueError(
+                    f"location must be {self._locstrings[0]!r}, "
+                    f"{self._locstrings[1]!r}, or a float, not {location!r}")
         else:
-            raise ValueError(
-                f"location must be {self._locstrings[0]!r}, "
-                f"{self._locstrings[1]!r}, or a float, not {location!r}")
-
+            self._pos = location
         self._loc = location

         if self._orientation == 'x':
             # An x-secondary axes is like an inset axes from x = 0 to x = 1 and
             # from y = pos to y = pos + eps, in the parent's transAxes coords.
             bounds = [0, self._pos, 1., 1e-10]
-        else:  # 'y'
+        else:
             bounds = [self._pos, 0, 1e-10, 1]

         # this locator lets the axes move in the parent axes coordinates.
@@ -158,7 +161,9 @@ class SecondaryAxis(_AxesBase):
                              'and the second being the inverse')
         self._set_scale()

-    def draw(self, renderer):
+    # Should be changed to draw(self, renderer) once the deprecation of
+    # renderer=None and of inframe expires.
+    def draw(self, *args, **kwargs):
         """
         Draw the secondary axes.

@@ -170,7 +175,7 @@ class SecondaryAxis(_AxesBase):
         self._set_lims()
         # this sets the scale in case the parent has set its scale.
         self._set_scale()
-        super().draw(renderer)
+        super().draw(*args, **kwargs)

     def _set_scale(self):
         """
@@ -180,18 +185,22 @@ class SecondaryAxis(_AxesBase):
         if self._orientation == 'x':
             pscale = self._parent.xaxis.get_scale()
             set_scale = self.set_xscale
-        else:  # 'y'
+        if self._orientation == 'y':
             pscale = self._parent.yaxis.get_scale()
             set_scale = self.set_yscale
         if pscale == self._parentscale:
             return

+        if pscale == 'log':
+            defscale = 'functionlog'
+        else:
+            defscale = 'function'
+
         if self._ticks_set:
             ticks = self._axis.get_ticklocs()

         # need to invert the roles here for the ticks to line up.
-        set_scale('functionlog' if pscale == 'log' else 'function',
-                  functions=self._functions[::-1])
+        set_scale(defscale, functions=self._functions[::-1])

         # OK, set_scale sets the locators, but if we've called
         # axsecond.set_ticks, we want to keep those.
@@ -209,7 +218,7 @@ class SecondaryAxis(_AxesBase):
         if self._orientation == 'x':
             lims = self._parent.get_xlim()
             set_lim = self.set_xlim
-        else:  # 'y'
+        if self._orientation == 'y':
             lims = self._parent.get_ylim()
             set_lim = self.set_ylim
         order = lims[0] < lims[1]
@@ -240,7 +249,7 @@ class SecondaryAxis(_AxesBase):
             self.spines.bottom.set_color(color)
             self.spines.top.set_color(color)
             self.xaxis.label.set_color(color)
-        else:  # 'y'
+        else:
             self.tick_params(axis='y', colors=color)
             self.spines.left.set_color(color)
             self.spines.right.set_color(color)
diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py
index 2f5dd6dcc0..66279bf1bc 100644
--- a/lib/matplotlib/axis.py
+++ b/lib/matplotlib/axis.py
@@ -871,11 +871,8 @@ class Axis(martist.Artist):
         - units
         - registered callbacks
         """
-        self.label._reset_visual_defaults()
-        self.offsetText._reset_visual_defaults()
-        self.labelpad = mpl.rcParams['axes.labelpad']

-        self._init()
+        self.label.set_text('')  # self.set_label_text would change isDefault_

         self._set_scale('linear')

@@ -2191,13 +2188,6 @@ class XAxis(Axis):

     def __init__(self, *args, **kwargs):
         super().__init__(*args, **kwargs)
-        self._init()
-
-    def _init(self):
-        """
-        Initialize the label and offsetText instance values and
-        `label_position` / `offset_text_position`.
-        """
         # x in axes coords, y in display coords (to be updated at draw time by
         # _update_label_positions and _update_offset_text_position).
         self.label.set(
@@ -2207,7 +2197,6 @@ class XAxis(Axis):
                 self.axes.transAxes, mtransforms.IdentityTransform()),
         )
         self.label_position = 'bottom'
-
         self.offsetText.set(
             x=1, y=0,
             verticalalignment='top', horizontalalignment='right',
@@ -2450,13 +2439,6 @@ class YAxis(Axis):

     def __init__(self, *args, **kwargs):
         super().__init__(*args, **kwargs)
-        self._init()
-
-    def _init(self):
-        """
-        Initialize the label and offsetText instance values and
-        `label_position` / `offset_text_position`.
-        """
         # x in display coords, y in axes coords (to be updated at draw time by
         # _update_label_positions and _update_offset_text_position).
         self.label.set(
diff --git a/lib/matplotlib/backend_bases.py b/lib/matplotlib/backend_bases.py
index db5f0f4309..bb17950b03 100644
--- a/lib/matplotlib/backend_bases.py
+++ b/lib/matplotlib/backend_bases.py
@@ -158,7 +158,7 @@ class RendererBase:

     * `draw_path`
     * `draw_image`
-    * `draw_gouraud_triangles`
+    * `draw_gouraud_triangle`

     The following methods *should* be implemented in the backend for
     optimization reasons:
@@ -286,7 +286,6 @@ class RendererBase:
             gc, master_transform, paths, [], offsets, offsetTrans, facecolors,
             edgecolors, linewidths, [], [antialiased], [None], 'screen')

-    @_api.deprecated("3.7", alternative="draw_gouraud_triangles")
     def draw_gouraud_triangle(self, gc, points, colors, transform):
         """
         Draw a Gouraud-shaded triangle.
@@ -318,7 +317,9 @@ class RendererBase:
         transform : `matplotlib.transforms.Transform`
             An affine transform to apply to the points.
         """
-        raise NotImplementedError
+        transform = transform.frozen()
+        for tri, col in zip(triangles_array, colors_array):
+            self.draw_gouraud_triangle(gc, tri, col, transform)

     def _iter_collection_raw_paths(self, master_transform, paths,
                                    all_transforms):
@@ -524,8 +525,6 @@ class RendererBase:
             The font properties.
         angle : float
             The rotation angle in degrees anti-clockwise.
-        ismath : bool or "TeX"
-            If True, use mathtext parser. If "TeX", use *usetex* mode.
         mtext : `matplotlib.text.Text`
             The original text object to be rendered.

diff --git a/lib/matplotlib/backends/backend_svg.py b/lib/matplotlib/backends/backend_svg.py
index 9d714739c0..738fe44c6f 100644
--- a/lib/matplotlib/backends/backend_svg.py
+++ b/lib/matplotlib/backends/backend_svg.py
@@ -801,9 +801,7 @@ class RendererSVG(RendererBase):

     def draw_gouraud_triangle(self, gc, points, colors, trans):
         # docstring inherited
-        self._draw_gouraud_triangle(gc, points, colors, trans)

-    def _draw_gouraud_triangle(self, gc, points, colors, trans):
         # This uses a method described here:
         #
         #   http://www.svgopen.org/2005/papers/Converting3DFaceToSVG/index.html
@@ -938,7 +936,7 @@ class RendererSVG(RendererBase):
         self.writer.start('g', **self._get_clip_attrs(gc))
         transform = transform.frozen()
         for tri, col in zip(triangles_array, colors_array):
-            self._draw_gouraud_triangle(gc, tri, col, transform)
+            self.draw_gouraud_triangle(gc, tri, col, transform)
         self.writer.end('g')

     def option_scale_image(self):
@@ -1154,31 +1152,47 @@ class RendererSVG(RendererBase):
             if weight != 400:
                 font_parts.append(f'{weight}')

-            def _normalize_sans(name):
-                return 'sans-serif' if name in ['sans', 'sans serif'] else name
-
-            def _expand_family_entry(fn):
-                fn = _normalize_sans(fn)
-                # prepend generic font families with all configured font names
+            def _format_font_name(fn):
+                normalize_names = {
+                    'sans': 'sans-serif',
+                    'sans serif': 'sans-serif'
+                }
+                # A generic font family.  We need to do two things:
+                #  1. list all of the configured fonts with quoted names
+                #  2. append the generic name unquoted
                 if fn in fm.font_family_aliases:
+                    # fix spelling of sans-serif
+                    # we accept 3 ways CSS only supports 1
+                    fn = normalize_names.get(fn, fn)
                     # get all of the font names and fix spelling of sans-serif
-                    # (we accept 3 ways CSS only supports 1)
-                    for name in fm.FontManager._expand_aliases(fn):
-                        yield _normalize_sans(name)
-                # whether a generic name or a family name, it must appear at
-                # least once
-                yield fn
-
-            def _get_all_quoted_names(prop):
-                # only quote specific names, not generic names
-                return [name if name in fm.font_family_aliases else repr(name)
-                        for entry in prop.get_family()
-                        for name in _expand_family_entry(entry)]
+                    # if it comes back
+                    aliases = [
+                        normalize_names.get(_, _) for _ in
+                        fm.FontManager._expand_aliases(fn)
+                    ]
+                    # make sure the generic name appears at least once
+                    # duplicate is OK, next layer will deduplicate
+                    aliases.append(fn)
+
+                    for a in aliases:
+                        # generic font families must not be quoted
+                        if a in fm.font_family_aliases:
+                            yield a
+                        # specific font families must be quoted
+                        else:
+                            yield repr(a)
+                # specific font families must be quoted
+                else:
+                    yield repr(fn)
+
+            def _get_all_names(prop):
+                for f in prop.get_family():
+                    yield from _format_font_name(f)

             font_parts.extend([
                 f'{_short_float_fmt(prop.get_size())}px',
-                # ensure expansion, quoting, and dedupe of font names
-                ", ".join(dict.fromkeys(_get_all_quoted_names(prop)))
+                # ensure quoting and expansion of font names
+                ", ".join(dict.fromkeys(_get_all_names(prop)))
             ])
             style['font'] = ' '.join(font_parts)
             if prop.get_stretch() != 'normal':
diff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py
index 34c6ddb861..e497e8e8e1 100644
--- a/lib/matplotlib/cbook/__init__.py
+++ b/lib/matplotlib/cbook/__init__.py
@@ -1746,7 +1746,7 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):
         raise RuntimeError("matplotlib does not "
                            "support generators as input")
     else:
-        return next(val for val in obj if safe_isfinite(val))
+        return next((val for val in obj if safe_isfinite(val)), np.nan)


 def sanitize_sequence(data):
@@ -2336,30 +2336,3 @@ def _unpack_to_numpy(x):
         if isinstance(xtmp, np.ndarray):
             return xtmp
     return x
-
-
-def _auto_format_str(fmt, value):
-    """
-    Apply *value* to the format string *fmt*.
-
-    This works both with unnamed %-style formatting and
-    unnamed {}-style formatting. %-style formatting has priority.
-    If *fmt* is %-style formattable that will be used. Otherwise,
-    {}-formatting is applied. Strings without formatting placeholders
-    are passed through as is.
-
-    Examples
-    --------
-    >>> _auto_format_str('%.2f m', 0.2)
-    '0.20 m'
-    >>> _auto_format_str('{} m', 0.2)
-    '0.2 m'
-    >>> _auto_format_str('const', 0.2)
-    'const'
-    >>> _auto_format_str('%d or {}', 0.2)
-    '0 or {}'
-    """
-    try:
-        return fmt % (value,)
-    except (TypeError, ValueError):
-        return fmt.format(value)
diff --git a/lib/matplotlib/collections.py b/lib/matplotlib/collections.py
index 8aba85a67e..cef043e79d 100644
--- a/lib/matplotlib/collections.py
+++ b/lib/matplotlib/collections.py
@@ -2097,7 +2097,7 @@ class QuadMesh(Collection):
         """
         Convert a given mesh into a sequence of triangles, each point
         with its own color.  The result can be used to construct a call to
-        `~.RendererBase.draw_gouraud_triangles`.
+        `~.RendererBase.draw_gouraud_triangle`.
         """
         if isinstance(coordinates, np.ma.MaskedArray):
             p = coordinates.data
diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py
index 996949098f..2983e3fa51 100644
--- a/lib/matplotlib/colorbar.py
+++ b/lib/matplotlib/colorbar.py
@@ -923,7 +923,7 @@ class Colorbar:
             of locations.

         update_ticks : bool, default: True
-            This keyword argument is ignored and will be removed.
+            This keyword argument is ignored and will be be removed.
             Deprecated

          minor : bool
diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py
index d6a46780c0..6aab5222b7 100644
--- a/lib/matplotlib/contour.py
+++ b/lib/matplotlib/contour.py
@@ -11,13 +11,13 @@ from numpy import ma
 import matplotlib as mpl
 from matplotlib import _api, _docstring
 from matplotlib.backend_bases import MouseButton
-from matplotlib.text import Text
 import matplotlib.path as mpath
 import matplotlib.ticker as ticker
 import matplotlib.cm as cm
 import matplotlib.colors as mcolors
 import matplotlib.collections as mcoll
 import matplotlib.font_manager as font_manager
+import matplotlib.text as text
 import matplotlib.cbook as cbook
 import matplotlib.patches as mpatches
 import matplotlib.transforms as mtransforms
@@ -31,8 +31,7 @@ import matplotlib.transforms as mtransforms
 # per level.


-@_api.deprecated("3.7", alternative="Text.set_transform_rotates_text")
-class ClabelText(Text):
+class ClabelText(text.Text):
     """
     Unlike the ordinary text, the get_rotation returns an updated
     angle in the pixel coordinate assuming that the input rotation is
@@ -151,8 +150,10 @@ class ContourLabeler:
             or minus 90 degrees from level.

         use_clabeltext : bool, default: False
-            If ``True``, use `.Text.set_transform_rotates_text` to ensure that
-            label rotation is updated whenever the axes aspect changes.
+            If ``True``, `.ClabelText` class (instead of `.Text`) is used to
+            create labels. `ClabelText` recalculates rotation angles
+            of texts during the drawing time, therefore this can be used if
+            aspect of the axes changes.

         zorder : float or None, default: ``(2 + contour.get_zorder())``
             zorder of the contour labels.
@@ -252,10 +253,11 @@ class ContourLabeler:
         fig = self.axes.figure
         renderer = fig._get_renderer()
         return (
-            Text(0, 0, self.get_text(self.labelLevelList[nth], self.labelFmt),
-                 figure=fig,
-                 size=self.labelFontSizeList[nth],
-                 fontproperties=self.labelFontProps)
+            text.Text(0, 0,
+                      self.get_text(self.labelLevelList[nth], self.labelFmt),
+                      figure=fig,
+                      size=self.labelFontSizeList[nth],
+                      fontproperties=self.labelFontProps)
             .get_window_extent(renderer).width)

     @_api.deprecated("3.5")
@@ -265,13 +267,12 @@ class ContourLabeler:
             lev = self.get_text(lev, fmt)
         fig = self.axes.figure
         renderer = fig._get_renderer()
-        width = (Text(0, 0, lev, figure=fig,
-                      size=fsize, fontproperties=self.labelFontProps)
+        width = (text.Text(0, 0, lev, figure=fig,
+                           size=fsize, fontproperties=self.labelFontProps)
                  .get_window_extent(renderer).width)
         width *= 72 / fig.dpi
         return width

-    @_api.deprecated("3.7", alternative="Artist.set")
     def set_label_props(self, label, text, color):
         """Set the label properties - color, fontsize, text."""
         label.set_text(text)
@@ -416,32 +417,57 @@ class ContourLabeler:

         return rotation, nlc

-    def add_label(self, x, y, rotation, lev, cvalue):
-        """Add contour label without `.Text.set_transform_rotates_text`."""
-        data_x, data_y = self.axes.transData.inverted().transform((x, y))
-        t = Text(
-            data_x, data_y,
-            text=self.get_text(lev, self.labelFmt),
-            rotation=rotation,
-            horizontalalignment='center', verticalalignment='center',
-            zorder=self._clabel_zorder,
-            color=self.labelMappable.to_rgba(cvalue, alpha=self.alpha),
-            fontproperties=self.labelFontProps,
-            clip_box=self.axes.bbox)
+    def _get_label_text(self, x, y, rotation):
+        dx, dy = self.axes.transData.inverted().transform((x, y))
+        t = text.Text(dx, dy, rotation=rotation,
+                      horizontalalignment='center',
+                      verticalalignment='center', zorder=self._clabel_zorder)
+        return t
+
+    def _get_label_clabeltext(self, x, y, rotation):
+        # x, y, rotation is given in pixel coordinate. Convert them to
+        # the data coordinate and create a label using ClabelText
+        # class. This way, the rotation of the clabel is along the
+        # contour line always.
+        transDataInv = self.axes.transData.inverted()
+        dx, dy = transDataInv.transform((x, y))
+        drotation = transDataInv.transform_angles(np.array([rotation]),
+                                                  np.array([[x, y]]))
+        t = ClabelText(dx, dy, rotation=drotation[0],
+                       horizontalalignment='center',
+                       verticalalignment='center', zorder=self._clabel_zorder)
+
+        return t
+
+    def _add_label(self, t, x, y, lev, cvalue):
+        color = self.labelMappable.to_rgba(cvalue, alpha=self.alpha)
+
+        _text = self.get_text(lev, self.labelFmt)
+        self.set_label_props(t, _text, color)
         self.labelTexts.append(t)
         self.labelCValues.append(cvalue)
         self.labelXYs.append((x, y))
+
         # Add label to plot here - useful for manual mode label selection
         self.axes.add_artist(t)

+    def add_label(self, x, y, rotation, lev, cvalue):
+        """
+        Add contour label using :class:`~matplotlib.text.Text` class.
+        """
+        t = self._get_label_text(x, y, rotation)
+        self._add_label(t, x, y, lev, cvalue)
+
     def add_label_clabeltext(self, x, y, rotation, lev, cvalue):
-        """Add contour label with `.Text.set_transform_rotates_text`."""
-        self.add_label(x, y, rotation, lev, cvalue)
-        # Grab the last added text, and reconfigure its rotation.
-        t = self.labelTexts[-1]
-        data_rotation, = self.axes.transData.inverted().transform_angles(
-            [rotation], [[x, y]])
-        t.set(rotation=data_rotation, transform_rotates_text=True)
+        """
+        Add contour label using :class:`ClabelText` class.
+        """
+        # x, y, rotation is given in pixel coordinate. Convert them to
+        # the data coordinate and create a label using ClabelText
+        # class. This way, the rotation of the clabel is along the
+        # contour line always.
+        t = self._get_label_clabeltext(x, y, rotation)
+        self._add_label(t, x, y, lev, cvalue)

     def add_label_near(self, x, y, inline=True, inline_spacing=5,
                        transform=None):
@@ -559,10 +585,6 @@ class ContourLabeler:
             if inline:
                 paths[:] = additions

-    def remove(self):
-        for text in self.labelTexts:
-            text.remove()
-

 def _is_closed_polygon(X):
     """
@@ -1367,11 +1389,6 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):

         return (conmin, segmin, imin, xmin, ymin, d2min)

-    def remove(self):
-        super().remove()
-        for coll in self.collections:
-            coll.remove()
-

 @_docstring.dedent_interpd
 class QuadContourSet(ContourSet):
@@ -1583,7 +1600,7 @@ levels : int or array-like, optional

     If an int *n*, use `~matplotlib.ticker.MaxNLocator`, which tries
     to automatically choose no more than *n+1* "nice" contour levels
-    between minimum and maximum numeric values of *Z*.
+    between *vmin* and *vmax*.

     If array-like, draw contour lines at the specified levels.
     The values must be in increasing order.
diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py
index 97803c4007..672ea2c3b0 100644
--- a/lib/matplotlib/dates.py
+++ b/lib/matplotlib/dates.py
@@ -187,9 +187,10 @@ import matplotlib as mpl
 from matplotlib import _api, cbook, ticker, units

 __all__ = ('datestr2num', 'date2num', 'num2date', 'num2timedelta', 'drange',
-           'set_epoch', 'get_epoch', 'DateFormatter', 'ConciseDateFormatter',
-           'AutoDateFormatter', 'DateLocator', 'RRuleLocator',
-           'AutoDateLocator', 'YearLocator', 'MonthLocator', 'WeekdayLocator',
+           'epoch2num', 'num2epoch', 'set_epoch', 'get_epoch', 'DateFormatter',
+           'ConciseDateFormatter', 'AutoDateFormatter',
+           'DateLocator', 'RRuleLocator', 'AutoDateLocator', 'YearLocator',
+           'MonthLocator', 'WeekdayLocator',
            'DayLocator', 'HourLocator', 'MinuteLocator',
            'SecondLocator', 'MicrosecondLocator',
            'rrule', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU',
@@ -1736,6 +1737,16 @@ class MicrosecondLocator(DateLocator):
         self._wrapped_locator.set_axis(axis)
         return super().set_axis(axis)

+    @_api.deprecated("3.5", alternative="`.Axis.set_view_interval`")
+    def set_view_interval(self, vmin, vmax):
+        self._wrapped_locator.set_view_interval(vmin, vmax)
+        return super().set_view_interval(vmin, vmax)
+
+    @_api.deprecated("3.5", alternative="`.Axis.set_data_interval`")
+    def set_data_interval(self, vmin, vmax):
+        self._wrapped_locator.set_data_interval(vmin, vmax)
+        return super().set_data_interval(vmin, vmax)
+
     def __call__(self):
         # if no data have been set, this will tank with a ValueError
         try:
@@ -1767,6 +1778,52 @@ class MicrosecondLocator(DateLocator):
         return self._interval


+@_api.deprecated(
+    "3.5",
+    alternative="``[date2num(datetime.utcfromtimestamp(t)) for t in e]`` or "
+                "numpy.datetime64 types")
+def epoch2num(e):
+    """
+    Convert UNIX time to days since Matplotlib epoch.
+
+    Parameters
+    ----------
+    e : list of floats
+        Time in seconds since 1970-01-01.
+
+    Returns
+    -------
+    `numpy.array`
+        Time in days since Matplotlib epoch (see `~.dates.get_epoch()`).
+    """
+
+    dt = (np.datetime64('1970-01-01T00:00:00', 's') -
+          np.datetime64(get_epoch(), 's')).astype(float)
+
+    return (dt + np.asarray(e)) / SEC_PER_DAY
+
+
+@_api.deprecated("3.5", alternative="`num2date(e).timestamp()<.num2date>`")
+def num2epoch(d):
+    """
+    Convert days since Matplotlib epoch to UNIX time.
+
+    Parameters
+    ----------
+    d : list of floats
+        Time in days since Matplotlib epoch (see `~.dates.get_epoch()`).
+
+    Returns
+    -------
+    `numpy.array`
+        Time in seconds since 1970-01-01.
+    """
+    dt = (np.datetime64('1970-01-01T00:00:00', 's') -
+          np.datetime64(get_epoch(), 's')).astype(float)
+
+    return np.asarray(d) * SEC_PER_DAY - dt
+
+
 @_api.deprecated("3.6", alternative="`AutoDateLocator` and `AutoDateFormatter`"
                  " or vendor the code")
 def date_ticker_factory(span, tz=None, numticks=5):
diff --git a/lib/matplotlib/hatch.py b/lib/matplotlib/hatch.py
index 396baa55db..9c836cbf3c 100644
--- a/lib/matplotlib/hatch.py
+++ b/lib/matplotlib/hatch.py
@@ -188,7 +188,7 @@ def _validate_hatch_pattern(hatch):
             invalids = ''.join(sorted(invalids))
             _api.warn_deprecated(
                 '3.4',
-                removal='3.8',  # one release after custom hatches (#20690)
+                removal='3.7',  # one release after custom hatches (#20690)
                 message=f'hatch must consist of a string of "{valid}" or '
                         'None, but found the following invalid values '
                         f'"{invalids}". Passing invalid values is deprecated '
diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py
index 20d4a76e0d..9e5b903d59 100644
--- a/lib/matplotlib/legend.py
+++ b/lib/matplotlib/legend.py
@@ -286,9 +286,6 @@ handler_map : dict or None
     The custom dictionary mapping instances or types to a legend
     handler. This *handler_map* updates the default handler map
     found at `matplotlib.legend.Legend.get_legend_handler_map`.
-
-draggable : bool, default: False
-    Whether the legend can be dragged with the mouse.
 """)


@@ -345,8 +342,7 @@ class Legend(Artist):
         title_fontproperties=None,  # properties for the legend title
         alignment="center",       # control the alignment within the legend box
         *,
-        ncol=1,  # synonym for ncols (backward compatibility)
-        draggable=False  # whether the legend can be dragged with the mouse
+        ncol=1  # synonym for ncols (backward compatibility)
     ):
         """
         Parameters
@@ -541,9 +537,7 @@ class Legend(Artist):
             title_prop_fp.set_size(title_fontsize)

         self.set_title(title, prop=title_prop_fp)
-
         self._draggable = None
-        self.set_draggable(state=draggable)

         # set the text color

diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py
index 89bd3550f3..b583e320c7 100644
--- a/lib/matplotlib/offsetbox.py
+++ b/lib/matplotlib/offsetbox.py
@@ -350,12 +350,8 @@ class OffsetBox(martist.Artist):
         # docstring inherited
         if renderer is None:
             renderer = self.figure._get_renderer()
-        w, h, xd, yd = self.get_extent(renderer)
-        # Some subclasses redefine get_offset to take no args.
-        try:
-            px, py = self.get_offset(w, h, xd, yd, renderer)
-        except TypeError:
-            px, py = self.get_offset()
+        w, h, xd, yd, offsets = self.get_extent_offsets(renderer)
+        px, py = self.get_offset(w, h, xd, yd, renderer)
         return mtransforms.Bbox.from_bounds(px - xd, py - yd, w, h)

     def draw(self, renderer):
@@ -640,6 +636,15 @@ class DrawingArea(OffsetBox):
         """Return offset of the container."""
         return self._offset

+    def get_window_extent(self, renderer=None):
+        # docstring inherited
+        if renderer is None:
+            renderer = self.figure._get_renderer()
+        w, h, xd, yd = self.get_extent(renderer)
+        ox, oy = self.get_offset()  # w, h, xd, yd)
+
+        return mtransforms.Bbox.from_bounds(ox - xd, oy - yd, w, h)
+
     def get_extent(self, renderer):
         """Return width, height, xdescent, ydescent of box."""
         dpi_cor = renderer.points_to_pixels(1.)
@@ -768,6 +773,14 @@ class TextArea(OffsetBox):
         """Return offset of the container."""
         return self._offset

+    def get_window_extent(self, renderer=None):
+        # docstring inherited
+        if renderer is None:
+            renderer = self.figure._get_renderer()
+        w, h, xd, yd = self.get_extent(renderer)
+        ox, oy = self.get_offset()
+        return mtransforms.Bbox.from_bounds(ox - xd, oy - yd, w, h)
+
     def get_extent(self, renderer):
         _, h_, d_ = renderer.get_text_width_height_descent(
             "lp", self._text._fontproperties,
@@ -863,6 +876,14 @@ class AuxTransformBox(OffsetBox):
         """Return offset of the container."""
         return self._offset

+    def get_window_extent(self, renderer=None):
+        # docstring inherited
+        if renderer is None:
+            renderer = self.figure._get_renderer()
+        w, h, xd, yd = self.get_extent(renderer)
+        ox, oy = self.get_offset()  # w, h, xd, yd)
+        return mtransforms.Bbox.from_bounds(ox - xd, oy - yd, w, h)
+
     def get_extent(self, renderer):
         # clear the offset transforms
         _off = self.offset_transform.get_matrix()  # to be restored later
@@ -1040,14 +1061,34 @@ class AnchoredOffsetbox(OffsetBox):
         self._bbox_to_anchor_transform = transform
         self.stale = True

-    def get_offset(self, width, height, xdescent, ydescent, renderer):
+    def get_window_extent(self, renderer=None):
         # docstring inherited
-        bbox = Bbox.from_bounds(0, 0, width, height)
-        pad = (self.borderpad
-               * renderer.points_to_pixels(self.prop.get_size_in_points()))
-        bbox_to_anchor = self.get_bbox_to_anchor()
-        x0, y0 = _get_anchored_bbox(self.loc, bbox, bbox_to_anchor, pad)
-        return x0 + xdescent, y0 + ydescent
+        if renderer is None:
+            renderer = self.figure._get_renderer()
+
+        self._update_offset_func(renderer)
+        w, h, xd, yd = self.get_extent(renderer)
+        ox, oy = self.get_offset(w, h, xd, yd, renderer)
+        return Bbox.from_bounds(ox - xd, oy - yd, w, h)
+
+    def _update_offset_func(self, renderer, fontsize=None):
+        """
+        Update the offset func which depends on the dpi of the
+        renderer (because of the padding).
+        """
+        if fontsize is None:
+            fontsize = renderer.points_to_pixels(
+                self.prop.get_size_in_points())
+
+        def _offset(w, h, xd, yd, renderer):
+            bbox = Bbox.from_bounds(0, 0, w, h)
+            borderpad = self.borderpad * fontsize
+            bbox_to_anchor = self.get_bbox_to_anchor()
+            x0, y0 = _get_anchored_bbox(
+                self.loc, bbox, bbox_to_anchor, borderpad)
+            return x0 + xd, y0 + yd
+
+        self.set_offset(_offset)

     def update_frame(self, bbox, fontsize=None):
         self.patch.set_bounds(bbox.bounds)
@@ -1059,9 +1100,11 @@ class AnchoredOffsetbox(OffsetBox):
         if not self.get_visible():
             return

+        fontsize = renderer.points_to_pixels(self.prop.get_size_in_points())
+        self._update_offset_func(renderer, fontsize)
+
         # update the location and size of the legend
         bbox = self.get_window_extent(renderer)
-        fontsize = renderer.points_to_pixels(self.prop.get_size_in_points())
         self.update_frame(bbox, fontsize)
         self.patch.draw(renderer)

@@ -1187,6 +1230,14 @@ class OffsetImage(OffsetBox):
     def get_children(self):
         return [self.image]

+    def get_window_extent(self, renderer=None):
+        # docstring inherited
+        if renderer is None:
+            renderer = self.figure._get_renderer()
+        w, h, xd, yd = self.get_extent(renderer)
+        ox, oy = self.get_offset()
+        return mtransforms.Bbox.from_bounds(ox - xd, oy - yd, w, h)
+
     def get_extent(self, renderer):
         if self._dpi_cor:  # True, do correction
             dpi_cor = renderer.points_to_pixels(1.)
diff --git a/lib/matplotlib/pylab.py b/lib/matplotlib/pylab.py
index 289aa9050e..a9e30cfcd1 100644
--- a/lib/matplotlib/pylab.py
+++ b/lib/matplotlib/pylab.py
@@ -16,7 +16,8 @@ from matplotlib.cbook import flatten, silent_list
 import matplotlib as mpl

 from matplotlib.dates import (
-    date2num, num2date, datestr2num, drange, DateFormatter, DateLocator,
+    date2num, num2date, datestr2num, drange, epoch2num,
+    num2epoch, DateFormatter, DateLocator,
     RRuleLocator, YearLocator, MonthLocator, WeekdayLocator, DayLocator,
     HourLocator, MinuteLocator, SecondLocator, rrule, MO, TU, WE, TH, FR,
     SA, SU, YEARLY, MONTHLY, WEEKLY, DAILY, HOURLY, MINUTELY, SECONDLY,
diff --git a/lib/matplotlib/testing/decorators.py b/lib/matplotlib/testing/decorators.py
index b74ea4d5c4..46dfcf992b 100644
--- a/lib/matplotlib/testing/decorators.py
+++ b/lib/matplotlib/testing/decorators.py
@@ -264,12 +264,7 @@ def _pytest_image_comparison(baseline_images, extensions, tol,
                 kwargs['request'] = request

             if extension not in comparable_formats():
-                reason = {
-                    'pdf': 'because Ghostscript is not installed',
-                    'eps': 'because Ghostscript is not installed',
-                    'svg': 'because Inkscape is not installed',
-                }.get(extension, 'on this system')
-                pytest.skip(f"Cannot compare {extension} files {reason}")
+                pytest.skip(f"Cannot compare {extension} files on this system")

             img = _ImageComparisonBase(func, tol=tol, remove_text=remove_text,
                                        savefig_kwargs=savefig_kwargs)
diff --git a/lib/matplotlib/tests/baseline_images/test_axes/mixed_errorbar_polar_caps.png b/lib/matplotlib/tests/baseline_images/test_axes/mixed_errorbar_polar_caps.png
deleted file mode 100644
index bbe879779d..0000000000
Binary files a/lib/matplotlib/tests/baseline_images/test_axes/mixed_errorbar_polar_caps.png and /dev/null differ
diff --git a/lib/matplotlib/tests/baseline_images/test_axes/test_centered_bar_label_nonlinear.svg b/lib/matplotlib/tests/baseline_images/test_axes/test_centered_bar_label_nonlinear.svg
deleted file mode 100644
index cea1050932..0000000000
Binary files a/lib/matplotlib/tests/baseline_images/test_axes/test_centered_bar_label_nonlinear.svg and /dev/null differ
diff --git a/lib/matplotlib/tests/baseline_images/test_backend_ps/scatter.eps b/lib/matplotlib/tests/baseline_images/test_backend_ps/scatter.eps
deleted file mode 100644
index b21ff4234a..0000000000
--- a/lib/matplotlib/tests/baseline_images/test_backend_ps/scatter.eps
+++ /dev/null
@@ -1,306 +0,0 @@
-%!PS-Adobe-3.0 EPSF-3.0
-%%Title: scatter.eps
-%%Creator: Matplotlib v3.6.0.dev2701+g27bf604984.d20220719, https://matplotlib.org/
-%%CreationDate: Tue Jul 19 12:36:23 2022
-%%Orientation: portrait
-%%BoundingBox: 18 180 594 612
-%%HiResBoundingBox: 18.000000 180.000000 594.000000 612.000000
-%%EndComments
-%%BeginProlog
-/mpldict 10 dict def
-mpldict begin
-/_d { bind def } bind def
-/m { moveto } _d
-/l { lineto } _d
-/r { rlineto } _d
-/c { curveto } _d
-/cl { closepath } _d
-/ce { closepath eofill } _d
-/box {
-      m
-      1 index 0 r
-      0 exch r
-      neg 0 r
-      cl
-    } _d
-/clipbox {
-      box
-      clip
-      newpath
-    } _d
-/sc { setcachedevice } _d
-end
-%%EndProlog
-mpldict begin
-18 180 translate
-576 432 0 0 clipbox
-gsave
-0 0 m
-576 0 l
-576 432 l
-0 432 l
-cl
-1.000 setgray
-fill
-grestore
-/p0_0 {
-newpath
-translate
-72 141.529351 m
-17.327389 80.435325 l
-126.672611 80.435325 l
-cl
-
-} bind def
-/p0_1 {
-newpath
-translate
-72 158.4 m
--17.28 100.8 l
-72 43.2 l
-161.28 100.8 l
-cl
-
-} bind def
-/p0_2 {
-newpath
-translate
-72 141.529351 m
-11.959333 113.386062 l
-34.892827 67.849263 l
-109.107173 67.849263 l
-132.040667 113.386062 l
-cl
-
-} bind def
-/p0_3 {
-newpath
-translate
-72 158.4 m
--5.318748 129.6 l
--5.318748 72 l
-72 43.2 l
-149.318748 72 l
-149.318748 129.6 l
-cl
-
-} bind def
-1.000 setlinewidth
-1 setlinejoin
-0 setlinecap
-[] 0 setdash
-0.000 setgray
-gsave
-446.4 345.6 72 43.2 clipbox
-96.7145 132.649 p0_0
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-166.544 15.5782 p0_1
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-149.874 179.799 p0_2
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-34.7409 104.813 p0_3
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-145.839 37.968 p0_0
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-147.462 82.9425 p0_1
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-147.29 120.393 p0_2
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-151.565 52.8617 p0_3
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-165.375 85.5808 p0_0
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-12.8578 119.079 p0_1
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-0.900 0.200 0.100 setrgbcolor
-gsave
-446.4 345.6 72 43.2 clipbox
-326.215567 311.071597 m
-334.595085 306.881838 l
-334.595085 315.261356 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-184.274432 293.965646 m
-190.679432 290.763146 l
-190.679432 297.168146 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-276.081223 354.823805 m
-283.311607 351.208613 l
-283.311607 358.438997 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-411.593191 219.187935 m
-420.363106 214.802977 l
-420.363106 223.572893 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-141.383198 139.751386 m
-149.294063 135.795953 l
-149.294063 143.706818 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-154.058079 131.129187 m
-160.028366 128.144043 l
-160.028366 134.114331 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-247.767539 370.319257 m
-255.714503 366.345775 l
-255.714503 374.292739 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-410.16817 374.136435 m
-419.852735 369.294152 l
-419.852735 378.978717 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-450.836918 106.524611 m
-457.983473 102.951334 l
-457.983473 110.097888 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-397.084416 298.708741 m
-402.739273 295.881312 l
-402.739273 301.53617 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-
-end
-showpage
diff --git a/lib/matplotlib/tests/test_axes.py b/lib/matplotlib/tests/test_axes.py
index 9fb95cbd68..d6d44bcdb2 100644
--- a/lib/matplotlib/tests/test_axes.py
+++ b/lib/matplotlib/tests/test_axes.py
@@ -896,14 +896,18 @@ def test_hexbin_extent():
     ax.hexbin("x", "y", extent=[.1, .3, .6, .7], data=data)


-@image_comparison(['hexbin_empty.png', 'hexbin_empty.png'], remove_text=True)
+@image_comparison(['hexbin_empty.png'], remove_text=True)
 def test_hexbin_empty():
     # From #3886: creating hexbin from empty dataset raises ValueError
-    fig, ax = plt.subplots()
+    ax = plt.gca()
     ax.hexbin([], [])
-    fig, ax = plt.subplots()
+
+
+@image_comparison(['hexbin_empty.png'], remove_text=True)
+def test_hexbin_log_empty():
     # From #23922: creating hexbin with log scaling from empty
     # dataset raises ValueError
+    ax = plt.gca()
     ax.hexbin([], [], bins='log')


@@ -3687,41 +3691,6 @@ def test_errorbar():
     ax.set_title("Simplest errorbars, 0.2 in x, 0.4 in y")


-@image_comparison(['mixed_errorbar_polar_caps'], extensions=['png'],
-                  remove_text=True)
-def test_mixed_errorbar_polar_caps():
-    """
-    Mix several polar errorbar use cases in a single test figure.
-
-    It is advisable to position individual points off the grid. If there are
-    problems with reproducibility of this test, consider removing grid.
-    """
-    fig = plt.figure()
-    ax = plt.subplot(111, projection='polar')
-
-    # symmetric errorbars
-    th_sym = [1, 2, 3]
-    r_sym = [0.9]*3
-    ax.errorbar(th_sym, r_sym, xerr=0.35, yerr=0.2, fmt="o")
-
-    # long errorbars
-    th_long = [np.pi/2 + .1, np.pi + .1]
-    r_long = [1.8, 2.2]
-    ax.errorbar(th_long, r_long, xerr=0.8 * np.pi, yerr=0.15, fmt="o")
-
-    # asymmetric errorbars
-    th_asym = [4*np.pi/3 + .1, 5*np.pi/3 + .1, 2*np.pi-0.1]
-    r_asym = [1.1]*3
-    xerr = [[.3, .3, .2], [.2, .3, .3]]
-    yerr = [[.35, .5, .5], [.5, .35, .5]]
-    ax.errorbar(th_asym, r_asym, xerr=xerr, yerr=yerr, fmt="o")
-
-    # overlapping errorbar
-    th_over = [2.1]
-    r_over = [3.1]
-    ax.errorbar(th_over, r_over, xerr=10, yerr=.2, fmt="o")
-
-
 def test_errorbar_colorcycle():

     f, ax = plt.subplots()
@@ -7834,24 +7803,14 @@ def test_bar_label_location_center():
     ys, widths = [1, 2], [3, -4]
     rects = ax.barh(ys, widths)
     labels = ax.bar_label(rects, label_type='center')
-    assert labels[0].xy == (0.5, 0.5)
+    assert labels[0].xy == (widths[0] / 2, ys[0])
     assert labels[0].get_ha() == 'center'
     assert labels[0].get_va() == 'center'
-    assert labels[1].xy == (0.5, 0.5)
+    assert labels[1].xy == (widths[1] / 2, ys[1])
     assert labels[1].get_ha() == 'center'
     assert labels[1].get_va() == 'center'


-@image_comparison(['test_centered_bar_label_nonlinear.svg'])
-def test_centered_bar_label_nonlinear():
-    _, ax = plt.subplots()
-    bar_container = ax.barh(['c', 'b', 'a'], [1_000, 5_000, 7_000])
-    ax.set_xscale('log')
-    ax.set_xlim(1, None)
-    ax.bar_label(bar_container, label_type='center')
-    ax.set_axis_off()
-
-
 def test_bar_label_location_errorbars():
     ax = plt.gca()
     xs, heights = [1, 2], [3, -4]
@@ -7865,24 +7824,14 @@ def test_bar_label_location_errorbars():
     assert labels[1].get_va() == 'top'


-@pytest.mark.parametrize('fmt', [
-    '%.2f', '{:.2f}', '{:.2f}'.format
-])
-def test_bar_label_fmt(fmt):
+def test_bar_label_fmt():
     ax = plt.gca()
     rects = ax.bar([1, 2], [3, -4])
-    labels = ax.bar_label(rects, fmt=fmt)
+    labels = ax.bar_label(rects, fmt='%.2f')
     assert labels[0].get_text() == '3.00'
     assert labels[1].get_text() == '-4.00'


-def test_bar_label_fmt_error():
-    ax = plt.gca()
-    rects = ax.bar([1, 2], [3, -4])
-    with pytest.raises(TypeError, match='str or callable'):
-        _ = ax.bar_label(rects, fmt=10)
-
-
 def test_bar_label_labels():
     ax = plt.gca()
     rects = ax.bar([1, 2], [3, -4])
diff --git a/lib/matplotlib/tests/test_backend_ps.py b/lib/matplotlib/tests/test_backend_ps.py
index b3e933a89a..a151dc4c4c 100644
--- a/lib/matplotlib/tests/test_backend_ps.py
+++ b/lib/matplotlib/tests/test_backend_ps.py
@@ -4,17 +4,15 @@ import io
 import re
 import tempfile

-import numpy as np
 import pytest

-from matplotlib import cbook, path, patheffects, font_manager as fm
+from matplotlib import cbook, patheffects, font_manager as fm
 from matplotlib._api import MatplotlibDeprecationWarning
 from matplotlib.figure import Figure
 from matplotlib.patches import Ellipse
 from matplotlib.testing._markers import needs_ghostscript, needs_usetex
 from matplotlib.testing.decorators import check_figures_equal, image_comparison
 import matplotlib as mpl
-import matplotlib.collections as mcollections
 import matplotlib.pyplot as plt


@@ -309,21 +307,3 @@ def test_multi_font_type42():

     fig = plt.figure()
     fig.text(0.15, 0.475, "There are 几个汉字 in between!")
-
-
-@image_comparison(["scatter.eps"])
-def test_path_collection():
-    rng = np.random.default_rng(19680801)
-    xvals = rng.uniform(0, 1, 10)
-    yvals = rng.uniform(0, 1, 10)
-    sizes = rng.uniform(30, 100, 10)
-    fig, ax = plt.subplots()
-    ax.scatter(xvals, yvals, sizes, edgecolor=[0.9, 0.2, 0.1], marker='<')
-    ax.set_axis_off()
-    paths = [path.Path.unit_regular_polygon(i) for i in range(3, 7)]
-    offsets = rng.uniform(0, 200, 20).reshape(10, 2)
-    sizes = [0.02, 0.04]
-    pc = mcollections.PathCollection(paths, sizes, zorder=-1,
-                                     facecolors='yellow', offsets=offsets)
-    ax.add_collection(pc)
-    ax.set_xlim(0, 1)
diff --git a/lib/matplotlib/tests/test_cbook.py b/lib/matplotlib/tests/test_cbook.py
index eda0c3b7eb..26748d1a57 100644
--- a/lib/matplotlib/tests/test_cbook.py
+++ b/lib/matplotlib/tests/test_cbook.py
@@ -895,19 +895,3 @@ def test_safe_first_element_with_none():
     datetime_lst[0] = None
     actual = cbook._safe_first_finite(datetime_lst)
     assert actual is not None and actual == datetime_lst[1]
-
-
-@pytest.mark.parametrize('fmt, value, result', [
-    ('%.2f m', 0.2, '0.20 m'),
-    ('{:.2f} m', 0.2, '0.20 m'),
-    ('{} m', 0.2, '0.2 m'),
-    ('const', 0.2, 'const'),
-    ('%d or {}', 0.2, '0 or {}'),
-    ('{{{:,.0f}}}', 2e5, '{200,000}'),
-    ('{:.2%}', 2/3, '66.67%'),
-    ('$%g', 2.54, '$2.54'),
-])
-def test_auto_format_str(fmt, value, result):
-    """Apply *value* to the format string *fmt*."""
-    assert cbook._auto_format_str(fmt, value) == result
-    assert cbook._auto_format_str(fmt, np.float64(value)) == result
diff --git a/lib/matplotlib/tests/test_contour.py b/lib/matplotlib/tests/test_contour.py
index a8cd656b1f..2c76f34cb1 100644
--- a/lib/matplotlib/tests/test_contour.py
+++ b/lib/matplotlib/tests/test_contour.py
@@ -682,13 +682,3 @@ def test_negative_linestyles(style):
     ax4.clabel(CS4, fontsize=9, inline=True)
     ax4.set_title(f'Single color - negative contours {style}')
     assert CS4.negative_linestyles == style
-
-
-def test_contour_remove():
-    ax = plt.figure().add_subplot()
-    orig_children = ax.get_children()
-    cs = ax.contour(np.arange(16).reshape((4, 4)))
-    cs.clabel()
-    assert ax.get_children() != orig_children
-    cs.remove()
-    assert ax.get_children() == orig_children
diff --git a/lib/matplotlib/tests/test_dates.py b/lib/matplotlib/tests/test_dates.py
index 5985b61351..fc5eed7f28 100644
--- a/lib/matplotlib/tests/test_dates.py
+++ b/lib/matplotlib/tests/test_dates.py
@@ -1240,6 +1240,19 @@ def test_change_interval_multiples():
     assert ax.get_xticklabels()[1].get_text() == 'Feb 01 2020'


+def test_epoch2num():
+    with _api.suppress_matplotlib_deprecation_warning():
+        mdates._reset_epoch_test_example()
+        mdates.set_epoch('0000-12-31')
+        assert mdates.epoch2num(86400) == 719164.0
+        assert mdates.num2epoch(719165.0) == 86400 * 2
+        # set back to the default
+        mdates._reset_epoch_test_example()
+        mdates.set_epoch('1970-01-01T00:00:00')
+        assert mdates.epoch2num(86400) == 1.0
+        assert mdates.num2epoch(2.0) == 86400 * 2
+
+
 def test_julian2num():
     mdates._reset_epoch_test_example()
     mdates.set_epoch('0000-12-31')
diff --git a/lib/matplotlib/tests/test_legend.py b/lib/matplotlib/tests/test_legend.py
index c0c5f79d71..16847e0be6 100644
--- a/lib/matplotlib/tests/test_legend.py
+++ b/lib/matplotlib/tests/test_legend.py
@@ -783,14 +783,6 @@ def test_get_set_draggable():
     assert not legend.get_draggable()


-@pytest.mark.parametrize('draggable', (True, False))
-def test_legend_draggable(draggable):
-    fig, ax = plt.subplots()
-    ax.plot(range(10), label='shabnams')
-    leg = ax.legend(draggable=draggable)
-    assert leg.get_draggable() is draggable
-
-
 def test_alpha_handles():
     x, n, hh = plt.hist([1, 2, 3], alpha=0.25, label='data', color='red')
     legend = plt.legend()
diff --git a/lib/matplotlib/tests/test_texmanager.py b/lib/matplotlib/tests/test_texmanager.py
index fbff21144e..29ed9d8659 100644
--- a/lib/matplotlib/tests/test_texmanager.py
+++ b/lib/matplotlib/tests/test_texmanager.py
@@ -1,8 +1,5 @@
-import os
 from pathlib import Path
 import re
-import subprocess
-import sys

 import matplotlib.pyplot as plt
 from matplotlib.texmanager import TexManager
@@ -60,15 +57,3 @@ def test_unicode_characters():
     with pytest.raises(RuntimeError):
         ax.set_title('\N{SNOWMAN}')
         fig.canvas.draw()
-
-
-@needs_usetex
-def test_openin_any_paranoid():
-    completed = subprocess.run(
-        [sys.executable, "-c",
-         'import matplotlib.pyplot as plt;'
-         'plt.rcParams.update({"text.usetex": True});'
-         'plt.title("paranoid");'
-         'plt.show(block=False);'],
-        env={**os.environ, 'openin_any': 'p'}, check=True, capture_output=True)
-    assert completed.stderr == b""
diff --git a/lib/matplotlib/tests/test_ticker.py b/lib/matplotlib/tests/test_ticker.py
index b474dfdd5e..e91d323602 100644
--- a/lib/matplotlib/tests/test_ticker.py
+++ b/lib/matplotlib/tests/test_ticker.py
@@ -1,7 +1,6 @@
 from contextlib import nullcontext
 import itertools
 import locale
-import logging
 import re

 import numpy as np
@@ -726,24 +725,6 @@ class TestScalarFormatter:
             ax.set_xticks([-1, 0, 1])
             fig.canvas.draw()

-    def test_cmr10_substitutions(self, caplog):
-        mpl.rcParams.update({
-            'font.family': 'cmr10',
-            'mathtext.fontset': 'cm',
-            'axes.formatter.use_mathtext': True,
-        })
-
-        # Test that it does not log a warning about missing glyphs.
-        with caplog.at_level(logging.WARNING, logger='matplotlib.mathtext'):
-            fig, ax = plt.subplots()
-            ax.plot([-0.03, 0.05], [40, 0.05])
-            ax.set_yscale('log')
-            yticks = [0.02, 0.3, 4, 50]
-            formatter = mticker.LogFormatterSciNotation()
-            ax.set_yticks(yticks, map(formatter, yticks))
-            fig.canvas.draw()
-            assert not caplog.text
-
     def test_empty_locs(self):
         sf = mticker.ScalarFormatter()
         sf.set_locs([])
diff --git a/lib/matplotlib/texmanager.py b/lib/matplotlib/texmanager.py
index e3b500f948..f53377cf55 100644
--- a/lib/matplotlib/texmanager.py
+++ b/lib/matplotlib/texmanager.py
@@ -290,16 +290,12 @@ class TexManager:
             # and thus replace() works atomically.  It also allows referring to
             # the texfile with a relative path (for pathological MPLCONFIGDIRs,
             # the absolute path may contain characters (e.g. ~) that TeX does
-            # not support; n.b. relative paths cannot traverse parents, or it
-            # will be blocked when `openin_any = p` in texmf.cnf).
-            cwd = Path(dvifile).parent
-            with TemporaryDirectory(dir=cwd) as tmpdir:
-                tmppath = Path(tmpdir)
+            # not support.)
+            with TemporaryDirectory(dir=Path(dvifile).parent) as tmpdir:
                 cls._run_checked_subprocess(
                     ["latex", "-interaction=nonstopmode", "--halt-on-error",
-                     f"--output-directory={tmppath.name}",
-                     f"{texfile.name}"], tex, cwd=cwd)
-                (tmppath / Path(dvifile).name).replace(dvifile)
+                     f"../{texfile.name}"], tex, cwd=tmpdir)
+                (Path(tmpdir) / Path(dvifile).name).replace(dvifile)
         return dvifile

     @classmethod
diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py
index abd5cb9598..ccf6ce879b 100644
--- a/lib/matplotlib/text.py
+++ b/lib/matplotlib/text.py
@@ -164,39 +164,6 @@ class Text(Artist):
         super().__init__()
         self._x, self._y = x, y
         self._text = ''
-        self._reset_visual_defaults(
-            text=text,
-            color=color,
-            fontproperties=fontproperties,
-            usetex=usetex,
-            parse_math=parse_math,
-            wrap=wrap,
-            verticalalignment=verticalalignment,
-            horizontalalignment=horizontalalignment,
-            multialignment=multialignment,
-            rotation=rotation,
-            transform_rotates_text=transform_rotates_text,
-            linespacing=linespacing,
-            rotation_mode=rotation_mode,
-        )
-        self.update(kwargs)
-
-    def _reset_visual_defaults(
-        self,
-        text='',
-        color=None,
-        fontproperties=None,
-        usetex=None,
-        parse_math=None,
-        wrap=False,
-        verticalalignment='baseline',
-        horizontalalignment='left',
-        multialignment=None,
-        rotation=None,
-        transform_rotates_text=False,
-        linespacing=None,
-        rotation_mode=None,
-    ):
         self.set_text(text)
         self.set_color(
             color if color is not None else mpl.rcParams["text.color"])
@@ -216,6 +183,7 @@ class Text(Artist):
             linespacing = 1.2  # Maybe use rcParam later.
         self.set_linespacing(linespacing)
         self.set_rotation_mode(rotation_mode)
+        self.update(kwargs)

     def update(self, kwargs):
         # docstring inherited
diff --git a/lib/matplotlib/ticker.py b/lib/matplotlib/ticker.py
index 9e68656971..dfacdf4aea 100644
--- a/lib/matplotlib/ticker.py
+++ b/lib/matplotlib/ticker.py
@@ -196,6 +196,21 @@ class TickHelper:
         if self.axis is None:
             self.axis = _DummyAxis(**kwargs)

+    @_api.deprecated("3.5", alternative="`.Axis.set_view_interval`")
+    def set_view_interval(self, vmin, vmax):
+        self.axis.set_view_interval(vmin, vmax)
+
+    @_api.deprecated("3.5", alternative="`.Axis.set_data_interval`")
+    def set_data_interval(self, vmin, vmax):
+        self.axis.set_data_interval(vmin, vmax)
+
+    @_api.deprecated(
+        "3.5",
+        alternative="`.Axis.set_view_interval` and `.Axis.set_data_interval`")
+    def set_bounds(self, vmin, vmax):
+        self.set_view_interval(vmin, vmax)
+        self.set_data_interval(vmin, vmax)
+

 class Formatter(TickHelper):
     """
diff --git a/lib/matplotlib/tri/tricontour.py b/lib/matplotlib/tri/tricontour.py
index ee9d85030c..df3b44d941 100644
--- a/lib/matplotlib/tri/tricontour.py
+++ b/lib/matplotlib/tri/tricontour.py
@@ -114,7 +114,7 @@ levels : int or array-like, optional

     If an int *n*, use `~matplotlib.ticker.MaxNLocator`, which tries to
     automatically choose no more than *n+1* "nice" contour levels between
-    between minimum and maximum numeric values of *Z*.
+    *vmin* and *vmax*.

     If array-like, draw contour lines at the specified levels.  The values must
     be in increasing order.
diff --git a/lib/mpl_toolkits/axes_grid1/axes_grid.py b/lib/mpl_toolkits/axes_grid1/axes_grid.py
index ea47ecaa54..b2fe5d2496 100644
--- a/lib/mpl_toolkits/axes_grid1/axes_grid.py
+++ b/lib/mpl_toolkits/axes_grid1/axes_grid.py
@@ -81,11 +81,9 @@ class Grid:
         ----------
         fig : `.Figure`
             The parent figure.
-        rect : (float, float, float, float), (int, int, int), int, or \
-    `~.SubplotSpec`
-            The axes position, as a ``(left, bottom, width, height)`` tuple,
-            as a three-digit subplot position code (e.g., ``(1, 2, 1)`` or
-            ``121``), or as a `~.SubplotSpec`.
+        rect : (float, float, float, float) or int
+            The axes position, as a ``(left, bottom, width, height)`` tuple or
+            as a three-digit subplot position code (e.g., "121").
         nrows_ncols : (int, int)
             Number of rows and columns in the grid.
         ngrids : int or None, default: None
@@ -141,7 +139,7 @@ class Grid:
             axes_class = functools.partial(cls, **kwargs)

         kw = dict(horizontal=[], vertical=[], aspect=aspect)
-        if isinstance(rect, (Number, SubplotSpec)):
+        if isinstance(rect, (str, Number, SubplotSpec)):
             self._divider = SubplotDivider(fig, rect, **kw)
         elif len(rect) == 3:
             self._divider = SubplotDivider(fig, *rect, **kw)
diff --git a/lib/mpl_toolkits/axes_grid1/inset_locator.py b/lib/mpl_toolkits/axes_grid1/inset_locator.py
index cfadcbe543..01c14e9baa 100644
--- a/lib/mpl_toolkits/axes_grid1/inset_locator.py
+++ b/lib/mpl_toolkits/axes_grid1/inset_locator.py
@@ -43,7 +43,7 @@ class InsetPosition:

         >>> parent_axes = plt.gca()
         >>> ax_ins = plt.axes([0, 0, 1, 1])
-        >>> ip = InsetPosition(parent_axes, [0.5, 0.1, 0.4, 0.2])
+        >>> ip = InsetPosition(ax, [0.5, 0.1, 0.4, 0.2])
         >>> ax_ins.set_axes_locator(ip)
         """
         self.parent = parent
@@ -70,11 +70,18 @@ class AnchoredLocatorBase(AnchoredOffsetbox):

     def __call__(self, ax, renderer):
         self.axes = ax
-        bbox = self.get_window_extent(renderer)
-        px, py = self.get_offset(bbox.width, bbox.height, 0, 0, renderer)
-        bbox_canvas = Bbox.from_bounds(px, py, bbox.width, bbox.height)
+
+        fontsize = renderer.points_to_pixels(self.prop.get_size_in_points())
+        self._update_offset_func(renderer, fontsize)
+
+        width, height, xdescent, ydescent = self.get_extent(renderer)
+
+        px, py = self.get_offset(width, height, 0, 0, renderer)
+        bbox_canvas = Bbox.from_bounds(px, py, width, height)
         tr = ax.figure.transFigure.inverted()
-        return TransformedBbox(bbox_canvas, tr)
+        bb = TransformedBbox(bbox_canvas, tr)
+
+        return bb


 class AnchoredSizeLocator(AnchoredLocatorBase):
diff --git a/lib/mpl_toolkits/axes_grid1/parasite_axes.py b/lib/mpl_toolkits/axes_grid1/parasite_axes.py
index 6cdffe2247..b959d1f48a 100644
--- a/lib/mpl_toolkits/axes_grid1/parasite_axes.py
+++ b/lib/mpl_toolkits/axes_grid1/parasite_axes.py
@@ -99,35 +99,20 @@ class HostAxesBase:
         self.parasites = []
         super().__init__(*args, **kwargs)

-    def get_aux_axes(
-            self, tr=None, viewlim_mode="equal", axes_class=None, **kwargs):
+    def get_aux_axes(self, tr=None, viewlim_mode="equal", axes_class=Axes):
         """
         Add a parasite axes to this host.

         Despite this method's name, this should actually be thought of as an
         ``add_parasite_axes`` method.

-        Parameters
-        ----------
-        tr : `.Transform` or None, default: None
-            If a `.Transform`, the following relation will hold:
-            ``parasite.transData = tr + host.transData``.
-            If None, the parasite's and the host's ``transData`` are unrelated.
-        viewlim_mode : {"equal", "transform", None}, default: "equal"
-            How the parasite's view limits are set: directly equal to the
-            parent axes ("equal"), equal after application of *tr*
-            ("transform"), or independently (None).
-        axes_class : subclass type of `~.axes.Axes`, optional
-            The `.axes.Axes` subclass that is instantiated.  If None, the base
-            class of the host axes is used.
-        kwargs
-            Other parameters are forwarded to the parasite axes constructor.
+        *tr* may be `.Transform`, in which case the following relation will
+        hold: ``parasite.transData = tr + host.transData``.  Alternatively, it
+        may be None (the default), no special relationship will hold between
+        the parasite's and the host's ``transData``.
         """
-        if axes_class is None:
-            axes_class = self._base_axes_class
         parasite_axes_class = parasite_axes_class_factory(axes_class)
-        ax2 = parasite_axes_class(
-            self, tr, viewlim_mode=viewlim_mode, **kwargs)
+        ax2 = parasite_axes_class(self, tr, viewlim_mode=viewlim_mode)
         # note that ax2.transData == tr + ax1.transData
         # Anything you draw in ax2 will match the ticks and grids of ax1.
         self.parasites.append(ax2)
diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py
index e9b57f6347..c506012463 100644
--- a/lib/mpl_toolkits/mplot3d/axes3d.py
+++ b/lib/mpl_toolkits/mplot3d/axes3d.py
@@ -52,10 +52,6 @@ class Axes3D(Axes):
     Axes._shared_axes["z"] = cbook.Grouper()

     dist = _api.deprecate_privatize_attribute("3.6")
-    vvec = _api.deprecate_privatize_attribute("3.7")
-    eye = _api.deprecate_privatize_attribute("3.7")
-    sx = _api.deprecate_privatize_attribute("3.7")
-    sy = _api.deprecate_privatize_attribute("3.7")

     def __init__(
             self, fig, rect=None, *args,
@@ -291,7 +287,9 @@ class Axes3D(Axes):
             'equalyz'   adapt the y and z axes to have equal aspect ratios.
             =========   ==================================================

-        adjustable : None or {'box', 'datalim'}, optional
+        adjustable : None
+            Currently ignored by Axes3D
+
             If not *None*, this defines which parameter will be adjusted to
             meet the required aspect. See `.set_adjustable` for further
             details.
@@ -322,65 +320,34 @@ class Axes3D(Axes):
         """
         _api.check_in_list(('auto', 'equal', 'equalxy', 'equalyz', 'equalxz'),
                            aspect=aspect)
-        if adjustable is None:
-            adjustable = self._adjustable
-        _api.check_in_list(('box', 'datalim'), adjustable=adjustable)
         super().set_aspect(
             aspect='auto', adjustable=adjustable, anchor=anchor, share=share)
         self._aspect = aspect

         if aspect in ('equal', 'equalxy', 'equalxz', 'equalyz'):
-            ax_indices = self._equal_aspect_axis_indices(aspect)
+            if aspect == 'equal':
+                ax_indices = [0, 1, 2]
+            elif aspect == 'equalxy':
+                ax_indices = [0, 1]
+            elif aspect == 'equalxz':
+                ax_indices = [0, 2]
+            elif aspect == 'equalyz':
+                ax_indices = [1, 2]

             view_intervals = np.array([self.xaxis.get_view_interval(),
                                        self.yaxis.get_view_interval(),
                                        self.zaxis.get_view_interval()])
+            mean = np.mean(view_intervals, axis=1)
             ptp = np.ptp(view_intervals, axis=1)
-            if adjustable == 'datalim':
-                mean = np.mean(view_intervals, axis=1)
-                delta = max(ptp[ax_indices])
-                scale = self._box_aspect[ptp == delta][0]
-                deltas = delta * self._box_aspect / scale
-
-                for i, set_lim in enumerate((self.set_xlim3d,
-                                             self.set_ylim3d,
-                                             self.set_zlim3d)):
-                    if i in ax_indices:
-                        set_lim(mean[i] - deltas[i]/2., mean[i] + deltas[i]/2.)
-            else:  # 'box'
-                # Change the box aspect such that the ratio of the length of
-                # the unmodified axis to the length of the diagonal
-                # perpendicular to it remains unchanged.
-                box_aspect = np.array(self._box_aspect)
-                box_aspect[ax_indices] = ptp[ax_indices]
-                remaining_ax_indices = {0, 1, 2}.difference(ax_indices)
-                if remaining_ax_indices:
-                    remaining = remaining_ax_indices.pop()
-                    old_diag = np.linalg.norm(self._box_aspect[ax_indices])
-                    new_diag = np.linalg.norm(box_aspect[ax_indices])
-                    box_aspect[remaining] *= new_diag / old_diag
-                self.set_box_aspect(box_aspect)
-
-    def _equal_aspect_axis_indices(self, aspect):
-        """
-        Get the indices for which of the x, y, z axes are constrained to have
-        equal aspect ratios.
+            delta = max(ptp[ax_indices])
+            scale = self._box_aspect[ptp == delta][0]
+            deltas = delta * self._box_aspect / scale

-        Parameters
-        ----------
-        aspect : {'auto', 'equal', 'equalxy', 'equalxz', 'equalyz'}
-            See descriptions in docstring for `.set_aspect()`.
-        """
-        ax_indices = []  # aspect == 'auto'
-        if aspect == 'equal':
-            ax_indices = [0, 1, 2]
-        elif aspect == 'equalxy':
-            ax_indices = [0, 1]
-        elif aspect == 'equalxz':
-            ax_indices = [0, 2]
-        elif aspect == 'equalyz':
-            ax_indices = [1, 2]
-        return ax_indices
+            for i, set_lim in enumerate((self.set_xlim3d,
+                                         self.set_ylim3d,
+                                         self.set_zlim3d)):
+                if i in ax_indices:
+                    set_lim(mean[i] - deltas[i]/2., mean[i] + deltas[i]/2.)

     def set_box_aspect(self, aspect, *, zoom=1):
         """
@@ -880,13 +847,15 @@ class Axes3D(Axes):
             pb_aspect=box_aspect,
         )

-        # Look into the middle of the world coordinates:
+        # Look into the middle of the new coordinates:
         R = 0.5 * box_aspect

         # elev stores the elevation angle in the z plane
         # azim stores the azimuth angle in the x,y plane
+        # roll stores the roll angle about the view axis
         elev_rad = np.deg2rad(art3d._norm_angle(self.elev))
         azim_rad = np.deg2rad(art3d._norm_angle(self.azim))
+        roll_rad = np.deg2rad(art3d._norm_angle(self.roll))

         # Coordinates for a point that rotates around the box of data.
         # p0, p1 corresponds to rotating the box only around the
@@ -905,27 +874,27 @@ class Axes3D(Axes):
         # towards the middle of the box of data from a distance:
         eye = R + self._dist * ps

-        # vvec, self._vvec and self._eye are unused, remove when deprecated
-        vvec = R - eye
-        self._eye = eye
-        self._vvec = vvec / np.linalg.norm(vvec)
+        # TODO: Is this being used somewhere? Can it be removed?
+        self.eye = eye
+        self.vvec = R - eye
+        self.vvec = self.vvec / np.linalg.norm(self.vvec)

-        # Calculate the viewing axes for the eye position
-        u, v, w = self._calc_view_axes(eye)
-        self._view_u = u  # _view_u is towards the right of the screen
-        self._view_v = v  # _view_v is towards the top of the screen
-        self._view_w = w  # _view_w is out of the screen
+        # Define which axis should be vertical. A negative value
+        # indicates the plot is upside down and therefore the values
+        # have been reversed:
+        V = np.zeros(3)
+        V[self._vertical_axis] = -1 if abs(elev_rad) > 0.5 * np.pi else 1

         # Generate the view and projection transformation matrices
         if self._focal_length == np.inf:
             # Orthographic projection
-            viewM = proj3d._view_transformation_uvw(u, v, w, eye)
+            viewM = proj3d.view_transformation(eye, R, V, roll_rad)
             projM = proj3d.ortho_transformation(-self._dist, self._dist)
         else:
             # Perspective projection
             # Scale the eye dist to compensate for the focal length zoom effect
             eye_focal = R + self._dist * ps * self._focal_length
-            viewM = proj3d._view_transformation_uvw(u, v, w, eye_focal)
+            viewM = proj3d.view_transformation(eye_focal, R, V, roll_rad)
             projM = proj3d.persp_transformation(-self._dist,
                                                 self._dist,
                                                 self._focal_length)
@@ -935,7 +904,7 @@ class Axes3D(Axes):
         M = np.dot(projM, M0)
         return M

-    def mouse_init(self, rotate_btn=1, pan_btn=2, zoom_btn=3):
+    def mouse_init(self, rotate_btn=1, zoom_btn=3):
         """
         Set the mouse buttons for 3D rotation and zooming.

@@ -943,8 +912,6 @@ class Axes3D(Axes):
         ----------
         rotate_btn : int or list of int, default: 1
             The mouse button or buttons to use for 3D rotation of the axes.
-        pan_btn : int or list of int, default: 2
-            The mouse button or buttons to use to pan the 3D axes.
         zoom_btn : int or list of int, default: 3
             The mouse button or buttons to use to zoom the 3D axes.
         """
@@ -953,24 +920,27 @@ class Axes3D(Axes):
         # a regular list to avoid comparisons against None
         # which breaks in recent versions of numpy.
         self._rotate_btn = np.atleast_1d(rotate_btn).tolist()
-        self._pan_btn = np.atleast_1d(pan_btn).tolist()
         self._zoom_btn = np.atleast_1d(zoom_btn).tolist()

     def disable_mouse_rotation(self):
-        """Disable mouse buttons for 3D rotation, panning, and zooming."""
-        self.mouse_init(rotate_btn=[], pan_btn=[], zoom_btn=[])
+        """Disable mouse buttons for 3D rotation and zooming."""
+        self.mouse_init(rotate_btn=[], zoom_btn=[])

     def can_zoom(self):
         """
         Return whether this Axes supports the zoom box button functionality.
+
+        Axes3D objects do not use the zoom box button.
         """
-        return True
+        return False

     def can_pan(self):
         """
-        Return whether this Axes supports the pan button functionality.
+        Return whether this Axes supports the pan/zoom button functionality.
+
+        Axes3d objects do not use the pan/zoom button.
         """
-        return True
+        return False

     def sharez(self, other):
         """
@@ -1003,7 +973,7 @@ class Axes3D(Axes):
     def _button_press(self, event):
         if event.inaxes == self:
             self.button_pressed = event.button
-            self._sx, self._sy = event.xdata, event.ydata
+            self.sx, self.sy = event.xdata, event.ydata
             toolbar = getattr(self.figure.canvas, "toolbar")
             if toolbar and toolbar._nav_stack() is None:
                 self.figure.canvas.toolbar.push_current()
@@ -1011,9 +981,7 @@ class Axes3D(Axes):
     def _button_release(self, event):
         self.button_pressed = None
         toolbar = getattr(self.figure.canvas, "toolbar")
-        # backend_bases.release_zoom and backend_bases.release_pan call
-        # push_current, so check the navigation mode so we don't call it twice
-        if toolbar and self.get_navigate_mode() is None:
+        if toolbar:
             self.figure.canvas.toolbar.push_current()

     def _get_view(self):
@@ -1086,29 +1054,25 @@ class Axes3D(Axes):
         """
         Mouse moving.

-        By default, button-1 rotates, button-2 pans, and button-3 zooms;
-        these buttons can be modified via `mouse_init`.
+        By default, button-1 rotates and button-3 zooms; these buttons can be
+        modified via `mouse_init`.
         """

         if not self.button_pressed:
             return

-        if self.get_navigate_mode() is not None:
-            # we don't want to rotate if we are zooming/panning
-            # from the toolbar
-            return
-
         if self.M is None:
             return

         x, y = event.xdata, event.ydata
         # In case the mouse is out of bounds.
-        if x is None or event.inaxes != self:
+        if x is None:
             return

-        dx, dy = x - self._sx, y - self._sy
+        dx, dy = x - self.sx, y - self.sy
         w = self._pseudo_w
         h = self._pseudo_h
+        self.sx, self.sy = x, y

         # Rotation
         if self.button_pressed in self._rotate_btn:
@@ -1122,199 +1086,45 @@ class Axes3D(Axes):
             dazim = -(dy/h)*180*np.sin(roll) - (dx/w)*180*np.cos(roll)
             self.elev = self.elev + delev
             self.azim = self.azim + dazim
+            self.get_proj()
             self.stale = True
+            self.figure.canvas.draw_idle()

-        elif self.button_pressed in self._pan_btn:
-            # Start the pan event with pixel coordinates
-            px, py = self.transData.transform([self._sx, self._sy])
-            self.start_pan(px, py, 2)
-            # pan view (takes pixel coordinate input)
-            self.drag_pan(2, None, event.x, event.y)
-            self.end_pan()
+        elif self.button_pressed == 2:
+            # pan view
+            # get the x and y pixel coords
+            if dx == 0 and dy == 0:
+                return
+            minx, maxx, miny, maxy, minz, maxz = self.get_w_lims()
+            dx = 1-((w - dx)/w)
+            dy = 1-((h - dy)/h)
+            elev = np.deg2rad(self.elev)
+            azim = np.deg2rad(self.azim)
+            # project xv, yv, zv -> xw, yw, zw
+            dxx = (maxx-minx)*(dy*np.sin(elev)*np.cos(azim) + dx*np.sin(azim))
+            dyy = (maxy-miny)*(-dx*np.cos(azim) + dy*np.sin(elev)*np.sin(azim))
+            dzz = (maxz-minz)*(-dy*np.cos(elev))
+            # pan
+            self.set_xlim3d(minx + dxx, maxx + dxx)
+            self.set_ylim3d(miny + dyy, maxy + dyy)
+            self.set_zlim3d(minz + dzz, maxz + dzz)
+            self.get_proj()
+            self.figure.canvas.draw_idle()

         # Zoom
         elif self.button_pressed in self._zoom_btn:
-            # zoom view (dragging down zooms in)
-            scale = h/(h - dy)
-            self._scale_axis_limits(scale, scale, scale)
-
-        # Store the event coordinates for the next time through.
-        self._sx, self._sy = x, y
-        # Always request a draw update at the end of interaction
-        self.figure.canvas.draw_idle()
-
-    def drag_pan(self, button, key, x, y):
-        # docstring inherited
-
-        # Get the coordinates from the move event
-        p = self._pan_start
-        (xdata, ydata), (xdata_start, ydata_start) = p.trans_inverse.transform(
-            [(x, y), (p.x, p.y)])
-        self._sx, self._sy = xdata, ydata
-        # Calling start_pan() to set the x/y of this event as the starting
-        # move location for the next event
-        self.start_pan(x, y, button)
-        du, dv = xdata - xdata_start, ydata - ydata_start
-        dw = 0
-        if key == 'x':
-            dv = 0
-        elif key == 'y':
-            du = 0
-        if du == 0 and dv == 0:
-            return
-
-        # Transform the pan from the view axes to the data axes
-        R = np.array([self._view_u, self._view_v, self._view_w])
-        R = -R / self._box_aspect * self._dist
-        duvw_projected = R.T @ np.array([du, dv, dw])
-
-        # Calculate pan distance
-        minx, maxx, miny, maxy, minz, maxz = self.get_w_lims()
-        dx = (maxx - minx) * duvw_projected[0]
-        dy = (maxy - miny) * duvw_projected[1]
-        dz = (maxz - minz) * duvw_projected[2]
-
-        # Set the new axis limits
-        self.set_xlim3d(minx + dx, maxx + dx)
-        self.set_ylim3d(miny + dy, maxy + dy)
-        self.set_zlim3d(minz + dz, maxz + dz)
-
-    def _calc_view_axes(self, eye):
-        """
-        Get the unit vectors for the viewing axes in data coordinates.
-        `u` is towards the right of the screen
-        `v` is towards the top of the screen
-        `w` is out of the screen
-        """
-        elev_rad = np.deg2rad(art3d._norm_angle(self.elev))
-        roll_rad = np.deg2rad(art3d._norm_angle(self.roll))
-
-        # Look into the middle of the world coordinates
-        R = 0.5 * self._roll_to_vertical(self._box_aspect)
-
-        # Define which axis should be vertical. A negative value
-        # indicates the plot is upside down and therefore the values
-        # have been reversed:
-        V = np.zeros(3)
-        V[self._vertical_axis] = -1 if abs(elev_rad) > np.pi/2 else 1
-
-        u, v, w = proj3d._view_axes(eye, R, V, roll_rad)
-        return u, v, w
-
-    def _set_view_from_bbox(self, bbox, direction='in',
-                            mode=None, twinx=False, twiny=False):
-        """
-        Zoom in or out of the bounding box.
-        Will center the view on the center of the bounding box, and zoom by
-        the ratio of the size of the bounding box to the size of the Axes3D.
-        """
-        (start_x, start_y, stop_x, stop_y) = bbox
-        if mode == 'x':
-            start_y = self.bbox.min[1]
-            stop_y = self.bbox.max[1]
-        elif mode == 'y':
-            start_x = self.bbox.min[0]
-            stop_x = self.bbox.max[0]
-
-        # Clip to bounding box limits
-        start_x, stop_x = np.clip(sorted([start_x, stop_x]),
-                                  self.bbox.min[0], self.bbox.max[0])
-        start_y, stop_y = np.clip(sorted([start_y, stop_y]),
-                                  self.bbox.min[1], self.bbox.max[1])
-
-        # Move the center of the view to the center of the bbox
-        zoom_center_x = (start_x + stop_x)/2
-        zoom_center_y = (start_y + stop_y)/2
-
-        ax_center_x = (self.bbox.max[0] + self.bbox.min[0])/2
-        ax_center_y = (self.bbox.max[1] + self.bbox.min[1])/2
-
-        self.start_pan(zoom_center_x, zoom_center_y, 2)
-        self.drag_pan(2, None, ax_center_x, ax_center_y)
-        self.end_pan()
-
-        # Calculate zoom level
-        dx = abs(start_x - stop_x)
-        dy = abs(start_y - stop_y)
-        scale_u = dx / (self.bbox.max[0] - self.bbox.min[0])
-        scale_v = dy / (self.bbox.max[1] - self.bbox.min[1])
-
-        # Keep aspect ratios equal
-        scale = max(scale_u, scale_v)
-
-        # Zoom out
-        if direction == 'out':
-            scale = 1 / scale
-
-        self._zoom_data_limits(scale, scale, scale)
-
-    def _zoom_data_limits(self, scale_u, scale_v, scale_w):
-        """
-        Zoom in or out of a 3D plot.
-        Will scale the data limits by the scale factors. These will be
-        transformed to the x, y, z data axes based on the current view angles.
-        A scale factor > 1 zooms out and a scale factor < 1 zooms in.
-
-        For an axes that has had its aspect ratio set to 'equal', 'equalxy',
-        'equalyz', or 'equalxz', the relevant axes are constrained to zoom
-        equally.
-
-        Parameters
-        ----------
-        scale_u : float
-            Scale factor for the u view axis (view screen horizontal).
-        scale_v : float
-            Scale factor for the v view axis (view screen vertical).
-        scale_w : float
-            Scale factor for the w view axis (view screen depth).
-        """
-        scale = np.array([scale_u, scale_v, scale_w])
-
-        # Only perform frame conversion if unequal scale factors
-        if not np.allclose(scale, scale_u):
-            # Convert the scale factors from the view frame to the data frame
-            R = np.array([self._view_u, self._view_v, self._view_w])
-            S = scale * np.eye(3)
-            scale = np.linalg.norm(R.T @ S, axis=1)
-
-            # Set the constrained scale factors to the factor closest to 1
-            if self._aspect in ('equal', 'equalxy', 'equalxz', 'equalyz'):
-                ax_idxs = self._equal_aspect_axis_indices(self._aspect)
-                min_ax_idxs = np.argmin(np.abs(scale[ax_idxs] - 1))
-                scale[ax_idxs] = scale[ax_idxs][min_ax_idxs]
-
-        self._scale_axis_limits(scale[0], scale[1], scale[2])
-
-    def _scale_axis_limits(self, scale_x, scale_y, scale_z):
-        """
-        Keeping the center of the x, y, and z data axes fixed, scale their
-        limits by scale factors. A scale factor > 1 zooms out and a scale
-        factor < 1 zooms in.
-
-        Parameters
-        ----------
-        scale_x : float
-            Scale factor for the x data axis.
-        scale_y : float
-            Scale factor for the y data axis.
-        scale_z : float
-            Scale factor for the z data axis.
-        """
-        # Get the axis limits and centers
-        minx, maxx, miny, maxy, minz, maxz = self.get_w_lims()
-        cx = (maxx + minx)/2
-        cy = (maxy + miny)/2
-        cz = (maxz + minz)/2
-
-        # Scale the data range
-        dx = (maxx - minx)*scale_x
-        dy = (maxy - miny)*scale_y
-        dz = (maxz - minz)*scale_z
-
-        # Set the scaled axis limits
-        self.set_xlim3d(cx - dx/2, cx + dx/2)
-        self.set_ylim3d(cy - dy/2, cy + dy/2)
-        self.set_zlim3d(cz - dz/2, cz + dz/2)
+            # zoom view
+            # hmmm..this needs some help from clipping....
+            minx, maxx, miny, maxy, minz, maxz = self.get_w_lims()
+            df = 1-((h - dy)/h)
+            dx = (maxx-minx)*df
+            dy = (maxy-miny)*df
+            dz = (maxz-minz)*df
+            self.set_xlim3d(minx - dx, maxx + dx)
+            self.set_ylim3d(miny - dy, maxy + dy)
+            self.set_zlim3d(minz - dz, maxz + dz)
+            self.get_proj()
+            self.figure.canvas.draw_idle()

     def set_zlabel(self, zlabel, fontdict=None, labelpad=None, **kwargs):
         """
diff --git a/lib/mpl_toolkits/mplot3d/proj3d.py b/lib/mpl_toolkits/mplot3d/proj3d.py
index c9659456f3..2f23e3779b 100644
--- a/lib/mpl_toolkits/mplot3d/proj3d.py
+++ b/lib/mpl_toolkits/mplot3d/proj3d.py
@@ -72,86 +72,26 @@ def rotation_about_vector(v, angle):
     return R


-def _view_axes(E, R, V, roll):
-    """
-    Get the unit viewing axes in data coordinates.
-
-    Parameters
-    ----------
-    E : 3-element numpy array
-        The coordinates of the eye/camera.
-    R : 3-element numpy array
-        The coordinates of the center of the view box.
-    V : 3-element numpy array
-        Unit vector in the direction of the vertical axis.
-    roll : float
-        The roll angle in radians.
-
-    Returns
-    -------
-    u : 3-element numpy array
-        Unit vector pointing towards the right of the screen.
-    v : 3-element numpy array
-        Unit vector pointing towards the top of the screen.
-    w : 3-element numpy array
-        Unit vector pointing out of the screen.
-    """
-    w = (E - R)
-    w = w/np.linalg.norm(w)
-    u = np.cross(V, w)
+def view_transformation(E, R, V, roll):
+    n = (E - R)
+    n = n/np.linalg.norm(n)
+    u = np.cross(V, n)
     u = u/np.linalg.norm(u)
-    v = np.cross(w, u)  # Will be a unit vector
+    v = np.cross(n, u)  # Will be a unit vector

     # Save some computation for the default roll=0
     if roll != 0:
         # A positive rotation of the camera is a negative rotation of the world
-        Rroll = rotation_about_vector(w, -roll)
+        Rroll = rotation_about_vector(n, -roll)
         u = np.dot(Rroll, u)
         v = np.dot(Rroll, v)
-    return u, v, w

-
-def _view_transformation_uvw(u, v, w, E):
-    """
-    Return the view transformation matrix.
-
-    Parameters
-    ----------
-    u : 3-element numpy array
-        Unit vector pointing towards the right of the screen.
-    v : 3-element numpy array
-        Unit vector pointing towards the top of the screen.
-    w : 3-element numpy array
-        Unit vector pointing out of the screen.
-    E : 3-element numpy array
-        The coordinates of the eye/camera.
-    """
     Mr = np.eye(4)
     Mt = np.eye(4)
-    Mr[:3, :3] = [u, v, w]
+    Mr[:3, :3] = [u, v, n]
     Mt[:3, -1] = -E
-    M = np.dot(Mr, Mt)
-    return M
-

-def view_transformation(E, R, V, roll):
-    """
-    Return the view transformation matrix.
-
-    Parameters
-    ----------
-    E : 3-element numpy array
-        The coordinates of the eye/camera.
-    R : 3-element numpy array
-        The coordinates of the center of the view box.
-    V : 3-element numpy array
-        Unit vector in the direction of the vertical axis.
-    roll : float
-        The roll angle in radians.
-    """
-    u, v, w = _view_axes(E, R, V, roll)
-    M = _view_transformation_uvw(u, v, w, E)
-    return M
+    return np.dot(Mr, Mt)


 def persp_transformation(zfront, zback, focal_length):
diff --git a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/imagegrid_cbar_mode.png b/lib/mpl_toolkits/tests/baseline_images/test_axes_grid/imagegrid_cbar_mode.png
similarity index 100%
rename from lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/imagegrid_cbar_mode.png
rename to lib/mpl_toolkits/tests/baseline_images/test_axes_grid/imagegrid_cbar_mode.png
diff --git a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/image_grid_each_left_label_mode_all.png b/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/image_grid_each_left_label_mode_all.png
deleted file mode 100644
index 23abe8b964..0000000000
Binary files a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/image_grid_each_left_label_mode_all.png and /dev/null differ
diff --git a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/image_grid_single_bottom_label_mode_1.png b/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/image_grid_single_bottom_label_mode_1.png
deleted file mode 100644
index 1a0f4cd1fc..0000000000
Binary files a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/image_grid_single_bottom_label_mode_1.png and /dev/null differ
diff --git a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/insetposition.png b/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/insetposition.png
deleted file mode 100644
index e8676cfd6c..0000000000
Binary files a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/insetposition.png and /dev/null differ
diff --git a/lib/mpl_toolkits/tests/baseline_images/test_mplot3d/aspects_adjust_box.png b/lib/mpl_toolkits/tests/baseline_images/test_mplot3d/aspects_adjust_box.png
deleted file mode 100644
index 7fb448f2c5..0000000000
Binary files a/lib/mpl_toolkits/tests/baseline_images/test_mplot3d/aspects_adjust_box.png and /dev/null differ
diff --git a/lib/mpl_toolkits/tests/test_axes_grid.py b/lib/mpl_toolkits/tests/test_axes_grid.py
new file mode 100644
index 0000000000..4d77b90e5e
--- /dev/null
+++ b/lib/mpl_toolkits/tests/test_axes_grid.py
@@ -0,0 +1,56 @@
+import numpy as np
+
+import matplotlib as mpl
+import matplotlib.ticker as mticker
+from matplotlib.testing.decorators import image_comparison
+import matplotlib.pyplot as plt
+from mpl_toolkits.axes_grid1 import ImageGrid
+
+
+# The original version of this test relied on mpl_toolkits's slightly different
+# colorbar implementation; moving to matplotlib's own colorbar implementation
+# caused the small image comparison error.
+@image_comparison(['imagegrid_cbar_mode.png'],
+                  remove_text=True, style='mpl20', tol=0.3)
+def test_imagegrid_cbar_mode_edge():
+    # Remove this line when this test image is regenerated.
+    plt.rcParams['pcolormesh.snap'] = False
+
+    X, Y = np.meshgrid(np.linspace(0, 6, 30), np.linspace(0, 6, 30))
+    arr = np.sin(X) * np.cos(Y) + 1j*(np.sin(3*Y) * np.cos(Y/2.))
+
+    fig = plt.figure(figsize=(18, 9))
+
+    positions = (241, 242, 243, 244, 245, 246, 247, 248)
+    directions = ['row']*4 + ['column']*4
+    cbar_locations = ['left', 'right', 'top', 'bottom']*2
+
+    for position, direction, location in zip(
+            positions, directions, cbar_locations):
+        grid = ImageGrid(fig, position,
+                         nrows_ncols=(2, 2),
+                         direction=direction,
+                         cbar_location=location,
+                         cbar_size='20%',
+                         cbar_mode='edge')
+        ax1, ax2, ax3, ax4, = grid
+
+        ax1.imshow(arr.real, cmap='nipy_spectral')
+        ax2.imshow(arr.imag, cmap='hot')
+        ax3.imshow(np.abs(arr), cmap='jet')
+        ax4.imshow(np.arctan2(arr.imag, arr.real), cmap='hsv')
+
+        # In each row/column, the "first" colorbars must be overwritten by the
+        # "second" ones.  To achieve this, clear out the axes first.
+        for ax in grid:
+            ax.cax.cla()
+            cb = ax.cax.colorbar(ax.images[0])
+
+
+def test_imagegrid():
+    fig = plt.figure()
+    grid = ImageGrid(fig, 111, nrows_ncols=(1, 1))
+    ax = grid[0]
+    im = ax.imshow([[1, 2]], norm=mpl.colors.LogNorm())
+    cb = ax.cax.colorbar(im)
+    assert isinstance(cb.locator, mticker.LogLocator)
diff --git a/lib/mpl_toolkits/tests/test_axes_grid1.py b/lib/mpl_toolkits/tests/test_axes_grid1.py
index ea9b55de48..374b8c721f 100644
--- a/lib/mpl_toolkits/tests/test_axes_grid1.py
+++ b/lib/mpl_toolkits/tests/test_axes_grid1.py
@@ -3,7 +3,6 @@ import platform

 import matplotlib as mpl
 import matplotlib.pyplot as plt
-import matplotlib.ticker as mticker
 from matplotlib import cbook
 from matplotlib.backend_bases import MouseEvent
 from matplotlib.colors import LogNorm
@@ -18,11 +17,10 @@ from mpl_toolkits.axes_grid1 import (
 from mpl_toolkits.axes_grid1.anchored_artists import (
     AnchoredSizeBar, AnchoredDirectionArrows)
 from mpl_toolkits.axes_grid1.axes_divider import (
-    Divider, HBoxDivider, make_axes_area_auto_adjustable, SubplotDivider)
+    Divider, HBoxDivider, make_axes_area_auto_adjustable)
 from mpl_toolkits.axes_grid1.axes_rgb import RGBAxes
 from mpl_toolkits.axes_grid1.inset_locator import (
-    zoomed_inset_axes, mark_inset, inset_axes, BboxConnectorPatch,
-    InsetPosition)
+    zoomed_inset_axes, mark_inset, inset_axes, BboxConnectorPatch)
 import mpl_toolkits.axes_grid1.mpl_axes

 import pytest
@@ -369,40 +367,6 @@ def test_axes_locatable_position():
                       0.03621495327102808)


-@image_comparison(['image_grid_each_left_label_mode_all.png'], style='mpl20',
-                  savefig_kwarg={'bbox_inches': 'tight'})
-def test_image_grid_each_left_label_mode_all():
-    imdata = np.arange(100).reshape((10, 10))
-
-    fig = plt.figure(1, (3, 3))
-    grid = ImageGrid(fig, (1, 1, 1), nrows_ncols=(3, 2), axes_pad=(0.5, 0.3),
-                     cbar_mode="each", cbar_location="left", cbar_size="15%",
-                     label_mode="all")
-    # 3-tuple rect => SubplotDivider
-    assert isinstance(grid.get_divider(), SubplotDivider)
-    assert grid.get_axes_pad() == (0.5, 0.3)
-    assert grid.get_aspect()  # True by default for ImageGrid
-    for ax, cax in zip(grid, grid.cbar_axes):
-        im = ax.imshow(imdata, interpolation='none')
-        cax.colorbar(im)
-
-
-@image_comparison(['image_grid_single_bottom_label_mode_1.png'], style='mpl20',
-                  savefig_kwarg={'bbox_inches': 'tight'})
-def test_image_grid_single_bottom():
-    imdata = np.arange(100).reshape((10, 10))
-
-    fig = plt.figure(1, (2.5, 1.5))
-    grid = ImageGrid(fig, (0, 0, 1, 1), nrows_ncols=(1, 3),
-                     axes_pad=(0.2, 0.15), cbar_mode="single",
-                     cbar_location="bottom", cbar_size="10%", label_mode="1")
-    # 4-tuple rect => Divider, isinstance will give True for SubplotDivider
-    assert type(grid.get_divider()) is Divider
-    for i in range(3):
-        im = grid[i].imshow(imdata, interpolation='none')
-    grid.cbar_axes[0].colorbar(im)
-
-
 @image_comparison(['image_grid.png'],
                   remove_text=True, style='mpl20',
                   savefig_kwarg={'bbox_inches': 'tight'})
@@ -604,60 +568,3 @@ def test_rgb_axes():
     g = rng.random((5, 5))
     b = rng.random((5, 5))
     ax.imshow_rgb(r, g, b, interpolation='none')
-
-
-@image_comparison(['insetposition.png'], remove_text=True)
-def test_insetposition():
-    fig, ax = plt.subplots(figsize=(2, 2))
-    ax_ins = plt.axes([0, 0, 1, 1])
-    ip = InsetPosition(ax, [0.2, 0.25, 0.5, 0.4])
-    ax_ins.set_axes_locator(ip)
-
-
-# The original version of this test relied on mpl_toolkits's slightly different
-# colorbar implementation; moving to matplotlib's own colorbar implementation
-# caused the small image comparison error.
-@image_comparison(['imagegrid_cbar_mode.png'],
-                  remove_text=True, style='mpl20', tol=0.3)
-def test_imagegrid_cbar_mode_edge():
-    # Remove this line when this test image is regenerated.
-    plt.rcParams['pcolormesh.snap'] = False
-
-    X, Y = np.meshgrid(np.linspace(0, 6, 30), np.linspace(0, 6, 30))
-    arr = np.sin(X) * np.cos(Y) + 1j*(np.sin(3*Y) * np.cos(Y/2.))
-
-    fig = plt.figure(figsize=(18, 9))
-
-    positions = (241, 242, 243, 244, 245, 246, 247, 248)
-    directions = ['row']*4 + ['column']*4
-    cbar_locations = ['left', 'right', 'top', 'bottom']*2
-
-    for position, direction, location in zip(
-            positions, directions, cbar_locations):
-        grid = ImageGrid(fig, position,
-                         nrows_ncols=(2, 2),
-                         direction=direction,
-                         cbar_location=location,
-                         cbar_size='20%',
-                         cbar_mode='edge')
-        ax1, ax2, ax3, ax4, = grid
-
-        ax1.imshow(arr.real, cmap='nipy_spectral')
-        ax2.imshow(arr.imag, cmap='hot')
-        ax3.imshow(np.abs(arr), cmap='jet')
-        ax4.imshow(np.arctan2(arr.imag, arr.real), cmap='hsv')
-
-        # In each row/column, the "first" colorbars must be overwritten by the
-        # "second" ones.  To achieve this, clear out the axes first.
-        for ax in grid:
-            ax.cax.cla()
-            cb = ax.cax.colorbar(ax.images[0])
-
-
-def test_imagegrid():
-    fig = plt.figure()
-    grid = ImageGrid(fig, 111, nrows_ncols=(1, 1))
-    ax = grid[0]
-    im = ax.imshow([[1, 2]], norm=mpl.colors.LogNorm())
-    cb = ax.cax.colorbar(im)
-    assert isinstance(cb.locator, mticker.LogLocator)
diff --git a/lib/mpl_toolkits/tests/test_axisartist_axislines.py b/lib/mpl_toolkits/tests/test_axisartist_axislines.py
index 7743cb35aa..1b239f2141 100644
--- a/lib/mpl_toolkits/tests/test_axisartist_axislines.py
+++ b/lib/mpl_toolkits/tests/test_axisartist_axislines.py
@@ -4,7 +4,7 @@ from matplotlib.testing.decorators import image_comparison
 from matplotlib.transforms import IdentityTransform

 from mpl_toolkits.axisartist.axislines import SubplotZero, Subplot
-from mpl_toolkits.axisartist import Axes, SubplotHost
+from mpl_toolkits.axisartist import Axes, SubplotHost, ParasiteAxes


 @image_comparison(['SubplotZero.png'], style='default')
@@ -81,7 +81,8 @@ def test_ParasiteAxesAuxTrans():
         ax1 = SubplotHost(fig, 1, 3, i+1)
         fig.add_subplot(ax1)

-        ax2 = ax1.get_aux_axes(IdentityTransform(), viewlim_mode=None)
+        ax2 = ParasiteAxes(ax1, IdentityTransform())
+        ax1.parasites.append(ax2)
         if name.startswith('pcolor'):
             getattr(ax2, name)(xx, yy, data[:-1, :-1])
         else:
diff --git a/lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py b/lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py
index 55e983e516..9a501daa2e 100644
--- a/lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py
+++ b/lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py
@@ -6,6 +6,7 @@ from matplotlib.projections import PolarAxes
 from matplotlib.transforms import Affine2D, Transform
 from matplotlib.testing.decorators import image_comparison

+from mpl_toolkits.axes_grid1.parasite_axes import ParasiteAxes
 from mpl_toolkits.axisartist import SubplotHost
 from mpl_toolkits.axes_grid1.parasite_axes import host_subplot_class_factory
 from mpl_toolkits.axisartist import angle_helper
@@ -65,7 +66,8 @@ def test_custom_transform():
     ax1 = SubplotHost(fig, 1, 1, 1, grid_helper=grid_helper)
     fig.add_subplot(ax1)

-    ax2 = ax1.get_aux_axes(tr, viewlim_mode="equal")
+    ax2 = ParasiteAxes(ax1, tr, viewlim_mode="equal")
+    ax1.parasites.append(ax2)
     ax2.plot([3, 6], [5.0, 10.])

     ax1.set_aspect(1.)
@@ -125,9 +127,10 @@ def test_polar_box():
     axis.get_helper().set_extremes(-180, 90)

     # A parasite axes with given transform
-    ax2 = ax1.get_aux_axes(tr, viewlim_mode="equal")
+    ax2 = ParasiteAxes(ax1, tr, viewlim_mode="equal")
     assert ax2.transData == tr + ax1.transData
     # Anything you draw in ax2 will match the ticks and grids of ax1.
+    ax1.parasites.append(ax2)
     ax2.plot(np.linspace(0, 30, 50), np.linspace(10, 10, 50))

     ax1.set_aspect(1.)
diff --git a/lib/mpl_toolkits/tests/test_mplot3d.py b/lib/mpl_toolkits/tests/test_mplot3d.py
index db371438cd..bd651d1ad5 100644
--- a/lib/mpl_toolkits/tests/test_mplot3d.py
+++ b/lib/mpl_toolkits/tests/test_mplot3d.py
@@ -5,8 +5,7 @@ import pytest

 from mpl_toolkits.mplot3d import Axes3D, axes3d, proj3d, art3d
 import matplotlib as mpl
-from matplotlib.backend_bases import (MouseButton, MouseEvent,
-                                      NavigationToolbar2)
+from matplotlib.backend_bases import MouseButton
 from matplotlib import cm
 from matplotlib import colors as mcolors, patches as mpatch
 from matplotlib.testing.decorators import image_comparison, check_figures_equal
@@ -45,25 +44,7 @@ def test_aspects():
                 ax.plot3D(*zip(start*scale, end*scale))
     for i, ax in enumerate(axs):
         ax.set_box_aspect((3, 4, 5))
-        ax.set_aspect(aspects[i], adjustable='datalim')
-
-
-@mpl3d_image_comparison(['aspects_adjust_box.png'], remove_text=False)
-def test_aspects_adjust_box():
-    aspects = ('auto', 'equal', 'equalxy', 'equalyz', 'equalxz')
-    fig, axs = plt.subplots(1, len(aspects), subplot_kw={'projection': '3d'},
-                            figsize=(11, 3))
-
-    # Draw rectangular cuboid with side lengths [4, 3, 5]
-    r = [0, 1]
-    scale = np.array([4, 3, 5])
-    pts = itertools.combinations(np.array(list(itertools.product(r, r, r))), 2)
-    for start, end in pts:
-        if np.sum(np.abs(start - end)) == r[1] - r[0]:
-            for ax in axs:
-                ax.plot3D(*zip(start*scale, end*scale))
-    for i, ax in enumerate(axs):
-        ax.set_aspect(aspects[i], adjustable='box')
+        ax.set_aspect(aspects[i])


 def test_axes3d_repr():
@@ -932,9 +913,7 @@ def test_axes3d_labelpad():
     ax.set_xlabel('X LABEL', labelpad=10)
     assert ax.xaxis.labelpad == 10
     ax.set_ylabel('Y LABEL')
-    ax.set_zlabel('Z LABEL', labelpad=20)
-    assert ax.zaxis.labelpad == 20
-    assert ax.get_zlabel() == 'Z LABEL'
+    ax.set_zlabel('Z LABEL')
     # or manually
     ax.yaxis.labelpad = 20
     ax.zaxis.labelpad = -40
@@ -978,8 +957,7 @@ def _test_proj_make_M():
     R = np.array([100, 100, 100])
     V = np.array([0, 0, 1])
     roll = 0
-    u, v, w = proj3d._view_axes(E, R, V, roll)
-    viewM = proj3d._view_transformation_uvw(u, v, w, E)
+    viewM = proj3d.view_transformation(E, R, V, roll)
     perspM = proj3d.persp_transformation(100, -100, 1)
     M = np.dot(perspM, viewM)
     return M
@@ -1045,8 +1023,7 @@ def test_proj_axes_cube_ortho():
     R = np.array([0, 0, 0])
     V = np.array([0, 0, 1])
     roll = 0
-    u, v, w = proj3d._view_axes(E, R, V, roll)
-    viewM = proj3d._view_transformation_uvw(u, v, w, E)
+    viewM = proj3d.view_transformation(E, R, V, roll)
     orthoM = proj3d.ortho_transformation(-1, 1)
     M = np.dot(orthoM, viewM)

@@ -1129,7 +1106,6 @@ def test_lines_dists_nowarning():

 def test_autoscale():
     fig, ax = plt.subplots(subplot_kw={"projection": "3d"})
-    assert ax.get_zscale() == 'linear'
     ax.margins(x=0, y=.1, z=.2)
     ax.plot([0, 1], [0, 1], [0, 1])
     assert ax.get_w_lims() == (0, 1, -.1, 1.1, -.2, 1.2)
@@ -1574,9 +1550,6 @@ def test_equal_box_aspect():
     ax.axis('off')
     ax.set_box_aspect((1, 1, 1))

-    with pytest.raises(ValueError, match="Argument zoom ="):
-        ax.set_box_aspect((1, 1, 1), zoom=-1)
-

 def test_colorbar_pos():
     num_plots = 2
@@ -1594,55 +1567,6 @@ def test_colorbar_pos():
     assert cbar.ax.get_position().extents[1] < 0.2


-def test_inverted_zaxis():
-    fig = plt.figure()
-    ax = fig.add_subplot(projection='3d')
-    assert not ax.zaxis_inverted()
-    assert ax.get_zlim() == (0, 1)
-    assert ax.get_zbound() == (0, 1)
-
-    # Change bound
-    ax.set_zbound((0, 2))
-    assert not ax.zaxis_inverted()
-    assert ax.get_zlim() == (0, 2)
-    assert ax.get_zbound() == (0, 2)
-
-    # Change invert
-    ax.invert_zaxis()
-    assert ax.zaxis_inverted()
-    assert ax.get_zlim() == (2, 0)
-    assert ax.get_zbound() == (0, 2)
-
-    # Set upper bound
-    ax.set_zbound(upper=1)
-    assert ax.zaxis_inverted()
-    assert ax.get_zlim() == (1, 0)
-    assert ax.get_zbound() == (0, 1)
-
-    # Set lower bound
-    ax.set_zbound(lower=2)
-    assert ax.zaxis_inverted()
-    assert ax.get_zlim() == (2, 1)
-    assert ax.get_zbound() == (1, 2)
-
-
-def test_set_zlim():
-    fig = plt.figure()
-    ax = fig.add_subplot(projection='3d')
-    assert ax.get_zlim() == (0, 1)
-    ax.set_zlim(zmax=2)
-    assert ax.get_zlim() == (0, 2)
-    ax.set_zlim(zmin=1)
-    assert ax.get_zlim() == (1, 2)
-
-    with pytest.raises(
-            TypeError, match="Cannot pass both 'bottom' and 'zmin'"):
-        ax.set_zlim(bottom=0, zmin=1)
-    with pytest.raises(
-            TypeError, match="Cannot pass both 'top' and 'zmax'"):
-        ax.set_zlim(top=0, zmax=1)
-
-
 def test_shared_axes_retick():
     fig = plt.figure()
     ax1 = fig.add_subplot(211, projection="3d")
@@ -1693,82 +1617,6 @@ def test_pan():
     assert z_center != pytest.approx(z_center0)


-@pytest.mark.parametrize("tool,button,key,expected",
-                         [("zoom", MouseButton.LEFT, None,  # zoom in
-                          ((0.00, 0.06), (0.01, 0.07), (0.02, 0.08))),
-                          ("zoom", MouseButton.LEFT, 'x',  # zoom in
-                          ((-0.01, 0.10), (-0.03, 0.08), (-0.06, 0.06))),
-                          ("zoom", MouseButton.LEFT, 'y',  # zoom in
-                          ((-0.07, 0.04), (-0.03, 0.08), (0.00, 0.11))),
-                          ("zoom", MouseButton.RIGHT, None,  # zoom out
-                          ((-0.09, 0.15), (-0.07, 0.17), (-0.06, 0.18))),
-                          ("pan", MouseButton.LEFT, None,
-                          ((-0.70, -0.58), (-1.03, -0.91), (-1.27, -1.15))),
-                          ("pan", MouseButton.LEFT, 'x',
-                          ((-0.96, -0.84), (-0.58, -0.46), (-0.06, 0.06))),
-                          ("pan", MouseButton.LEFT, 'y',
-                          ((0.20, 0.32), (-0.51, -0.39), (-1.27, -1.15)))])
-def test_toolbar_zoom_pan(tool, button, key, expected):
-    # NOTE: The expected zoom values are rough ballparks of moving in the view
-    #       to make sure we are getting the right direction of motion.
-    #       The specific values can and should change if the zoom movement
-    #       scaling factor gets updated.
-    fig = plt.figure()
-    ax = fig.add_subplot(projection='3d')
-    ax.scatter(0, 0, 0)
-    fig.canvas.draw()
-    xlim0, ylim0, zlim0 = ax.get_xlim3d(), ax.get_ylim3d(), ax.get_zlim3d()
-
-    # Mouse from (0, 0) to (1, 1)
-    d0 = (0, 0)
-    d1 = (1, 1)
-    # Convert to screen coordinates ("s").  Events are defined only with pixel
-    # precision, so round the pixel values, and below, check against the
-    # corresponding xdata/ydata, which are close but not equal to d0/d1.
-    s0 = ax.transData.transform(d0).astype(int)
-    s1 = ax.transData.transform(d1).astype(int)
-
-    # Set up the mouse movements
-    start_event = MouseEvent(
-        "button_press_event", fig.canvas, *s0, button, key=key)
-    stop_event = MouseEvent(
-        "button_release_event", fig.canvas, *s1, button, key=key)
-
-    tb = NavigationToolbar2(fig.canvas)
-    if tool == "zoom":
-        tb.zoom()
-        tb.press_zoom(start_event)
-        tb.drag_zoom(stop_event)
-        tb.release_zoom(stop_event)
-    else:
-        tb.pan()
-        tb.press_pan(start_event)
-        tb.drag_pan(stop_event)
-        tb.release_pan(stop_event)
-
-    # Should be close, but won't be exact due to screen integer resolution
-    xlim, ylim, zlim = expected
-    assert ax.get_xlim3d() == pytest.approx(xlim, abs=0.01)
-    assert ax.get_ylim3d() == pytest.approx(ylim, abs=0.01)
-    assert ax.get_zlim3d() == pytest.approx(zlim, abs=0.01)
-
-    # Ensure that back, forward, and home buttons work
-    tb.back()
-    assert ax.get_xlim3d() == pytest.approx(xlim0)
-    assert ax.get_ylim3d() == pytest.approx(ylim0)
-    assert ax.get_zlim3d() == pytest.approx(zlim0)
-
-    tb.forward()
-    assert ax.get_xlim3d() == pytest.approx(xlim, abs=0.01)
-    assert ax.get_ylim3d() == pytest.approx(ylim, abs=0.01)
-    assert ax.get_zlim3d() == pytest.approx(zlim, abs=0.01)
-
-    tb.home()
-    assert ax.get_xlim3d() == pytest.approx(xlim0)
-    assert ax.get_ylim3d() == pytest.approx(ylim0)
-    assert ax.get_zlim3d() == pytest.approx(zlim0)
-
-
 @mpl.style.context('default')
 @check_figures_equal(extensions=["png"])
 def test_scalarmap_update(fig_test, fig_ref):
diff --git a/pyproject.toml b/pyproject.toml
deleted file mode 100644
index ef70e18932..0000000000
--- a/pyproject.toml
+++ /dev/null
@@ -1,7 +0,0 @@
-[build-system]
-build-backend = "setuptools.build_meta"
-requires = [
-    "certifi>=2020.06.20",
-    "numpy>=1.19",
-    "setuptools_scm>=7",
-]
diff --git a/requirements/doc/doc-requirements.txt b/requirements/doc/doc-requirements.txt
index 98586608cb..ad0e44d16f 100644
--- a/requirements/doc/doc-requirements.txt
+++ b/requirements/doc/doc-requirements.txt
@@ -14,7 +14,7 @@ ipywidgets
 numpydoc>=1.0
 packaging>=20
 pydata-sphinx-theme>=0.9.0
-mpl-sphinx-theme
+mpl-sphinx-theme~=3.6.0
 sphinxcontrib-svg2pdfconverter>=1.1.0
 sphinx-gallery>=0.10
 sphinx-copybutton
diff --git a/requirements/testing/flake8.txt b/requirements/testing/flake8.txt
index a4d006b855..f987089730 100644
--- a/requirements/testing/flake8.txt
+++ b/requirements/testing/flake8.txt
@@ -5,5 +5,3 @@ flake8>=3.8
 pydocstyle>=5.1.0
 # 1.4.0 adds docstring-convention=all
 flake8-docstrings>=1.4.0
-# fix bug where flake8 aborts checking on syntax error
-flake8-force
diff --git a/setup.py b/setup.py
index f0ee4eeda0..d1f1de7078 100644
--- a/setup.py
+++ b/setup.py
@@ -34,9 +34,6 @@ import setuptools.command.build_ext
 import setuptools.command.build_py
 import setuptools.command.sdist

-# sys.path modified to find setupext.py during pyproject.toml builds.
-sys.path.append(str(Path(__file__).resolve().parent))
-
 import setupext
 from setupext import print_raw, print_status

@@ -71,12 +68,6 @@ def has_flag(self, flagname):

 class BuildExtraLibraries(setuptools.command.build_ext.build_ext):
     def finalize_options(self):
-        # If coverage is enabled then need to keep the .o and .gcno files in a
-        # non-temporary directory otherwise coverage info not collected.
-        cppflags = os.getenv('CPPFLAGS')
-        if cppflags and '--coverage' in cppflags:
-            self.build_temp = 'build'
-
         self.distribution.ext_modules[:] = [
             ext
             for package in good_packages
@@ -217,9 +208,8 @@ def update_matplotlibrc(path):
 class BuildPy(setuptools.command.build_py.build_py):
     def run(self):
         super().run()
-        if not self.editable_mode:
-            update_matplotlibrc(
-                Path(self.build_lib, "matplotlib/mpl-data/matplotlibrc"))
+        update_matplotlibrc(
+            Path(self.build_lib, "matplotlib/mpl-data/matplotlibrc"))


 class Sdist(setuptools.command.sdist.sdist):
@@ -281,8 +271,8 @@ setup(  # Finally, pass this all along to setuptools to do the heavy lifting.
         'Forum': 'https://discourse.matplotlib.org/',
         'Donate': 'https://numfocus.org/donate-to-matplotlib'
     },
-    long_description=Path("README.md").read_text(encoding="utf-8"),
-    long_description_content_type="text/markdown",
+    long_description=Path("README.rst").read_text(encoding="utf-8"),
+    long_description_content_type="text/x-rst",
     license="PSF",
     platforms="any",
     classifiers=[
@@ -310,6 +300,11 @@ setup(  # Finally, pass this all along to setuptools to do the heavy lifting.
     package_data=package_data,

     python_requires='>={}'.format('.'.join(str(n) for n in py_min_version)),
+    setup_requires=[
+        "certifi>=2020.06.20",
+        "numpy>=1.19",
+        "setuptools_scm>=7",
+    ],
     install_requires=[
         "contourpy>=1.0.1",
         "cycler>=0.10",
diff --git a/test_bar_nan.py b/test_bar_nan.py
new file mode 100644
index 0000000000..1d27af1bba
--- /dev/null
+++ b/test_bar_nan.py
@@ -0,0 +1,5 @@
+import numpy as np
+import matplotlib.pyplot as plt
+f, ax = plt.subplots()
+ax.bar([np.nan], [np.nan])
+plt.show()
diff --git a/tutorials/introductory/images.py b/tutorials/introductory/images.py
index 7673037c4a..3f816b5b6a 100644
--- a/tutorials/introductory/images.py
+++ b/tutorials/introductory/images.py
@@ -49,8 +49,7 @@ For now, let's get on with the implicit approach:
 """

 import matplotlib.pyplot as plt
-import numpy as np
-from PIL import Image
+import matplotlib.image as mpimg

 ###############################################################################
 # .. _importing_data:
@@ -73,14 +72,23 @@ from PIL import Image
 # <https://raw.githubusercontent.com/matplotlib/matplotlib/main/doc/_static/stinkbug.png>`_
 # to your computer for the rest of this tutorial.
 #
-# We use Pillow to open an image (with `PIL.Image.open`), and immediately
-# convert the `PIL.Image.Image` object into an 8-bit (``dtype=uint8``) numpy
-# array.
+# And here we go...

-img = np.asarray(Image.open('../../doc/_static/stinkbug.png'))
-print(repr(img))
+img = mpimg.imread('../../doc/_static/stinkbug.png')
+print(img)

 ###############################################################################
+# Note the dtype there - float32.  Matplotlib has rescaled the 8 bit
+# data from each channel to floating point data between 0.0 and 1.0.  As
+# a side note, the only datatype that Pillow can work with is uint8.
+# Matplotlib plotting can handle float32 and uint8, but image
+# reading/writing for any format other than PNG is limited to uint8
+# data.  Why 8 bits? Most displays can only render 8 bits per channel
+# worth of color gradation.  Why can they only render 8 bits/channel?
+# Because that's about all the human eye can see.  More here (from a
+# photography standpoint): `Luminous Landscape bit depth tutorial
+# <https://luminous-landscape.com/bit-depth/>`_.
+#
 # Each inner list represents a pixel.  Here, with an RGB image, there
 # are 3 values.  Since it's a black and white image, R, G, and B are all
 # similar.  An RGBA (where A is alpha, or transparency) has 4 values
@@ -178,7 +186,7 @@ plt.colorbar()
 # interesting regions is the histogram.  To create a histogram of our
 # image data, we use the :func:`~matplotlib.pyplot.hist` function.

-plt.hist(lum_img.ravel(), bins=range(256), fc='k', ec='k')
+plt.hist(lum_img.ravel(), bins=256, range=(0.0, 1.0), fc='k', ec='k')

 ###############################################################################
 # Most often, the "interesting" part of the image is around the peak,
@@ -186,23 +194,29 @@ plt.hist(lum_img.ravel(), bins=range(256), fc='k', ec='k')
 # below the peak.  In our histogram, it looks like there's not much
 # useful information in the high end (not many white things in the
 # image).  Let's adjust the upper limit, so that we effectively "zoom in
-# on" part of the histogram.  We do this by setting *clim*, the colormap
-# limits.
+# on" part of the histogram.  We do this by passing the clim argument to
+# imshow.  You could also do this by calling the
+# :meth:`~matplotlib.cm.ScalarMappable.set_clim` method of the image plot
+# object, but make sure that you do so in the same cell as your plot
+# command when working with the Jupyter Notebook - it will not change
+# plots from earlier cells.
 #
-# This can be done by passing a *clim* keyword argument in the call to
-# ``imshow``.
+# You can specify the clim in the call to ``plot``.

-plt.imshow(lum_img, clim=(0, 175))
+imgplot = plt.imshow(lum_img, clim=(0.0, 0.7))

 ###############################################################################
-# This can also be done by calling the
-# :meth:`~matplotlib.cm.ScalarMappable.set_clim` method of the returned image
-# plot object, but make sure that you do so in the same cell as your plot
-# command when working with the Jupyter Notebook - it will not change
-# plots from earlier cells.
-
+# You can also specify the clim using the returned object
+fig = plt.figure()
+ax = fig.add_subplot(1, 2, 1)
+imgplot = plt.imshow(lum_img)
+ax.set_title('Before')
+plt.colorbar(ticks=[0.1, 0.3, 0.5, 0.7], orientation='horizontal')
+ax = fig.add_subplot(1, 2, 2)
 imgplot = plt.imshow(lum_img)
-imgplot.set_clim(0, 175)
+imgplot.set_clim(0.0, 0.7)
+ax.set_title('After')
+plt.colorbar(ticks=[0.1, 0.3, 0.5, 0.7], orientation='horizontal')

 ###############################################################################
 # .. _Interpolation:
@@ -226,17 +240,19 @@ imgplot.set_clim(0, 175)
 # We'll use the Pillow library that we used to load the image also to resize
 # the image.

+from PIL import Image
+
 img = Image.open('../../doc/_static/stinkbug.png')
 img.thumbnail((64, 64))  # resizes image in-place
 imgplot = plt.imshow(img)

 ###############################################################################
-# Here we use the default interpolation ("nearest"), since we did not
+# Here we have the default interpolation, bilinear, since we did not
 # give :func:`~matplotlib.pyplot.imshow` any interpolation argument.
 #
-# Let's try some others. Here's "bilinear":
+# Let's try some others. Here's "nearest", which does no interpolation.

-imgplot = plt.imshow(img, interpolation="bilinear")
+imgplot = plt.imshow(img, interpolation="nearest")

 ###############################################################################
 # and bicubic:
diff --git a/tutorials/introductory/lifecycle.py b/tutorials/introductory/lifecycle.py
index da976a39de..b0181b4df7 100644
--- a/tutorials/introductory/lifecycle.py
+++ b/tutorials/introductory/lifecycle.py
@@ -26,7 +26,7 @@ explicit and implicit interfaces see :ref:`api_interfaces`.
 In the explicit object-oriented (OO) interface we directly utilize instances of
 :class:`axes.Axes` to build up the visualization in an instance of
 :class:`figure.Figure`.  In the implicit interface, inspired by and modeled on
-MATLAB, we use a global state-based interface which is encapsulated in the
+MATLAB, uses an global state-based interface which is is encapsulated in the
 :mod:`.pyplot` module to plot to the "current Axes".  See the :doc:`pyplot
 tutorials </tutorials/introductory/pyplot>` for a more in-depth look at the
 pyplot interface.
@@ -34,16 +34,16 @@ pyplot interface.
 Most of the terms are straightforward but the main thing to remember
 is that:

-* The `.Figure` is the final image, and may contain one or more `~.axes.Axes`.
-* The `~.axes.Axes` represents an individual plot (not to be confused with
-   `~.axis.Axis`, which refers to the x/y axis of a plot).
+* The Figure is the final image that may contain 1 or more Axes.
+* The Axes represent an individual plot (don't confuse this with the word
+  "axis", which refers to the x/y axis of a plot).

 We call methods that do the plotting directly from the Axes, which gives
 us much more flexibility and power in customizing our plot.

 .. note::

-   In general, use the explicit interface over the implicit pyplot interface
+   In general prefer the explicit interface over the implicit pyplot interface
    for plotting.

 Our data
diff --git a/tutorials/toolkits/axisartist.py b/tutorials/toolkits/axisartist.py
index 087a4fab20..2e539cc3f2 100644
--- a/tutorials/toolkits/axisartist.py
+++ b/tutorials/toolkits/axisartist.py
@@ -519,9 +519,10 @@ coordinates, or you may use Parasite Axes for convenience.::
     ax1 = SubplotHost(fig, 1, 2, 2, grid_helper=grid_helper)

     # A parasite axes with given transform
-    ax2 = ax1.get_aux_axes(tr, "equal")
+    ax2 = ParasiteAxesAuxTrans(ax1, tr, "equal")
     # note that ax2.transData == tr + ax1.transData
     # Anything you draw in ax2 will match the ticks and grids of ax1.
+    ax1.parasites.append(ax2)

 .. figure:: ../../gallery/axisartist/images/sphx_glr_demo_curvelinear_grid_001.png
    :target: ../../gallery/axisartist/demo_curvelinear_grid.html
[The command completed with exit code 0.]
[Current working directory: /workspace/matplotlib__matplotlib__3.6]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-21 04:37:58,527 - INFO - ------------------------------
2025-01-21 04:37:58,527 - INFO - END Runtime Completion Fn
2025-01-21 04:37:58,527 - INFO - ------------------------------
2025-01-21 04:37:58,528 - INFO - Got git diff for instance matplotlib__matplotlib-24149:
--------
diff --git a/.circleci/config.yml b/.circleci/config.yml
index bd139de688..2b6ef7c642 100644
--- a/.circleci/config.yml
+++ b/.circleci/config.yml
@@ -141,7 +141,7 @@ commands:
                [ "$CIRCLE_PR_NUMBER" = "" ]; then
               export RELEASE_TAG='-t release'
             fi
-            make html O="-T $RELEASE_TAG -j4 -w /tmp/sphinxerrorswarnings.log"
+            make html O="-T $RELEASE_TAG -j4"
             rm -r build/html/_sources
           working_directory: doc
       - save_cache:
@@ -149,24 +149,6 @@ commands:
           paths:
             - doc/build/doctrees

-  doc-show-errors-warnings:
-    steps:
-      - run:
-          name: Extract possible build errors and warnings
-          command: |
-           (grep "WARNING\|ERROR" /tmp/sphinxerrorswarnings.log ||
-            echo "No errors or warnings")
-
-  doc-show-deprecations:
-    steps:
-      - run:
-          name: Extract possible deprecation warnings in examples and tutorials
-          command: |
-           (grep DeprecationWarning -r -l doc/build/html/gallery ||
-            echo "No deprecation warnings in gallery")
-           (grep DeprecationWarning -r -l doc/build/html/tutorials ||
-            echo "No deprecation warnings in tutorials")
-
   doc-bundle:
     steps:
       - run:
@@ -204,8 +186,6 @@ jobs:
       - doc-deps-install

       - doc-build
-      - doc-show-errors-warnings
-      - doc-show-deprecations

       - doc-bundle

diff --git a/.flake8 b/.flake8
index 7a617c1fed..4cbcd7e288 100644
--- a/.flake8
+++ b/.flake8
@@ -113,4 +113,3 @@ per-file-ignores =
     examples/user_interfaces/pylab_with_gtk4_sgskip.py: E402
     examples/user_interfaces/toolmanager_sgskip.py: E402
     examples/userdemo/pgf_preamble_sgskip.py: E402
-force-check = True
diff --git a/.github/workflows/cibuildsdist.yml b/.github/workflows/cibuildsdist.yml
index d8b609dc73..4e1d9085f5 100644
--- a/.github/workflows/cibuildsdist.yml
+++ b/.github/workflows/cibuildsdist.yml
@@ -62,9 +62,3 @@ jobs:

       - name: Check version number is not 0
         run: python ./ci/check_version_number.py
-
-      - name: Install twine
-        run: pip install twine
-
-      - name: Check README rendering for PyPI
-        run: twine check dist/*
diff --git a/.github/workflows/nightlies.yml b/.github/workflows/nightlies.yml
index 571ebdcac7..48c6e9713a 100644
--- a/.github/workflows/nightlies.yml
+++ b/.github/workflows/nightlies.yml
@@ -49,7 +49,7 @@ jobs:

         # N.B. anaconda-client is only maintained on the main channel
       - name: Install anaconda-client
-        uses: mamba-org/provision-with-micromamba@v13
+        uses: mamba-org/provision-with-micromamba@v12
         with:
           environment-file: false
           environment-name: nightlies
diff --git a/.github/workflows/tests.yml b/.github/workflows/tests.yml
index fd6eac7ce2..0c5b7a08ce 100644
--- a/.github/workflows/tests.yml
+++ b/.github/workflows/tests.yml
@@ -240,13 +240,9 @@ jobs:

           cat mplsetup.cfg

-          if [[ "${{ matrix.name-suffix }}" == '(Minimum Versions)' ]]; then
-            # Minimum versions run does not use build isolation so that it
-            # builds against the pre-installed minver dependencies.
-            python -m pip install --no-deps --no-build-isolation -ve .
-          else
-            python -m pip install --no-deps -ve .
-          fi
+          # All dependencies must have been pre-installed, so that the minver
+          # constraints are held.
+          python -m pip install --no-deps -ve .

           if [[ "${{ runner.os }}" != 'macOS' ]]; then
             unset CPPFLAGS
diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
index 0c2e61dec9..86ceee894c 100644
--- a/.pre-commit-config.yaml
+++ b/.pre-commit-config.yaml
@@ -28,7 +28,7 @@ repos:
     rev: 4.0.1
     hooks:
       - id: flake8
-        additional_dependencies: [pydocstyle>5.1.0, flake8-docstrings>1.4.0, flake8-force]
+        additional_dependencies: [pydocstyle>5.1.0, flake8-docstrings>1.4.0]
         args: ["--docstring-convention=all"]
   - repo: https://github.com/codespell-project/codespell
     rev: v2.1.0
diff --git a/README.md b/README.md
deleted file mode 100644
index d58c26ffcd..0000000000
--- a/README.md
+++ /dev/null
@@ -1,89 +0,0 @@
-[![PyPi](https://badge.fury.io/py/matplotlib.svg)](https://badge.fury.io/py/matplotlib)
-[![Downloads](https://pepy.tech/badge/matplotlib/month)](https://pepy.tech/project/matplotlib)
-[![NUMFocus](https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A)](https://numfocus.org)
-
-[![DiscourseBadge](https://img.shields.io/badge/help_forum-discourse-blue.svg)](https://discourse.matplotlib.org)
-[![Gitter](https://badges.gitter.im/matplotlib/matplotlib.svg)](https://gitter.im/matplotlib/matplotlib)
-[![GitHubIssues](https://img.shields.io/badge/issue_tracking-github-blue.svg)](https://github.com/matplotlib/matplotlib/issues)
-[![GitTutorial](https://img.shields.io/badge/PR-Welcome-%23FF8300.svg?)](https://git-scm.com/book/en/v2/GitHub-Contributing-to-a-Project)
-
-[![GitHubActions](https://github.com/matplotlib/matplotlib/workflows/Tests/badge.svg)](https://github.com/matplotlib/matplotlib/actions?query=workflow%3ATests)
-[![AzurePipelines](https://dev.azure.com/matplotlib/matplotlib/_apis/build/status/matplotlib.matplotlib?branchName=main)](https://dev.azure.com/matplotlib/matplotlib/_build/latest?definitionId=1&branchName=main)
-[![AppVeyor](https://ci.appveyor.com/api/projects/status/github/matplotlib/matplotlib?branch=main&svg=true)](https://ci.appveyor.com/project/matplotlib/matplotlib)
-[![Codecov](https://codecov.io/github/matplotlib/matplotlib/badge.svg?branch=main&service=github)](https://codecov.io/github/matplotlib/matplotlib?branch=main)
-[![LGTM](https://img.shields.io/lgtm/grade/python/github/matplotlib/matplotlib.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/matplotlib/matplotlib)
-
-![image](https://matplotlib.org/_static/logo2.svg)
-
-Matplotlib is a comprehensive library for creating static, animated, and
-interactive visualizations in Python.
-
-Check out our [home page](https://matplotlib.org/) for more information.
-
-![image](https://matplotlib.org/_static/readme_preview.png)
-
-Matplotlib produces publication-quality figures in a variety of hardcopy
-formats and interactive environments across platforms. Matplotlib can be
-used in Python scripts, Python/IPython shells, web application servers,
-and various graphical user interface toolkits.
-
-## Install
-
-See the [install
-documentation](https://matplotlib.org/stable/users/installing/index.html),
-which is generated from `/doc/users/installing/index.rst`
-
-## Contribute
-
-You've discovered a bug or something else you want to change -
-excellent!
-
-You've worked out a way to fix it -- even better!
-
-You want to tell us about it -- best of all!
-
-Start at the [contributing
-guide](https://matplotlib.org/devdocs/devel/contributing.html)!
-
-## Contact
-
-[Discourse](https://discourse.matplotlib.org/) is the discussion forum
-for general questions and discussions and our recommended starting
-point.
-
-Our active mailing lists (which are mirrored on Discourse) are:
-
--   [Users](https://mail.python.org/mailman/listinfo/matplotlib-users)
-    mailing list: <matplotlib-users@python.org>
--   [Announcement](https://mail.python.org/mailman/listinfo/matplotlib-announce)
-    mailing list: <matplotlib-announce@python.org>
--   [Development](https://mail.python.org/mailman/listinfo/matplotlib-devel)
-    mailing list: <matplotlib-devel@python.org>
-
-[Gitter](https://gitter.im/matplotlib/matplotlib) is for coordinating
-development and asking questions directly related to contributing to
-matplotlib.
-
-## Citing Matplotlib
-
-If Matplotlib contributes to a project that leads to publication, please
-acknowledge this by citing Matplotlib.
-
-[A ready-made citation
-entry](https://matplotlib.org/stable/users/project/citing.html) is
-available.
-
-### Research notice
-
-Please note that this repository is participating in a study into
-sustainability of open source projects. Data will be gathered about this
-repository for approximately the next 12 months, starting from June
-2021.
-
-Data collected will include number of contributors, number of PRs, time
-taken to close/merge these PRs, and issues closed.
-
-For more information, please visit [the informational
-page](https://sustainable-open-science-and-software.github.io/) or
-download the [participant information
-sheet](https://sustainable-open-science-and-software.github.io/assets/PIS_sustainable_software.pdf).
diff --git a/README.rst b/README.rst
new file mode 100644
index 0000000000..c07329b14e
--- /dev/null
+++ b/README.rst
@@ -0,0 +1,118 @@
+|PyPi|_ |Downloads|_ |NUMFocus|_
+
+|DiscourseBadge|_ |Gitter|_ |GitHubIssues|_ |GitTutorial|_
+
+|GitHubActions|_ |AzurePipelines|_ |AppVeyor|_ |Codecov|_ |LGTM|_
+
+.. |GitHubActions| image:: https://github.com/matplotlib/matplotlib/workflows/Tests/badge.svg
+.. _GitHubActions: https://github.com/matplotlib/matplotlib/actions?query=workflow%3ATests
+
+.. |AzurePipelines| image:: https://dev.azure.com/matplotlib/matplotlib/_apis/build/status/matplotlib.matplotlib?branchName=main
+.. _AzurePipelines: https://dev.azure.com/matplotlib/matplotlib/_build/latest?definitionId=1&branchName=main
+
+.. |AppVeyor| image:: https://ci.appveyor.com/api/projects/status/github/matplotlib/matplotlib?branch=main&svg=true
+.. _AppVeyor: https://ci.appveyor.com/project/matplotlib/matplotlib
+
+.. |Codecov| image:: https://codecov.io/github/matplotlib/matplotlib/badge.svg?branch=main&service=github
+.. _Codecov: https://codecov.io/github/matplotlib/matplotlib?branch=main
+
+.. |LGTM| image:: https://img.shields.io/lgtm/grade/python/github/matplotlib/matplotlib.svg?logo=lgtm&logoWidth=18
+.. _LGTM: https://lgtm.com/projects/g/matplotlib/matplotlib
+
+.. |DiscourseBadge| image:: https://img.shields.io/badge/help_forum-discourse-blue.svg
+.. _DiscourseBadge: https://discourse.matplotlib.org
+
+.. |Gitter| image:: https://badges.gitter.im/matplotlib/matplotlib.svg
+.. _Gitter: https://gitter.im/matplotlib/matplotlib
+
+.. |GitHubIssues| image:: https://img.shields.io/badge/issue_tracking-github-blue.svg
+.. _GitHubIssues: https://github.com/matplotlib/matplotlib/issues
+
+.. |GitTutorial| image:: https://img.shields.io/badge/PR-Welcome-%23FF8300.svg?
+.. _GitTutorial: https://git-scm.com/book/en/v2/GitHub-Contributing-to-a-Project
+
+.. |PyPi| image:: https://badge.fury.io/py/matplotlib.svg
+.. _PyPi: https://badge.fury.io/py/matplotlib
+
+.. |Downloads| image:: https://pepy.tech/badge/matplotlib/month
+.. _Downloads: https://pepy.tech/project/matplotlib
+
+.. |NUMFocus| image:: https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A
+.. _NUMFocus: https://numfocus.org
+
+.. image:: https://matplotlib.org/_static/logo2.svg
+
+Matplotlib is a comprehensive library for creating static, animated, and
+interactive visualizations in Python.
+
+Check out our `home page <https://matplotlib.org/>`_ for more information.
+
+.. image:: https://matplotlib.org/_static/readme_preview.png
+
+Matplotlib produces publication-quality figures in a variety of hardcopy
+formats and interactive environments across platforms. Matplotlib can be used
+in Python scripts, Python/IPython shells, web application servers, and
+various graphical user interface toolkits.
+
+
+Install
+=======
+
+For installation instructions and requirements, see the `install documentation
+<https://matplotlib.org/stable/users/installing/index.html>`_ or
+`installing.rst <doc/users/installing/index.rst>`_ in the source.
+
+Contribute
+==========
+
+You've discovered a bug or something else you want to change - excellent!
+
+You've worked out a way to fix it – even better!
+
+You want to tell us about it – best of all!
+
+Start at the `contributing guide
+<https://matplotlib.org/devdocs/devel/contributing.html>`_!
+
+Contact
+=======
+
+`Discourse <https://discourse.matplotlib.org/>`_ is the discussion forum for
+general questions and discussions and our recommended starting point.
+
+Our active mailing lists (which are mirrored on Discourse) are:
+
+* `Users <https://mail.python.org/mailman/listinfo/matplotlib-users>`_ mailing
+  list: matplotlib-users@python.org
+* `Announcement
+  <https://mail.python.org/mailman/listinfo/matplotlib-announce>`_ mailing
+  list: matplotlib-announce@python.org
+* `Development <https://mail.python.org/mailman/listinfo/matplotlib-devel>`_
+  mailing list: matplotlib-devel@python.org
+
+Gitter_ is for coordinating development and asking questions directly related
+to contributing to matplotlib.
+
+
+Citing Matplotlib
+=================
+If Matplotlib contributes to a project that leads to publication, please
+acknowledge this by citing Matplotlib.
+
+`A ready-made citation entry <https://matplotlib.org/stable/users/project/citing.html>`_ is
+available.
+
+Research notice
+~~~~~~~~~~~~~~~
+
+Please note that this repository is participating in a study into
+sustainability of open source projects. Data will be gathered about this
+repository for approximately the next 12 months, starting from June 2021.
+
+Data collected will include number of contributors, number of PRs, time taken
+to close/merge these PRs, and issues closed.
+
+For more information, please visit `the informational page
+<https://sustainable-open-science-and-software.github.io/>`__ or download the
+`participant information sheet
+<https://sustainable-open-science-and-software.github.io/assets/PIS_sustainable_software.pdf>`__.
diff --git a/doc/Makefile b/doc/Makefile
index 6316a5ca04..8a9dc61c7a 100644
--- a/doc/Makefile
+++ b/doc/Makefile
@@ -28,11 +28,6 @@ clean:
 show:
        @python -c "import webbrowser; webbrowser.open_new_tab('file://$(shell pwd)/build/html/index.html')"

-html-noplot:
-       $(SPHINXBUILD) -D plot_gallery=0 -b html $(SOURCEDIR) $(BUILDDIR)/html $(SPHINXOPTS) $(O)
-       @echo
-       @echo "Build finished. The HTML pages are in $(BUILDDIR)/html."
-
 # Catch-all target: route all unknown targets to Sphinx using the new
 # "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).
 %: Makefile
diff --git a/doc/_static/switcher.json b/doc/_static/switcher.json
index c72cbac2b2..00dd1ffa6c 100644
--- a/doc/_static/switcher.json
+++ b/doc/_static/switcher.json
@@ -1,6 +1,6 @@
 [
     {
-        "name": "3.6 (stable)",
+        "name": "3.6.1 (stable)",
         "version": "stable",
         "url": "https://matplotlib.org/stable/"
     },
diff --git a/doc/api/animation_api.rst b/doc/api/animation_api.rst
index 1325904567..5a3d53442f 100644
--- a/doc/api/animation_api.rst
+++ b/doc/api/animation_api.rst
@@ -97,11 +97,6 @@ this hopefully minimalist example gives a sense of how ``init_func``
 and ``func`` are used inside of `FuncAnimation` and the theory of how
 'blitting' works.

-.. note::
-
-    The zorder of artists is not taken into account when 'blitting'
-    because the 'blitted' artists are always drawn on top.
-
 The expected signature on ``func`` and ``init_func`` is very simple to
 keep `FuncAnimation` out of your book keeping and plotting logic, but
 this means that the callable objects you pass in must know what
diff --git a/doc/api/next_api_changes/behavior/23579-AL.rst b/doc/api/next_api_changes/behavior/23579-AL.rst
deleted file mode 100644
index dd79e4e25b..0000000000
--- a/doc/api/next_api_changes/behavior/23579-AL.rst
+++ /dev/null
@@ -1,5 +0,0 @@
-``HostAxesBase.get_aux_axes`` now defaults to using the same base axes class as the host axes
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-If using an ``mpl_toolkits.axisartist``-based host Axes, the parasite Axes will
-also be based on ``mpl_toolkits.axisartist``.  This behavior is consistent with
-``HostAxesBase.twin``, ``HostAxesBase.twinx``, and ``HostAxesBase.twiny``.
diff --git a/doc/api/next_api_changes/behavior/23710-ES.rst b/doc/api/next_api_changes/behavior/23710-ES.rst
deleted file mode 100644
index 6b417167a1..0000000000
--- a/doc/api/next_api_changes/behavior/23710-ES.rst
+++ /dev/null
@@ -1,7 +0,0 @@
-``plt.get_cmap`` and ``matplotlib.cm.get_cmap`` return a copy
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-Formerly, `~.pyplot.get_cmap` and `.cm.get_cmap` returned a global version of a
-`.Colormap`. This was prone to errors as modification of the colormap would
-propagate from one location to another without warning. Now, a new copy of the
-colormap is returned.
diff --git a/doc/api/next_api_changes/deprecations/23449-SS.rst b/doc/api/next_api_changes/deprecations/23449-SS.rst
deleted file mode 100644
index cc5123fc0b..0000000000
--- a/doc/api/next_api_changes/deprecations/23449-SS.rst
+++ /dev/null
@@ -1,3 +0,0 @@
-``axes3d.vvec``, ``axes3d.eye``, ``axes3d.sx``, and ``axes3d.sy``
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-... are deprecated without replacement.
diff --git a/doc/api/next_api_changes/deprecations/23720-RS.rst b/doc/api/next_api_changes/deprecations/23720-RS.rst
deleted file mode 100644
index 9e771009aa..0000000000
--- a/doc/api/next_api_changes/deprecations/23720-RS.rst
+++ /dev/null
@@ -1,13 +0,0 @@
-Deprecation aliases in cbook
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-The module ``matplotlib.cbook.deprecation`` was previously deprecated in
-Matplotlib 3.4, along with deprecation-related API in ``matplotlib.cbook``. Due
-to technical issues, ``matplotlib.cbook.MatplotlibDeprecationWarning`` and
-``matplotlib.cbook.mplDeprecation`` did not raise deprecation warnings on use.
-Changes in Python have now made it possible to warn when these aliases are
-being used.
-
-In order to avoid downstream breakage, these aliases will now warn, and their
-removal has been pushed from 3.6 to 3.8 to give time to notice said warnings.
-As replacement, please use `matplotlib.MatplotlibDeprecationWarning`.
diff --git a/doc/api/next_api_changes/deprecations/23735-ES.rst b/doc/api/next_api_changes/deprecations/23735-ES.rst
deleted file mode 100644
index 075abf73d9..0000000000
--- a/doc/api/next_api_changes/deprecations/23735-ES.rst
+++ /dev/null
@@ -1,13 +0,0 @@
-``AXes`` subclasses should override ``clear`` instead of ``cla``
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-For clarity, `.axes.Axes.clear` is now preferred over `.Axes.cla`. However, for
-backwards compatibility, the latter will remain as an alias for the former.
-
-For additional compatibility with third-party libraries, Matplotlib will
-continue to call the ``cla`` method of any `~.axes.Axes` subclasses if they
-define it. In the future, this will no longer occur, and Matplotlib will only
-call the ``clear`` method in `~.axes.Axes` subclasses.
-
-It is recommended to define only the ``clear`` method when on Matplotlib 3.6,
-and only ``cla`` for older versions.
diff --git a/doc/api/next_api_changes/deprecations/23824-OG.rst b/doc/api/next_api_changes/deprecations/23824-OG.rst
deleted file mode 100644
index 3b229725b1..0000000000
--- a/doc/api/next_api_changes/deprecations/23824-OG.rst
+++ /dev/null
@@ -1,16 +0,0 @@
-``draw_gouraud_triangle``
-~~~~~~~~~~~~~~~~~~~~~~~~~
-
-... is deprecated as in most backends this is a redundant call. Use
-`~.RendererBase.draw_gouraud_triangles` instead. A ``draw_gouraud_triangle``
-call in a custom `~matplotlib.artist.Artist` can readily be replaced as::
-
-    self.draw_gouraud_triangles(gc, points.reshape((1, 3, 2)),
-                                colors.reshape((1, 3, 4)), trans)
-
-A `~.RendererBase.draw_gouraud_triangles` method can be implemented from an
-existing ``draw_gouraud_triangle`` method as::
-
-    transform = transform.frozen()
-    for tri, col in zip(triangles_array, colors_array):
-        self.draw_gouraud_triangle(gc, tri, col, transform)
diff --git a/doc/api/next_api_changes/deprecations/24088-JMK.rst b/doc/api/next_api_changes/deprecations/24088-JMK.rst
deleted file mode 100644
index caa7e93a05..0000000000
--- a/doc/api/next_api_changes/deprecations/24088-JMK.rst
+++ /dev/null
@@ -1,9 +0,0 @@
-Colorbars for orphaned mappables are deprecated, but no longer raise
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-Before 3.6.0, Colorbars for mappables that do not have a parent axes would
-steal space from the current Axes.  3.6.0 raised an error on this, but without
-a deprecation cycle.  For 3.6.1 this is reverted, the current axes is used,
-but a deprecation warning is shown instead.  In this undetermined case users
-and libraries should explicitly specify what axes they want space to be stolen
-from: ``fig.colorbar(mappable, ax=plt.gca())``.
diff --git a/doc/api/next_api_changes/deprecations/24140-AL.rst b/doc/api/next_api_changes/deprecations/24140-AL.rst
deleted file mode 100644
index afe10ddc64..0000000000
--- a/doc/api/next_api_changes/deprecations/24140-AL.rst
+++ /dev/null
@@ -1,8 +0,0 @@
-``contour.ClabelText`` and ``ContourLabeler.set_label_props``
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-... are deprecated.
-
-Use ``Text(..., transform_rotates_text=True)`` as a replacement for
-``contour.ClabelText(...)`` and ``text.set(text=text, color=color,
-fontproperties=labeler.labelFontProps, clip_box=labeler.axes.bbox)`` as a
-replacement for the ``ContourLabeler.set_label_props(label, text, color)``.
diff --git a/doc/api/next_api_changes/removals/24128-OG.rst b/doc/api/next_api_changes/removals/24128-OG.rst
deleted file mode 100644
index 2a17a6c546..0000000000
--- a/doc/api/next_api_changes/removals/24128-OG.rst
+++ /dev/null
@@ -1,17 +0,0 @@
-``epoch2num`` and ``num2epoch`` are removed
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-These methods convert from unix timestamps to matplotlib floats, but are not
-used internally to Matplotlib, and should not be needed by end users. To
-convert a unix timestamp to datetime, simply use
-`datetime.datetime.utcfromtimestamp`, or to use NumPy `~numpy.datetime64`
-``dt = np.datetime64(e*1e6, 'us')``.
-
-
-Locator and Formatter wrapper methods
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-The ``set_view_interval``, ``set_data_interval`` and ``set_bounds`` methods of
-`.Locator`\s and `.Formatter`\s (and their common base class, TickHelper) are
-removed. Directly manipulate the view and data intervals on the underlying
-axis instead.
diff --git a/doc/api/prev_api_changes/api_changes_3.3.0/deprecations.rst b/doc/api/prev_api_changes/api_changes_3.3.0/deprecations.rst
index 70babe0f7a..22aa93f899 100644
--- a/doc/api/prev_api_changes/api_changes_3.3.0/deprecations.rst
+++ b/doc/api/prev_api_changes/api_changes_3.3.0/deprecations.rst
@@ -545,8 +545,8 @@ experimental and may change in the future.
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ... is deprecated.

-``epoch2num`` and ``num2epoch`` are deprecated
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+`.epoch2num` and `.num2epoch` are deprecated
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 These are unused and can be easily reproduced by other date tools.
 `.get_epoch` will return Matplotlib's epoch.

diff --git a/doc/api/prev_api_changes/api_changes_3.3.1.rst b/doc/api/prev_api_changes/api_changes_3.3.1.rst
index 3eda8a9a3a..b3383a4e5f 100644
--- a/doc/api/prev_api_changes/api_changes_3.3.1.rst
+++ b/doc/api/prev_api_changes/api_changes_3.3.1.rst
@@ -15,7 +15,7 @@ reverts the deprecation.
 Functions ``epoch2num`` and ``dates.julian2num`` use ``date.epoch`` rcParam
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-Now ``epoch2num`` and (undocumented) ``julian2num`` return floating point
+Now `~.dates.epoch2num` and (undocumented) ``julian2num`` return floating point
 days since `~.dates.get_epoch` as set by :rc:`date.epoch`, instead of
 floating point days since the old epoch of "0000-12-31T00:00:00".  If
 needed, you can translate from the new to old values as
diff --git a/doc/api/prev_api_changes/api_changes_3.6.1.rst b/doc/api/prev_api_changes/api_changes_3.6.1.rst
new file mode 100644
index 0000000000..ad929d4268
--- /dev/null
+++ b/doc/api/prev_api_changes/api_changes_3.6.1.rst
@@ -0,0 +1,15 @@
+API Changes for 3.6.1
+=====================
+
+Deprecations
+------------
+
+Colorbars for orphaned mappables are deprecated, but no longer raise
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+Before 3.6.0, Colorbars for mappables that do not have a parent Axes would
+steal space from the current Axes. 3.6.0 raised an error on this, but without a
+deprecation cycle. For 3.6.1 this is reverted; the current Axes is used, but a
+deprecation warning is shown instead. In this undetermined case, users and
+libraries should explicitly specify what Axes they want space to be stolen
+from: ``fig.colorbar(mappable, ax=plt.gca())``.
diff --git a/doc/conf.py b/doc/conf.py
index 4b9dfdaddb..5aa58a3aca 100644
--- a/doc/conf.py
+++ b/doc/conf.py
@@ -11,7 +11,6 @@
 # All configuration values have a default value; values that are commented out
 # serve to show the default value.

-import logging
 import os
 from pathlib import Path
 import shutil
@@ -58,6 +57,7 @@ warnings.filterwarnings('error', append=True)
 extensions = [
     'sphinx.ext.autodoc',
     'sphinx.ext.autosummary',
+    'sphinx.ext.doctest',
     'sphinx.ext.inheritance_diagram',
     'sphinx.ext.intersphinx',
     'sphinx.ext.ifconfig',
@@ -188,7 +188,6 @@ sphinx_gallery_conf = {
     'junit': '../test-results/sphinx-gallery/junit.xml' if CIRCLECI else '',
     'matplotlib_animations': True,
     'min_reported_time': 1,
-    'plot_gallery': 'True',  # sphinx-gallery/913
     'reference_url': {'matplotlib': None},
     'remove_config_comments': True,
     'reset_modules': (
@@ -202,25 +201,6 @@ sphinx_gallery_conf = {
     'capture_repr': (),
 }

-if 'plot_gallery=0' in sys.argv:
-    # Gallery images are not created.  Suppress warnings triggered where other
-    # parts of the documentation link to these images.
-
-    def gallery_image_warning_filter(record):
-        msg = record.msg
-        for gallery_dir in sphinx_gallery_conf['gallery_dirs']:
-            if msg.startswith(f'image file not readable: {gallery_dir}'):
-                return False
-
-        if msg == 'Could not obtain image size. :scale: option is ignored.':
-            return False
-
-        return True
-
-    logger = logging.getLogger('sphinx')
-    logger.addFilter(gallery_image_warning_filter)
-
-
 mathmpl_fontsize = 11.0
 mathmpl_srcset = ['2x']

diff --git a/doc/devel/coding_guide.rst b/doc/devel/coding_guide.rst
index 83cd15aaf8..cddb135394 100644
--- a/doc/devel/coding_guide.rst
+++ b/doc/devel/coding_guide.rst
@@ -45,7 +45,7 @@ When making a PR, pay attention to:
   on GitHub.
 * When updating your PR, instead of adding new commits to fix something, please
   consider amending your initial commit(s) to keep the history clean.
-  You can achieve this by using
+  You can achieve this using

   .. code-block:: bash

diff --git a/doc/devel/contributing.rst b/doc/devel/contributing.rst
index e38b2c3fbe..2743424423 100644
--- a/doc/devel/contributing.rst
+++ b/doc/devel/contributing.rst
@@ -222,7 +222,7 @@ rules before submitting a pull request:

   or your editor may provide integration with it.  Note that Matplotlib
   intentionally does not use the black_ auto-formatter (1__), in particular due
-  to its inability to understand the semantics of mathematical expressions
+  to its unability to understand the semantics of mathematical expressions
   (2__, 3__).

   .. _PEP8: https://www.python.org/dev/peps/pep-0008/
diff --git a/doc/devel/documenting_mpl.rst b/doc/devel/documenting_mpl.rst
index 23b332925f..a9305d31a0 100644
--- a/doc/devel/documenting_mpl.rst
+++ b/doc/devel/documenting_mpl.rst
@@ -67,10 +67,6 @@ Other useful invocations include

 .. code-block:: sh

-   # Build the html documentation, but skip generation of the gallery images to
-   # save time.
-   make html-noplot
-
    # Delete built files.  May help if you get errors about missing paths or
    # broken links.
    make clean
@@ -90,6 +86,7 @@ You can use the ``O`` variable to set additional options:

 * ``make O=-j4 html`` runs a parallel build with 4 processes.
 * ``make O=-Dplot_formats=png:100 html`` saves figures in low resolution.
+* ``make O=-Dplot_gallery=0 html`` skips the gallery build.

 Multiple options can be combined, e.g. ``make O='-j4 -Dplot_gallery=0'
 html``.
diff --git a/doc/users/explain/backends.rst b/doc/users/explain/backends.rst
index 24031ee957..88c3a927fd 100644
--- a/doc/users/explain/backends.rst
+++ b/doc/users/explain/backends.rst
@@ -107,7 +107,7 @@ allows both interactive work and plotting from scripts, with output to the
 screen and/or to a file, so at least initially, you will not need to worry
 about the backend.  The most common exception is if your Python distribution
 comes without :mod:`tkinter` and you have no other GUI toolkit installed.
-This happens with certain Linux distributions, where you need to install a
+This happens on certain Linux distributions, where you need to install a
 Linux package named ``python-tk`` (or similar).

 If, however, you want to write graphical user interfaces, or a web
diff --git a/doc/users/explain/interactive.rst b/doc/users/explain/interactive.rst
index 8cc1ce7cc3..0fb0a0cdac 100644
--- a/doc/users/explain/interactive.rst
+++ b/doc/users/explain/interactive.rst
@@ -169,7 +169,7 @@ and run the GUI event loop for the specified period of time.

 The GUI event loop being integrated with your command prompt and
 the figures being in interactive mode are independent of each other.
-If you try to use `pyplot.ion` without arranging for the event-loop integration,
+If you use `pyplot.ion` but have not arranged for the event loop integration,
 your figures will appear but will not be interactive while the prompt is waiting for input.
 You will not be able to pan/zoom and the figure may not even render
 (the window might appear black, transparent, or as a snapshot of the
diff --git a/doc/users/faq/troubleshooting_faq.rst b/doc/users/faq/troubleshooting_faq.rst
index f88cb19d13..db1c393199 100644
--- a/doc/users/faq/troubleshooting_faq.rst
+++ b/doc/users/faq/troubleshooting_faq.rst
@@ -157,7 +157,7 @@ the tracker so the issue doesn't get lost.
 Problems with recent git versions
 =================================

-First, make sure you have a clean build and install (see :ref:`clean-install`),
+First make sure you have a clean build and install (see :ref:`clean-install`),
 get the latest git update, install it and run a simple test script in debug
 mode::

diff --git a/doc/users/github_stats.rst b/doc/users/github_stats.rst
index e23d1e8f6f..7e5c3fe14a 100644
--- a/doc/users/github_stats.rst
+++ b/doc/users/github_stats.rst
@@ -1,1295 +1,146 @@
 .. _github-stats:

-GitHub statistics for 3.6.0 (Sep 15, 2022)
+GitHub statistics for 3.6.1 (Oct 08, 2022)
 ==========================================

-GitHub statistics for 2021/11/16 (tag: v3.5.0) - 2022/09/15
+GitHub statistics for 2022/09/16 (tag: v3.6.0) - 2022/10/08

 These lists are automatically generated, and may be incomplete or contain duplicates.

-We closed 202 issues and merged 894 pull requests.
-The full list can be seen `on GitHub <https://github.com/matplotlib/matplotlib/milestone/65?closed=1>`__
+We closed 22 issues and merged 80 pull requests.
+The full list can be seen `on GitHub <https://github.com/matplotlib/matplotlib/milestone/73?closed=1>`__

-The following 174 authors contributed 4425 commits.
+The following 19 authors contributed 129 commits.

-* Abhishek K M
-* Adeel Hassan
-* agra
-* Aitik Gupta
-* ambi7
-* Andras Deak
-* Andres Martinez
-* Andrew Fennell
-* andrzejnovak
-* Andrés Martínez
-* Anna Mastori
-* AnnaMastori
-* Ante Sikic
 * Antony Lee
-* arndRemy
-* Ben Root
-* Biswapriyo Nath
-* cavesdev
-* Clément Phan
-* Clément Walter
-* code-review-doctor
-* Connor Cozad
-* Constantine Evans
-* Croadden
-* daniilS
-* Danilo Palumbo
-* David Gilbertson
-* David Ketcheson
-* David Matos
-* David Poznik
+* baharev
 * David Stansby
-* Davide Sandonà
 * dependabot[bot]
-* dermasugita
-* Diego Solano
-* Dimitri Papadopoulos
-* dj4t9n
-* Dmitriy Fishman
-* DWesl
-* Edouard Berthe
-* eindH
+* Eli Rykoff
 * Elliott Sales de Andrade
-* Eric Firing
-* Eric Larson
-* Eric Prestat
-* Federico Ariza
-* Felix Nößler
-* Fernando
-* Gajendra Pal
-* gajendra0180
-* GavinZhang
+* erykoff
 * Greg Lucas
 * hannah
-* Hansin Ahuja
-* Harshal Prakash Patankar
-* Hassan Kibirige
-* Haziq Khurshid
-* Henry
-* henrybeUM
-* Hood
-* Hood Chatham
 * Ian Hunt-Isaak
-* Ian Thomas
-* igurin-invn
-* ikhebgeenaccount
-* Isha Mehta
-* Jake Bowhay
-* Jake Li
-* Jake Lishman
-* Jake VanderPlas
-* Jakub Klus
-* James Tocknell
-* Jan-Hendrik Müller
-* Jay Joshi
-* Jay Stanley
-* jayjoshi112711
-* Jeff Beck
 * Jody Klymak
-* Joel Frederico
-* Joseph Fox-Rabinovitz
-* Josh Soref
-* Jouni K. Seppänen
-* Kayran Schmidt
-* kdpenner
-* Kian Eliasi
-* Kinshuk Dua
-* kislovskiy
-* KIU Shueng Chuan
-* kjain
-* kolibril13
-* krassowski
-* Krish-sysadmin
-* Leeh Peter
-* lgfunderburk
-* Liam Toney
-* Lucas Ricci
-* Luke Davis
-* luz paz
-* mackopes
-* MAKOMO
-* MalikIdreesHasa
-* Marcin Swaltek
-* Mario
-* Mario Sergio Valdés Tresanco
-* martinRenou
-* Matthew Feickert
-* Matthias Bussonnier
-* Mauricio Collares
-* MeeseeksMachine
 * melissawm
-* Mr-Milk
-* Navid C. Constantinou
-* Nickolaos Giannatos
-* Nicolas P. Rougier
-* Niyas Sait
-* noatamir
-* ojeda-e
-* Olivier Gauthé
 * Oscar Gustafsson
-* patquem
-* Philipp Rohde
-* Pieter Eendebak
-* Pieter P
-* Péter Leéh
-* Qijia Liu
-* Quentin Peter
-* Raphael Quast
-* rditlar9
-* Richard Penney
-* richardsheridan
-* Rike-Benjamin Schuppner
-* Robert Cimrman
-* Roberto Toro
-* root
 * Ruth Comer
-* Ruth G. N
-* Ruth Nainggolan
-* Ryan May
-* Rémi Achard
-* SaumyaBhushan
-* Scott Jones
-* Scott Shambaugh
-* selormtamakloe
-* Simon Hoxbro
-* skywateryang
-* Stefanie Molin
+* slackline
 * Steffen Rehberg
-* stone
-* Sven Eschlbeck
-* sveneschlbeck
-* takimata
-* tfpf
 * Thomas A Caswell
 * Tim Hoffmann
-* Tobias Megies
-* Tomas Hrnciar
-* Tomasz Kuliński
-* trichter
-* unknown
-* Uwe Hubert
-* vfdev-5
-* Vishal Chandratreya
-* Vishal Pankaj Chandratreya
-* Vishnu V K
-* vk0812
-* Vlad Korolev
-* Will Qian
-* William Qian
-* wqh17101
-* wsykala
-* yaaun
-* Yannic Schroeder
-* yuanx749
-* 渡邉 美希
+* مهدي شينون (Mehdi Chinoune)

 GitHub issues and pull requests:

-Pull Requests (894):
-
-* :ghpull:`23814`: Consolidate release notes for 3.6
-* :ghpull:`23899`: Backport PR #23885 on branch v3.6.x (DOC: Rearrange navbar-end elements)
-* :ghpull:`23898`: Backport PR #23892 on branch v3.6.x (DOC: Fix docs for linestyles in contour)
-* :ghpull:`23885`: DOC: Rearrange navbar-end elements
-* :ghpull:`23894`: Backport PR #23881 on branch v3.6.x (Fix Pillow compatibility in example)
-* :ghpull:`23897`: Backport PR #23887 on branch v3.6.x (Add missing label argument to barh docs)
-* :ghpull:`23892`: DOC: Fix docs for linestyles in contour
-* :ghpull:`23887`: Add missing label argument to barh docs
-* :ghpull:`23893`: Backport PR #23886 on branch v3.6.x (CI: prefer (older) binaries over (newer) sdists)
-* :ghpull:`23881`: Fix Pillow compatibility in example
-* :ghpull:`23886`: CI: prefer (older) binaries over (newer) sdists
-* :ghpull:`23880`: Backport PR #23862 on branch v3.6.x (Remove triggering of deprecation warning in AnchoredEllipse)
-* :ghpull:`23862`: Remove triggering of deprecation warning in AnchoredEllipse
-* :ghpull:`23879`: Backport PR #23864 on branch v3.6.x (Correct and improve documentation for anchored artists)
-* :ghpull:`23877`: Backport PR #23841 on branch v3.6.x (clarified that hist computes histogram on unbinned data)
-* :ghpull:`23872`: Backport PR #23871 on branch v3.6.x (DOC: Fix formatting of pick event demo example)
-* :ghpull:`23841`: clarified that hist computes histogram on unbinned data
-* :ghpull:`23864`: Correct and improve documentation for anchored artists
-* :ghpull:`23871`: DOC: Fix formatting of pick event demo example
-* :ghpull:`23869`: Backport PR #23867 on branch v3.6.x (DOC: fix deprecation warnings in examples)
-* :ghpull:`23867`: DOC: fix deprecation warnings in examples
-* :ghpull:`23858`: Backport PR #23855 on branch v3.6.x (DOC: fix deprecation warnings)
-* :ghpull:`23859`: Backport PR #23844 on branch v3.6.x (Further improve dev setup instructions)
-* :ghpull:`23844`: Further improve dev setup instructions
-* :ghpull:`23855`: DOC: fix deprecation warnings
-* :ghpull:`23854`: Backport PR #23852 on branch v3.6.x (Fix cross-compiling internal freetype)
-* :ghpull:`23852`: Fix cross-compiling internal freetype
-* :ghpull:`23853`: Backport PR #23830 on branch v3.6.x (Start testing on Python 3.11)
-* :ghpull:`23830`: Start testing on Python 3.11
-* :ghpull:`23851`: Backport PR #23850 on branch v3.6.x (removed single word in documenting doc)
-* :ghpull:`23850`: removed single word in documenting doc
-* :ghpull:`23848`: Backport PR #23843 on branch v3.6.x (Clarify that pycairo>=1.14.0 is needed.)
-* :ghpull:`23843`: Clarify that pycairo>=1.14.0 is needed.
-* :ghpull:`23842`: Backport PR #23840 on branch v3.6.x (Remove documentation for axes_grid)
-* :ghpull:`23838`: Backport PR #23834 on branch v3.6.x (Revert "Refactor handling of tick and ticklabel visibility in Axis.clear")
-* :ghpull:`23840`: Remove documentation for axes_grid
-* :ghpull:`23837`: Backport PR #23833 on branch v3.6.x (Remove search field from sidebar)
-* :ghpull:`23836`: Backport PR #23823 on branch v3.6.x ([DOC] Improve dev setup description)
-* :ghpull:`23834`: Revert "Refactor handling of tick and ticklabel visibility in Axis.clear"
-* :ghpull:`23833`: Remove search field from sidebar
-* :ghpull:`23823`: [DOC] Improve dev setup description
-* :ghpull:`23822`: Backport PR #23813 on branch v3.6.x (Triplot duplicated label)
-* :ghpull:`23813`: Triplot duplicated label
-* :ghpull:`23811`: Backport PR #23805 on branch v3.6.x (sphinxext: Do not copy plot_directive.css's metadata)
-* :ghpull:`23805`: sphinxext: Do not copy plot_directive.css's metadata
-* :ghpull:`23800`: Backport PR #23785 on branch v3.6.x (FIX: ensure type stability for missing cmaps in ``set_cmap``)
-* :ghpull:`23799`: Backport PR #23790 on branch v3.6.x (DOC: Add cache busting to all static assets)
-* :ghpull:`23785`: FIX: ensure type stability for missing cmaps in ``set_cmap``
-* :ghpull:`23790`: DOC: Add cache busting to all static assets
-* :ghpull:`23791`: Backport PR #23774 on branch v3.6.x (Correct rcParams-name in AutoDateFormatter doc-string)
-* :ghpull:`23792`: Backport PR #23781 on branch v3.6.x (ci: Add plot types to sphinx-gallery artifacts)
-* :ghpull:`23789`: Backport PR #23786 on branch v3.6.x (DOC: fontfallback works for most of the backends)
-* :ghpull:`23788`: Backport PR #23784 on branch v3.6.x (DOC: Fix num2date docstring)
-* :ghpull:`23786`: DOC: fontfallback works for most of the backends
-* :ghpull:`23784`: DOC: Fix num2date docstring
-* :ghpull:`23781`: ci: Add plot types to sphinx-gallery artifacts
-* :ghpull:`23783`: Backport PR #23782 on branch v3.6.x (Remove ``Axes.cla`` from examples)
-* :ghpull:`23782`: Remove ``Axes.cla`` from examples
-* :ghpull:`23774`: Correct rcParams-name in AutoDateFormatter doc-string
-* :ghpull:`23773`: Backport PR #23772 on branch v3.6.x (3d plots what's new cleanups)
-* :ghpull:`23772`: 3d plots what's new cleanups
-* :ghpull:`23765`: Backport PR #23762 on branch v3.6.x (FIX: legend handler warning too liberal)
-* :ghpull:`23762`: FIX: legend handler warning too liberal
-* :ghpull:`23759`: Backport PR #23686 on branch v3.6.x (Improve matplotlib.pyplot importtime by caching ArtistInspector)
-* :ghpull:`23686`: Improve matplotlib.pyplot importtime by caching ArtistInspector
-* :ghpull:`23756`: Backport PR #23569 on branch v3.6.x (Fix hidden xlabel bug in colorbar)
-* :ghpull:`23755`: Backport PR #23742 on branch v3.6.x (FIX: unbreak ipympl)
-* :ghpull:`23569`: Fix hidden xlabel bug in colorbar
-* :ghpull:`23742`: FIX: unbreak ipympl
-* :ghpull:`23752`: Backport PR #23750 on branch v3.6.x (Fix rcParams documentation)
-* :ghpull:`23749`: Backport PR #23735 on branch v3.6.x (Correctly handle Axes subclasses that override cla)
-* :ghpull:`23735`: Correctly handle Axes subclasses that override cla
-* :ghpull:`23748`: Backport PR #23746 on branch v3.6.x (DOC: add numpydoc docstring + commentary to Axis.get_ticklocs)
-* :ghpull:`23747`: Backport PR #23721 on branch v3.6.x (3d plot view angle documentation)
-* :ghpull:`23746`: DOC: add numpydoc docstring + commentary to Axis.get_ticklocs
-* :ghpull:`23721`: 3d plot view angle documentation
-* :ghpull:`23744`: Backport PR #23740 on branch v3.6.x (Clarify error for colorbar with unparented mappable)
-* :ghpull:`23741`: Backport PR #23674 on branch v3.6.x (Re-rename builtin seaborn styles to not include a dot.)
-* :ghpull:`23740`: Clarify error for colorbar with unparented mappable
-* :ghpull:`23674`: Re-rename builtin seaborn styles to not include a dot.
-* :ghpull:`23738`: Backport PR #23639 on branch v3.6.x (Adding the new contributor meeting)
-* :ghpull:`23739`: Backport PR #23712 on branch v3.6.x (FIX: do not try to help CPython with garbage collection)
-* :ghpull:`23712`: FIX: do not try to help CPython with garbage collection
-* :ghpull:`23639`: Adding the new contributor meeting
-* :ghpull:`23732`: Backport PR #23729 on branch v3.6.x (Use cleaner recursion check in PyQt FigureCanvas' resizeEvent.)
-* :ghpull:`23734`: Backport PR #23733 on branch v3.6.x (DOC: Update theme configuration for upcoming changes)
-* :ghpull:`23733`: DOC: Update theme configuration for upcoming changes
-* :ghpull:`23728`: Backport PR #23722 on branch v3.6.x (Restore deprecation class aliases in cbook)
-* :ghpull:`23729`: Use cleaner recursion check in PyQt FigureCanvas' resizeEvent.
-* :ghpull:`23726`: Backport PR #23711 on branch v3.6.x (Fix deprecation messages for vendoring unused things)
-* :ghpull:`23722`: Restore deprecation class aliases in cbook
-* :ghpull:`23727`: Backport PR #23724 on branch v3.6.x (Fix/harmonize spacing in dependencies.rst.)
-* :ghpull:`23724`: Fix/harmonize spacing in dependencies.rst.
-* :ghpull:`23711`: Fix deprecation messages for vendoring unused things
-* :ghpull:`23715`: Backport PR #23708 on branch v3.6.x (Loosen up test_Normalize test)
-* :ghpull:`23713`: Backport PR #23710 on branch v3.6.x (Fix cmap deprecations)
-* :ghpull:`23708`: Loosen up test_Normalize test
-* :ghpull:`23710`: Fix cmap deprecations
-* :ghpull:`23696`: Backport PR #23695 on branch v3.6.x (Document polar handling of _interpolation_steps.)
-* :ghpull:`23706`: Backport PR #23705 on branch v3.6.x (DOC: Added link to class under discussion)
-* :ghpull:`23705`: DOC: Added link to class under discussion
-* :ghpull:`23695`: Document polar handling of _interpolation_steps.
-* :ghpull:`23668`: Api deprecate cmap functions
-* :ghpull:`23049`: Add ``minor`` keyword argument to ``plt.x/yticks``
-* :ghpull:`23665`: Harmonize docstrings for boxstyle/connectionstyle/arrowstyle.
-* :ghpull:`23636`: FIX: macosx flush_events should process all events
-* :ghpull:`23555`: Uncamelcase offsetTrans in draw_path_collection.
-* :ghpull:`23682`: Fix generated documentation for deprecated modules
-* :ghpull:`23678`: Get rcParams from mpl
-* :ghpull:`23571`: Simplify _bind_draw_path_function.
-* :ghpull:`23673`: DOC: Highlight information about avoiding labels in legend
-* :ghpull:`22506`: Replace MathtextBackend mechanism.
-* :ghpull:`23340`: Set correct path for Arc
-* :ghpull:`23562`: Fix issue with get_edgecolor and get_facecolor in 3D plots
-* :ghpull:`23634`: make.bat: Don't override SPHINXOPTS/O from the environment
-* :ghpull:`23675`: Deprecate helper functions in axis3d
-* :ghpull:`23676`: MNT: Get rcParams from mpl
-* :ghpull:`23677`: TST: Use article class when checking for pgf
-* :ghpull:`23669`: CI: Azure update from ubuntu-18.04 to ubuntu-latest and ubuntu-20.04
-* :ghpull:`23670`: Add bar color demo.
-* :ghpull:`23644`: Standardize edge-on axis locations when viewing primary 3d axis planes
-* :ghpull:`23563`: Fix issue with drawing 3D lines where points are from nparray
-* :ghpull:`23666`: MNT: Deprecate macosx prepare subplots tool
-* :ghpull:`23572`: Deprecate ``get_grid_positions(..., raw=True)``.
-* :ghpull:`23525`: Add functionality to label individual bars with Axes.bar()
-* :ghpull:`23667`: Fix flake8 errors introduced by crossed PRs
-* :ghpull:`23554`: MNT: Remove unused imports
-* :ghpull:`23659`: Simplify/fix save_diff_image.
-* :ghpull:`23663`: Small cleanups to _find_fonts_by_props.
-* :ghpull:`23662`: Add tolerance to test failing on ppc64le
-* :ghpull:`23623`: MNT: remove _gridspecs attribute on Figure classes
-* :ghpull:`23654`: Reverts macosx change to ARC
-* :ghpull:`23661`: Remove unused fontsize argument from private mathtext _get_info.
-* :ghpull:`23655`: Merge branch v3.5.x into main
-* :ghpull:`23658`: Increase tolerance on multi-font tests
-* :ghpull:`23657`: Add eps to extension list in image triager
-* :ghpull:`23656`: Fix broken link to MathML torture tests.
-* :ghpull:`23649`: CI: Use anaconda-client v1.10.0 for upload of nightlies
-* :ghpull:`23647`: Allow any color format to be used for axis3d.Axis.set_pane_color
-* :ghpull:`23643`: Enable wheels for PyPy 3.8+
-* :ghpull:`23621`: DOC: update and extend fonts explanation
-* :ghpull:`23612`: CI: try installing a different version of noto on OSX
-* :ghpull:`23619`: add pikepdf  and visual c++ dependency
-* :ghpull:`23631`: Leave out ``barh`` from the basic plot types.
-* :ghpull:`23637`: BLD: Add Python 3.11 builds to CI
-* :ghpull:`23632`: Add discouraged admonitions
-* :ghpull:`23620`: Doc update deps
-* :ghpull:`23627`: Bump pypa/cibuildwheel from 2.8.1 to 2.9.0
-* :ghpull:`23628`: Change Title Case to Upper lower in templates
-* :ghpull:`23206`: Change exception type for incorrect SVG date metadata
-* :ghpull:`23387`: Remove setuptools_scm_git_archive dependency and add sdist test
-* :ghpull:`23605`: Fix issues in examples, docs, and tutorials
-* :ghpull:`23618`: [Doc]: Document the position parameter in apply_aspect()
-* :ghpull:`23355`: Revert "Try to unbreak CI by xfailing OSX Tk tests"
-* :ghpull:`23610`: TST: be more forgiving about IDing Noto
-* :ghpull:`23609`: print version number when building docs
-* :ghpull:`20832`: Implement multi-font embedding for PS Backend
-* :ghpull:`20804`: Implement multi-font embedding for PDF Backend
-* :ghpull:`23202`: MNT: Remove cached renderer from figure
-* :ghpull:`23497`: Avoid gridspec in more examples
-* :ghpull:`23602`: Editing "issues for new contributors"
-* :ghpull:`23600`: DOC: view_init docstring for 3d axes primary view angles
-* :ghpull:`23587`: BUG:datetime list starting with none
-* :ghpull:`23559`: re-base of font fallback for pdf and eps output + SVG support
-* :ghpull:`23557`: BLD: update the manylinux versions used
-* :ghpull:`23596`: Minor cleanup of axes_grid1
-* :ghpull:`23594`: Expire deprecation on passing bytes to FT2Font.set_text
-* :ghpull:`23435`: Add conda env to setup instructions
-* :ghpull:`23574`: Move colorbar() doc to method itself.
-* :ghpull:`23584`: Bump Ubuntu to 20.04 on GitHub Actions
-* :ghpull:`23561`: Clean up code in tri
-* :ghpull:`23582`: Cleanup axis3d.Axis.draw
-* :ghpull:`23510`: Refactor Widget tests
-* :ghpull:`20718`: Circle: Build docs in parallel.
-* :ghpull:`22452`: ENH: add ability to remove layout engine
-* :ghpull:`23516`: warning when scatter plot color settings discarded
-* :ghpull:`23577`: apply_aspect cleanups
-* :ghpull:`23575`: Cleanup parasite_simple example.
-* :ghpull:`23567`: Remove noop setattr_cm.
-* :ghpull:`23412`: Fix dash offset bug in Patch
-* :ghpull:`21756`: MNT: Clean up some UTF strings and memory autorelease
-* :ghpull:`23558`: MNT: Use UTF-8 string in macosx backend
-* :ghpull:`23550`: Change exception types, improve argument checking, and cleanups in mpl_toolkits
-* :ghpull:`23196`: Unify set_pickradius argument
-* :ghpull:`20740`: Implement Font-Fallback in Matplotlib
-* :ghpull:`22566`: Add rcparam for figure label size and weight
-* :ghpull:`23551`: Remove transform arguments from _iter_collection
-* :ghpull:`23444`: Deduplicate common parts in LatexManager.{__init__,_setup_latex_process}
-* :ghpull:`23017`: [ENH] : Provide axis('equal') for Axes3D (replace PR #22705)
-* :ghpull:`22950`: Simplify definition of mathtext symbols & correctly end tokens in mathtext parsing
-* :ghpull:`23409`: Provide axis('equal') for Axes3D (replaces PR #23017)
-* :ghpull:`23434`: Fix array-like linewidth for 3d scatter
-* :ghpull:`23500`: Move the common implementation of Axes.set_x/y/zscale to Axis.
-* :ghpull:`23533`: Add tests for sankey and minor fixes
-* :ghpull:`23535`: Make margins error as claimed in doc-string
-* :ghpull:`23546`: Simplify impl. of functions optionally used as context managers.
-* :ghpull:`23494`: Fix various issues from SonarQube
-* :ghpull:`23529`: Add workflow dispatch GitHub CI
-* :ghpull:`23539`: Small improvements to WebAgg example
-* :ghpull:`23541`: Change doc-build CI install order
-* :ghpull:`23526`: DOC: make "family" less ambiguous in FontProperties docs
-* :ghpull:`23537`: Move the deprecated RendererGTK{3,4}Cairo to a single place.
-* :ghpull:`23140`: [Features] Allow setting legend title alignment
-* :ghpull:`23538`: Fix imprecise docs re: backend dependencies.
-* :ghpull:`23532`: Add test for RGBAxes
-* :ghpull:`23453`: Add more tests for mplot3d
-* :ghpull:`23501`: Let Axes.clear iterate over Axises.
-* :ghpull:`23469`: Inline _init_axis_artists & _init_gridlines into clear.
-* :ghpull:`23475`: Add markerfacealt to pass-through arguments for error bar lines
-* :ghpull:`23527`: STY: fix whitespace on an assert
-* :ghpull:`23495`: Fix sgskip'd examples
-* :ghpull:`23404`: Restore matplotlib.__doc__ in Sphinx docs
-* :ghpull:`23507`: Add hint when More than {max_open_warning} figures have been opened
-* :ghpull:`23499`: Fix outdated comment re: event handlers in test_backends_interactive.
-* :ghpull:`23498`: Fix direct instantiation of webagg_core managers.
-* :ghpull:`23504`: Clarify formatting of the code-for-reproduction field in bug reports.
-* :ghpull:`23489`: Add missing test data to install
-* :ghpull:`23482`: Mathtext spaces must be independent of font style.
-* :ghpull:`23486`: Bump pypa/cibuildwheel from 2.8.0 to 2.8.1
-* :ghpull:`23461`: Tweak Axes repr.
-* :ghpull:`16931`: Make it easier to improve UI event metadata.
-* :ghpull:`23468`: Display grid in floating axes example.
-* :ghpull:`23467`: Remove old handling for factor=None in axisartist.
-* :ghpull:`23443`: Try running the pgf backend off the article class.
-* :ghpull:`23373`: Fix pan/zoom crashing when widget lock is unavailable
-* :ghpull:`23466`: Update filename in example.
-* :ghpull:`23464`: Deprecate macos close handler.
-* :ghpull:`23463`: Deprecate Tick.label
-* :ghpull:`23455`: Deprecate properties w_xaxis, w_yaxis, and w_zaxis
-* :ghpull:`23448`: Tweak callbacks to generate pick events.
-* :ghpull:`23233`: Default stem marker color follows the linecolor
-* :ghpull:`23452`: Generalize Axes __repr__ to 3D
-* :ghpull:`23445`: Compare thread native ids when checking whether running on main thread.
-* :ghpull:`20752`: Set norms using scale names.
-* :ghpull:`23438`: DOC: numpydoc-ify date Locator classes
-* :ghpull:`23427`: Tweak pgf escapes.
-* :ghpull:`23432`: Fixed typo in docs animation api
-* :ghpull:`23420`: Clean up test_chunksize_fails()
-* :ghpull:`23415`: Minor improvements to units_sample example
-* :ghpull:`21339`: Added linear scaling test to Hexbin marginals
-* :ghpull:`23414`: Bump pypa/cibuildwheel from 2.7.0 to 2.8.0
-* :ghpull:`23413`: Combine chunk size tests into one
-* :ghpull:`23403`: Small cleanup to VertexSelector.
-* :ghpull:`23291`: In the new/simplified backend API, don't customize draw_if_interactive.
-* :ghpull:`23350`: Fixed SVG-as-text image comparison tests.
-* :ghpull:`23406`: DOC: Fix calculation of bin centers in multi-histogram
-* :ghpull:`23407`: TST: Add missing warning type to pytest.warns
-* :ghpull:`23402`: Link 3D animation examples to one another.
-* :ghpull:`23401`: Upload wheel artifacts from the correct directory
-* :ghpull:`23374`: GOV: point CoC reports at CoC steering council subcomittee mailing list
-* :ghpull:`23393`: Clean up formatting of custom cmap example
-* :ghpull:`23146`: Update cibuildwheel
-* :ghpull:`23368`: Add a helper to generate closed paths.
-* :ghpull:`20220`: DOC: add mission statement
-* :ghpull:`22364`: Tweak mathtext/tex docs.
-* :ghpull:`23377`: Use tick_params more often over tick iteration
-* :ghpull:`22820`: [Doc] consolidate ``rect`` documentation
-* :ghpull:`23371`: Default animation.convert_args to ["-layers", "OptimizePlus"].
-* :ghpull:`23148`: DOC: change address to send security issues to
-* :ghpull:`23365`: DOC: add new showcase example, replace gendered one
-* :ghpull:`23033`: Fix issue with tex-encoding on non-Unicode platforms
-* :ghpull:`23358`: Shorten/clarify definition of extension types.
-* :ghpull:`23370`: Small cleanups to animation.
-* :ghpull:`23364`: Rename/change signature of PyGlyph_new.
-* :ghpull:`23363`: Simplify FigureCanvas multiple inheritance init by swapping bases order.
-* :ghpull:`23366`: MNT: use devel version of theme
-* :ghpull:`23357`: Fixed decimal points not appearing at end of Mathtext string.
-* :ghpull:`23351`: DOC/MNT install docs with dev version of sphinx theme
-* :ghpull:`23349`: CI: Remove old scipy-wheels-nightly uploads to ensure space
-* :ghpull:`23348`: Support multi-figure MultiCursor; prepare improving its signature.
-* :ghpull:`23360`: embedding_in_tk_sgskip.py: use root.destroy
-* :ghpull:`23354`: MNT: Use list comprehension
-* :ghpull:`23299`: FIX/API: do not reset backend key in rc_context
-* :ghpull:`23191`: ENH: add width_ratios and height_ratios to subplots
-* :ghpull:`23060`: MNT: Change objective C code to Automatic Reference Counting (ARC)
-* :ghpull:`23347`: Simplify/improve check for pycairo in Gtk-based backends.
-* :ghpull:`23316`: DOC: improve spines crosslinking
-* :ghpull:`23100`: Remove custom backend_nbagg.show(), putting logic in manager show.
-* :ghpull:`23342`: FIX: make sure addFont test removes the test font
-* :ghpull:`23266`: negative_linestyles kwarg in contour.py
-* :ghpull:`23332`: Validate Text linespacing on input.
-* :ghpull:`23336`: Remove ineffective exclusion of Arcs without parent Axes.
-* :ghpull:`23341`: MNT: Use '--pytest-test-first' option for naming clarity
-* :ghpull:`23337`: Remove now inexistent "datapath" rcParam from style blacklist.
-* :ghpull:`22004`: Make RendererCairo auto-infer surface size.
-* :ghpull:`23208`: ENH: enable stripey lines
-* :ghpull:`23288`: Correct URL area with rotated texts in PDFs
-* :ghpull:`23197`: Add tests for pan
-* :ghpull:`22167`: Deprecate selector ``visible`` attribute
-* :ghpull:`23322`: Cleanup FontProperties examples.
-* :ghpull:`23321`: Tweak examples capitalization/punctuation.
-* :ghpull:`23270`: Fix handling of nonmath hyphens in mathtext.
-* :ghpull:`23310`: Move Cursor demo from examples/misc to examples/event_handling
-* :ghpull:`23313`: Drop CSS styles that are in mpl-sphinx-theme
-* :ghpull:`23314`: Don't draw invisible 3D Axes
-* :ghpull:`23302`: Deprecate stem(..., use_line_collection=False)
-* :ghpull:`23309`: Remove front page examples
-* :ghpull:`23282`: Backport PR #22865 on branch v3.5.x (Fix issue with colorbar extend and drawedges)
-* :ghpull:`23231`: Add pytest-xvfb as test dependency
-* :ghpull:`23318`: No need to return OrderedDict from _gen_axes_spines.
-* :ghpull:`23295`: Replace re.sub by the faster str.translate.
-* :ghpull:`23300`: Modify example of "Fig Axes Customize Simple"
-* :ghpull:`23014`: Improve consistency in LogLocator and LogFormatter API
-* :ghpull:`23286`: Refactor URL handling in PDF backend
-* :ghpull:`23065`: Fix test_image_comparison_expect_rms
-* :ghpull:`23294`: Simplify binary data handling in ps backend.
-* :ghpull:`23284`: DOC: Switch to HTML5 and cleanup CSS
-* :ghpull:`23276`: Add get/set methods for DPI in SubFigure
-* :ghpull:`23207`: Update build environment and improve test
-* :ghpull:`23213`: DEV: Add name-tests-test to pre-commit hooks
-* :ghpull:`23289`: Properly make Name.hexify go through a deprecation cycle.
-* :ghpull:`23177`: Deprecate positional passing of most Artist constructor parameters
-* :ghpull:`23287`: Minor tweaks to pdf Name.
-* :ghpull:`23285`: In mathtext, replace manual caching (via ``glyphd``) by lru_cache.
-* :ghpull:`23034`: Correctly read the 'style' argument while processing 'genfrac'.
-* :ghpull:`23247`: Support inverted parentheses in mathtext.
-* :ghpull:`23190`: Deprecate unused methods in axis.py
-* :ghpull:`23219`: MNT: Rename example files with 'test' in name
-* :ghpull:`23277`: MNT: Remove dead code in SVG backend
-* :ghpull:`23261`: Bump actions/setup-python from 3 to 4
-* :ghpull:`23264`: Changing environment.yml for it to work on Windows
-* :ghpull:`23269`: MNT: Remove dead code in Colorbar
-* :ghpull:`23262`: Simplify qt_compat, in particular post-removal of qt4 support.
-* :ghpull:`23263`: Private helper to get requested backend without triggering resolution.
-* :ghpull:`23243`: Fix spacing after mathtext operators with sub/superscripts
-* :ghpull:`22839`: Fix spacing after mathtext operators with sub/superscripts
-* :ghpull:`23256`: DOC: Add note about Inkscape install on Windows
-* :ghpull:`23258`: DOC: remove Blue Book url
-* :ghpull:`23255`: Add a helper to generate mathtext error strings.
-* :ghpull:`23246`: Fix argument checking for set_interpolation_stage
-* :ghpull:`22881`: Support not embedding glyphs in svg mathtests.
-* :ghpull:`23198`: Rename ncol parameter in legend to ncols
-* :ghpull:`23251`: Small simplifications to mathtext tests.
-* :ghpull:`23249`: Don't allow ``r"$\left\\|\right.$"``, as in TeX.
-* :ghpull:`23248`: Rename test markers
-* :ghpull:`22507`: Remove *math* parameter of various mathtext internal APIs.
-* :ghpull:`23192`: Add tests, improve error messages in axis/_base, and code cleanup
-* :ghpull:`23241`: Fix invalid value in radio buttons example
-* :ghpull:`23187`: Correct docs and use keyword arguments in _mathtext.py
-* :ghpull:`23045`: MNT: Merge locally defined test marks
-* :ghpull:`22289`: ENH: compressed layout
-* :ghpull:`23237`: Expire BoxStyle._Base deprecation.
-* :ghpull:`23225`: DOC: Fix version switcher links to documentation
-* :ghpull:`23221`: DOC: recommend numpy random number generator class
-* :ghpull:`23223`: Changed offset reference, add small doc
-* :ghpull:`23215`: DOC: link the transforms tutorial from the module
-* :ghpull:`23201`: Rework tricontour and tricontourf documentation
-* :ghpull:`23013`: Add tests for date module
-* :ghpull:`23188`: Mnt new default dates
-* :ghpull:`22745`: MNT: Don't require renderer for window_extent and tightbbox
-* :ghpull:`23077`: MNT: Remove keyword arguments to gca()
-* :ghpull:`23182`: Simplify webagg blitting.
-* :ghpull:`23181`: Init FigureCanvasAgg._lastKey in ``__init__``.
-* :ghpull:`23175`: Point the version switcher to a name listed in switcher.json
-* :ghpull:`22669`: Cleanup documentation generation for pyplot
-* :ghpull:`22519`: fix markevery plot option with nans in data
-* :ghpull:`21584`: Move towards having get_shared_{x,y}_axes return immutable views.
-* :ghpull:`23170`: ENH: update ticks when requesting labels
-* :ghpull:`23169`: DOC: Migrate to sphinx-design
-* :ghpull:`23180`: Improve docstring of triplot() and PatchCollection
-* :ghpull:`23153`: Restore accidentally removed pytest.ini and tests.py.
-* :ghpull:`23166`: Deprecate passing most Legend arguments positionally
-* :ghpull:`23165`: DOCS Fix a few typos
-* :ghpull:`23167`: DOCS fix typo
-* :ghpull:`23062`: Add stackplot to plot types listing
-* :ghpull:`23161`: Added my (open access) book
-* :ghpull:`23141`: Minor fix for astropy units support broken in earlier PR
-* :ghpull:`23156`: No longer call draw_if_interactive in parasite_axes.
-* :ghpull:`23150`: DOC fix typo
-* :ghpull:`23149`: DOCS remove duplicate text
-* :ghpull:`23145`: Fix format error in switcher.json
-* :ghpull:`21755`: MNT: Clean up macosx backend set_message
-* :ghpull:`23128`: DOCS Fix typos
-* :ghpull:`23130`: Drop pytest warning config in nightly tests
-* :ghpull:`23135`: Unpin coverage again
-* :ghpull:`23133`: Make module deprecation messages consistent
-* :ghpull:`23134`: Remove newline from start of deprecation warnings
-* :ghpull:`22964`: Fix spelling errors
-* :ghpull:`22929`: Handle NaN in bar labels and error bars
-* :ghpull:`23093`: MNT: Removing 3.4 deprecations
-* :ghpull:`23090`: Derive new_figure_manager from FigureCanvas.new_manager.
-* :ghpull:`23099`: Remove unneeded cutout for webagg in show().
-* :ghpull:`23097`: Tweak check for IPython pylab mode.
-* :ghpull:`23088`: Improve error for invalid format strings / misspelled data keys.
-* :ghpull:`23092`: Ensure updated monkey-patching of sphinx-gallery EXAMPLE_HEADER
-* :ghpull:`23087`: Fix width/height inversion in dviread debug helper.
-* :ghpull:`23089`: Normalize tk load failures to ImportErrors.
-* :ghpull:`23091`: Move test that fig.add_axes() needs parameters
-* :ghpull:`23067`: more explicit in windows doc build instructions
-* :ghpull:`23081`: MNT: Deprecate date_ticker_factory
-* :ghpull:`23079`: MNT: Remove key_press and button_press from FigureManager
-* :ghpull:`23076`: MNT: Remove positional argument handling in LineCollection
-* :ghpull:`23078`: MNT: Remove deprecated axis.cla()
-* :ghpull:`23054`: Slightly simplify tcl/tk load in extension.
-* :ghpull:`23073`: MNT: Remove dummy_threading because threading is always available
-* :ghpull:`22405`: DOC: put the gallery keywords in the meta tag
-* :ghpull:`23071`: Fix installing contourpy on CI
-* :ghpull:`23068`: Slight refactor of _c_internal_utils to linewrap it better.
-* :ghpull:`23070`: Pathlibify autotools invocation in build.
-* :ghpull:`22755`: Maybe run autogen as part of freetype install
-* :ghpull:`23063`: doc: mathtext example: use axhspan() instead of fill_between() for backdrop rectangle shading
-* :ghpull:`23055`: Cleanup Annotation.update_position.
-* :ghpull:`22567`: Use contourpy for quad contour calculations
-* :ghpull:`22801`: TST: fully parameterize test_lazy_linux_headless
-* :ghpull:`22180`: ENH: Use rcParams savefig.directory on macosx backend
-* :ghpull:`23048`: Add rrulewrapper to docs
-* :ghpull:`23047`: Fix issue with hist and float16 data
-* :ghpull:`23044`: Fix missing section header for nightly builds
-* :ghpull:`23029`: Demonstrate both usetex and non-usetex in demo_text_path.py.
-* :ghpull:`23038`: Factor out errorevery parsing for 2D and 3D errorbars.
-* :ghpull:`23036`: Suppress traceback chaining for tex subprocess failures.
-* :ghpull:`23037`: Suppress exception chaining in FontProperties.
-* :ghpull:`23020`: Add test to close legend issue
-* :ghpull:`23031`: Specify that style files are utf-8.
-* :ghpull:`22991`: Enable ``plt.sca`` on subfigure's axes
-* :ghpull:`23030`: DOC: Fix charset declaration in redirects
-* :ghpull:`23022`: Fix some possible encoding issues for non-utf8 systems.
-* :ghpull:`23023`: Bump docker/setup-qemu-action from 1 to 2
-* :ghpull:`23024`: DOC: do not suggest to sudo pip install Matplotlib
-* :ghpull:`23018`: Fix typo in font family
-* :ghpull:`22627`: ENH: rect for constrained_layout
-* :ghpull:`22891`: Font example monospace
-* :ghpull:`23006`: docs: add subplot-mosaic string compact notation
-* :ghpull:`23009`: Fixed installation guide command typo
-* :ghpull:`22926`: Fix RangeSlider for same init values #22686
-* :ghpull:`22989`: Merge v3.5.x back into main
-* :ghpull:`22993`: STY: Fix typos in colormap
-* :ghpull:`22777`: DEV: Add codespell to pre-commit hooks
-* :ghpull:`22940`: Fixed dpi bug in rainbow text example
-* :ghpull:`22298`: MNT: Remove cmap_d colormap access
-* :ghpull:`22387`: Add a registry for color sequences
-* :ghpull:`21594`: Document text alignment
-* :ghpull:`22967`: TST: Add some tests for QuadMesh contains function
-* :ghpull:`22936`: ENH: Add full-screen toggle to the macosx backend
-* :ghpull:`22886`: MNT: remove mpl_toolkits.axes_grid
-* :ghpull:`22952`: Make MarkerStyle immutable
-* :ghpull:`22953`: MNT: Move set_cursor to the FigureCanvas
-* :ghpull:`18854`: Standardize creation of FigureManager from a given FigureCanvas class.
-* :ghpull:`22925`: Standardize creation of FigureManager from a given FigureCanvas class.
-* :ghpull:`22875`: Remove Forward definitions where possible.
-* :ghpull:`22928`: ENH: Add option to disable raising the window for macosx
-* :ghpull:`22912`: DOC: Better doc of colors
-* :ghpull:`22931`: BUG: Fix regression with ls=(0, ())
-* :ghpull:`22909`: FIX: skip sub directories when finding fonts on windows
-* :ghpull:`22911`: Clarify docstring of [un]install_repl_displayhook()
-* :ghpull:`22919`: CI: Add concurrency skips for GH Actions
-* :ghpull:`22899`: Fix documentation markup issues
-* :ghpull:`22906`: Clarify logic for repl displayhook.
-* :ghpull:`22892`: Remove support for IPython<4.
-* :ghpull:`22896`: Remove python-dateutil as test requirement
-* :ghpull:`22885`: Deprecate two-layered backend_pdf.Op enum.
-* :ghpull:`22883`: Tweak argument checking in tripcolor().
-* :ghpull:`22884`: Missing ``f`` prefix on f-strings fix
-* :ghpull:`22877`: Small cleanups to mathtext.
-* :ghpull:`21374`: Snap selectors
-* :ghpull:`22824`: Remove some unnecessary extra boundaries for colorbars with extensions.
-* :ghpull:`21448`: Use named groups in mathtext parser.
-* :ghpull:`22609`: Improve usability of dviread.Text by third parties.
-* :ghpull:`22809`: STY: Apply pre-commit hooks to codebase
-* :ghpull:`22730`: Fix removed cross-references
-* :ghpull:`22857`: Slightly simplify twin axes detection in MEP22 zoom.
-* :ghpull:`22813`: MNT: Deprecate figure callbacks
-* :ghpull:`22802`: MNT: make Axes.cla an alias for Axes.clear in all cases
-* :ghpull:`22855`: Remove non-needed remove_text=False.
-* :ghpull:`22854`: TST: Avoid floating point errors in asinh ticker
-* :ghpull:`22850`: Simplify tick creation
-* :ghpull:`22841`: Fix Tk error when updating toolbar checkbutton images
-* :ghpull:`22707`: Proposed ENH: Allow user to turn off breaking of streamlines in streamplot (rebased)
-* :ghpull:`22826`: Bump actions/upload-artifact from 2 to 3
-* :ghpull:`22825`: Bump codecov/codecov-action from 2 to 3
-* :ghpull:`22821`: Use bool for bool keyword arguments
-* :ghpull:`22815`: Fix pickling of globally available, dynamically generated norm classes.
-* :ghpull:`22702`: Doc tweak transform tutorial
-* :ghpull:`22613`: DOC: Add links to explicit vs implicit API everywhere "OO" is used
-* :ghpull:`22712`: Use repr in error messages
-* :ghpull:`22794`: Fix ps export of colored hatches with no linewidth
-* :ghpull:`22797`: Deprecate functions in backends
-* :ghpull:`22608`: Axes.inset_axes: enable Axes subclass creation
-* :ghpull:`22795`: Replace "marker simplification" by "marker subsampling" in docs.
-* :ghpull:`22768`: Fix inkscape tests
-* :ghpull:`22791`: Tweak _ConverterError reporting.
-* :ghpull:`22447`: Improve bar_label annotation
-* :ghpull:`22710`: Fix the error- TypeError: 'float' object is not iterable
-* :ghpull:`22444`: Revert "CI: skip test to work around gs bug"
-* :ghpull:`22785`: CI: Update weekly dependency test job
-* :ghpull:`22784`: Fix 'misspelled' transform variable
-* :ghpull:`22778`: Fix LaTeX formatting in examples
-* :ghpull:`22779`: Improve mlab documentation (and example)
-* :ghpull:`22759`: MNT: Skip existing wheels during nightly wheel upload
-* :ghpull:`22751`: BLD: do not put an upper bound on pyparsing
-* :ghpull:`22752`: DOC: Correct nightly wheels pip install command
-* :ghpull:`22742`: Fix deprecation of backend_tools.ToolBase.destroy
-* :ghpull:`22725`: Move towards making texmanager stateless.
-* :ghpull:`22734`: Added clim support to tripcolor
-* :ghpull:`22733`: CI: Add GHA workflow to upload nightly wheels
-* :ghpull:`21637`: Also upload a subset of nightly wheels
-* :ghpull:`22698`: Correct cross-references in documentation
-* :ghpull:`22263`: DOC: condense version switcher
-* :ghpull:`22361`: Revert datetime usetex ticklabels to use default tex font.
-* :ghpull:`22721`: Small style fixes.
-* :ghpull:`22356`: Cleanup tripcolor()
-* :ghpull:`22360`: Let TeX handle multiline strings itself.
-* :ghpull:`22418`: Deprecate auto-removal of overlapping Axes by plt.subplot{,2grid}.
-* :ghpull:`22722`: Rename confusingly-named cm_fallback.
-* :ghpull:`22697`: Deprecate in testing.decorators
-* :ghpull:`22556`: Add text.parse_math rcParams
-* :ghpull:`22163`: Change colour of Tk toolbar icons on dark backgrounds
-* :ghpull:`22704`: Small simplification to textpath.
-* :ghpull:`22498`: TST: increase coverage on tk tests
-* :ghpull:`21425`: Make Axis3D constructor signature closer to the one of 2D axis.
-* :ghpull:`22665`: Improve error message for incorrect color string
-* :ghpull:`22685`: Rewrite plot format detection from sphinx build target
-* :ghpull:`22670`: Update deprecated vmImage 'vs2017-win2016' in azure pipelines
-* :ghpull:`22503`: Deprecate backend_qt.qApp.
-* :ghpull:`22683`: Add missing space before : for parameters
-* :ghpull:`22591`: Fix Path/str-discrepancy in FontManager.addpath and improve documentation
-* :ghpull:`22680`: Bump actions/cache from 2 to 3
-* :ghpull:`22659`: Add description on quiver head parameters
-* :ghpull:`22668`: Raise on missing closing quotes in matplotlibrc
-* :ghpull:`22675`: Tweak colorbar_placement example.
-* :ghpull:`22276`: Merge "Scatter Symbol" and "Scatter Custom Symbol" examples
-* :ghpull:`22658`: Remove reference to now-deleted reminder note.
-* :ghpull:`22652`: Update documentation example and fix See also
-* :ghpull:`22587`: Refactor handling of tick and ticklabel visibility in Axis.clear()
-* :ghpull:`22148`: MNT: Deprecate ``docstring``
-* :ghpull:`22170`: Add example to polygon selector docstring showing how to set vertices programmatically
-* :ghpull:`22650`: Fix new leak in ft2font introduced in #22604
-* :ghpull:`22644`: FIX: Flush events after closing figures in macosx backend
-* :ghpull:`22643`: Suppress exception chaining in colormap lookup.
-* :ghpull:`22639`: ENH: MacOSX backend to use sRGB instead of GenericRGB colorspace
-* :ghpull:`22509`: Simplifications to ToolManager.{add,remove}_tool.
-* :ghpull:`22633`: DOC: remove space in directive.
-* :ghpull:`22631`: Add space between individual transform components in svg output.
-* :ghpull:`22523`: MNT: Use a context manager to change the norm in colorbar code
-* :ghpull:`22615`: FIX: Change get_axis_map to axis_map now
-* :ghpull:`22508`: Move tracking of autoscale status to Axis.
-* :ghpull:`22547`: Small cleanups around TexManager usage.
-* :ghpull:`22511`: Remove redundant rcParam-lookup in patches
-* :ghpull:`22516`: Expire deprecations in backends
-* :ghpull:`22612`: Updated grammar to reflect more common usage of output vs outputted in animation.py
-* :ghpull:`22589`: Support quoted strings in matplotlibrc
-* :ghpull:`22604`: MNT: Fix types in C-code to reduce warnings
-* :ghpull:`22610`: Fix alternative suggestion in epoch2num() deprecation
-* :ghpull:`22554`: Prepare for making create_dummy_axis not necessary.
-* :ghpull:`22607`: ENH: Add dark/light mode theme to the buttons
-* :ghpull:`21790`: FIX: Update blitting and drawing on the macosx backend
-* :ghpull:`22175`: FIX: Update macosx animation handling
-* :ghpull:`22569`: Require non-zero dash value
-* :ghpull:`22544`: Correct paper sizes
-* :ghpull:`20470`: Issues warnings for legend handles without handlers
-* :ghpull:`22558`: MNT: Simplify imports
-* :ghpull:`22580`: fix doc for annotation_clip parameter
-* :ghpull:`22581`: DOC: fix various typos
-* :ghpull:`22573`: Bump actions/setup-python from 2 to 3
-* :ghpull:`22568`: Rename qhull source to _qhull_wrapper.cpp.
-* :ghpull:`22561`: FIX: Handle stopped animation figure resize
-* :ghpull:`22562`: TST: Add a frame test for animations
-* :ghpull:`22514`: Expire deprecations in cbook.deprecation
-* :ghpull:`22555`: Use picklable callbacks for DraggableBase.
-* :ghpull:`22552`: Tweak dependency checking in doc/conf.py.
-* :ghpull:`22550`: Require sphinx>=3 & numpydoc>=1.0 for building docs.
-* :ghpull:`22539`: Deprecate toplevel mpl.text.get_rotation; normalize rotations early.
-* :ghpull:`22502`: Cleanup unused imports and variables in backends
-* :ghpull:`20071`: Document, test, and simplify impl. of auto_adjustable_area.
-* :ghpull:`22366`: Deprecation removal/updates in axes3d
-* :ghpull:`22484`: Simplify the internal API to connect picklable callbacks.
-* :ghpull:`22417`: Support passing rgbaFace as an array to agg's draw_path.
-* :ghpull:`22412`: Turn _get_axis_map() into a property and remove _get_axis_list()
-* :ghpull:`22486`: Expire deprecations in lines and patches
-* :ghpull:`22512`: Increase coverage
-* :ghpull:`22504`: Simplify FontProperties init.
-* :ghpull:`22497`: Remove entries of MathTextParser._backend_mapping deprecated in 3.4.
-* :ghpull:`22487`: Don't key MathTextParser cache off a mutable FontProperties.
-* :ghpull:`22468`: Turn _mathtext.ship into a plain function.
-* :ghpull:`22490`: Deprecate unused, untested Affine2D.identity().
-* :ghpull:`22491`: Linewrap setupext to 79 character lines.
-* :ghpull:`22488`: Some more maintenance for mathtext internal implementation.
-* :ghpull:`22485`: Change string representation of AxesImage
-* :ghpull:`22240`: Add minimum macosx version
-* :ghpull:`22480`: Remove _point_size_reduction.
-* :ghpull:`22204`: Cleanup _mathtext internal API
-* :ghpull:`22469`: Improve readability of mathtext internal structures.
-* :ghpull:`22477`: Un-pyplot some examples which were already explicitly referencing axes.
-* :ghpull:`22467`: Small cleanup to font handling in agg.
-* :ghpull:`21178`: Add asinh axis scaling (*smooth* symmetric logscale)
-* :ghpull:`22411`: Move cbook._define_aliases() to _api.define_aliases()
-* :ghpull:`22465`: Deprecate unused AddList.
-* :ghpull:`22451`: Clarify error message for bad keyword arguments.
-* :ghpull:`21267`: Cleanup AnnotationBbox.
-* :ghpull:`22464`: Small improvements related to radar_chart example.
-* :ghpull:`22421`: Make most params to figure()/Figure() kwonly.
-* :ghpull:`22457`: Copy arrowprops argument to FancyAnnotationBbox.
-* :ghpull:`22454`: move ``_toolbar_2`` from webagg_core to webagg
-* :ghpull:`22413`: Remove some trivial private getters/setters in axisartist
-* :ghpull:`21634`: TST: Add future dependency tests as a weekly CI job
-* :ghpull:`22079`: Share FigureManager class between gtk3 and gtk4.
-* :ghpull:`22440`: Clarify warning about labels with leading underscores.
-* :ghpull:`17488`: Make error message explicit in legend.py
-* :ghpull:`22453`: Simplify impl. of polar limits setting API.
-* :ghpull:`22449`: Small cleanup to quiver.
-* :ghpull:`22415`: Make emit and auto args of set_{x,y,z}lim keyword only.
-* :ghpull:`22422`: Deprecate backend_ps.convert_psfrags.
-* :ghpull:`22194`: Drop support for Python 3.7
-* :ghpull:`22234`: Partial fix for grid alpha
-* :ghpull:`22433`: Fix ambiguous link targets in docs.
-* :ghpull:`22420`: Update plt.figure() docstring.
-* :ghpull:`22388`: Make signature of Axes.annotate() more explicit.
-* :ghpull:`22419`: Remove "Matplotlib version" from docs issue template
-* :ghpull:`22423`: Avoid indiscriminate glob-remove in xpdf_distill.
-* :ghpull:`22406`: [DOC]: Removed a redundant 'The'
-* :ghpull:`21442`: Factor out common limits handling for x/y/z axes.
-* :ghpull:`22397`: Axes capitalization in widgets and axes3d
-* :ghpull:`22394`: Tweak Axes3D docstrings that refer to 2D plotting methods.
-* :ghpull:`22383`: TST: fix doc build
-* :ghpull:`21877`: DOC: attempt to explain the main different APIs
-* :ghpull:`21238`: Raise when unknown signals are connected to CallbackRegistries.
-* :ghpull:`22345`: MNT: make layout deprecations pending
-* :ghpull:`21597`: FIX: Remove the deepcopy override from transforms
-* :ghpull:`22370`: Replace tabs with spaces in C code.
-* :ghpull:`22371`: Corrected a mistake in comments (Issue #22369)
-* :ghpull:`21352`: Refactor hexbin().
-* :ghpull:`19214`: Improve autoscaling for high order Bezier curves
-* :ghpull:`22268`: Deprecated is_decade and is_close_to_int
-* :ghpull:`22359`: Slightly refactor TeX source generation.
-* :ghpull:`22365`: Remove deprecated ``MovieWriter.cleanup``
-* :ghpull:`22363`: Properly capitalize "Unicode".
-* :ghpull:`22025`: Deprecate various custom FigureFrameWx attributes/methods.
-* :ghpull:`21391`: Reuse imsave()'s background-blending code in FigureCanvasAgg.print_jpeg.
-* :ghpull:`22026`: Simplify wxframe deletion.
-* :ghpull:`22351`: Fix "trailing" whitespace in C docstrings.
-* :ghpull:`22342`: Docstrings for _qhull.
-* :ghpull:`21836`: Slightly shorten ft2font init.
-* :ghpull:`21962`: Privatize various internal APIs of backend_pgf.
-* :ghpull:`22114`: Rewrite AxesStack independently of cbook.Stack.
-* :ghpull:`22332`: Let TransformedPatchPath inherit most functionality from TransformedPath.
-* :ghpull:`22292`: Cleanup Axis._translate_tick_kw
-* :ghpull:`22339`: wx.App() should be init'ed in new_figure_manager_given_figure
-* :ghpull:`22315`: More standardization of floating point slop in mpl_toolkits.
-* :ghpull:`22337`: DOC: More cleanup axes -> Axes
-* :ghpull:`22323`: Replace sole use of maxdict by lru_cache.
-* :ghpull:`22229`: FIX: make safe to add / remove artists during ArtistList iteration
-* :ghpull:`22196`: ``dates`` classes and functions support ``tz`` both as string and ``tzinfo``
-* :ghpull:`22161`: Add box when setting ``PolygonSelector.verts``
-* :ghpull:`19368`: Raise warning and downsample if data given to _image.resample is too large
-* :ghpull:`22250`: Unify toolbar init across backends.
-* :ghpull:`22304`: Added tests for ContourSet.legend_elements
-* :ghpull:`21583`: Add pre-commit config and dev instructions
-* :ghpull:`21547`: Custom cap widths in box and whisker plots in bxp() and boxplot()
-* :ghpull:`20887`: Implement a consistent behavior in TkAgg backend for bad blit bbox
-* :ghpull:`22317`: Rename outdated seaborn styles.
-* :ghpull:`22271`: Rework/fix Text layout cache.
-* :ghpull:`22097`: In mpl_toolkits, use the same floating point slop as for standard ticks.
-* :ghpull:`22295`: Display bad format string in error message.
-* :ghpull:`22287`: Removed unused code and variables
-* :ghpull:`22244`: MNT: colorbar locators properties
-* :ghpull:`22270`: Expanded documentation of Axis.set_ticks as per discussion in issue #22262
-* :ghpull:`22280`: Simplify FontProperties.copy().
-* :ghpull:`22174`: Give the Tk toolbar buttons a flat look
-* :ghpull:`22046`: Add the ability to change the focal length of the camera for 3D plots
-* :ghpull:`22251`: Colorbar docstring reorg
-* :ghpull:`21933`: MNT: privatize colorbar attr
-* :ghpull:`22258`: DOC: fix version switcher
-* :ghpull:`22261`: DOC: fix switcher json
-* :ghpull:`22154`: Add some tests for minspan{x,y} in RectangleSelector
-* :ghpull:`22246`: DOC: add dropdown
-* :ghpull:`22133`: Deprecated ``afm``, ``fontconfig_pattern``, and ``type1font``
-* :ghpull:`22249`: DOC: More capitalization of Axes
-* :ghpull:`22021`: Ensure that all toolbar (old/new) subclasses can be init'ed consistently
-* :ghpull:`22213`: Improve ft2font error reporting.
-* :ghpull:`22245`: Deprecate cleared kwarg to get_renderer.
-* :ghpull:`22239`: Fix typos
-* :ghpull:`22216`: turn off the grid after creating colorbar axes
-* :ghpull:`22055`: FIX: Return value instead of enum in get_capstyle/_joinstyle
-* :ghpull:`22228`: Remove some unnecessary getattrs.
-* :ghpull:`20426`: ENH: Layout engine
-* :ghpull:`22224`: Trivial doc fix to annotations tutorial.
-* :ghpull:`21894`: Jointly track x and y in PolygonSelector.
-* :ghpull:`22205`: Bump minimum NumPy to 1.19
-* :ghpull:`22203`: Factor out underline-thickness lookups in mathtext.
-* :ghpull:`22189`: DOC: Add hatch API to reference
-* :ghpull:`22084`: Clean up 3d plot box_aspect zooming
-* :ghpull:`22098`: Expire axes_grid1/axisartist deprecations.
-* :ghpull:`22013`: Use standard toolbar in wx.
-* :ghpull:`22160`: Removed unused variables etc.
-* :ghpull:`22179`: FIX: macosx check case-insensitive app name
-* :ghpull:`22157`: Improved coverage of mathtext and removed unused code
-* :ghpull:`21781`: Use a fixture to get widget testing axes
-* :ghpull:`22140`: Ensure log formatters use Unicode minus
-* :ghpull:`21342`: Fix drawing animated artists changed in selector callback
-* :ghpull:`22134`: Deprecated ``tight_bbox`` and ``tight_layout`` modules
-* :ghpull:`21965`: Switch transOffset to offset_transform.
-* :ghpull:`22145`: Make Tk windows use the same icon as other backends
-* :ghpull:`22107`: Expire mathttext-related deprecations
-* :ghpull:`22139`: FIX: width/height were reversed in macosx rectangle creation
-* :ghpull:`22123`: Deprecate accepting arbitrary parameters in some get_window_extent() methods
-* :ghpull:`22122`: Hint at draw_without_rendering() in Text.get_window_extent
-* :ghpull:`22120`: Drop dependency on scipy in the docs.
-* :ghpull:`22063`: FIX: Autoposition title when yaxis has offset
-* :ghpull:`22119`: Micro-optimize skew().
-* :ghpull:`22109`: Remove unnecessary null checks in macosx.m, and some more maintenance
-* :ghpull:`21977`: Add corner coordinate helper methods to Ellipse/Rectangle
-* :ghpull:`21830`: Add option of bounding box for PolygonSelector
-* :ghpull:`22115`: Turn _localaxes into a plain list.
-* :ghpull:`22108`: Micro-optimize rotation transform.
-* :ghpull:`22043`: Cleanup differential equations examples.
-* :ghpull:`22080`: Simple style(ish) fixes.
-* :ghpull:`22110`: Right-aligned status text in backends
-* :ghpull:`21873`: DOC: Update and consolidate Custom Tick Formatter for Time Series example
-* :ghpull:`22112`: Fix a small typo
-* :ghpull:`20117`: Very soft-deprecate AxesDivider.new_{horizontal,vertical}.
-* :ghpull:`22034`: Update lines_with_ticks_demo.py
-* :ghpull:`22102`: DOC: rename usage tutorial to quick_start
-* :ghpull:`19228`: Validate text rotation in setter
-* :ghpull:`22081`: Expire colorbar-related deprecations.
-* :ghpull:`22008`: Added color keyword argument to math_to_image
-* :ghpull:`22058`: Remove exprired mplot3d deprecations for 3.6
-* :ghpull:`22073`: DOC: Add new tutorial to external resources.
-* :ghpull:`22054`: MNT: Set CapStyle member names automatically
-* :ghpull:`22061`: De-duplicate mplot3D API docs
-* :ghpull:`22075`: Remove unnecessary ``.figure`` qualifier in docs.
-* :ghpull:`22051`: Make required_interactive_framework required on FigureCanvas.
-* :ghpull:`22050`: Deprecate the noop, unused FigureCanvasBase.resize.
-* :ghpull:`22030`: Add explanatory comments to "broken" horizontal bar plot example
-* :ghpull:`22001`: Fix:    [Bug]: triplot with 'ls' argument yields TypeError #21995
-* :ghpull:`22045`: Fill in missing Axes3D box_aspect argument docstring
-* :ghpull:`22042`: Keep FontEntry helpers private.
-* :ghpull:`21042`: Make rcParams.copy() return a new RcParams instance.
-* :ghpull:`22032`: flipy only affects the drawing of texts, not of images.
-* :ghpull:`21993`: Added docstring to rrulewrapper class
-* :ghpull:`21935`: Significantly improve tight layout performance for cartopy axes
-* :ghpull:`22000`: Some gtk cleanups.
-* :ghpull:`21983`: Simplify canvas class control in FigureFrameWx.
-* :ghpull:`21985`: Slightly tighten the _get_layout_cache_key API.
-* :ghpull:`22020`: Simplify wx _print_image.
-* :ghpull:`22010`: Fix syntax highlighting in contrib guide.
-* :ghpull:`22003`: Initialize RendererCairo.{width,height} in constructor.
-* :ghpull:`21992`: Use _make_classic_style_pseudo_toolbar more.
-* :ghpull:`21916`: Fix picklability of make_norm_from_scale norms.
-* :ghpull:`21981`: FigureCanvasCairo can init RendererCairo; kill RendererCairo subclasses.
-* :ghpull:`21986`: InvLogTransform should only return masked arrays for masked inputs.
-* :ghpull:`21991`: PEP8ify wx callback names.
-* :ghpull:`21975`: DOC: remove experimental tag from CL
-* :ghpull:`21989`: Autoinfer norm bounds.
-* :ghpull:`21980`: Removed loaded modules logging
-* :ghpull:`21982`: Deprecate duplicated FigureManagerGTK{3,4}Agg classes.
-* :ghpull:`21963`: Clarify current behavior of draw_path_collection.
-* :ghpull:`21974`: Reword inset axes example.
-* :ghpull:`21835`: Small improvements to interactive examples
-* :ghpull:`21050`: Store dash_pattern as single attribute, not two.
-* :ghpull:`21557`: Fix transparency when exporting to png via pgf backend.
-* :ghpull:`21904`: Added _repr_html_ for fonts
-* :ghpull:`21696`: Use cycling iterators in RendererBase.
-* :ghpull:`21955`: Refactor common parts of ImageMagick{,File}Writer.
-* :ghpull:`21952`: Clarify coordinates for RectangleSelector properties
-* :ghpull:`21964`: Fix some more missing references.
-* :ghpull:`21516`: Make _request_autoscale_view more generalizable to 3D.
-* :ghpull:`21947`: Slightly cleanup RendererBase docs.
-* :ghpull:`21961`: Privatize various internal APIs of backend_pgf.
-* :ghpull:`21956`: Remove tests for avconv animation writers.
-* :ghpull:`21954`: DOC: Move Animation and MovieWriter inheritance diagrams ...
-* :ghpull:`21780`: Add a click_and_move widget test helper
-* :ghpull:`21941`: Merge branch v3.5.x into main
-* :ghpull:`21936`: Small ``__getstate__`` cleanups.
-* :ghpull:`21939`: Update comment re: register_at_fork.
-* :ghpull:`21910`: Fold _rgbacache into _imcache.
-* :ghpull:`21921`: Clean up RectangleSelector move code
-* :ghpull:`21925`: Drop labelling from PR welcome action
-* :ghpull:`14930`: Set Dock icon on the macosx backend
-* :ghpull:`21920`: Improve square state calculation in RectangleSelector
-* :ghpull:`21919`: Fix use_data_coordinates docstring
-* :ghpull:`21881`: Add a PolygonSelector.verts setter
-* :ghpull:`20839`: Fix centre and square state and add rotation for rectangle selector
-* :ghpull:`21874`: DOC: Add Date Tick Locators and Formatters example
-* :ghpull:`21799`: Added get_font_names() to fontManager
-* :ghpull:`21871`: DOC: Code from markevery_prop_cycle moved to test.
-* :ghpull:`21395`: Expire _check_savefig_extra_args-related deprecations.
-* :ghpull:`21867`: Remove unused bbox arg to _convert_agg_to_wx_bitmap.
-* :ghpull:`21868`: Use partialmethod for better signatures in backend_ps.
-* :ghpull:`21520`: Shorten some inset_locator docstrings.
-* :ghpull:`21737`: Update the "Rotating a 3D plot" gallery example to show all 3 rotation axes
-* :ghpull:`21851`: Re-order a widget test function
-* :ghpull:`10762`: Normalization of elevation and azimuth angles for surface plots
-* :ghpull:`21426`: Add ability to roll the camera in 3D plots
-* :ghpull:`21822`: Replace NSDictionary by switch-case.
-* :ghpull:`21512`: MNT: Add modifier key press handling to macosx backend
-* :ghpull:`21784`: Set macOS icon when using Qt backend
-* :ghpull:`21748`: Shorten PyObjectType defs in macosx.m.
-* :ghpull:`21809`: MNT: Turn all macosx warnings into errors while building
-* :ghpull:`21792`: Fix missing return value in closeButtonPressed.
-* :ghpull:`21767`: Inherit many macos backend docstrings.
-* :ghpull:`21766`: Don't hide build log on GHA.
-* :ghpull:`21728`: Factor out some macosx gil handling for py-method calls from callbacks.
-* :ghpull:`21754`: Update gitattributes so that objc diffs are correctly contextualized.
-* :ghpull:`21752`: Add a helper for directly output pdf streams.
-* :ghpull:`21750`: Don't sort pdf dicts.
-* :ghpull:`21745`: DOC: Clarify Coords Report Example
-* :ghpull:`21746`: Fix/add docstring signatures to many C++ methods.
-* :ghpull:`21631`: DOC: change gridspec tutorial to arranging_axes tutorial
-* :ghpull:`21318`: FIX: better error message for shared axes and axis('equal')
-* :ghpull:`21519`: mark_inset should manually unstale axes limits before drawing itself.
-* :ghpull:`21724`: Fix copyright date with SOURCE_DATE_EPOCH set
-* :ghpull:`21398`: FIX: logic of title repositioning
-* :ghpull:`21717`: Simplify macosx toolbar init.
-* :ghpull:`21690`: Whitespace/braces/#defines cleanup to macosx.
-* :ghpull:`21695`: Use _api.check_shape more.
-* :ghpull:`21698`: Small code cleanups and style fixes.
-* :ghpull:`21529`: Delay-load keymaps in toolmanager.
-* :ghpull:`21525`: Fix support for clim in scatter.
-* :ghpull:`21697`: Drop non-significant zeros from ps output.
-* :ghpull:`21692`: CI: Remove CI test runs from forks of matplotlib
-* :ghpull:`21591`: Make ToolFullScreen a Tool, not a ToolToggle.
-* :ghpull:`21677`: Simplify test for negative xerr/yerr.
-* :ghpull:`21657`: Replace some image_comparisons by return-value-tests/check_figures_e…
-* :ghpull:`21664`: Merge 3.5.x into main
-* :ghpull:`21490`: Make Line2D copy its inputs
-* :ghpull:`21639`: Skip some uses of packaging's PEP440 version for non-Python versions.
-* :ghpull:`21604`: Fix centre square rectangle selector part 1
-* :ghpull:`21593`: Check for images added-and-modified in a same PR
-* :ghpull:`20750`: Shorten issue templates
-* :ghpull:`21590`: Make gtk3 full_screen_toggle more robust against external changes.
-* :ghpull:`21582`: Organize checklist in PR template
-* :ghpull:`21580`: Rename/remove _lastCursor, as needed.
-* :ghpull:`21567`: Removed the range parameter from the validate_whiskers function's err…
-* :ghpull:`21565`: Further remove remnants of offset_position.
-* :ghpull:`21542`: [ENH]: Use new style format strings for colorbar ticks
-* :ghpull:`21564`: Skip invisible artists when doing 3d projection.
-* :ghpull:`21558`: Various small fixes for streamplot().
-* :ghpull:`21544`: Return minorticks as array, not as list.
-* :ghpull:`21546`: Added links to the mosaic docs in figure and pyplot module docstrings
-* :ghpull:`21545`: Turn mouseover into a mpl-style getset_property.
-* :ghpull:`21537`: Remove unnecessary False arg when constructing wx.App.
-* :ghpull:`21536`: Reword margins docstrings, and fix bounds on zmargin values.
-* :ghpull:`21535`: typo-correction-on-line-185
-* :ghpull:`21534`: Do not use space in directive calling.
-* :ghpull:`21494`: Adding tutorial links for blitting in widgets.py
-* :ghpull:`21407`: Stash exceptions when FT2Font closes the underlying stream.
-* :ghpull:`21431`: set_ticks([single_tick]) should also expand view limits.
-* :ghpull:`21444`: Make pipong example self-contained.
-* :ghpull:`21392`: Add label about workflow to new contributor PRs
-* :ghpull:`21440`: Install sphinx-panels along with development setup
-* :ghpull:`21434`: Remove coords_flat variable
-* :ghpull:`21415`: Move gui_support.macosx option to packages section.
-* :ghpull:`21412`: Privatize some SVG internal APIs.
-* :ghpull:`21401`: Uncamelcase some internal variables in axis.py; rename _get_tick_bboxes.
-* :ghpull:`21417`: Use Bbox.unit() more.
-* :ghpull:`20253`: Simplify parameter handling in FloatingAxesBase.
-* :ghpull:`21379`: Simplify filename tracking in FT2Font.
-* :ghpull:`21278`: Clear findfont cache when calling addfont().
-* :ghpull:`21400`: Use bbox.{size,bounds,width,height,p0,...} where appropriate.
-* :ghpull:`21408`: Reword annotations tutorial section titles.
-* :ghpull:`21371`: Rename default branch
-* :ghpull:`21389`: Log pixel coordinates in event_handling coords_demo example on terminal/console
-* :ghpull:`21376`: Factor common parts of saving to different formats using pillow.
-* :ghpull:`21377`: Enable tests for text path based markers
-* :ghpull:`21283`: Demonstrate inset_axes in scatter_hist example.
-* :ghpull:`21356`: Raise an exception when find_tex_file fails to find a file.
-* :ghpull:`21362`: Simplify wording of allowed errorbar() error values
-* :ghpull:`21274`: ENH: Add support to save images in WebP format
-* :ghpull:`21289`: Simplify _init_legend_box.
-* :ghpull:`21256`: Make image_comparison work even without the autoclose fixture.
-* :ghpull:`21343`: Fix type1font docstring markup/punctuation.
-* :ghpull:`21341`: Fix trivial docstring typo.
-* :ghpull:`21301`: Simplify ``Colormap.__call__`` a bit.
-* :ghpull:`21280`: Make ``Path.__deepcopy__`` interact better with subclasses, e.g. TextPath.
-* :ghpull:`21266`: Fix #21101 Add validator to errorbar method
-* :ghpull:`20921`: Fix problem with (deep)copy of TextPath
-* :ghpull:`20914`: 19195 rotated markers
-* :ghpull:`21276`: Add language about not assigning issues
-* :ghpull:`20715`: Improve Type-1 font parsing
-* :ghpull:`21218`: Parametrize/simplify test_missing_psfont.
-* :ghpull:`21213`: Compress comments in make_image.
-* :ghpull:`21187`: Deprecate error_msg_foo helpers.
-* :ghpull:`21190`: Deprecate mlab.stride_windows.
-* :ghpull:`21152`: Rename ``**kw`` to ``**kwargs``.
-* :ghpull:`21087`: Move colormap examples from userdemo to images_contours_and_fields.
-* :ghpull:`21074`: Deprecate MarkerStyle(None).
-* :ghpull:`20990`: Explicit registration of canvas-specific tool subclasses.
-* :ghpull:`21049`: Simplify setting Legend attributes
-* :ghpull:`21056`: Deprecate support for no-args MarkerStyle().
-* :ghpull:`21059`: Remove dummy test command from setup.py
-* :ghpull:`21015`: Prepare for rcParams.copy() returning a new RcParams instance in the future
-* :ghpull:`21021`: Factor out for_layout_only backcompat support in get_tightlayout.
-* :ghpull:`21023`: Inline ToolManager._trigger_tool to its sole call site.
-* :ghpull:`21005`: Test the rcParams deprecation machinery.
-* :ghpull:`21010`: Avoid TransformedBbox where unneeded.
-* :ghpull:`21019`: Reword custom_ticker1 example.
-* :ghpull:`20995`: Deprecate some backend_gtk3 helper globals.
-* :ghpull:`21004`: Remove now-unused rcParams _deprecated entries.
-* :ghpull:`20986`: Make HandlerLine2D{,Compound} inherit constructors from HandlerNpoints.
-* :ghpull:`20974`: Rename symbol_name to glyph_name where appropriate.
-* :ghpull:`20961`: Small cleanups to math_to_image.
-* :ghpull:`20957`: legend_handler_map cleanups.
-* :ghpull:`20955`: Remove unused HostAxes._get_legend_handles.
-* :ghpull:`20851`: Try to install the Noto Sans CJK font
-
-Issues (202):
-
-* :ghissue:`23827`: backend_gtk3agg.py calls set_device_scale
-* :ghissue:`23560`: [Doc]: mpl_toolkits.axes_grid still mentioned as maintained
-* :ghissue:`23794`: [Doc]: Version switcher broken in devdocs
-* :ghissue:`23806`: [Bug]: possible regression in axis ticks handling in matplotlib 3.6.0rc2
-* :ghissue:`22965`: [Bug]: triplot duplicates label legend
-* :ghissue:`23807`: streamplot raises ValueError when the input is zeros
-* :ghissue:`23761`: [Bug]: False positive legend handler warnings in 3.6.0.rc1
-* :ghissue:`23398`: [Bug]: Newer versions of matplotlib ignore xlabel on colorbar axis
-* :ghissue:`23699`: [Bug]: Bug with toolbar instantiation in notebook
-* :ghissue:`23745`: [Doc]: Minor rcParams/matplotlibrc doc issues
-* :ghissue:`23717`: [Bug]: AxesSubplot.get_yticks not returning the actual printed ticks
-* :ghissue:`21508`: [Doc]: Create diagram to show rotation directions for 3D plots
-* :ghissue:`23709`: [Bug]: colorbar with unattached mappables can't steal space
-* :ghissue:`23701`: [Bug]: plt.figure(), plt.close() leaks memory
-* :ghissue:`22409`: [Bug]: AttributeError: 'QResizeEvent' object has no attribute 'pos'
-* :ghissue:`19609`: DeprecationWarning when changing color maps
-* :ghissue:`23716`: MatplotlibDeprecationWarning removal hard-breaks seaborn in 3.6rc1
-* :ghissue:`23719`: [Bug]: register_cmap deprecation message seems wrong
-* :ghissue:`23707`: test_Normalize fails on aarch64/ppc64le/s390x
-* :ghissue:`21107`: [MNT]: Should plt.xticks() get a minor keyword argument
-* :ghissue:`23679`: [Doc]: Deprecated modules not in docs
-* :ghissue:`19550`: Arc and pathpatch_2d_to_3d plots full ellipse
-* :ghissue:`23329`: [Bug]: ``plt.autoscale()`` fails for partial ``Arc``
-* :ghissue:`11266`: Arc patch ignoring theta1/theta2 when added to Axes via PatchCollection
-* :ghissue:`4067`: 'Poly3DCollection' object has no attribute '_facecolors2d'
-* :ghissue:`23622`: [MNT]: make.bat not parsing sphinxopt
-* :ghissue:`23459`: [Bug]: 'Line3D' object has no attribute '_verts3d'
-* :ghissue:`23653`: [Bug]: macosx subplot tool causes segfault when window closed
-* :ghissue:`23660`: [Bug]: Test test_figure.py::test_subfigure_ss[png] FAILED on ppc64le
-* :ghissue:`23645`: [MNT]: Python 3.11 manylinux wheels
-* :ghissue:`23650`: TTF fonts loaded from file are not embedded/displayed properly when saved to pdf
-* :ghissue:`23583`: [Doc]: Document the position parameter in apply_aspect()
-* :ghissue:`23386`: setuptools_scm-git-archive is obsolete
-* :ghissue:`23220`: [Doc]: Clarify ``offset`` parameter in linestyle
-* :ghissue:`22746`: [Doc]: Document that rcParams['font.family'] can be a list
-* :ghissue:`8187`: Axes doesn't have ````legends```` attribute?
-* :ghissue:`23580`: [Bug]: TypeError when plotting against list of datetime.date where 0th element of list is None
-* :ghissue:`15514`: Relevant methods are only documented in base classes and thus not easily discoverable
-* :ghissue:`21611`: DOC: Add conda environment instructions to developers guide
-* :ghissue:`23487`: [Bug]: scatter plot color settings discarded unless c given
-* :ghissue:`22977`: [Bug]: offset dash linestyle has no effect in patch objects
-* :ghissue:`18883`: Matplotlib would not try to apply all the font in font list to draw all characters in the given string.
-* :ghissue:`22570`: [ENH]: Provide ``axis('equal')`` for ``Axes3D``.
-* :ghissue:`23433`: [Bug]: array-like linewidth raises an error for scatter3D
-* :ghissue:`12388`: Legend Title Left Alignment
-* :ghissue:`23375`: [Bug]: markerfacecoloralt not supported when drawing errorbars
-* :ghissue:`17973`: DOC: matplotlib.__doc__ not included in online docs ?
-* :ghissue:`23474`: [Bug]: ``\,`` and ``\mathrm{\,}`` are not identical in Mathtext when using CM and STIX
-* :ghissue:`8715`: event handlers have different signatures across backends
-* :ghissue:`18271`: PGF uses the minimal document class
-* :ghissue:`23324`: [Bug]: Exception not handled in widgetlock()
-* :ghissue:`15710`: doc for type of tz parameter is inconsistent throughout dates.py
-* :ghissue:`21165`: Hexbin marginals need a test for linear scaling
-* :ghissue:`23105`: [MNT]: Deprecate per-backend customization of draw_if_interactive
-* :ghissue:`23147`: [Bug]: with setuptools>=60, cannot find msbuild
-* :ghissue:`23379`: [Bug]: Offset notation on y-axis can overlap with a long title
-* :ghissue:`22819`: [Doc]: Make rect argument consistent in the docstrings
-* :ghissue:`23172`: [Bug]: Calling matplotlib.pyplot.show() outside of matplotlib.pyplot.rc_context no longer works
-* :ghissue:`23019`: [Bug]: ``UnicodeDecodeError`` when using some special and accented characters in TeX
-* :ghissue:`23334`: [Doc]: Tk embedding example crashes Spyder
-* :ghissue:`23298`: [Bug]: get_backend() clears figures from Gcf.figs if they were created under rc_context
-* :ghissue:`21942`: [ENH]: add width/height_ratios to subplots and friends
-* :ghissue:`23028`: [ENH]: contour kwarg for negative_linestyle
-* :ghissue:`19223`: Certain non-hashable parameters to text() give cryptic error messages
-* :ghissue:`18351`: Add the ability to plot striped lines
-* :ghissue:`23205`: [Bug]: URL-area not rotated in PDFs
-* :ghissue:`23268`: [Bug]: hyphen renders different length depending on presence of MathText
-* :ghissue:`23308`: [Bug]: set_visible() not working for 3d projection
-* :ghissue:`23296`: Set_color method for line2d object in latest document not work
-* :ghissue:`22992`: [Bug]: test_image_comparison_expect_rms nondeterministic failure
-* :ghissue:`23008`: [ENH]: Use ``\genfrac`` in display style?
-* :ghissue:`23214`: [MNT]: Rename examples with "test" in the name
-* :ghissue:`17852`: Thin space missing after mathtext operators
-* :ghissue:`12078`: Inconsistency in keyword-arguments ncol/ncols, nrow/nrows
-* :ghissue:`23239`: [Doc]: steps is not implemented in line styles.
-* :ghissue:`23151`: [MNT]: default date limits...
-* :ghissue:`9462`: Misaligned bottoms of subplots for png output with bbox_inches='tight'
-* :ghissue:`21369`: [Bug]: ax.invert_xaxis() and ax.invert_yaxis() both flip the X axis
-* :ghissue:`20797`: ``macosx`` cursors break with images
-* :ghissue:`23084`: [TST] Upcoming dependency test failures
-* :ghissue:`22910`: [Bug]: bar_label fails with nan errorbar values
-* :ghissue:`23074`: [Bug]: matplotlib crashes if ``_tkinter`` doesn't have ``__file__``
-* :ghissue:`23083`: [Bug]: Confusing error messages
-* :ghissue:`22391`: [Doc]: Remove "keywords" line at the bottom of all examples
-* :ghissue:`20202`: Daylocator causes frozen computer when used with FuncAnimation
-* :ghissue:`22529`: Replace C++ quad contouring code with use of ContourPy
-* :ghissue:`21710`: [ENH]: macosx backend does not respect rcParams["savefig.directory"]
-* :ghissue:`21880`: [Doc]: rrulewrapper not included in API docs
-* :ghissue:`22622`: [Bug]: Gaps and overlapping areas between bins when using float16
-* :ghissue:`23043`: [TST] Upcoming dependency test failures
-* :ghissue:`17960`: Line2D object markers are lost when retrieved from legend.get_lines() when linestyle='None'
-* :ghissue:`23026`: [MNT]: Require that matplotlibrc/style files use utf-8 (or have an encoding cookie)
-* :ghissue:`22947`: [Bug]: Can't use ``plt.sca()`` on axes created using subfigures
-* :ghissue:`22623`: [ENH]: support rect with constrained_layout ("layout only to part of the figure")
-* :ghissue:`22917`: "ab;cd" missing in subplot_mosaic tutorial
-* :ghissue:`22686`: [Bug]: can not give init value for RangeSlider widget
-* :ghissue:`22740`: [MNT]: Add codespell to pre-commit hooks
-* :ghissue:`22893`: rainbow text example is broken
-* :ghissue:`21571`: [Doc]: Clarify text positioning
-* :ghissue:`22092`: [Bug]: Configure subplots dialog freezes for TkAgg with toolmanager
-* :ghissue:`22760`: [Bug]: Macosx legend picker doesn't work anymore
-* :ghissue:`16369`: Call to input blocks slider input on osx with the default agg 'MacOSX'. It works fine on when TkAgg is used.
-* :ghissue:`22915`: [Bug]: figure.raise_window rcParam does not work on MacOSX backend
-* :ghissue:`22930`: [Bug]: Regression in dashes due to #22569
-* :ghissue:`22859`: [Bug]: findSystemFonts should not look in subdirectories of C:\Windows\Fonts\
-* :ghissue:`22882`: Missing ``f`` prefix on f-strings
-* :ghissue:`22738`: [MNT]: make Axes.cla an alias for Axes.clear in all cases
-* :ghissue:`22708`: [TST] Upcoming dependency test failures
-* :ghissue:`8388`: Proposed ENH: Allow user to turn off breaking of streamlines in streamplot
-* :ghissue:`20755`: [Bug]: make_norm_from_scale should create picklable classes even when used in-line.
-* :ghissue:`18249`: Expand the explanation of the Object-Oriented interface
-* :ghissue:`22792`: [Bug]: .eps greyscale hatching of patches when lw=0
-* :ghissue:`22630`: [ENH]: enable passing of projection keyword to Axes.inset_axes
-* :ghissue:`22414`: [Bug]: bar_label overlaps bars when y-axis is inverted
-* :ghissue:`22726`: [Bug]: tripcolor ignores clim
-* :ghissue:`21635`: [ENH]: Add a nightly wheel build
-* :ghissue:`9994`: document where nightly wheels are published
-* :ghissue:`22350`: [Bug]: text.usetex Vs. DateFormatter
-* :ghissue:`4976`: missing imshow() subplots when using tight_layout()
-* :ghissue:`22150`: [ENH]: Tool icons are hardly visible in Tk when using a dark theme
-* :ghissue:`22662`: Leave color parameter empty should be fine[ENH]:
-* :ghissue:`22671`: [Doc]: plot_format adaption invalidates sphinx cache
-* :ghissue:`22582`: [Bug]: FontManager.addfont doesn't accept pathlib.Path of TTF font
-* :ghissue:`22657`: [ENH]: vector map
-* :ghissue:`16181`: The great API cleanup
-* :ghissue:`22636`: [Bug]: Infinite loop when there is single double quote in matplotlibrc
-* :ghissue:`22266`: [Doc]: Improve examples in documentation
-* :ghissue:`11861`: Figure does not close until script finishes execution
-* :ghissue:`19288`: Escape # character in matplotlibrc
-* :ghissue:`22579`: [Bug]: Replacement for epoch2num behaves differently (does not accept arrays)
-* :ghissue:`22605`: [Bug]: Tool contrast low with dark theme on macosx backend
-* :ghissue:`17642`: bring osx backend flush_events to feature parity with other backend
-* :ghissue:`19268`: Drawing the canvas does not populate ticklabels on MacOSX backend
-* :ghissue:`17445`: MacOSX does not render frames in which new artists are added when blitting
-* :ghissue:`10980`: Current versions cannot reproduce rotate_axes_3d_demo.py
-* :ghissue:`18451`: MacOSX backend fails with animation in certain scripts
-* :ghissue:`22603`: [MNT]: Replace str(n)cpy etc with safe versions (C++)
-* :ghissue:`19121`: Handle and label not created for Text with label
-* :ghissue:`22563`: [Doc]: annotation_clip=None not correctly documented
-* :ghissue:`12528`: Empty axes on draw after blitted animation finishes
-* :ghissue:`20991`: [Bug]: Error when using path effect with a PolyCollection
-* :ghissue:`19563`: path_effects kwarg triggers exception on 3D scatterplot
-* :ghissue:`8650`: System Error in backend_agg. (with a fix!)
-* :ghissue:`20294`: ``AxesImage.__str__`` is wrong if the image does not span the full Axes.
-* :ghissue:`18066`: Document minimum supported OSX version for macos backend
-* :ghissue:`17018`: Add documentation about transparency of frame
-* :ghissue:`22403`: [MNT]: Confusing prompt in docs issue template
-* :ghissue:`8839`: mpl_connect silently does nothing when passed an invalid event type string
-* :ghissue:`22343`: [MNT]: Delay (or make pending) the deprecation of set_constrained_layout/set_tight_layout
-* :ghissue:`21554`: [Bug]: ``ValueError`` upon deepcopy of a ``Figure`` object
-* :ghissue:`22369`: [Doc]: Incorrect comment in example code for creating adjacent subplots
-* :ghissue:`19174`: connectionstyle arc3 with high rad value pushes up data interval of x-axis and y-axis.
-* :ghissue:`8351`: seaborn styles make "+", "x" markers invisible; proposed workaround for shipped styles
-* :ghissue:`22278`: Deprecate/remove maxdict
-* :ghissue:`19276`: imshow with very large arrays not working as expected
-* :ghissue:`22035`: [ENH]: Specify a custom focal length / FOV for the 3d camera
-* :ghissue:`22264`: [Bug]: new constrained_layout causes axes to go invisible(?)
-* :ghissue:`21774`: [MNT]: Improvements to widget tests
-* :ghissue:`18722`: Consider removing AFM+mathtext support
-* :ghissue:`21540`: [Bug]: cm fontset in log scale does not use Unicode minus
-* :ghissue:`22062`: [Bug]: Autopositioned title overlaps with offset text
-* :ghissue:`22093`: [Bug]: AttributeError: 'AxesSubplot' object has no attribute 'add_text'
-* :ghissue:`22012`: [Bug]: Mouseover coordinate/value text should be right aligned
-* :ghissue:`21995`: [Bug]: triplot with 'ls' argument yields TypeError
-* :ghissue:`20249`: MatplotlibDeprecationWarning when updating rcparams
-* :ghissue:`15781`: MatplotlibDeprecationWarning examples.directory is deprecated
-* :ghissue:`13118`: No MatplotlibDeprecationWarning for default rcParams
-* :ghissue:`21978`: Remove logging debug of loaded modules
-* :ghissue:`11738`: pgf backend doesn't make background transparent
-* :ghissue:`18039`: Add ``_repr_html_`` for fonts
-* :ghissue:`21970`: [Bug]: tight layout breaks with toolbar.push_current()
-* :ghissue:`14850`: No icon showing up with macosx backend
-* :ghissue:`17283`: Create Date Formatter/Locator Reference
-* :ghissue:`21761`: [Doc]: add how to know available fonts...
-* :ghissue:`21863`: [Doc]: Remove example "prop_cycle property markevery in rcParams"
-* :ghissue:`10241`: Axes3D.view_init elevation issue between 270 and 360 degrees
-* :ghissue:`14453`: add third angle to view_init()
-* :ghissue:`20486`: Modifier key press events not recognized on MacOSX backend
-* :ghissue:`9837`: MacOS: Key modifiers deprecated
-* :ghissue:`11416`: RuntimeError: adjustable='datalim' is not allowed when both axes are shared.
-* :ghissue:`17711`: inset_locator.mark_inset() misplaces box connectors
-* :ghissue:`20854`: [Doc]: Incorrect copyright start year at the bottom of devdocs page
-* :ghissue:`21394`: [Bug]: Subplot title does not obey padding
-* :ghissue:`20998`: [Bug]: ToolManager does not respect rcParams["keymap.<any>"] set after import time
-* :ghissue:`7075`: Superscripts in axis label cut when saving .eps with bbox_inches="tight"
-* :ghissue:`21514`: [Doc]: Error message of validate_whiskers is not updated
-* :ghissue:`21532`: [Doc]: subplot_mosaic docstring should link to the tutorial
-* :ghissue:`16550`: Docs: performance discussion of tight_layout
-* :ghissue:`21378`: [ENH]: use new style format strings for colorbar ticks
-* :ghissue:`19323`: Streamplot color mapping fails on (near-)empty array.
-* :ghissue:`19559`: Axes.get_xticks() returns a numpy array but Axes.get_xticks(minor=True) returns a plain list
-* :ghissue:`21526`: [Doc]: Little Typo on Introductory Tutorial
-* :ghissue:`19195`: Rotate Markers in functions like plot, scatter, etcetera
-* :ghissue:`21364`: [Bug]: double free when FT2Font constructor is interrupted by KeyboardInterrupt
-* :ghissue:`16581`: Can't not refresh new font in running interpreter
-* :ghissue:`21162`: [ENH]: saving images in webp format
-* :ghissue:`18168`: The example of the testing decorator does not work.
-* :ghissue:`20943`: [Bug]: Deepcopy of TextPath fails
-* :ghissue:`21101`: [Bug]: Errorbars separated from markers with negative errors
-* :ghissue:`17986`: MEP22 per-backend tool registration
-* :ghissue:`4938`: Feature request: add option to disable mathtext parsing
-* :ghissue:`11435`: plt.subplot eats my subplots
+Pull Requests (80):
+
+* :ghpull:`24124`: Backport PR #24111 on branch v3.6.x (FIX: add missing method to ColormapRegistry)
+* :ghpull:`24111`: FIX: add missing method to ColormapRegistry
+* :ghpull:`24117`: Backport PR #24113 on branch v3.6.x (Add exception class to pytest.warns calls)
+* :ghpull:`24116`: Backport PR #24115 on branch v3.6.x (Fix mask lookup in fill_between for NumPy 1.24+)
+* :ghpull:`24113`: Add exception class to pytest.warns calls
+* :ghpull:`24115`: Fix mask lookup in fill_between for NumPy 1.24+
+* :ghpull:`24112`: Backport PR #24109 on branch v3.6.x (DOC: add API change note for colorbar deprecation)
+* :ghpull:`24109`: DOC: add API change note for colorbar deprecation
+* :ghpull:`24107`: Backport PR #24088 on branch v3.6.x (MNT: make orphaned colorbar deprecate versus raise)
+* :ghpull:`24088`: MNT: make orphaned colorbar deprecate versus raise
+* :ghpull:`24103`: Backport PR #23684 on branch v3.6.x (Fix rectangle and hatches for colorbar)
+* :ghpull:`23684`: Fix rectangle and hatches for colorbar
+* :ghpull:`24087`: Backport PR #24084 on branch v3.6.x (Revert argument checking for label_mode)
+* :ghpull:`24084`: Revert argument checking for label_mode
+* :ghpull:`24078`: Backport PR #24047 on branch v3.6.x (Revert #22360: Let TeX handle multiline strings itself)
+* :ghpull:`24047`: Revert #22360: Let TeX handle multiline strings itself
+* :ghpull:`24077`: Backport PR #24054 on branch v3.6.x ( DOC: Move OO-examples from pyplot section)
+* :ghpull:`24054`:  DOC: Move OO-examples from pyplot section
+* :ghpull:`24072`: Backport PR #24069 on branch v3.6.x (Clarification of marker size in scatter)
+* :ghpull:`24073`: Backport PR #24070 on branch v3.6.x (DOC: colorbar may steal from array of axes)
+* :ghpull:`24070`: DOC: colorbar may steal from array of axes
+* :ghpull:`24069`: Clarification of marker size in scatter
+* :ghpull:`24059`: Backport PR #23638 on branch v3.6.x (FIX: correctly handle generic font families in svg text-as-text mode)
+* :ghpull:`23638`: FIX: correctly handle generic font families in svg text-as-text mode
+* :ghpull:`24048`: Backport PR #24045 on branch v3.6.x (Fix _FigureManagerGTK.resize on GTK4)
+* :ghpull:`24055`: Backport PR #24046 on branch v3.6.x (Ignore 'CFMessagePort: bootstrap_register' messages)
+* :ghpull:`24046`: Ignore 'CFMessagePort: bootstrap_register' messages
+* :ghpull:`24051`: Backport PR #24037 on branch v3.6.x ([DOC]: make spanselector example codeblock continuous)
+* :ghpull:`24037`: [DOC]: make spanselector example codeblock continuous
+* :ghpull:`24045`: Fix _FigureManagerGTK.resize on GTK4
+* :ghpull:`24043`: Backport PR #24041 on branch v3.6.x (DOC: Fix incorrect redirect)
+* :ghpull:`24030`: Backport PR #24019 on branch v3.6.x (Don't require FigureCanvas on backend module more)
+* :ghpull:`24040`: Backport PR #24018 on branch v3.6.x (When comparing eps images, run ghostscript with -dEPSCrop.)
+* :ghpull:`24018`: When comparing eps images, run ghostscript with -dEPSCrop.
+* :ghpull:`24033`: Backport PR #24032 on branch v3.6.x (Reword SpanSelector example.)
+* :ghpull:`24029`: Backport PR #24026 on branch v3.6.x (Don't modify Axes property cycle in stackplot)
+* :ghpull:`23994`: Backport PR #23964 on branch v3.6.x (Fix issue with empty line in ps backend)
+* :ghpull:`24019`: Don't require FigureCanvas on backend module more
+* :ghpull:`24026`: Don't modify Axes property cycle in stackplot
+* :ghpull:`24027`: Backport PR #23904 on branch v3.6.x (added a reversing section to colormap reference)
+* :ghpull:`24017`: Backport PR #24014 on branch v3.6.x (Bump pypa/cibuildwheel from 2.10.1 to 2.10.2)
+* :ghpull:`24014`: Bump pypa/cibuildwheel from 2.10.1 to 2.10.2
+* :ghpull:`24007`: Backport PR #24004 on branch v3.6.x (Increase consistency in tutorials and examples)
+* :ghpull:`23964`: Fix issue with empty line in ps backend
+* :ghpull:`23904`: added a reversing section to colormap reference
+* :ghpull:`23990`: Backport PR #23978 on branch v3.6.x (DOC: Suppress IPython output in examples and tutorials where not needed)
+* :ghpull:`23978`: DOC: Suppress IPython output in examples and tutorials where not needed
+* :ghpull:`23916`: Backport PR #23912 on branch v3.6.x (FIX: only expect FigureCanvas on backend module if using new style)
+* :ghpull:`23989`: Backport PR #23944 on branch v3.6.x (FIX: ValueError when hexbin is run with empty arrays and log scaling.)
+* :ghpull:`23944`: FIX: ValueError when hexbin is run with empty arrays and log scaling.
+* :ghpull:`23988`: Backport PR #23987 on branch v3.6.x (FIX: do not set constrained layout on false-y values)
+* :ghpull:`23987`: FIX: do not set constrained layout on false-y values
+* :ghpull:`23982`: Backport PR #23980 on branch v3.6.x (DOC: Move Quick Start Tutorial to first position)
+* :ghpull:`23979`: Backport PR #23975 on branch v3.6.x (Reword docstring of reset_position.)
+* :ghpull:`23975`: Reword docstring of reset_position.
+* :ghpull:`23966`: Backport PR #23930 on branch v3.6.x (Fix edge color, links, wording; closes matplotlib/matplotlib#23895)
+* :ghpull:`23971`: Backport PR #23906 on branch v3.6.x (Edit mplot3d examples for correctness and consistency)
+* :ghpull:`23906`: Edit mplot3d examples for correctness and consistency
+* :ghpull:`23963`: Backport PR #23957 on branch v3.6.x (Bump pypa/cibuildwheel from 2.9.0 to 2.10.1)
+* :ghpull:`23930`: Fix edge color, links, wording; closes matplotlib/matplotlib#23895
+* :ghpull:`23910`: FIX: do not append None to stream in ps
+* :ghpull:`23957`: Bump pypa/cibuildwheel from 2.9.0 to 2.10.1
+* :ghpull:`23960`: Backport PR #23947 on branch v3.6.x (Fix building on MINGW)
+* :ghpull:`23942`: DOC: fix versions in v3.6.x doc switcher
+* :ghpull:`23961`: Backport PR #23958 on branch v3.6.x (DOC: Remove Adding Animations section)
+* :ghpull:`23958`: DOC: Remove Adding Animations section
+* :ghpull:`23947`: Fix building on MINGW
+* :ghpull:`23945`: Backport PR #23941 on branch v3.6.x (consistent notation for minor/patch branches)
+* :ghpull:`23956`: Backport PR #23751 on branch v3.6.x (FIX: show bars when the first location is nan)
+* :ghpull:`23751`: FIX: show bars when the first location is nan
+* :ghpull:`23938`: Backport PR #23919 on branch v3.6.x (DOC: remove dead "Show Source" links)
+* :ghpull:`23952`: Backport PR #23951 on branch v3.6.x (DOC: Make animation continuous)
+* :ghpull:`23949`: DOC: Display "dev" instead of "devdocs" in the version switcher
+* :ghpull:`23940`: Fix typos in github_stats.rst
+* :ghpull:`23936`: Backport PR #23935 on branch v3.6.x (DOC: fix versions is doc switcher)
+* :ghpull:`23933`: Backport PR #23932 on branch v3.6.x (DOC: Fix formatting in image tutorial)
+* :ghpull:`23932`: DOC: Fix formatting in image tutorial
+* :ghpull:`23926`: Backport PR #23925 on branch v3.6.x (FIX: use process_event in dpi changes on macosx backend)
+* :ghpull:`23925`: FIX: use process_event in dpi changes on macosx backend
+* :ghpull:`23912`: FIX: only expect FigureCanvas on backend module if using new style
+
+Issues (22):
+
+* :ghissue:`23981`: [ENH]: Default ``matplotlib.colormaps[None]`` to call ``matplotlib.colormaps[matplotlib.rcParams['image.cmap']]``?
+* :ghissue:`24106`: [Bug]: fill_between gives IndexError with numpy 1.24.0.dev
+* :ghissue:`24053`: Cartopy axes_grid_basic example broken by Matplotlib 3.6
+* :ghissue:`23977`: [Bug]: Eqnarray in AnchoredText results in misplaced text (new in v3.6.0)
+* :ghissue:`23973`: [Bug]: ValueError: Unable to determine Axes to steal space for Colorbar.
+* :ghissue:`23456`: [Bug]: Horizontal colorbars drawn incorrectly with hatches
+* :ghissue:`15922`: Pyplot gallery section is mostly OO examples
+* :ghissue:`23700`: [Doc]: scatter points
+* :ghissue:`23492`: [Bug]: svg backend does not use configured generic family lists
+* :ghissue:`22528`: [Bug]: problem with font property in text elements of svg figures
+* :ghissue:`23911`: [Bug]: 3.6.0 doesn't interact well with pycharm throwing "backend_interagg" exception
+* :ghissue:`24024`: stackplot should not change Axes cycler
+* :ghissue:`23954`: [Bug]: Text label with empty line causes a "TypeError: cannot unpack non-iterable NoneType object" in PostScript backend
+* :ghissue:`23922`: [Bug]: Refactor of hexbin for 3.6.0 crashes with empty arrays and log scaling
+* :ghissue:`23986`: [Bug]: Constrained layout UserWarning even when False
+* :ghissue:`23895`: [Bug]: 3D surface is not plotted for the contour3d_3 example in the gallery
+* :ghissue:`23955`: [Doc]: Adding animations to Youtube channel
+* :ghissue:`23943`: [Bug]: Couldn't build matplotlib 3.6.0 with both Clang-15 and GCC-12
+* :ghissue:`23687`: [Bug]: barplot does not show anything when x or bottom start and end with NaN
+* :ghissue:`23876`: [Doc]: Missing source files
+* :ghissue:`23909`: [Doc]: add animation examples to show animated subplots
+* :ghissue:`23921`: [Bug]: resize_event deprecation warnings when creating figure on macOS with version 3.6.0


 Previous GitHub statistics
diff --git a/doc/users/next_whats_new/3d_plot_aspects_adjustable_keyword.rst b/doc/users/next_whats_new/3d_plot_aspects_adjustable_keyword.rst
deleted file mode 100644
index 5a231024a7..0000000000
--- a/doc/users/next_whats_new/3d_plot_aspects_adjustable_keyword.rst
+++ /dev/null
@@ -1,34 +0,0 @@
-*adjustable* keyword argument for setting equal aspect ratios in 3D
--------------------------------------------------------------------
-
-While setting equal aspect ratios for 3D plots, users can choose to modify
-either the data limits or the bounding box.
-
-.. plot::
-    :include-source: true
-
-    import matplotlib.pyplot as plt
-    import numpy as np
-    from itertools import combinations, product
-
-    aspects = ('auto', 'equal', 'equalxy', 'equalyz', 'equalxz')
-    fig, axs = plt.subplots(1, len(aspects), subplot_kw={'projection': '3d'},
-                            figsize=(12, 6))
-
-    # Draw rectangular cuboid with side lengths [4, 3, 5]
-    r = [0, 1]
-    scale = np.array([4, 3, 5])
-    pts = combinations(np.array(list(product(r, r, r))), 2)
-    for start, end in pts:
-        if np.sum(np.abs(start - end)) == r[1] - r[0]:
-            for ax in axs:
-                ax.plot3D(*zip(start*scale, end*scale), color='C0')
-
-    # Set the aspect ratios
-    for i, ax in enumerate(axs):
-        ax.set_aspect(aspects[i], adjustable='datalim')
-        # Alternatively: ax.set_aspect(aspects[i], adjustable='box')
-        # which will change the box aspect ratio instead of axis data limits.
-        ax.set_title(f"set_aspect('{aspects[i]}')")
-
-    plt.show()
diff --git a/doc/users/next_whats_new/3d_plot_pan_zoom.rst b/doc/users/next_whats_new/3d_plot_pan_zoom.rst
deleted file mode 100644
index a94dfe4c20..0000000000
--- a/doc/users/next_whats_new/3d_plot_pan_zoom.rst
+++ /dev/null
@@ -1,8 +0,0 @@
-3D plot pan and zoom buttons
-----------------------------
-
-The pan and zoom buttons in the toolbar of 3D plots are now enabled.
-Unselect both to rotate the plot. When the zoom button is pressed,
-zoom in by using the left mouse button to draw a bounding box, and
-out by using the right mouse button to draw the box. When zooming a
-3D plot, the current view aspect ratios are kept fixed.
diff --git a/doc/users/next_whats_new/bar_label_formatting.rst b/doc/users/next_whats_new/bar_label_formatting.rst
deleted file mode 100644
index cf64436086..0000000000
--- a/doc/users/next_whats_new/bar_label_formatting.rst
+++ /dev/null
@@ -1,31 +0,0 @@
-Additional format string options in `~matplotlib.axes.Axes.bar_label`
----------------------------------------------------------------------
-
-The ``fmt`` argument of `~matplotlib.axes.Axes.bar_label` now accepts
-{}-style format strings:
-
-.. code-block:: python
-
-    import matplotlib.pyplot as plt
-
-    fruit_names = ['Coffee', 'Salted Caramel', 'Pistachio']
-    fruit_counts = [4000, 2000, 7000]
-
-    fig, ax = plt.subplots()
-    bar_container = ax.bar(fruit_names, fruit_counts)
-    ax.set(ylabel='pints sold', title='Gelato sales by flavor', ylim=(0, 8000))
-    ax.bar_label(bar_container, fmt='{:,.0f}')
-
-It also accepts callables:
-
-.. code-block:: python
-
-    animal_names = ['Lion', 'Gazelle', 'Cheetah']
-    mph_speed = [50, 60, 75]
-
-    fig, ax = plt.subplots()
-    bar_container = ax.bar(animal_names, mph_speed)
-    ax.set(ylabel='speed in MPH', title='Running speeds', ylim=(0, 80))
-    ax.bar_label(
-        bar_container, fmt=lambda x: '{:.1f} km/h'.format(x * 1.61)
-    )
diff --git a/doc/users/next_whats_new/polar_errorbar_caps.rst b/doc/users/next_whats_new/polar_errorbar_caps.rst
deleted file mode 100644
index 1066a2aaaf..0000000000
--- a/doc/users/next_whats_new/polar_errorbar_caps.rst
+++ /dev/null
@@ -1,7 +0,0 @@
-Fixed errorbars in polar plots
-------------------------------
-Caps and error lines are now drawn with respect to polar coordinates,
-when plotting errorbars on polar plots.
-
-.. figure:: /gallery/pie_and_polar_charts/images/sphx_glr_polar_error_caps_001.png
-   :target: ../../gallery/pie_and_polar_charts/polar_error_caps.html
diff --git a/doc/users/prev_whats_new/github_stats_3.6.0.rst b/doc/users/prev_whats_new/github_stats_3.6.0.rst
new file mode 100644
index 0000000000..aac0c0445f
--- /dev/null
+++ b/doc/users/prev_whats_new/github_stats_3.6.0.rst
@@ -0,0 +1,1292 @@
+.. _github-stats-3-6-0:
+
+GitHub statistics for 3.6.0 (Sep 15, 2022)
+==========================================
+
+GitHub statistics for 2021/11/16 (tag: v3.5.0) - 2022/09/15
+
+These lists are automatically generated, and may be incomplete or contain duplicates.
+
+We closed 202 issues and merged 894 pull requests.
+The full list can be seen `on GitHub <https://github.com/matplotlib/matplotlib/milestone/65?closed=1>`__
+
+The following 174 authors contributed 4425 commits.
+
+* Abhishek K M
+* Adeel Hassan
+* agra
+* Aitik Gupta
+* ambi7
+* Andras Deak
+* Andres Martinez
+* Andrew Fennell
+* andrzejnovak
+* Andrés Martínez
+* Anna Mastori
+* AnnaMastori
+* Ante Sikic
+* Antony Lee
+* arndRemy
+* Ben Root
+* Biswapriyo Nath
+* cavesdev
+* Clément Phan
+* Clément Walter
+* code-review-doctor
+* Connor Cozad
+* Constantine Evans
+* Croadden
+* daniilS
+* Danilo Palumbo
+* David Gilbertson
+* David Ketcheson
+* David Matos
+* David Poznik
+* David Stansby
+* Davide Sandonà
+* dependabot[bot]
+* dermasugita
+* Diego Solano
+* Dimitri Papadopoulos
+* dj4t9n
+* Dmitriy Fishman
+* DWesl
+* Edouard Berthe
+* eindH
+* Elliott Sales de Andrade
+* Eric Firing
+* Eric Larson
+* Eric Prestat
+* Federico Ariza
+* Felix Nößler
+* Fernando
+* Gajendra Pal
+* gajendra0180
+* GavinZhang
+* Greg Lucas
+* hannah
+* Hansin Ahuja
+* Harshal Prakash Patankar
+* Hassan Kibirige
+* Haziq Khurshid
+* Henry
+* henrybeUM
+* Hood
+* Hood Chatham
+* Ian Hunt-Isaak
+* Ian Thomas
+* igurin-invn
+* ikhebgeenaccount
+* Isha Mehta
+* Jake Bowhay
+* Jake Li
+* Jake Lishman
+* Jake VanderPlas
+* Jakub Klus
+* James Tocknell
+* Jan-Hendrik Müller
+* Jay Joshi
+* Jay Stanley
+* jayjoshi112711
+* Jeff Beck
+* Jody Klymak
+* Joel Frederico
+* Joseph Fox-Rabinovitz
+* Josh Soref
+* Jouni K. Seppänen
+* Kayran Schmidt
+* kdpenner
+* Kian Eliasi
+* Kinshuk Dua
+* kislovskiy
+* KIU Shueng Chuan
+* kjain
+* kolibril13
+* krassowski
+* Krish-sysadmin
+* Leeh Peter
+* lgfunderburk
+* Liam Toney
+* Lucas Ricci
+* Luke Davis
+* luz paz
+* mackopes
+* MAKOMO
+* MalikIdreesHasa
+* Marcin Swaltek
+* Mario
+* Mario Sergio Valdés Tresanco
+* martinRenou
+* Matthew Feickert
+* Matthias Bussonnier
+* Mauricio Collares
+* MeeseeksMachine
+* melissawm
+* Mr-Milk
+* Navid C. Constantinou
+* Nickolaos Giannatos
+* Nicolas P. Rougier
+* Niyas Sait
+* noatamir
+* ojeda-e
+* Olivier Gauthé
+* Oscar Gustafsson
+* patquem
+* Philipp Rohde
+* Pieter Eendebak
+* Pieter P
+* Péter Leéh
+* Qijia Liu
+* Quentin Peter
+* Raphael Quast
+* rditlar9
+* Richard Penney
+* richardsheridan
+* Rike-Benjamin Schuppner
+* Robert Cimrman
+* Roberto Toro
+* root
+* Ruth Comer
+* Ruth G. N
+* Ruth Nainggolan
+* Ryan May
+* Rémi Achard
+* SaumyaBhushan
+* Scott Jones
+* Scott Shambaugh
+* selormtamakloe
+* Simon Hoxbro
+* skywateryang
+* Stefanie Molin
+* Steffen Rehberg
+* stone
+* Sven Eschlbeck
+* sveneschlbeck
+* takimata
+* tfpf
+* Thomas A Caswell
+* Tim Hoffmann
+* Tobias Megies
+* Tomas Hrnciar
+* Tomasz Kuliński
+* trichter
+* unknown
+* Uwe Hubert
+* vfdev-5
+* Vishal Chandratreya
+* Vishal Pankaj Chandratreya
+* Vishnu V K
+* vk0812
+* Vlad Korolev
+* Will Qian
+* William Qian
+* wqh17101
+* wsykala
+* yaaun
+* Yannic Schroeder
+* yuanx749
+* 渡邉 美希
+
+GitHub issues and pull requests:
+
+Pull Requests (894):
+
+* :ghpull:`23814`: Consolidate release notes for 3.6
+* :ghpull:`23899`: Backport PR #23885 on branch v3.6.x (DOC: Rearrange navbar-end elements)
+* :ghpull:`23898`: Backport PR #23892 on branch v3.6.x (DOC: Fix docs for linestyles in contour)
+* :ghpull:`23885`: DOC: Rearrange navbar-end elements
+* :ghpull:`23894`: Backport PR #23881 on branch v3.6.x (Fix Pillow compatibility in example)
+* :ghpull:`23897`: Backport PR #23887 on branch v3.6.x (Add missing label argument to barh docs)
+* :ghpull:`23892`: DOC: Fix docs for linestyles in contour
+* :ghpull:`23887`: Add missing label argument to barh docs
+* :ghpull:`23893`: Backport PR #23886 on branch v3.6.x (CI: prefer (older) binaries over (newer) sdists)
+* :ghpull:`23881`: Fix Pillow compatibility in example
+* :ghpull:`23886`: CI: prefer (older) binaries over (newer) sdists
+* :ghpull:`23880`: Backport PR #23862 on branch v3.6.x (Remove triggering of deprecation warning in AnchoredEllipse)
+* :ghpull:`23862`: Remove triggering of deprecation warning in AnchoredEllipse
+* :ghpull:`23879`: Backport PR #23864 on branch v3.6.x (Correct and improve documentation for anchored artists)
+* :ghpull:`23877`: Backport PR #23841 on branch v3.6.x (clarified that hist computes histogram on unbinned data)
+* :ghpull:`23872`: Backport PR #23871 on branch v3.6.x (DOC: Fix formatting of pick event demo example)
+* :ghpull:`23841`: clarified that hist computes histogram on unbinned data
+* :ghpull:`23864`: Correct and improve documentation for anchored artists
+* :ghpull:`23871`: DOC: Fix formatting of pick event demo example
+* :ghpull:`23869`: Backport PR #23867 on branch v3.6.x (DOC: fix deprecation warnings in examples)
+* :ghpull:`23867`: DOC: fix deprecation warnings in examples
+* :ghpull:`23858`: Backport PR #23855 on branch v3.6.x (DOC: fix deprecation warnings)
+* :ghpull:`23859`: Backport PR #23844 on branch v3.6.x (Further improve dev setup instructions)
+* :ghpull:`23844`: Further improve dev setup instructions
+* :ghpull:`23855`: DOC: fix deprecation warnings
+* :ghpull:`23854`: Backport PR #23852 on branch v3.6.x (Fix cross-compiling internal freetype)
+* :ghpull:`23852`: Fix cross-compiling internal freetype
+* :ghpull:`23853`: Backport PR #23830 on branch v3.6.x (Start testing on Python 3.11)
+* :ghpull:`23830`: Start testing on Python 3.11
+* :ghpull:`23851`: Backport PR #23850 on branch v3.6.x (removed single word in documenting doc)
+* :ghpull:`23850`: removed single word in documenting doc
+* :ghpull:`23848`: Backport PR #23843 on branch v3.6.x (Clarify that pycairo>=1.14.0 is needed.)
+* :ghpull:`23843`: Clarify that pycairo>=1.14.0 is needed.
+* :ghpull:`23842`: Backport PR #23840 on branch v3.6.x (Remove documentation for axes_grid)
+* :ghpull:`23838`: Backport PR #23834 on branch v3.6.x (Revert "Refactor handling of tick and ticklabel visibility in Axis.clear")
+* :ghpull:`23840`: Remove documentation for axes_grid
+* :ghpull:`23837`: Backport PR #23833 on branch v3.6.x (Remove search field from sidebar)
+* :ghpull:`23836`: Backport PR #23823 on branch v3.6.x ([DOC] Improve dev setup description)
+* :ghpull:`23834`: Revert "Refactor handling of tick and ticklabel visibility in Axis.clear"
+* :ghpull:`23833`: Remove search field from sidebar
+* :ghpull:`23823`: [DOC] Improve dev setup description
+* :ghpull:`23822`: Backport PR #23813 on branch v3.6.x (Triplot duplicated label)
+* :ghpull:`23813`: Triplot duplicated label
+* :ghpull:`23811`: Backport PR #23805 on branch v3.6.x (sphinxext: Do not copy plot_directive.css's metadata)
+* :ghpull:`23805`: sphinxext: Do not copy plot_directive.css's metadata
+* :ghpull:`23800`: Backport PR #23785 on branch v3.6.x (FIX: ensure type stability for missing cmaps in ``set_cmap``)
+* :ghpull:`23799`: Backport PR #23790 on branch v3.6.x (DOC: Add cache busting to all static assets)
+* :ghpull:`23785`: FIX: ensure type stability for missing cmaps in ``set_cmap``
+* :ghpull:`23790`: DOC: Add cache busting to all static assets
+* :ghpull:`23791`: Backport PR #23774 on branch v3.6.x (Correct rcParams-name in AutoDateFormatter doc-string)
+* :ghpull:`23792`: Backport PR #23781 on branch v3.6.x (ci: Add plot types to sphinx-gallery artifacts)
+* :ghpull:`23789`: Backport PR #23786 on branch v3.6.x (DOC: fontfallback works for most of the backends)
+* :ghpull:`23788`: Backport PR #23784 on branch v3.6.x (DOC: Fix num2date docstring)
+* :ghpull:`23786`: DOC: fontfallback works for most of the backends
+* :ghpull:`23784`: DOC: Fix num2date docstring
+* :ghpull:`23781`: ci: Add plot types to sphinx-gallery artifacts
+* :ghpull:`23783`: Backport PR #23782 on branch v3.6.x (Remove ``Axes.cla`` from examples)
+* :ghpull:`23782`: Remove ``Axes.cla`` from examples
+* :ghpull:`23774`: Correct rcParams-name in AutoDateFormatter doc-string
+* :ghpull:`23773`: Backport PR #23772 on branch v3.6.x (3d plots what's new cleanups)
+* :ghpull:`23772`: 3d plots what's new cleanups
+* :ghpull:`23765`: Backport PR #23762 on branch v3.6.x (FIX: legend handler warning too liberal)
+* :ghpull:`23762`: FIX: legend handler warning too liberal
+* :ghpull:`23759`: Backport PR #23686 on branch v3.6.x (Improve matplotlib.pyplot importtime by caching ArtistInspector)
+* :ghpull:`23686`: Improve matplotlib.pyplot importtime by caching ArtistInspector
+* :ghpull:`23756`: Backport PR #23569 on branch v3.6.x (Fix hidden xlabel bug in colorbar)
+* :ghpull:`23755`: Backport PR #23742 on branch v3.6.x (FIX: unbreak ipympl)
+* :ghpull:`23569`: Fix hidden xlabel bug in colorbar
+* :ghpull:`23742`: FIX: unbreak ipympl
+* :ghpull:`23752`: Backport PR #23750 on branch v3.6.x (Fix rcParams documentation)
+* :ghpull:`23749`: Backport PR #23735 on branch v3.6.x (Correctly handle Axes subclasses that override cla)
+* :ghpull:`23735`: Correctly handle Axes subclasses that override cla
+* :ghpull:`23748`: Backport PR #23746 on branch v3.6.x (DOC: add numpydoc docstring + commentary to Axis.get_ticklocs)
+* :ghpull:`23747`: Backport PR #23721 on branch v3.6.x (3d plot view angle documentation)
+* :ghpull:`23746`: DOC: add numpydoc docstring + commentary to Axis.get_ticklocs
+* :ghpull:`23721`: 3d plot view angle documentation
+* :ghpull:`23744`: Backport PR #23740 on branch v3.6.x (Clarify error for colorbar with unparented mappable)
+* :ghpull:`23741`: Backport PR #23674 on branch v3.6.x (Re-rename builtin seaborn styles to not include a dot.)
+* :ghpull:`23740`: Clarify error for colorbar with unparented mappable
+* :ghpull:`23674`: Re-rename builtin seaborn styles to not include a dot.
+* :ghpull:`23738`: Backport PR #23639 on branch v3.6.x (Adding the new contributor meeting)
+* :ghpull:`23739`: Backport PR #23712 on branch v3.6.x (FIX: do not try to help CPython with garbage collection)
+* :ghpull:`23712`: FIX: do not try to help CPython with garbage collection
+* :ghpull:`23639`: Adding the new contributor meeting
+* :ghpull:`23732`: Backport PR #23729 on branch v3.6.x (Use cleaner recursion check in PyQt FigureCanvas' resizeEvent.)
+* :ghpull:`23734`: Backport PR #23733 on branch v3.6.x (DOC: Update theme configuration for upcoming changes)
+* :ghpull:`23733`: DOC: Update theme configuration for upcoming changes
+* :ghpull:`23728`: Backport PR #23722 on branch v3.6.x (Restore deprecation class aliases in cbook)
+* :ghpull:`23729`: Use cleaner recursion check in PyQt FigureCanvas' resizeEvent.
+* :ghpull:`23726`: Backport PR #23711 on branch v3.6.x (Fix deprecation messages for vendoring unused things)
+* :ghpull:`23722`: Restore deprecation class aliases in cbook
+* :ghpull:`23727`: Backport PR #23724 on branch v3.6.x (Fix/harmonize spacing in dependencies.rst.)
+* :ghpull:`23724`: Fix/harmonize spacing in dependencies.rst.
+* :ghpull:`23711`: Fix deprecation messages for vendoring unused things
+* :ghpull:`23715`: Backport PR #23708 on branch v3.6.x (Loosen up test_Normalize test)
+* :ghpull:`23713`: Backport PR #23710 on branch v3.6.x (Fix cmap deprecations)
+* :ghpull:`23708`: Loosen up test_Normalize test
+* :ghpull:`23710`: Fix cmap deprecations
+* :ghpull:`23696`: Backport PR #23695 on branch v3.6.x (Document polar handling of _interpolation_steps.)
+* :ghpull:`23706`: Backport PR #23705 on branch v3.6.x (DOC: Added link to class under discussion)
+* :ghpull:`23705`: DOC: Added link to class under discussion
+* :ghpull:`23695`: Document polar handling of _interpolation_steps.
+* :ghpull:`23668`: Api deprecate cmap functions
+* :ghpull:`23049`: Add ``minor`` keyword argument to ``plt.x/yticks``
+* :ghpull:`23665`: Harmonize docstrings for boxstyle/connectionstyle/arrowstyle.
+* :ghpull:`23636`: FIX: macosx flush_events should process all events
+* :ghpull:`23555`: Uncamelcase offsetTrans in draw_path_collection.
+* :ghpull:`23682`: Fix generated documentation for deprecated modules
+* :ghpull:`23678`: Get rcParams from mpl
+* :ghpull:`23571`: Simplify _bind_draw_path_function.
+* :ghpull:`23673`: DOC: Highlight information about avoiding labels in legend
+* :ghpull:`22506`: Replace MathtextBackend mechanism.
+* :ghpull:`23340`: Set correct path for Arc
+* :ghpull:`23562`: Fix issue with get_edgecolor and get_facecolor in 3D plots
+* :ghpull:`23634`: make.bat: Don't override SPHINXOPTS/O from the environment
+* :ghpull:`23675`: Deprecate helper functions in axis3d
+* :ghpull:`23676`: MNT: Get rcParams from mpl
+* :ghpull:`23677`: TST: Use article class when checking for pgf
+* :ghpull:`23669`: CI: Azure update from ubuntu-18.04 to ubuntu-latest and ubuntu-20.04
+* :ghpull:`23670`: Add bar color demo.
+* :ghpull:`23644`: Standardize edge-on axis locations when viewing primary 3d axis planes
+* :ghpull:`23563`: Fix issue with drawing 3D lines where points are from nparray
+* :ghpull:`23666`: MNT: Deprecate macosx prepare subplots tool
+* :ghpull:`23572`: Deprecate ``get_grid_positions(..., raw=True)``.
+* :ghpull:`23525`: Add functionality to label individual bars with Axes.bar()
+* :ghpull:`23667`: Fix flake8 errors introduced by crossed PRs
+* :ghpull:`23554`: MNT: Remove unused imports
+* :ghpull:`23659`: Simplify/fix save_diff_image.
+* :ghpull:`23663`: Small cleanups to _find_fonts_by_props.
+* :ghpull:`23662`: Add tolerance to test failing on ppc64le
+* :ghpull:`23623`: MNT: remove _gridspecs attribute on Figure classes
+* :ghpull:`23654`: Reverts macosx change to ARC
+* :ghpull:`23661`: Remove unused fontsize argument from private mathtext _get_info.
+* :ghpull:`23655`: Merge branch v3.5.x into main
+* :ghpull:`23658`: Increase tolerance on multi-font tests
+* :ghpull:`23657`: Add eps to extension list in image triager
+* :ghpull:`23656`: Fix broken link to MathML torture tests.
+* :ghpull:`23649`: CI: Use anaconda-client v1.10.0 for upload of nightlies
+* :ghpull:`23647`: Allow any color format to be used for axis3d.Axis.set_pane_color
+* :ghpull:`23643`: Enable wheels for PyPy 3.8+
+* :ghpull:`23621`: DOC: update and extend fonts explanation
+* :ghpull:`23612`: CI: try installing a different version of noto on OSX
+* :ghpull:`23619`: add pikepdf  and visual c++ dependency
+* :ghpull:`23631`: Leave out ``barh`` from the basic plot types.
+* :ghpull:`23637`: BLD: Add Python 3.11 builds to CI
+* :ghpull:`23632`: Add discouraged admonitions
+* :ghpull:`23620`: Doc update deps
+* :ghpull:`23627`: Bump pypa/cibuildwheel from 2.8.1 to 2.9.0
+* :ghpull:`23628`: Change Title Case to Upper lower in templates
+* :ghpull:`23206`: Change exception type for incorrect SVG date metadata
+* :ghpull:`23387`: Remove setuptools_scm_git_archive dependency and add sdist test
+* :ghpull:`23605`: Fix issues in examples, docs, and tutorials
+* :ghpull:`23618`: [Doc]: Document the position parameter in apply_aspect()
+* :ghpull:`23355`: Revert "Try to unbreak CI by xfailing OSX Tk tests"
+* :ghpull:`23610`: TST: be more forgiving about IDing Noto
+* :ghpull:`23609`: print version number when building docs
+* :ghpull:`20832`: Implement multi-font embedding for PS Backend
+* :ghpull:`20804`: Implement multi-font embedding for PDF Backend
+* :ghpull:`23202`: MNT: Remove cached renderer from figure
+* :ghpull:`23497`: Avoid gridspec in more examples
+* :ghpull:`23602`: Editing "issues for new contributors"
+* :ghpull:`23600`: DOC: view_init docstring for 3d axes primary view angles
+* :ghpull:`23587`: BUG:datetime list starting with none
+* :ghpull:`23559`: re-base of font fallback for pdf and eps output + SVG support
+* :ghpull:`23557`: BLD: update the manylinux versions used
+* :ghpull:`23596`: Minor cleanup of axes_grid1
+* :ghpull:`23594`: Expire deprecation on passing bytes to FT2Font.set_text
+* :ghpull:`23435`: Add conda env to setup instructions
+* :ghpull:`23574`: Move colorbar() doc to method itself.
+* :ghpull:`23584`: Bump Ubuntu to 20.04 on GitHub Actions
+* :ghpull:`23561`: Clean up code in tri
+* :ghpull:`23582`: Cleanup axis3d.Axis.draw
+* :ghpull:`23510`: Refactor Widget tests
+* :ghpull:`20718`: Circle: Build docs in parallel.
+* :ghpull:`22452`: ENH: add ability to remove layout engine
+* :ghpull:`23516`: warning when scatter plot color settings discarded
+* :ghpull:`23577`: apply_aspect cleanups
+* :ghpull:`23575`: Cleanup parasite_simple example.
+* :ghpull:`23567`: Remove noop setattr_cm.
+* :ghpull:`23412`: Fix dash offset bug in Patch
+* :ghpull:`21756`: MNT: Clean up some UTF strings and memory autorelease
+* :ghpull:`23558`: MNT: Use UTF-8 string in macosx backend
+* :ghpull:`23550`: Change exception types, improve argument checking, and cleanups in mpl_toolkits
+* :ghpull:`23196`: Unify set_pickradius argument
+* :ghpull:`20740`: Implement Font-Fallback in Matplotlib
+* :ghpull:`22566`: Add rcparam for figure label size and weight
+* :ghpull:`23551`: Remove transform arguments from _iter_collection
+* :ghpull:`23444`: Deduplicate common parts in LatexManager.{__init__,_setup_latex_process}
+* :ghpull:`23017`: [ENH] : Provide axis('equal') for Axes3D (replace PR #22705)
+* :ghpull:`22950`: Simplify definition of mathtext symbols & correctly end tokens in mathtext parsing
+* :ghpull:`23409`: Provide axis('equal') for Axes3D (replaces PR #23017)
+* :ghpull:`23434`: Fix array-like linewidth for 3d scatter
+* :ghpull:`23500`: Move the common implementation of Axes.set_x/y/zscale to Axis.
+* :ghpull:`23533`: Add tests for sankey and minor fixes
+* :ghpull:`23535`: Make margins error as claimed in doc-string
+* :ghpull:`23546`: Simplify impl. of functions optionally used as context managers.
+* :ghpull:`23494`: Fix various issues from SonarQube
+* :ghpull:`23529`: Add workflow dispatch GitHub CI
+* :ghpull:`23539`: Small improvements to WebAgg example
+* :ghpull:`23541`: Change doc-build CI install order
+* :ghpull:`23526`: DOC: make "family" less ambiguous in FontProperties docs
+* :ghpull:`23537`: Move the deprecated RendererGTK{3,4}Cairo to a single place.
+* :ghpull:`23140`: [Features] Allow setting legend title alignment
+* :ghpull:`23538`: Fix imprecise docs re: backend dependencies.
+* :ghpull:`23532`: Add test for RGBAxes
+* :ghpull:`23453`: Add more tests for mplot3d
+* :ghpull:`23501`: Let Axes.clear iterate over Axises.
+* :ghpull:`23469`: Inline _init_axis_artists & _init_gridlines into clear.
+* :ghpull:`23475`: Add markerfacealt to pass-through arguments for error bar lines
+* :ghpull:`23527`: STY: fix whitespace on an assert
+* :ghpull:`23495`: Fix sgskip'd examples
+* :ghpull:`23404`: Restore matplotlib.__doc__ in Sphinx docs
+* :ghpull:`23507`: Add hint when More than {max_open_warning} figures have been opened
+* :ghpull:`23499`: Fix outdated comment re: event handlers in test_backends_interactive.
+* :ghpull:`23498`: Fix direct instantiation of webagg_core managers.
+* :ghpull:`23504`: Clarify formatting of the code-for-reproduction field in bug reports.
+* :ghpull:`23489`: Add missing test data to install
+* :ghpull:`23482`: Mathtext spaces must be independent of font style.
+* :ghpull:`23486`: Bump pypa/cibuildwheel from 2.8.0 to 2.8.1
+* :ghpull:`23461`: Tweak Axes repr.
+* :ghpull:`16931`: Make it easier to improve UI event metadata.
+* :ghpull:`23468`: Display grid in floating axes example.
+* :ghpull:`23467`: Remove old handling for factor=None in axisartist.
+* :ghpull:`23443`: Try running the pgf backend off the article class.
+* :ghpull:`23373`: Fix pan/zoom crashing when widget lock is unavailable
+* :ghpull:`23466`: Update filename in example.
+* :ghpull:`23464`: Deprecate macos close handler.
+* :ghpull:`23463`: Deprecate Tick.label
+* :ghpull:`23455`: Deprecate properties w_xaxis, w_yaxis, and w_zaxis
+* :ghpull:`23448`: Tweak callbacks to generate pick events.
+* :ghpull:`23233`: Default stem marker color follows the linecolor
+* :ghpull:`23452`: Generalize Axes __repr__ to 3D
+* :ghpull:`23445`: Compare thread native ids when checking whether running on main thread.
+* :ghpull:`20752`: Set norms using scale names.
+* :ghpull:`23438`: DOC: numpydoc-ify date Locator classes
+* :ghpull:`23427`: Tweak pgf escapes.
+* :ghpull:`23432`: Fixed typo in docs animation api
+* :ghpull:`23420`: Clean up test_chunksize_fails()
+* :ghpull:`23415`: Minor improvements to units_sample example
+* :ghpull:`21339`: Added linear scaling test to Hexbin marginals
+* :ghpull:`23414`: Bump pypa/cibuildwheel from 2.7.0 to 2.8.0
+* :ghpull:`23413`: Combine chunk size tests into one
+* :ghpull:`23403`: Small cleanup to VertexSelector.
+* :ghpull:`23291`: In the new/simplified backend API, don't customize draw_if_interactive.
+* :ghpull:`23350`: Fixed SVG-as-text image comparison tests.
+* :ghpull:`23406`: DOC: Fix calculation of bin centers in multi-histogram
+* :ghpull:`23407`: TST: Add missing warning type to pytest.warns
+* :ghpull:`23402`: Link 3D animation examples to one another.
+* :ghpull:`23401`: Upload wheel artifacts from the correct directory
+* :ghpull:`23374`: GOV: point CoC reports at CoC steering council subcomittee mailing list
+* :ghpull:`23393`: Clean up formatting of custom cmap example
+* :ghpull:`23146`: Update cibuildwheel
+* :ghpull:`23368`: Add a helper to generate closed paths.
+* :ghpull:`20220`: DOC: add mission statement
+* :ghpull:`22364`: Tweak mathtext/tex docs.
+* :ghpull:`23377`: Use tick_params more often over tick iteration
+* :ghpull:`22820`: [Doc] consolidate ``rect`` documentation
+* :ghpull:`23371`: Default animation.convert_args to ["-layers", "OptimizePlus"].
+* :ghpull:`23148`: DOC: change address to send security issues to
+* :ghpull:`23365`: DOC: add new showcase example, replace gendered one
+* :ghpull:`23033`: Fix issue with tex-encoding on non-Unicode platforms
+* :ghpull:`23358`: Shorten/clarify definition of extension types.
+* :ghpull:`23370`: Small cleanups to animation.
+* :ghpull:`23364`: Rename/change signature of PyGlyph_new.
+* :ghpull:`23363`: Simplify FigureCanvas multiple inheritance init by swapping bases order.
+* :ghpull:`23366`: MNT: use devel version of theme
+* :ghpull:`23357`: Fixed decimal points not appearing at end of Mathtext string.
+* :ghpull:`23351`: DOC/MNT install docs with dev version of sphinx theme
+* :ghpull:`23349`: CI: Remove old scipy-wheels-nightly uploads to ensure space
+* :ghpull:`23348`: Support multi-figure MultiCursor; prepare improving its signature.
+* :ghpull:`23360`: embedding_in_tk_sgskip.py: use root.destroy
+* :ghpull:`23354`: MNT: Use list comprehension
+* :ghpull:`23299`: FIX/API: do not reset backend key in rc_context
+* :ghpull:`23191`: ENH: add width_ratios and height_ratios to subplots
+* :ghpull:`23060`: MNT: Change objective C code to Automatic Reference Counting (ARC)
+* :ghpull:`23347`: Simplify/improve check for pycairo in Gtk-based backends.
+* :ghpull:`23316`: DOC: improve spines crosslinking
+* :ghpull:`23100`: Remove custom backend_nbagg.show(), putting logic in manager show.
+* :ghpull:`23342`: FIX: make sure addFont test removes the test font
+* :ghpull:`23266`: negative_linestyles kwarg in contour.py
+* :ghpull:`23332`: Validate Text linespacing on input.
+* :ghpull:`23336`: Remove ineffective exclusion of Arcs without parent Axes.
+* :ghpull:`23341`: MNT: Use '--pytest-test-first' option for naming clarity
+* :ghpull:`23337`: Remove now inexistent "datapath" rcParam from style blacklist.
+* :ghpull:`22004`: Make RendererCairo auto-infer surface size.
+* :ghpull:`23208`: ENH: enable stripey lines
+* :ghpull:`23288`: Correct URL area with rotated texts in PDFs
+* :ghpull:`23197`: Add tests for pan
+* :ghpull:`22167`: Deprecate selector ``visible`` attribute
+* :ghpull:`23322`: Cleanup FontProperties examples.
+* :ghpull:`23321`: Tweak examples capitalization/punctuation.
+* :ghpull:`23270`: Fix handling of nonmath hyphens in mathtext.
+* :ghpull:`23310`: Move Cursor demo from examples/misc to examples/event_handling
+* :ghpull:`23313`: Drop CSS styles that are in mpl-sphinx-theme
+* :ghpull:`23314`: Don't draw invisible 3D Axes
+* :ghpull:`23302`: Deprecate stem(..., use_line_collection=False)
+* :ghpull:`23309`: Remove front page examples
+* :ghpull:`23282`: Backport PR #22865 on branch v3.5.x (Fix issue with colorbar extend and drawedges)
+* :ghpull:`23231`: Add pytest-xvfb as test dependency
+* :ghpull:`23318`: No need to return OrderedDict from _gen_axes_spines.
+* :ghpull:`23295`: Replace re.sub by the faster str.translate.
+* :ghpull:`23300`: Modify example of "Fig Axes Customize Simple"
+* :ghpull:`23014`: Improve consistency in LogLocator and LogFormatter API
+* :ghpull:`23286`: Refactor URL handling in PDF backend
+* :ghpull:`23065`: Fix test_image_comparison_expect_rms
+* :ghpull:`23294`: Simplify binary data handling in ps backend.
+* :ghpull:`23284`: DOC: Switch to HTML5 and cleanup CSS
+* :ghpull:`23276`: Add get/set methods for DPI in SubFigure
+* :ghpull:`23207`: Update build environment and improve test
+* :ghpull:`23213`: DEV: Add name-tests-test to pre-commit hooks
+* :ghpull:`23289`: Properly make Name.hexify go through a deprecation cycle.
+* :ghpull:`23177`: Deprecate positional passing of most Artist constructor parameters
+* :ghpull:`23287`: Minor tweaks to pdf Name.
+* :ghpull:`23285`: In mathtext, replace manual caching (via ``glyphd``) by lru_cache.
+* :ghpull:`23034`: Correctly read the 'style' argument while processing 'genfrac'.
+* :ghpull:`23247`: Support inverted parentheses in mathtext.
+* :ghpull:`23190`: Deprecate unused methods in axis.py
+* :ghpull:`23219`: MNT: Rename example files with 'test' in name
+* :ghpull:`23277`: MNT: Remove dead code in SVG backend
+* :ghpull:`23261`: Bump actions/setup-python from 3 to 4
+* :ghpull:`23264`: Changing environment.yml for it to work on Windows
+* :ghpull:`23269`: MNT: Remove dead code in Colorbar
+* :ghpull:`23262`: Simplify qt_compat, in particular post-removal of qt4 support.
+* :ghpull:`23263`: Private helper to get requested backend without triggering resolution.
+* :ghpull:`23243`: Fix spacing after mathtext operators with sub/superscripts
+* :ghpull:`22839`: Fix spacing after mathtext operators with sub/superscripts
+* :ghpull:`23256`: DOC: Add note about Inkscape install on Windows
+* :ghpull:`23258`: DOC: remove Blue Book url
+* :ghpull:`23255`: Add a helper to generate mathtext error strings.
+* :ghpull:`23246`: Fix argument checking for set_interpolation_stage
+* :ghpull:`22881`: Support not embedding glyphs in svg mathtests.
+* :ghpull:`23198`: Rename ncol parameter in legend to ncols
+* :ghpull:`23251`: Small simplifications to mathtext tests.
+* :ghpull:`23249`: Don't allow ``r"$\left\\|\right.$"``, as in TeX.
+* :ghpull:`23248`: Rename test markers
+* :ghpull:`22507`: Remove *math* parameter of various mathtext internal APIs.
+* :ghpull:`23192`: Add tests, improve error messages in axis/_base, and code cleanup
+* :ghpull:`23241`: Fix invalid value in radio buttons example
+* :ghpull:`23187`: Correct docs and use keyword arguments in _mathtext.py
+* :ghpull:`23045`: MNT: Merge locally defined test marks
+* :ghpull:`22289`: ENH: compressed layout
+* :ghpull:`23237`: Expire BoxStyle._Base deprecation.
+* :ghpull:`23225`: DOC: Fix version switcher links to documentation
+* :ghpull:`23221`: DOC: recommend numpy random number generator class
+* :ghpull:`23223`: Changed offset reference, add small doc
+* :ghpull:`23215`: DOC: link the transforms tutorial from the module
+* :ghpull:`23201`: Rework tricontour and tricontourf documentation
+* :ghpull:`23013`: Add tests for date module
+* :ghpull:`23188`: Mnt new default dates
+* :ghpull:`22745`: MNT: Don't require renderer for window_extent and tightbbox
+* :ghpull:`23077`: MNT: Remove keyword arguments to gca()
+* :ghpull:`23182`: Simplify webagg blitting.
+* :ghpull:`23181`: Init FigureCanvasAgg._lastKey in ``__init__``.
+* :ghpull:`23175`: Point the version switcher to a name listed in switcher.json
+* :ghpull:`22669`: Cleanup documentation generation for pyplot
+* :ghpull:`22519`: fix markevery plot option with nans in data
+* :ghpull:`21584`: Move towards having get_shared_{x,y}_axes return immutable views.
+* :ghpull:`23170`: ENH: update ticks when requesting labels
+* :ghpull:`23169`: DOC: Migrate to sphinx-design
+* :ghpull:`23180`: Improve docstring of triplot() and PatchCollection
+* :ghpull:`23153`: Restore accidentally removed pytest.ini and tests.py.
+* :ghpull:`23166`: Deprecate passing most Legend arguments positionally
+* :ghpull:`23165`: DOCS Fix a few typos
+* :ghpull:`23167`: DOCS fix typo
+* :ghpull:`23062`: Add stackplot to plot types listing
+* :ghpull:`23161`: Added my (open access) book
+* :ghpull:`23141`: Minor fix for astropy units support broken in earlier PR
+* :ghpull:`23156`: No longer call draw_if_interactive in parasite_axes.
+* :ghpull:`23150`: DOC fix typo
+* :ghpull:`23149`: DOCS remove duplicate text
+* :ghpull:`23145`: Fix format error in switcher.json
+* :ghpull:`21755`: MNT: Clean up macosx backend set_message
+* :ghpull:`23128`: DOCS Fix typos
+* :ghpull:`23130`: Drop pytest warning config in nightly tests
+* :ghpull:`23135`: Unpin coverage again
+* :ghpull:`23133`: Make module deprecation messages consistent
+* :ghpull:`23134`: Remove newline from start of deprecation warnings
+* :ghpull:`22964`: Fix spelling errors
+* :ghpull:`22929`: Handle NaN in bar labels and error bars
+* :ghpull:`23093`: MNT: Removing 3.4 deprecations
+* :ghpull:`23090`: Derive new_figure_manager from FigureCanvas.new_manager.
+* :ghpull:`23099`: Remove unneeded cutout for webagg in show().
+* :ghpull:`23097`: Tweak check for IPython pylab mode.
+* :ghpull:`23088`: Improve error for invalid format strings / misspelled data keys.
+* :ghpull:`23092`: Ensure updated monkey-patching of sphinx-gallery EXAMPLE_HEADER
+* :ghpull:`23087`: Fix width/height inversion in dviread debug helper.
+* :ghpull:`23089`: Normalize tk load failures to ImportErrors.
+* :ghpull:`23091`: Move test that fig.add_axes() needs parameters
+* :ghpull:`23067`: more explicit in windows doc build instructions
+* :ghpull:`23081`: MNT: Deprecate date_ticker_factory
+* :ghpull:`23079`: MNT: Remove key_press and button_press from FigureManager
+* :ghpull:`23076`: MNT: Remove positional argument handling in LineCollection
+* :ghpull:`23078`: MNT: Remove deprecated axis.cla()
+* :ghpull:`23054`: Slightly simplify tcl/tk load in extension.
+* :ghpull:`23073`: MNT: Remove dummy_threading because threading is always available
+* :ghpull:`22405`: DOC: put the gallery keywords in the meta tag
+* :ghpull:`23071`: Fix installing contourpy on CI
+* :ghpull:`23068`: Slight refactor of _c_internal_utils to linewrap it better.
+* :ghpull:`23070`: Pathlibify autotools invocation in build.
+* :ghpull:`22755`: Maybe run autogen as part of freetype install
+* :ghpull:`23063`: doc: mathtext example: use axhspan() instead of fill_between() for backdrop rectangle shading
+* :ghpull:`23055`: Cleanup Annotation.update_position.
+* :ghpull:`22567`: Use contourpy for quad contour calculations
+* :ghpull:`22801`: TST: fully parameterize test_lazy_linux_headless
+* :ghpull:`22180`: ENH: Use rcParams savefig.directory on macosx backend
+* :ghpull:`23048`: Add rrulewrapper to docs
+* :ghpull:`23047`: Fix issue with hist and float16 data
+* :ghpull:`23044`: Fix missing section header for nightly builds
+* :ghpull:`23029`: Demonstrate both usetex and non-usetex in demo_text_path.py.
+* :ghpull:`23038`: Factor out errorevery parsing for 2D and 3D errorbars.
+* :ghpull:`23036`: Suppress traceback chaining for tex subprocess failures.
+* :ghpull:`23037`: Suppress exception chaining in FontProperties.
+* :ghpull:`23020`: Add test to close legend issue
+* :ghpull:`23031`: Specify that style files are utf-8.
+* :ghpull:`22991`: Enable ``plt.sca`` on subfigure's axes
+* :ghpull:`23030`: DOC: Fix charset declaration in redirects
+* :ghpull:`23022`: Fix some possible encoding issues for non-utf8 systems.
+* :ghpull:`23023`: Bump docker/setup-qemu-action from 1 to 2
+* :ghpull:`23024`: DOC: do not suggest to sudo pip install Matplotlib
+* :ghpull:`23018`: Fix typo in font family
+* :ghpull:`22627`: ENH: rect for constrained_layout
+* :ghpull:`22891`: Font example monospace
+* :ghpull:`23006`: docs: add subplot-mosaic string compact notation
+* :ghpull:`23009`: Fixed installation guide command typo
+* :ghpull:`22926`: Fix RangeSlider for same init values #22686
+* :ghpull:`22989`: Merge v3.5.x back into main
+* :ghpull:`22993`: STY: Fix typos in colormap
+* :ghpull:`22777`: DEV: Add codespell to pre-commit hooks
+* :ghpull:`22940`: Fixed dpi bug in rainbow text example
+* :ghpull:`22298`: MNT: Remove cmap_d colormap access
+* :ghpull:`22387`: Add a registry for color sequences
+* :ghpull:`21594`: Document text alignment
+* :ghpull:`22967`: TST: Add some tests for QuadMesh contains function
+* :ghpull:`22936`: ENH: Add full-screen toggle to the macosx backend
+* :ghpull:`22886`: MNT: remove mpl_toolkits.axes_grid
+* :ghpull:`22952`: Make MarkerStyle immutable
+* :ghpull:`22953`: MNT: Move set_cursor to the FigureCanvas
+* :ghpull:`18854`: Standardize creation of FigureManager from a given FigureCanvas class.
+* :ghpull:`22925`: Standardize creation of FigureManager from a given FigureCanvas class.
+* :ghpull:`22875`: Remove Forward definitions where possible.
+* :ghpull:`22928`: ENH: Add option to disable raising the window for macosx
+* :ghpull:`22912`: DOC: Better doc of colors
+* :ghpull:`22931`: BUG: Fix regression with ls=(0, ())
+* :ghpull:`22909`: FIX: skip sub directories when finding fonts on windows
+* :ghpull:`22911`: Clarify docstring of [un]install_repl_displayhook()
+* :ghpull:`22919`: CI: Add concurrency skips for GH Actions
+* :ghpull:`22899`: Fix documentation markup issues
+* :ghpull:`22906`: Clarify logic for repl displayhook.
+* :ghpull:`22892`: Remove support for IPython<4.
+* :ghpull:`22896`: Remove python-dateutil as test requirement
+* :ghpull:`22885`: Deprecate two-layered backend_pdf.Op enum.
+* :ghpull:`22883`: Tweak argument checking in tripcolor().
+* :ghpull:`22884`: Missing ``f`` prefix on f-strings fix
+* :ghpull:`22877`: Small cleanups to mathtext.
+* :ghpull:`21374`: Snap selectors
+* :ghpull:`22824`: Remove some unnecessary extra boundaries for colorbars with extensions.
+* :ghpull:`21448`: Use named groups in mathtext parser.
+* :ghpull:`22609`: Improve usability of dviread.Text by third parties.
+* :ghpull:`22809`: STY: Apply pre-commit hooks to codebase
+* :ghpull:`22730`: Fix removed cross-references
+* :ghpull:`22857`: Slightly simplify twin axes detection in MEP22 zoom.
+* :ghpull:`22813`: MNT: Deprecate figure callbacks
+* :ghpull:`22802`: MNT: make Axes.cla an alias for Axes.clear in all cases
+* :ghpull:`22855`: Remove non-needed remove_text=False.
+* :ghpull:`22854`: TST: Avoid floating point errors in asinh ticker
+* :ghpull:`22850`: Simplify tick creation
+* :ghpull:`22841`: Fix Tk error when updating toolbar checkbutton images
+* :ghpull:`22707`: Proposed ENH: Allow user to turn off breaking of streamlines in streamplot (rebased)
+* :ghpull:`22826`: Bump actions/upload-artifact from 2 to 3
+* :ghpull:`22825`: Bump codecov/codecov-action from 2 to 3
+* :ghpull:`22821`: Use bool for bool keyword arguments
+* :ghpull:`22815`: Fix pickling of globally available, dynamically generated norm classes.
+* :ghpull:`22702`: Doc tweak transform tutorial
+* :ghpull:`22613`: DOC: Add links to explicit vs implicit API everywhere "OO" is used
+* :ghpull:`22712`: Use repr in error messages
+* :ghpull:`22794`: Fix ps export of colored hatches with no linewidth
+* :ghpull:`22797`: Deprecate functions in backends
+* :ghpull:`22608`: Axes.inset_axes: enable Axes subclass creation
+* :ghpull:`22795`: Replace "marker simplification" by "marker subsampling" in docs.
+* :ghpull:`22768`: Fix inkscape tests
+* :ghpull:`22791`: Tweak _ConverterError reporting.
+* :ghpull:`22447`: Improve bar_label annotation
+* :ghpull:`22710`: Fix the error- TypeError: 'float' object is not iterable
+* :ghpull:`22444`: Revert "CI: skip test to work around gs bug"
+* :ghpull:`22785`: CI: Update weekly dependency test job
+* :ghpull:`22784`: Fix 'misspelled' transform variable
+* :ghpull:`22778`: Fix LaTeX formatting in examples
+* :ghpull:`22779`: Improve mlab documentation (and example)
+* :ghpull:`22759`: MNT: Skip existing wheels during nightly wheel upload
+* :ghpull:`22751`: BLD: do not put an upper bound on pyparsing
+* :ghpull:`22752`: DOC: Correct nightly wheels pip install command
+* :ghpull:`22742`: Fix deprecation of backend_tools.ToolBase.destroy
+* :ghpull:`22725`: Move towards making texmanager stateless.
+* :ghpull:`22734`: Added clim support to tripcolor
+* :ghpull:`22733`: CI: Add GHA workflow to upload nightly wheels
+* :ghpull:`21637`: Also upload a subset of nightly wheels
+* :ghpull:`22698`: Correct cross-references in documentation
+* :ghpull:`22263`: DOC: condense version switcher
+* :ghpull:`22361`: Revert datetime usetex ticklabels to use default tex font.
+* :ghpull:`22721`: Small style fixes.
+* :ghpull:`22356`: Cleanup tripcolor()
+* :ghpull:`22360`: Let TeX handle multiline strings itself.
+* :ghpull:`22418`: Deprecate auto-removal of overlapping Axes by plt.subplot{,2grid}.
+* :ghpull:`22722`: Rename confusingly-named cm_fallback.
+* :ghpull:`22697`: Deprecate in testing.decorators
+* :ghpull:`22556`: Add text.parse_math rcParams
+* :ghpull:`22163`: Change colour of Tk toolbar icons on dark backgrounds
+* :ghpull:`22704`: Small simplification to textpath.
+* :ghpull:`22498`: TST: increase coverage on tk tests
+* :ghpull:`21425`: Make Axis3D constructor signature closer to the one of 2D axis.
+* :ghpull:`22665`: Improve error message for incorrect color string
+* :ghpull:`22685`: Rewrite plot format detection from sphinx build target
+* :ghpull:`22670`: Update deprecated vmImage 'vs2017-win2016' in azure pipelines
+* :ghpull:`22503`: Deprecate backend_qt.qApp.
+* :ghpull:`22683`: Add missing space before : for parameters
+* :ghpull:`22591`: Fix Path/str-discrepancy in FontManager.addpath and improve documentation
+* :ghpull:`22680`: Bump actions/cache from 2 to 3
+* :ghpull:`22659`: Add description on quiver head parameters
+* :ghpull:`22668`: Raise on missing closing quotes in matplotlibrc
+* :ghpull:`22675`: Tweak colorbar_placement example.
+* :ghpull:`22276`: Merge "Scatter Symbol" and "Scatter Custom Symbol" examples
+* :ghpull:`22658`: Remove reference to now-deleted reminder note.
+* :ghpull:`22652`: Update documentation example and fix See also
+* :ghpull:`22587`: Refactor handling of tick and ticklabel visibility in Axis.clear()
+* :ghpull:`22148`: MNT: Deprecate ``docstring``
+* :ghpull:`22170`: Add example to polygon selector docstring showing how to set vertices programmatically
+* :ghpull:`22650`: Fix new leak in ft2font introduced in #22604
+* :ghpull:`22644`: FIX: Flush events after closing figures in macosx backend
+* :ghpull:`22643`: Suppress exception chaining in colormap lookup.
+* :ghpull:`22639`: ENH: MacOSX backend to use sRGB instead of GenericRGB colorspace
+* :ghpull:`22509`: Simplifications to ToolManager.{add,remove}_tool.
+* :ghpull:`22633`: DOC: remove space in directive.
+* :ghpull:`22631`: Add space between individual transform components in svg output.
+* :ghpull:`22523`: MNT: Use a context manager to change the norm in colorbar code
+* :ghpull:`22615`: FIX: Change get_axis_map to axis_map now
+* :ghpull:`22508`: Move tracking of autoscale status to Axis.
+* :ghpull:`22547`: Small cleanups around TexManager usage.
+* :ghpull:`22511`: Remove redundant rcParam-lookup in patches
+* :ghpull:`22516`: Expire deprecations in backends
+* :ghpull:`22612`: Updated grammar to reflect more common usage of output vs outputted in animation.py
+* :ghpull:`22589`: Support quoted strings in matplotlibrc
+* :ghpull:`22604`: MNT: Fix types in C-code to reduce warnings
+* :ghpull:`22610`: Fix alternative suggestion in epoch2num() deprecation
+* :ghpull:`22554`: Prepare for making create_dummy_axis not necessary.
+* :ghpull:`22607`: ENH: Add dark/light mode theme to the buttons
+* :ghpull:`21790`: FIX: Update blitting and drawing on the macosx backend
+* :ghpull:`22175`: FIX: Update macosx animation handling
+* :ghpull:`22569`: Require non-zero dash value
+* :ghpull:`22544`: Correct paper sizes
+* :ghpull:`20470`: Issues warnings for legend handles without handlers
+* :ghpull:`22558`: MNT: Simplify imports
+* :ghpull:`22580`: fix doc for annotation_clip parameter
+* :ghpull:`22581`: DOC: fix various typos
+* :ghpull:`22573`: Bump actions/setup-python from 2 to 3
+* :ghpull:`22568`: Rename qhull source to _qhull_wrapper.cpp.
+* :ghpull:`22561`: FIX: Handle stopped animation figure resize
+* :ghpull:`22562`: TST: Add a frame test for animations
+* :ghpull:`22514`: Expire deprecations in cbook.deprecation
+* :ghpull:`22555`: Use picklable callbacks for DraggableBase.
+* :ghpull:`22552`: Tweak dependency checking in doc/conf.py.
+* :ghpull:`22550`: Require sphinx>=3 & numpydoc>=1.0 for building docs.
+* :ghpull:`22539`: Deprecate toplevel mpl.text.get_rotation; normalize rotations early.
+* :ghpull:`22502`: Cleanup unused imports and variables in backends
+* :ghpull:`20071`: Document, test, and simplify impl. of auto_adjustable_area.
+* :ghpull:`22366`: Deprecation removal/updates in axes3d
+* :ghpull:`22484`: Simplify the internal API to connect picklable callbacks.
+* :ghpull:`22417`: Support passing rgbaFace as an array to agg's draw_path.
+* :ghpull:`22412`: Turn _get_axis_map() into a property and remove _get_axis_list()
+* :ghpull:`22486`: Expire deprecations in lines and patches
+* :ghpull:`22512`: Increase coverage
+* :ghpull:`22504`: Simplify FontProperties init.
+* :ghpull:`22497`: Remove entries of MathTextParser._backend_mapping deprecated in 3.4.
+* :ghpull:`22487`: Don't key MathTextParser cache off a mutable FontProperties.
+* :ghpull:`22468`: Turn _mathtext.ship into a plain function.
+* :ghpull:`22490`: Deprecate unused, untested Affine2D.identity().
+* :ghpull:`22491`: Linewrap setupext to 79 character lines.
+* :ghpull:`22488`: Some more maintenance for mathtext internal implementation.
+* :ghpull:`22485`: Change string representation of AxesImage
+* :ghpull:`22240`: Add minimum macosx version
+* :ghpull:`22480`: Remove _point_size_reduction.
+* :ghpull:`22204`: Cleanup _mathtext internal API
+* :ghpull:`22469`: Improve readability of mathtext internal structures.
+* :ghpull:`22477`: Un-pyplot some examples which were already explicitly referencing axes.
+* :ghpull:`22467`: Small cleanup to font handling in agg.
+* :ghpull:`21178`: Add asinh axis scaling (*smooth* symmetric logscale)
+* :ghpull:`22411`: Move cbook._define_aliases() to _api.define_aliases()
+* :ghpull:`22465`: Deprecate unused AddList.
+* :ghpull:`22451`: Clarify error message for bad keyword arguments.
+* :ghpull:`21267`: Cleanup AnnotationBbox.
+* :ghpull:`22464`: Small improvements related to radar_chart example.
+* :ghpull:`22421`: Make most params to figure()/Figure() kwonly.
+* :ghpull:`22457`: Copy arrowprops argument to FancyAnnotationBbox.
+* :ghpull:`22454`: move ``_toolbar_2`` from webagg_core to webagg
+* :ghpull:`22413`: Remove some trivial private getters/setters in axisartist
+* :ghpull:`21634`: TST: Add future dependency tests as a weekly CI job
+* :ghpull:`22079`: Share FigureManager class between gtk3 and gtk4.
+* :ghpull:`22440`: Clarify warning about labels with leading underscores.
+* :ghpull:`17488`: Make error message explicit in legend.py
+* :ghpull:`22453`: Simplify impl. of polar limits setting API.
+* :ghpull:`22449`: Small cleanup to quiver.
+* :ghpull:`22415`: Make emit and auto args of set_{x,y,z}lim keyword only.
+* :ghpull:`22422`: Deprecate backend_ps.convert_psfrags.
+* :ghpull:`22194`: Drop support for Python 3.7
+* :ghpull:`22234`: Partial fix for grid alpha
+* :ghpull:`22433`: Fix ambiguous link targets in docs.
+* :ghpull:`22420`: Update plt.figure() docstring.
+* :ghpull:`22388`: Make signature of Axes.annotate() more explicit.
+* :ghpull:`22419`: Remove "Matplotlib version" from docs issue template
+* :ghpull:`22423`: Avoid indiscriminate glob-remove in xpdf_distill.
+* :ghpull:`22406`: [DOC]: Removed a redundant 'The'
+* :ghpull:`21442`: Factor out common limits handling for x/y/z axes.
+* :ghpull:`22397`: Axes capitalization in widgets and axes3d
+* :ghpull:`22394`: Tweak Axes3D docstrings that refer to 2D plotting methods.
+* :ghpull:`22383`: TST: fix doc build
+* :ghpull:`21877`: DOC: attempt to explain the main different APIs
+* :ghpull:`21238`: Raise when unknown signals are connected to CallbackRegistries.
+* :ghpull:`22345`: MNT: make layout deprecations pending
+* :ghpull:`21597`: FIX: Remove the deepcopy override from transforms
+* :ghpull:`22370`: Replace tabs with spaces in C code.
+* :ghpull:`22371`: Corrected a mistake in comments (Issue #22369)
+* :ghpull:`21352`: Refactor hexbin().
+* :ghpull:`19214`: Improve autoscaling for high order Bezier curves
+* :ghpull:`22268`: Deprecated is_decade and is_close_to_int
+* :ghpull:`22359`: Slightly refactor TeX source generation.
+* :ghpull:`22365`: Remove deprecated ``MovieWriter.cleanup``
+* :ghpull:`22363`: Properly capitalize "Unicode".
+* :ghpull:`22025`: Deprecate various custom FigureFrameWx attributes/methods.
+* :ghpull:`21391`: Reuse imsave()'s background-blending code in FigureCanvasAgg.print_jpeg.
+* :ghpull:`22026`: Simplify wxframe deletion.
+* :ghpull:`22351`: Fix "trailing" whitespace in C docstrings.
+* :ghpull:`22342`: Docstrings for _qhull.
+* :ghpull:`21836`: Slightly shorten ft2font init.
+* :ghpull:`21962`: Privatize various internal APIs of backend_pgf.
+* :ghpull:`22114`: Rewrite AxesStack independently of cbook.Stack.
+* :ghpull:`22332`: Let TransformedPatchPath inherit most functionality from TransformedPath.
+* :ghpull:`22292`: Cleanup Axis._translate_tick_kw
+* :ghpull:`22339`: wx.App() should be init'ed in new_figure_manager_given_figure
+* :ghpull:`22315`: More standardization of floating point slop in mpl_toolkits.
+* :ghpull:`22337`: DOC: More cleanup axes -> Axes
+* :ghpull:`22323`: Replace sole use of maxdict by lru_cache.
+* :ghpull:`22229`: FIX: make safe to add / remove artists during ArtistList iteration
+* :ghpull:`22196`: ``dates`` classes and functions support ``tz`` both as string and ``tzinfo``
+* :ghpull:`22161`: Add box when setting ``PolygonSelector.verts``
+* :ghpull:`19368`: Raise warning and downsample if data given to _image.resample is too large
+* :ghpull:`22250`: Unify toolbar init across backends.
+* :ghpull:`22304`: Added tests for ContourSet.legend_elements
+* :ghpull:`21583`: Add pre-commit config and dev instructions
+* :ghpull:`21547`: Custom cap widths in box and whisker plots in bxp() and boxplot()
+* :ghpull:`20887`: Implement a consistent behavior in TkAgg backend for bad blit bbox
+* :ghpull:`22317`: Rename outdated seaborn styles.
+* :ghpull:`22271`: Rework/fix Text layout cache.
+* :ghpull:`22097`: In mpl_toolkits, use the same floating point slop as for standard ticks.
+* :ghpull:`22295`: Display bad format string in error message.
+* :ghpull:`22287`: Removed unused code and variables
+* :ghpull:`22244`: MNT: colorbar locators properties
+* :ghpull:`22270`: Expanded documentation of Axis.set_ticks as per discussion in issue #22262
+* :ghpull:`22280`: Simplify FontProperties.copy().
+* :ghpull:`22174`: Give the Tk toolbar buttons a flat look
+* :ghpull:`22046`: Add the ability to change the focal length of the camera for 3D plots
+* :ghpull:`22251`: Colorbar docstring reorg
+* :ghpull:`21933`: MNT: privatize colorbar attr
+* :ghpull:`22258`: DOC: fix version switcher
+* :ghpull:`22261`: DOC: fix switcher json
+* :ghpull:`22154`: Add some tests for minspan{x,y} in RectangleSelector
+* :ghpull:`22246`: DOC: add dropdown
+* :ghpull:`22133`: Deprecated ``afm``, ``fontconfig_pattern``, and ``type1font``
+* :ghpull:`22249`: DOC: More capitalization of Axes
+* :ghpull:`22021`: Ensure that all toolbar (old/new) subclasses can be init'ed consistently
+* :ghpull:`22213`: Improve ft2font error reporting.
+* :ghpull:`22245`: Deprecate cleared kwarg to get_renderer.
+* :ghpull:`22239`: Fix typos
+* :ghpull:`22216`: turn off the grid after creating colorbar axes
+* :ghpull:`22055`: FIX: Return value instead of enum in get_capstyle/_joinstyle
+* :ghpull:`22228`: Remove some unnecessary getattrs.
+* :ghpull:`20426`: ENH: Layout engine
+* :ghpull:`22224`: Trivial doc fix to annotations tutorial.
+* :ghpull:`21894`: Jointly track x and y in PolygonSelector.
+* :ghpull:`22205`: Bump minimum NumPy to 1.19
+* :ghpull:`22203`: Factor out underline-thickness lookups in mathtext.
+* :ghpull:`22189`: DOC: Add hatch API to reference
+* :ghpull:`22084`: Clean up 3d plot box_aspect zooming
+* :ghpull:`22098`: Expire axes_grid1/axisartist deprecations.
+* :ghpull:`22013`: Use standard toolbar in wx.
+* :ghpull:`22160`: Removed unused variables etc.
+* :ghpull:`22179`: FIX: macosx check case-insensitive app name
+* :ghpull:`22157`: Improved coverage of mathtext and removed unused code
+* :ghpull:`21781`: Use a fixture to get widget testing axes
+* :ghpull:`22140`: Ensure log formatters use Unicode minus
+* :ghpull:`21342`: Fix drawing animated artists changed in selector callback
+* :ghpull:`22134`: Deprecated ``tight_bbox`` and ``tight_layout`` modules
+* :ghpull:`21965`: Switch transOffset to offset_transform.
+* :ghpull:`22145`: Make Tk windows use the same icon as other backends
+* :ghpull:`22107`: Expire mathttext-related deprecations
+* :ghpull:`22139`: FIX: width/height were reversed in macosx rectangle creation
+* :ghpull:`22123`: Deprecate accepting arbitrary parameters in some get_window_extent() methods
+* :ghpull:`22122`: Hint at draw_without_rendering() in Text.get_window_extent
+* :ghpull:`22120`: Drop dependency on scipy in the docs.
+* :ghpull:`22063`: FIX: Autoposition title when yaxis has offset
+* :ghpull:`22119`: Micro-optimize skew().
+* :ghpull:`22109`: Remove unnecessary null checks in macosx.m, and some more maintenance
+* :ghpull:`21977`: Add corner coordinate helper methods to Ellipse/Rectangle
+* :ghpull:`21830`: Add option of bounding box for PolygonSelector
+* :ghpull:`22115`: Turn _localaxes into a plain list.
+* :ghpull:`22108`: Micro-optimize rotation transform.
+* :ghpull:`22043`: Cleanup differential equations examples.
+* :ghpull:`22080`: Simple style(ish) fixes.
+* :ghpull:`22110`: Right-aligned status text in backends
+* :ghpull:`21873`: DOC: Update and consolidate Custom Tick Formatter for Time Series example
+* :ghpull:`22112`: Fix a small typo
+* :ghpull:`20117`: Very soft-deprecate AxesDivider.new_{horizontal,vertical}.
+* :ghpull:`22034`: Update lines_with_ticks_demo.py
+* :ghpull:`22102`: DOC: rename usage tutorial to quick_start
+* :ghpull:`19228`: Validate text rotation in setter
+* :ghpull:`22081`: Expire colorbar-related deprecations.
+* :ghpull:`22008`: Added color keyword argument to math_to_image
+* :ghpull:`22058`: Remove exprired mplot3d deprecations for 3.6
+* :ghpull:`22073`: DOC: Add new tutorial to external resources.
+* :ghpull:`22054`: MNT: Set CapStyle member names automatically
+* :ghpull:`22061`: De-duplicate mplot3D API docs
+* :ghpull:`22075`: Remove unnecessary ``.figure`` qualifier in docs.
+* :ghpull:`22051`: Make required_interactive_framework required on FigureCanvas.
+* :ghpull:`22050`: Deprecate the noop, unused FigureCanvasBase.resize.
+* :ghpull:`22030`: Add explanatory comments to "broken" horizontal bar plot example
+* :ghpull:`22001`: Fix:    [Bug]: triplot with 'ls' argument yields TypeError #21995
+* :ghpull:`22045`: Fill in missing Axes3D box_aspect argument docstring
+* :ghpull:`22042`: Keep FontEntry helpers private.
+* :ghpull:`21042`: Make rcParams.copy() return a new RcParams instance.
+* :ghpull:`22032`: flipy only affects the drawing of texts, not of images.
+* :ghpull:`21993`: Added docstring to rrulewrapper class
+* :ghpull:`21935`: Significantly improve tight layout performance for cartopy axes
+* :ghpull:`22000`: Some gtk cleanups.
+* :ghpull:`21983`: Simplify canvas class control in FigureFrameWx.
+* :ghpull:`21985`: Slightly tighten the _get_layout_cache_key API.
+* :ghpull:`22020`: Simplify wx _print_image.
+* :ghpull:`22010`: Fix syntax highlighting in contrib guide.
+* :ghpull:`22003`: Initialize RendererCairo.{width,height} in constructor.
+* :ghpull:`21992`: Use _make_classic_style_pseudo_toolbar more.
+* :ghpull:`21916`: Fix picklability of make_norm_from_scale norms.
+* :ghpull:`21981`: FigureCanvasCairo can init RendererCairo; kill RendererCairo subclasses.
+* :ghpull:`21986`: InvLogTransform should only return masked arrays for masked inputs.
+* :ghpull:`21991`: PEP8ify wx callback names.
+* :ghpull:`21975`: DOC: remove experimental tag from CL
+* :ghpull:`21989`: Autoinfer norm bounds.
+* :ghpull:`21980`: Removed loaded modules logging
+* :ghpull:`21982`: Deprecate duplicated FigureManagerGTK{3,4}Agg classes.
+* :ghpull:`21963`: Clarify current behavior of draw_path_collection.
+* :ghpull:`21974`: Reword inset axes example.
+* :ghpull:`21835`: Small improvements to interactive examples
+* :ghpull:`21050`: Store dash_pattern as single attribute, not two.
+* :ghpull:`21557`: Fix transparency when exporting to png via pgf backend.
+* :ghpull:`21904`: Added _repr_html_ for fonts
+* :ghpull:`21696`: Use cycling iterators in RendererBase.
+* :ghpull:`21955`: Refactor common parts of ImageMagick{,File}Writer.
+* :ghpull:`21952`: Clarify coordinates for RectangleSelector properties
+* :ghpull:`21964`: Fix some more missing references.
+* :ghpull:`21516`: Make _request_autoscale_view more generalizable to 3D.
+* :ghpull:`21947`: Slightly cleanup RendererBase docs.
+* :ghpull:`21961`: Privatize various internal APIs of backend_pgf.
+* :ghpull:`21956`: Remove tests for avconv animation writers.
+* :ghpull:`21954`: DOC: Move Animation and MovieWriter inheritance diagrams ...
+* :ghpull:`21780`: Add a click_and_move widget test helper
+* :ghpull:`21941`: Merge branch v3.5.x into main
+* :ghpull:`21936`: Small ``__getstate__`` cleanups.
+* :ghpull:`21939`: Update comment re: register_at_fork.
+* :ghpull:`21910`: Fold _rgbacache into _imcache.
+* :ghpull:`21921`: Clean up RectangleSelector move code
+* :ghpull:`21925`: Drop labelling from PR welcome action
+* :ghpull:`14930`: Set Dock icon on the macosx backend
+* :ghpull:`21920`: Improve square state calculation in RectangleSelector
+* :ghpull:`21919`: Fix use_data_coordinates docstring
+* :ghpull:`21881`: Add a PolygonSelector.verts setter
+* :ghpull:`20839`: Fix centre and square state and add rotation for rectangle selector
+* :ghpull:`21874`: DOC: Add Date Tick Locators and Formatters example
+* :ghpull:`21799`: Added get_font_names() to fontManager
+* :ghpull:`21871`: DOC: Code from markevery_prop_cycle moved to test.
+* :ghpull:`21395`: Expire _check_savefig_extra_args-related deprecations.
+* :ghpull:`21867`: Remove unused bbox arg to _convert_agg_to_wx_bitmap.
+* :ghpull:`21868`: Use partialmethod for better signatures in backend_ps.
+* :ghpull:`21520`: Shorten some inset_locator docstrings.
+* :ghpull:`21737`: Update the "Rotating a 3D plot" gallery example to show all 3 rotation axes
+* :ghpull:`21851`: Re-order a widget test function
+* :ghpull:`10762`: Normalization of elevation and azimuth angles for surface plots
+* :ghpull:`21426`: Add ability to roll the camera in 3D plots
+* :ghpull:`21822`: Replace NSDictionary by switch-case.
+* :ghpull:`21512`: MNT: Add modifier key press handling to macosx backend
+* :ghpull:`21784`: Set macOS icon when using Qt backend
+* :ghpull:`21748`: Shorten PyObjectType defs in macosx.m.
+* :ghpull:`21809`: MNT: Turn all macosx warnings into errors while building
+* :ghpull:`21792`: Fix missing return value in closeButtonPressed.
+* :ghpull:`21767`: Inherit many macos backend docstrings.
+* :ghpull:`21766`: Don't hide build log on GHA.
+* :ghpull:`21728`: Factor out some macosx gil handling for py-method calls from callbacks.
+* :ghpull:`21754`: Update gitattributes so that objc diffs are correctly contextualized.
+* :ghpull:`21752`: Add a helper for directly output pdf streams.
+* :ghpull:`21750`: Don't sort pdf dicts.
+* :ghpull:`21745`: DOC: Clarify Coords Report Example
+* :ghpull:`21746`: Fix/add docstring signatures to many C++ methods.
+* :ghpull:`21631`: DOC: change gridspec tutorial to arranging_axes tutorial
+* :ghpull:`21318`: FIX: better error message for shared axes and axis('equal')
+* :ghpull:`21519`: mark_inset should manually unstale axes limits before drawing itself.
+* :ghpull:`21724`: Fix copyright date with SOURCE_DATE_EPOCH set
+* :ghpull:`21398`: FIX: logic of title repositioning
+* :ghpull:`21717`: Simplify macosx toolbar init.
+* :ghpull:`21690`: Whitespace/braces/#defines cleanup to macosx.
+* :ghpull:`21695`: Use _api.check_shape more.
+* :ghpull:`21698`: Small code cleanups and style fixes.
+* :ghpull:`21529`: Delay-load keymaps in toolmanager.
+* :ghpull:`21525`: Fix support for clim in scatter.
+* :ghpull:`21697`: Drop non-significant zeros from ps output.
+* :ghpull:`21692`: CI: Remove CI test runs from forks of matplotlib
+* :ghpull:`21591`: Make ToolFullScreen a Tool, not a ToolToggle.
+* :ghpull:`21677`: Simplify test for negative xerr/yerr.
+* :ghpull:`21657`: Replace some image_comparisons by return-value-tests/check_figures_e…
+* :ghpull:`21664`: Merge 3.5.x into main
+* :ghpull:`21490`: Make Line2D copy its inputs
+* :ghpull:`21639`: Skip some uses of packaging's PEP440 version for non-Python versions.
+* :ghpull:`21604`: Fix centre square rectangle selector part 1
+* :ghpull:`21593`: Check for images added-and-modified in a same PR
+* :ghpull:`20750`: Shorten issue templates
+* :ghpull:`21590`: Make gtk3 full_screen_toggle more robust against external changes.
+* :ghpull:`21582`: Organize checklist in PR template
+* :ghpull:`21580`: Rename/remove _lastCursor, as needed.
+* :ghpull:`21567`: Removed the range parameter from the validate_whiskers function's err…
+* :ghpull:`21565`: Further remove remnants of offset_position.
+* :ghpull:`21542`: [ENH]: Use new style format strings for colorbar ticks
+* :ghpull:`21564`: Skip invisible artists when doing 3d projection.
+* :ghpull:`21558`: Various small fixes for streamplot().
+* :ghpull:`21544`: Return minorticks as array, not as list.
+* :ghpull:`21546`: Added links to the mosaic docs in figure and pyplot module docstrings
+* :ghpull:`21545`: Turn mouseover into a mpl-style getset_property.
+* :ghpull:`21537`: Remove unnecessary False arg when constructing wx.App.
+* :ghpull:`21536`: Reword margins docstrings, and fix bounds on zmargin values.
+* :ghpull:`21535`: typo-correction-on-line-185
+* :ghpull:`21534`: Do not use space in directive calling.
+* :ghpull:`21494`: Adding tutorial links for blitting in widgets.py
+* :ghpull:`21407`: Stash exceptions when FT2Font closes the underlying stream.
+* :ghpull:`21431`: set_ticks([single_tick]) should also expand view limits.
+* :ghpull:`21444`: Make pipong example self-contained.
+* :ghpull:`21392`: Add label about workflow to new contributor PRs
+* :ghpull:`21440`: Install sphinx-panels along with development setup
+* :ghpull:`21434`: Remove coords_flat variable
+* :ghpull:`21415`: Move gui_support.macosx option to packages section.
+* :ghpull:`21412`: Privatize some SVG internal APIs.
+* :ghpull:`21401`: Uncamelcase some internal variables in axis.py; rename _get_tick_bboxes.
+* :ghpull:`21417`: Use Bbox.unit() more.
+* :ghpull:`20253`: Simplify parameter handling in FloatingAxesBase.
+* :ghpull:`21379`: Simplify filename tracking in FT2Font.
+* :ghpull:`21278`: Clear findfont cache when calling addfont().
+* :ghpull:`21400`: Use bbox.{size,bounds,width,height,p0,...} where appropriate.
+* :ghpull:`21408`: Reword annotations tutorial section titles.
+* :ghpull:`21371`: Rename default branch
+* :ghpull:`21389`: Log pixel coordinates in event_handling coords_demo example on terminal/console
+* :ghpull:`21376`: Factor common parts of saving to different formats using pillow.
+* :ghpull:`21377`: Enable tests for text path based markers
+* :ghpull:`21283`: Demonstrate inset_axes in scatter_hist example.
+* :ghpull:`21356`: Raise an exception when find_tex_file fails to find a file.
+* :ghpull:`21362`: Simplify wording of allowed errorbar() error values
+* :ghpull:`21274`: ENH: Add support to save images in WebP format
+* :ghpull:`21289`: Simplify _init_legend_box.
+* :ghpull:`21256`: Make image_comparison work even without the autoclose fixture.
+* :ghpull:`21343`: Fix type1font docstring markup/punctuation.
+* :ghpull:`21341`: Fix trivial docstring typo.
+* :ghpull:`21301`: Simplify ``Colormap.__call__`` a bit.
+* :ghpull:`21280`: Make ``Path.__deepcopy__`` interact better with subclasses, e.g. TextPath.
+* :ghpull:`21266`: Fix #21101 Add validator to errorbar method
+* :ghpull:`20921`: Fix problem with (deep)copy of TextPath
+* :ghpull:`20914`: 19195 rotated markers
+* :ghpull:`21276`: Add language about not assigning issues
+* :ghpull:`20715`: Improve Type-1 font parsing
+* :ghpull:`21218`: Parametrize/simplify test_missing_psfont.
+* :ghpull:`21213`: Compress comments in make_image.
+* :ghpull:`21187`: Deprecate error_msg_foo helpers.
+* :ghpull:`21190`: Deprecate mlab.stride_windows.
+* :ghpull:`21152`: Rename ``**kw`` to ``**kwargs``.
+* :ghpull:`21087`: Move colormap examples from userdemo to images_contours_and_fields.
+* :ghpull:`21074`: Deprecate MarkerStyle(None).
+* :ghpull:`20990`: Explicit registration of canvas-specific tool subclasses.
+* :ghpull:`21049`: Simplify setting Legend attributes
+* :ghpull:`21056`: Deprecate support for no-args MarkerStyle().
+* :ghpull:`21059`: Remove dummy test command from setup.py
+* :ghpull:`21015`: Prepare for rcParams.copy() returning a new RcParams instance in the future
+* :ghpull:`21021`: Factor out for_layout_only backcompat support in get_tightlayout.
+* :ghpull:`21023`: Inline ToolManager._trigger_tool to its sole call site.
+* :ghpull:`21005`: Test the rcParams deprecation machinery.
+* :ghpull:`21010`: Avoid TransformedBbox where unneeded.
+* :ghpull:`21019`: Reword custom_ticker1 example.
+* :ghpull:`20995`: Deprecate some backend_gtk3 helper globals.
+* :ghpull:`21004`: Remove now-unused rcParams _deprecated entries.
+* :ghpull:`20986`: Make HandlerLine2D{,Compound} inherit constructors from HandlerNpoints.
+* :ghpull:`20974`: Rename symbol_name to glyph_name where appropriate.
+* :ghpull:`20961`: Small cleanups to math_to_image.
+* :ghpull:`20957`: legend_handler_map cleanups.
+* :ghpull:`20955`: Remove unused HostAxes._get_legend_handles.
+* :ghpull:`20851`: Try to install the Noto Sans CJK font
+
+Issues (202):
+
+* :ghissue:`23827`: backend_gtk3agg.py calls set_device_scale
+* :ghissue:`23560`: [Doc]: mpl_toolkits.axes_grid still mentioned as maintained
+* :ghissue:`23794`: [Doc]: Version switcher broken in devdocs
+* :ghissue:`23806`: [Bug]: possible regression in axis ticks handling in matplotlib 3.6.0rc2
+* :ghissue:`22965`: [Bug]: triplot duplicates label legend
+* :ghissue:`23807`: streamplot raises ValueError when the input is zeros
+* :ghissue:`23761`: [Bug]: False positive legend handler warnings in 3.6.0.rc1
+* :ghissue:`23398`: [Bug]: Newer versions of matplotlib ignore xlabel on colorbar axis
+* :ghissue:`23699`: [Bug]: Bug with toolbar instantiation in notebook
+* :ghissue:`23745`: [Doc]: Minor rcParams/matplotlibrc doc issues
+* :ghissue:`23717`: [Bug]: AxesSubplot.get_yticks not returning the actual printed ticks
+* :ghissue:`21508`: [Doc]: Create diagram to show rotation directions for 3D plots
+* :ghissue:`23709`: [Bug]: colorbar with unattached mappables can't steal space
+* :ghissue:`23701`: [Bug]: plt.figure(), plt.close() leaks memory
+* :ghissue:`22409`: [Bug]: AttributeError: 'QResizeEvent' object has no attribute 'pos'
+* :ghissue:`19609`: DeprecationWarning when changing color maps
+* :ghissue:`23716`: MatplotlibDeprecationWarning removal hard-breaks seaborn in 3.6rc1
+* :ghissue:`23719`: [Bug]: register_cmap deprecation message seems wrong
+* :ghissue:`23707`: test_Normalize fails on aarch64/ppc64le/s390x
+* :ghissue:`21107`: [MNT]: Should plt.xticks() get a minor keyword argument
+* :ghissue:`23679`: [Doc]: Deprecated modules not in docs
+* :ghissue:`19550`: Arc and pathpatch_2d_to_3d plots full ellipse
+* :ghissue:`23329`: [Bug]: ``plt.autoscale()`` fails for partial ``Arc``
+* :ghissue:`11266`: Arc patch ignoring theta1/theta2 when added to Axes via PatchCollection
+* :ghissue:`4067`: 'Poly3DCollection' object has no attribute '_facecolors2d'
+* :ghissue:`23622`: [MNT]: make.bat not parsing sphinxopt
+* :ghissue:`23459`: [Bug]: 'Line3D' object has no attribute '_verts3d'
+* :ghissue:`23653`: [Bug]: macosx subplot tool causes segfault when window closed
+* :ghissue:`23660`: [Bug]: Test test_figure.py::test_subfigure_ss[png] FAILED on ppc64le
+* :ghissue:`23645`: [MNT]: Python 3.11 manylinux wheels
+* :ghissue:`23650`: TTF fonts loaded from file are not embedded/displayed properly when saved to pdf
+* :ghissue:`23583`: [Doc]: Document the position parameter in apply_aspect()
+* :ghissue:`23386`: setuptools_scm-git-archive is obsolete
+* :ghissue:`23220`: [Doc]: Clarify ``offset`` parameter in linestyle
+* :ghissue:`22746`: [Doc]: Document that rcParams['font.family'] can be a list
+* :ghissue:`8187`: Axes doesn't have ````legends```` attribute?
+* :ghissue:`23580`: [Bug]: TypeError when plotting against list of datetime.date where 0th element of list is None
+* :ghissue:`15514`: Relevant methods are only documented in base classes and thus not easily discoverable
+* :ghissue:`21611`: DOC: Add conda environment instructions to developers guide
+* :ghissue:`23487`: [Bug]: scatter plot color settings discarded unless c given
+* :ghissue:`22977`: [Bug]: offset dash linestyle has no effect in patch objects
+* :ghissue:`18883`: Matplotlib would not try to apply all the font in font list to draw all characters in the given string.
+* :ghissue:`22570`: [ENH]: Provide ``axis('equal')`` for ``Axes3D``.
+* :ghissue:`23433`: [Bug]: array-like linewidth raises an error for scatter3D
+* :ghissue:`12388`: Legend Title Left Alignment
+* :ghissue:`23375`: [Bug]: markerfacecoloralt not supported when drawing errorbars
+* :ghissue:`17973`: DOC: matplotlib.__doc__ not included in online docs ?
+* :ghissue:`23474`: [Bug]: ``\,`` and ``\mathrm{\,}`` are not identical in Mathtext when using CM and STIX
+* :ghissue:`8715`: event handlers have different signatures across backends
+* :ghissue:`18271`: PGF uses the minimal document class
+* :ghissue:`23324`: [Bug]: Exception not handled in widgetlock()
+* :ghissue:`15710`: doc for type of tz parameter is inconsistent throughout dates.py
+* :ghissue:`21165`: Hexbin marginals need a test for linear scaling
+* :ghissue:`23105`: [MNT]: Deprecate per-backend customization of draw_if_interactive
+* :ghissue:`23147`: [Bug]: with setuptools>=60, cannot find msbuild
+* :ghissue:`23379`: [Bug]: Offset notation on y-axis can overlap with a long title
+* :ghissue:`22819`: [Doc]: Make rect argument consistent in the docstrings
+* :ghissue:`23172`: [Bug]: Calling matplotlib.pyplot.show() outside of matplotlib.pyplot.rc_context no longer works
+* :ghissue:`23019`: [Bug]: ``UnicodeDecodeError`` when using some special and accented characters in TeX
+* :ghissue:`23334`: [Doc]: Tk embedding example crashes Spyder
+* :ghissue:`23298`: [Bug]: get_backend() clears figures from Gcf.figs if they were created under rc_context
+* :ghissue:`21942`: [ENH]: add width/height_ratios to subplots and friends
+* :ghissue:`23028`: [ENH]: contour kwarg for negative_linestyle
+* :ghissue:`19223`: Certain non-hashable parameters to text() give cryptic error messages
+* :ghissue:`18351`: Add the ability to plot striped lines
+* :ghissue:`23205`: [Bug]: URL-area not rotated in PDFs
+* :ghissue:`23268`: [Bug]: hyphen renders different length depending on presence of MathText
+* :ghissue:`23308`: [Bug]: set_visible() not working for 3d projection
+* :ghissue:`23296`: Set_color method for line2d object in latest document not work
+* :ghissue:`22992`: [Bug]: test_image_comparison_expect_rms nondeterministic failure
+* :ghissue:`23008`: [ENH]: Use ``\genfrac`` in display style?
+* :ghissue:`23214`: [MNT]: Rename examples with "test" in the name
+* :ghissue:`17852`: Thin space missing after mathtext operators
+* :ghissue:`12078`: Inconsistency in keyword-arguments ncol/ncols, nrow/nrows
+* :ghissue:`23239`: [Doc]: steps is not implemented in line styles.
+* :ghissue:`23151`: [MNT]: default date limits...
+* :ghissue:`9462`: Misaligned bottoms of subplots for png output with bbox_inches='tight'
+* :ghissue:`21369`: [Bug]: ax.invert_xaxis() and ax.invert_yaxis() both flip the X axis
+* :ghissue:`20797`: ``macosx`` cursors break with images
+* :ghissue:`23084`: [TST] Upcoming dependency test failures
+* :ghissue:`22910`: [Bug]: bar_label fails with nan errorbar values
+* :ghissue:`23074`: [Bug]: matplotlib crashes if ``_tkinter`` doesn't have ``__file__``
+* :ghissue:`23083`: [Bug]: Confusing error messages
+* :ghissue:`22391`: [Doc]: Remove "keywords" line at the bottom of all examples
+* :ghissue:`20202`: Daylocator causes frozen computer when used with FuncAnimation
+* :ghissue:`22529`: Replace C++ quad contouring code with use of ContourPy
+* :ghissue:`21710`: [ENH]: macosx backend does not respect rcParams["savefig.directory"]
+* :ghissue:`21880`: [Doc]: rrulewrapper not included in API docs
+* :ghissue:`22622`: [Bug]: Gaps and overlapping areas between bins when using float16
+* :ghissue:`23043`: [TST] Upcoming dependency test failures
+* :ghissue:`17960`: Line2D object markers are lost when retrieved from legend.get_lines() when linestyle='None'
+* :ghissue:`23026`: [MNT]: Require that matplotlibrc/style files use utf-8 (or have an encoding cookie)
+* :ghissue:`22947`: [Bug]: Can't use ``plt.sca()`` on axes created using subfigures
+* :ghissue:`22623`: [ENH]: support rect with constrained_layout ("layout only to part of the figure")
+* :ghissue:`22917`: "ab;cd" missing in subplot_mosaic tutorial
+* :ghissue:`22686`: [Bug]: can not give init value for RangeSlider widget
+* :ghissue:`22740`: [MNT]: Add codespell to pre-commit hooks
+* :ghissue:`22893`: rainbow text example is broken
+* :ghissue:`21571`: [Doc]: Clarify text positioning
+* :ghissue:`22092`: [Bug]: Configure subplots dialog freezes for TkAgg with toolmanager
+* :ghissue:`22760`: [Bug]: Macosx legend picker doesn't work anymore
+* :ghissue:`16369`: Call to input blocks slider input on osx with the default agg 'MacOSX'. It works fine on when TkAgg is used.
+* :ghissue:`22915`: [Bug]: figure.raise_window rcParam does not work on MacOSX backend
+* :ghissue:`22930`: [Bug]: Regression in dashes due to #22569
+* :ghissue:`22859`: [Bug]: findSystemFonts should not look in subdirectories of C:\Windows\Fonts\
+* :ghissue:`22882`: Missing ``f`` prefix on f-strings
+* :ghissue:`22738`: [MNT]: make Axes.cla an alias for Axes.clear in all cases
+* :ghissue:`22708`: [TST] Upcoming dependency test failures
+* :ghissue:`8388`: Proposed ENH: Allow user to turn off breaking of streamlines in streamplot
+* :ghissue:`20755`: [Bug]: make_norm_from_scale should create picklable classes even when used in-line.
+* :ghissue:`18249`: Expand the explanation of the Object-Oriented interface
+* :ghissue:`22792`: [Bug]: .eps greyscale hatching of patches when lw=0
+* :ghissue:`22630`: [ENH]: enable passing of projection keyword to Axes.inset_axes
+* :ghissue:`22414`: [Bug]: bar_label overlaps bars when y-axis is inverted
+* :ghissue:`22726`: [Bug]: tripcolor ignores clim
+* :ghissue:`21635`: [ENH]: Add a nightly wheel build
+* :ghissue:`9994`: document where nightly wheels are published
+* :ghissue:`22350`: [Bug]: text.usetex Vs. DateFormatter
+* :ghissue:`4976`: missing imshow() subplots when using tight_layout()
+* :ghissue:`22150`: [ENH]: Tool icons are hardly visible in Tk when using a dark theme
+* :ghissue:`22662`: Leave color parameter empty should be fine[ENH]:
+* :ghissue:`22671`: [Doc]: plot_format adaption invalidates sphinx cache
+* :ghissue:`22582`: [Bug]: FontManager.addfont doesn't accept pathlib.Path of TTF font
+* :ghissue:`22657`: [ENH]: vector map
+* :ghissue:`16181`: The great API cleanup
+* :ghissue:`22636`: [Bug]: Infinite loop when there is single double quote in matplotlibrc
+* :ghissue:`22266`: [Doc]: Improve examples in documentation
+* :ghissue:`11861`: Figure does not close until script finishes execution
+* :ghissue:`19288`: Escape # character in matplotlibrc
+* :ghissue:`22579`: [Bug]: Replacement for epoch2num behaves differently (does not accept arrays)
+* :ghissue:`22605`: [Bug]: Tool contrast low with dark theme on macosx backend
+* :ghissue:`17642`: bring osx backend flush_events to feature parity with other backend
+* :ghissue:`19268`: Drawing the canvas does not populate ticklabels on MacOSX backend
+* :ghissue:`17445`: MacOSX does not render frames in which new artists are added when blitting
+* :ghissue:`10980`: Current versions cannot reproduce rotate_axes_3d_demo.py
+* :ghissue:`18451`: MacOSX backend fails with animation in certain scripts
+* :ghissue:`22603`: [MNT]: Replace str(n)cpy etc with safe versions (C++)
+* :ghissue:`19121`: Handle and label not created for Text with label
+* :ghissue:`22563`: [Doc]: annotation_clip=None not correctly documented
+* :ghissue:`12528`: Empty axes on draw after blitted animation finishes
+* :ghissue:`20991`: [Bug]: Error when using path effect with a PolyCollection
+* :ghissue:`19563`: path_effects kwarg triggers exception on 3D scatterplot
+* :ghissue:`8650`: System Error in backend_agg. (with a fix!)
+* :ghissue:`20294`: ``AxesImage.__str__`` is wrong if the image does not span the full Axes.
+* :ghissue:`18066`: Document minimum supported OSX version for macos backend
+* :ghissue:`17018`: Add documentation about transparency of frame
+* :ghissue:`22403`: [MNT]: Confusing prompt in docs issue template
+* :ghissue:`8839`: mpl_connect silently does nothing when passed an invalid event type string
+* :ghissue:`22343`: [MNT]: Delay (or make pending) the deprecation of set_constrained_layout/set_tight_layout
+* :ghissue:`21554`: [Bug]: ``ValueError`` upon deepcopy of a ``Figure`` object
+* :ghissue:`22369`: [Doc]: Incorrect comment in example code for creating adjacent subplots
+* :ghissue:`19174`: connectionstyle arc3 with high rad value pushes up data interval of x-axis and y-axis.
+* :ghissue:`8351`: seaborn styles make "+", "x" markers invisible; proposed workaround for shipped styles
+* :ghissue:`22278`: Deprecate/remove maxdict
+* :ghissue:`19276`: imshow with very large arrays not working as expected
+* :ghissue:`22035`: [ENH]: Specify a custom focal length / FOV for the 3d camera
+* :ghissue:`22264`: [Bug]: new constrained_layout causes axes to go invisible(?)
+* :ghissue:`21774`: [MNT]: Improvements to widget tests
+* :ghissue:`18722`: Consider removing AFM+mathtext support
+* :ghissue:`21540`: [Bug]: cm fontset in log scale does not use Unicode minus
+* :ghissue:`22062`: [Bug]: Autopositioned title overlaps with offset text
+* :ghissue:`22093`: [Bug]: AttributeError: 'AxesSubplot' object has no attribute 'add_text'
+* :ghissue:`22012`: [Bug]: Mouseover coordinate/value text should be right aligned
+* :ghissue:`21995`: [Bug]: triplot with 'ls' argument yields TypeError
+* :ghissue:`20249`: MatplotlibDeprecationWarning when updating rcparams
+* :ghissue:`15781`: MatplotlibDeprecationWarning examples.directory is deprecated
+* :ghissue:`13118`: No MatplotlibDeprecationWarning for default rcParams
+* :ghissue:`21978`: Remove logging debug of loaded modules
+* :ghissue:`11738`: pgf backend doesn't make background transparent
+* :ghissue:`18039`: Add ``_repr_html_`` for fonts
+* :ghissue:`21970`: [Bug]: tight layout breaks with toolbar.push_current()
+* :ghissue:`14850`: No icon showing up with macosx backend
+* :ghissue:`17283`: Create Date Formatter/Locator Reference
+* :ghissue:`21761`: [Doc]: add how to know available fonts...
+* :ghissue:`21863`: [Doc]: Remove example "prop_cycle property markevery in rcParams"
+* :ghissue:`10241`: Axes3D.view_init elevation issue between 270 and 360 degrees
+* :ghissue:`14453`: add third angle to view_init()
+* :ghissue:`20486`: Modifier key press events not recognized on MacOSX backend
+* :ghissue:`9837`: MacOS: Key modifiers deprecated
+* :ghissue:`11416`: RuntimeError: adjustable='datalim' is not allowed when both axes are shared.
+* :ghissue:`17711`: inset_locator.mark_inset() misplaces box connectors
+* :ghissue:`20854`: [Doc]: Incorrect copyright start year at the bottom of devdocs page
+* :ghissue:`21394`: [Bug]: Subplot title does not obey padding
+* :ghissue:`20998`: [Bug]: ToolManager does not respect rcParams["keymap.<any>"] set after import time
+* :ghissue:`7075`: Superscripts in axis label cut when saving .eps with bbox_inches="tight"
+* :ghissue:`21514`: [Doc]: Error message of validate_whiskers is not updated
+* :ghissue:`21532`: [Doc]: subplot_mosaic docstring should link to the tutorial
+* :ghissue:`16550`: Docs: performance discussion of tight_layout
+* :ghissue:`21378`: [ENH]: use new style format strings for colorbar ticks
+* :ghissue:`19323`: Streamplot color mapping fails on (near-)empty array.
+* :ghissue:`19559`: Axes.get_xticks() returns a numpy array but Axes.get_xticks(minor=True) returns a plain list
+* :ghissue:`21526`: [Doc]: Little Typo on Introductory Tutorial
+* :ghissue:`19195`: Rotate Markers in functions like plot, scatter, etcetera
+* :ghissue:`21364`: [Bug]: double free when FT2Font constructor is interrupted by KeyboardInterrupt
+* :ghissue:`16581`: Can't not refresh new font in running interpreter
+* :ghissue:`21162`: [ENH]: saving images in webp format
+* :ghissue:`18168`: The example of the testing decorator does not work.
+* :ghissue:`20943`: [Bug]: Deepcopy of TextPath fails
+* :ghissue:`21101`: [Bug]: Errorbars separated from markers with negative errors
+* :ghissue:`17986`: MEP22 per-backend tool registration
+* :ghissue:`4938`: Feature request: add option to disable mathtext parsing
+* :ghissue:`11435`: plt.subplot eats my subplots
diff --git a/doc/users/release_notes.rst b/doc/users/release_notes.rst
index d90756cdf9..5ec5d47114 100644
--- a/doc/users/release_notes.rst
+++ b/doc/users/release_notes.rst
@@ -7,7 +7,7 @@ Release notes
 =============

 .. include from another document so that it's easy to exclude this for releases
-.. include:: release_notes_next.rst
+.. include: release_notes_next.rst

 Version 3.6
 ===========
@@ -15,8 +15,10 @@ Version 3.6
     :maxdepth: 1

     prev_whats_new/whats_new_3.6.0.rst
+    ../api/prev_api_changes/api_changes_3.6.1.rst
     ../api/prev_api_changes/api_changes_3.6.0.rst
     github_stats.rst
+    prev_whats_new/github_stats_3.6.0.rst

 Version 3.5
 ===========
diff --git a/examples/axes_grid1/inset_locator_demo2.py b/examples/axes_grid1/inset_locator_demo2.py
index bdc0b43589..795cb9471b 100644
--- a/examples/axes_grid1/inset_locator_demo2.py
+++ b/examples/axes_grid1/inset_locator_demo2.py
@@ -1,15 +1,12 @@
 """
-====================
-Inset Locator Demo 2
-====================
+===================
+Inset Locator Demo2
+===================

 This Demo shows how to create a zoomed inset via `.zoomed_inset_axes`.
 In the first subplot an `.AnchoredSizeBar` shows the zoom effect.
 In the second subplot a connection to the region of interest is
 created via `.mark_inset`.
-
-A version of the second subplot, not using the toolkit, is available in
-:doc:`/gallery/subplots_axes_and_figures/zoom_inset_axes`.
 """

 from matplotlib import cbook
diff --git a/examples/axisartist/demo_curvelinear_grid.py b/examples/axisartist/demo_curvelinear_grid.py
index 3efe83a43c..31f6f514a6 100644
--- a/examples/axisartist/demo_curvelinear_grid.py
+++ b/examples/axisartist/demo_curvelinear_grid.py
@@ -95,6 +95,7 @@ def curvelinear_test2(fig):
     ax2 = ax1.get_aux_axes(tr)
     # note that ax2.transData == tr + ax1.transData
     # Anything you draw in ax2 will match the ticks and grids of ax1.
+    ax1.parasites.append(ax2)
     ax2.plot(np.linspace(0, 30, 51), np.linspace(10, 10, 51), linewidth=2)

     ax2.pcolor(np.linspace(0, 90, 4), np.linspace(0, 10, 4),
diff --git a/examples/axisartist/demo_floating_axes.py b/examples/axisartist/demo_floating_axes.py
index ab525ff5d4..06ec693436 100644
--- a/examples/axisartist/demo_floating_axes.py
+++ b/examples/axisartist/demo_floating_axes.py
@@ -9,8 +9,8 @@ Demonstration of features of the :mod:`.floating_axes` module:
   the plot.
 * Using `~.floating_axes.GridHelperCurveLinear` to rotate the plot and set the
   plot boundary.
-* Using `~.Figure.add_subplot` to create a subplot using the return value from
-  `~.floating_axes.GridHelperCurveLinear`.
+* Using `~.floating_axes.FloatingSubplot` to create a subplot using the return
+  value from `~.floating_axes.GridHelperCurveLinear`.
 * Making a sector plot by adding more features to
   `~.floating_axes.GridHelperCurveLinear`.
 """
diff --git a/examples/axisartist/demo_parasite_axes.py b/examples/axisartist/demo_parasite_axes.py
index e502a7a42c..0b7858f645 100644
--- a/examples/axisartist/demo_parasite_axes.py
+++ b/examples/axisartist/demo_parasite_axes.py
@@ -17,15 +17,17 @@ and :mod:`mpl_toolkits.axisartist` is found in the
 :doc:`/gallery/axisartist/demo_parasite_axes2` example.
 """

-from mpl_toolkits.axisartist.parasite_axes import HostAxes
+from mpl_toolkits.axisartist.parasite_axes import HostAxes, ParasiteAxes
 import matplotlib.pyplot as plt


 fig = plt.figure()

 host = fig.add_axes([0.15, 0.1, 0.65, 0.8], axes_class=HostAxes)
-par1 = host.get_aux_axes(viewlim_mode=None, sharex=host)
-par2 = host.get_aux_axes(viewlim_mode=None, sharex=host)
+par1 = ParasiteAxes(host, sharex=host)
+par2 = ParasiteAxes(host, sharex=host)
+host.parasites.append(par1)
+host.parasites.append(par2)

 host.axis["right"].set_visible(False)

diff --git a/examples/images_contours_and_fields/pcolormesh_grids.py b/examples/images_contours_and_fields/pcolormesh_grids.py
index 7fc75f8b6d..3b628efe58 100644
--- a/examples/images_contours_and_fields/pcolormesh_grids.py
+++ b/examples/images_contours_and_fields/pcolormesh_grids.py
@@ -54,10 +54,11 @@ _annotate(ax, x, y, "shading='flat'")
 # -----------------------------
 #
 # Often, however, data is provided where *X* and *Y* match the shape of *Z*.
-# While this makes sense for other ``shading`` types, it is not permitted
-# when ``shading='flat'``. Historically, Matplotlib silently dropped the last
-# row and column of *Z* in this case, to match Matlab's behavior. If this
-# behavior is still desired, simply drop the last row and column manually:
+# While this makes sense for other ``shading`` types, it is no longer permitted
+# when ``shading='flat'`` (and will raise a MatplotlibDeprecationWarning as of
+# Matplotlib v3.3). Historically, Matplotlib silently dropped the last row and
+# column of *Z* in this case, to match Matlab's behavior. If this behavior is
+# still desired, simply drop the last row and column manually:

 x = np.arange(ncols)  # note *not* ncols + 1 as before
 y = np.arange(nrows)
diff --git a/examples/images_contours_and_fields/pcolormesh_levels.py b/examples/images_contours_and_fields/pcolormesh_levels.py
index 5821e4fbf4..d42643f155 100644
--- a/examples/images_contours_and_fields/pcolormesh_levels.py
+++ b/examples/images_contours_and_fields/pcolormesh_levels.py
@@ -52,8 +52,9 @@ ax.pcolormesh(X, Y, Z)
 # Often a user wants to pass *X* and *Y* with the same sizes as *Z* to
 # `.axes.Axes.pcolormesh`. This is also allowed if ``shading='auto'`` is
 # passed (default set by :rc:`pcolor.shading`). Pre Matplotlib 3.3,
-# ``shading='flat'`` would drop the last column and row of *Z*, but now gives
-# an error. If this is really what you want, then simply drop the last row and
+# ``shading='flat'`` would drop the last column and row of *Z*; while that
+# is still allowed for back compatibility purposes, a DeprecationWarning is
+# raised. If this is really what you want, then simply drop the last row and
 # column of Z manually:

 x = np.arange(10)  # len = 10
diff --git a/examples/lines_bars_and_markers/bar_label_demo.py b/examples/lines_bars_and_markers/bar_label_demo.py
index 18c2b0d1bb..3ed3f79018 100644
--- a/examples/lines_bars_and_markers/bar_label_demo.py
+++ b/examples/lines_bars_and_markers/bar_label_demo.py
@@ -21,25 +21,25 @@ import numpy as np
 # Define the data

 N = 5
-coffee_means = (20, 25, -10, 32, 10)
-tea_means = (30, 13, -14, 21, 17)
-coffee_std = (3, 2, 4, 1, 2)
-tea_std = (4, 3, 2, 3, 5)
+menMeans = (20, 35, 30, 35, -27)
+womenMeans = (25, 32, 34, 20, -25)
+menStd = (2, 3, 4, 1, 2)
+womenStd = (3, 5, 2, 3, 3)
 ind = np.arange(N)    # the x locations for the groups
-width = 0.25       # the width of the bars: can also be len(x) sequence
+width = 0.35       # the width of the bars: can also be len(x) sequence

 ###############################################################################
 # Stacked bar plot with error bars

 fig, ax = plt.subplots()

-p1 = ax.bar(ind, coffee_means, width, yerr=coffee_std, label='Coffee')
-p2 = ax.bar(ind, tea_means, width,
-            bottom=coffee_means, yerr=tea_std, label='Tea')
+p1 = ax.bar(ind, menMeans, width, yerr=menStd, label='Men')
+p2 = ax.bar(ind, womenMeans, width,
+            bottom=menMeans, yerr=womenStd, label='Women')

 ax.axhline(0, color='grey', linewidth=0.8)
 ax.set_ylabel('Scores')
-ax.set_title('Scores by group and their beverage choices')
+ax.set_title('Scores by group and gender')
 ax.set_xticks(ind, labels=['G1', 'G2', 'G3', 'G4', 'G5'])
 ax.legend()

@@ -94,30 +94,6 @@ ax.set_xlim(right=16)

 plt.show()

-###############################################################################
-# Bar labels using {}-style format string
-
-fruit_names = ['Coffee', 'Salted Caramel', 'Pistachio']
-fruit_counts = [4000, 2000, 7000]
-
-fig, ax = plt.subplots()
-bar_container = ax.bar(fruit_names, fruit_counts)
-ax.set(ylabel='pints sold', title='Gelato sales by flavor', ylim=(0, 8000))
-ax.bar_label(bar_container, fmt='{:,.0f}')
-
-###############################################################################
-# Bar labels using a callable
-
-animal_names = ['Lion', 'Gazelle', 'Cheetah']
-mph_speed = [50, 60, 75]
-
-fig, ax = plt.subplots()
-bar_container = ax.bar(animal_names, mph_speed)
-ax.set(ylabel='speed in MPH', title='Running speeds', ylim=(0, 80))
-ax.bar_label(
-    bar_container, fmt=lambda x: '{:.1f} km/h'.format(x * 1.61)
-)
-
 #############################################################################
 #
 # .. admonition:: References
diff --git a/examples/lines_bars_and_markers/bar_stacked.py b/examples/lines_bars_and_markers/bar_stacked.py
index a5042abb1a..90e59f9872 100644
--- a/examples/lines_bars_and_markers/bar_stacked.py
+++ b/examples/lines_bars_and_markers/bar_stacked.py
@@ -5,7 +5,7 @@ Stacked bar chart

 This is an example of creating a stacked bar plot with error bars
 using `~matplotlib.pyplot.bar`.  Note the parameters *yerr* used for
-error bars, and *bottom* to stack the coffee's bars on top of the tea's
+error bars, and *bottom* to stack the women's bars on top of the men's
 bars.
 """

@@ -13,20 +13,20 @@ import matplotlib.pyplot as plt


 labels = ['G1', 'G2', 'G3', 'G4', 'G5']
-tea_means = [20, 35, 30, 35, 27]
-coffee_means = [25, 32, 34, 20, 25]
-tea_std = [2, 3, 4, 1, 2]
-coffee_std = [3, 5, 5, 3, 3]
-width = 0.25       # the width of the bars: can also be len(x) sequence
+men_means = [20, 35, 30, 35, 27]
+women_means = [25, 32, 34, 20, 25]
+men_std = [2, 3, 4, 1, 2]
+women_std = [3, 5, 2, 3, 3]
+width = 0.35       # the width of the bars: can also be len(x) sequence

 fig, ax = plt.subplots()

-ax.bar(labels, tea_means, width, yerr=tea_std, label='Tea')
-ax.bar(labels, coffee_means, width, yerr=coffee_std, bottom=tea_means,
-       label='Coffee')
+ax.bar(labels, men_means, width, yerr=men_std, label='Men')
+ax.bar(labels, women_means, width, yerr=women_std, bottom=men_means,
+       label='Women')

 ax.set_ylabel('Scores')
-ax.set_title('Scores by group and beverage preferences')
+ax.set_title('Scores by group and gender')
 ax.legend()

 plt.show()
diff --git a/examples/lines_bars_and_markers/barchart.py b/examples/lines_bars_and_markers/barchart.py
index 1971a50130..8e2dc9f1ed 100644
--- a/examples/lines_bars_and_markers/barchart.py
+++ b/examples/lines_bars_and_markers/barchart.py
@@ -12,19 +12,19 @@ import numpy as np


 labels = ['G1', 'G2', 'G3', 'G4', 'G5']
-tea_means = [20, 34, 31, 35, 27]
-coffee_means = [25, 32, 34, 20, 25]
+men_means = [20, 34, 30, 35, 27]
+women_means = [25, 32, 34, 20, 25]

 x = np.arange(len(labels))  # the label locations
-width = 0.25  # the width of the bars
+width = 0.35  # the width of the bars

 fig, ax = plt.subplots()
-rects1 = ax.bar(x - width/2, tea_means, width, label='Tea')
-rects2 = ax.bar(x + width/2, coffee_means, width, label='Coffee')
+rects1 = ax.bar(x - width/2, men_means, width, label='Men')
+rects2 = ax.bar(x + width/2, women_means, width, label='Women')

 # Add some text for labels, title and custom x-axis tick labels, etc.
 ax.set_ylabel('Scores')
-ax.set_title('Scores by group and beverage preferences')
+ax.set_title('Scores by group and gender')
 ax.set_xticks(x, labels)
 ax.legend()

diff --git a/examples/pie_and_polar_charts/polar_error_caps.py b/examples/pie_and_polar_charts/polar_error_caps.py
deleted file mode 100644
index 009f697346..0000000000
--- a/examples/pie_and_polar_charts/polar_error_caps.py
+++ /dev/null
@@ -1,53 +0,0 @@
-"""
-=================================
-Error bar rendering on polar axis
-=================================
-
-Demo of error bar plot in polar coordinates.
-Theta error bars are curved lines ended with caps oriented towards the
-center.
-Radius error bars are straight lines oriented towards center with
-perpendicular caps.
-"""
-import numpy as np
-import matplotlib.pyplot as plt
-
-theta = np.arange(0, 2 * np.pi, np.pi / 4)
-r = theta / np.pi / 2 + 0.5
-
-fig = plt.figure(figsize=(10, 10))
-ax = fig.add_subplot(projection='polar')
-ax.errorbar(theta, r, xerr=0.25, yerr=0.1, capsize=7, fmt="o", c="seagreen")
-ax.set_title("Pretty polar error bars")
-plt.show()
-
-#############################################################################
-# Please acknowledge that large theta error bars will be overlapping.
-# This may reduce readability of the output plot. See example figure below:
-
-fig = plt.figure(figsize=(10, 10))
-ax = fig.add_subplot(projection='polar')
-ax.errorbar(theta, r, xerr=5.25, yerr=0.1, capsize=7, fmt="o", c="darkred")
-ax.set_title("Overlapping theta error bars")
-plt.show()
-
-#############################################################################
-# On the other hand, large radius error bars will never overlap, they just
-# lead to unwanted scale in the data, reducing the displayed range.
-
-fig = plt.figure(figsize=(10, 10))
-ax = fig.add_subplot(projection='polar')
-ax.errorbar(theta, r, xerr=0.25, yerr=10.1, capsize=7, fmt="o", c="orangered")
-ax.set_title("Large radius error bars")
-plt.show()
-
-
-#############################################################################
-#
-# .. admonition:: References
-#
-#    The use of the following functions, methods, classes and modules is shown
-#    in this example:
-#
-#    - `matplotlib.axes.Axes.errorbar` / `matplotlib.pyplot.errorbar`
-#    - `matplotlib.projections.polar`
diff --git a/examples/style_sheets/style_sheets_reference.py b/examples/style_sheets/style_sheets_reference.py
index c2879e7cd9..657c73aadb 100644
--- a/examples/style_sheets/style_sheets_reference.py
+++ b/examples/style_sheets/style_sheets_reference.py
@@ -12,7 +12,6 @@ line plot and histogram,
 import numpy as np
 import matplotlib.pyplot as plt
 import matplotlib.colors as mcolors
-from matplotlib.patches import Rectangle

 # Fixing random state for reproducibility
 np.random.seed(19680801)
@@ -66,11 +65,8 @@ def plot_colored_circles(ax, prng, nb_samples=15):
     for sty_dict, j in zip(plt.rcParams['axes.prop_cycle'], range(nb_samples)):
         ax.add_patch(plt.Circle(prng.normal(scale=3, size=2),
                                 radius=1.0, color=sty_dict['color']))
-    ax.grid(visible=True)
-
-    # Add title for enabling grid
-    plt.title('ax.grid(True)', family='monospace', fontsize='small')
-
+    # Force the limits to be the same across the styles (because different
+    # styles may have different numbers of available colors).
     ax.set_xlim([-4, 8])
     ax.set_ylim([-5, 6])
     ax.set_aspect('equal', adjustable='box')  # to plot circles as circles
@@ -95,7 +91,6 @@ def plot_histograms(ax, prng, nb_samples=10000):
         values = prng.beta(a, b, size=nb_samples)
         ax.hist(values, histtype="stepfilled", bins=30,
                 alpha=0.8, density=True)
-
     # Add a small annotation.
     ax.annotate('Annotation', xy=(0.25, 4.25),
                 xytext=(0.9, 0.9), textcoords=ax.transAxes,
@@ -115,7 +110,7 @@ def plot_figure(style_label=""):
     prng = np.random.RandomState(96917002)

     fig, axs = plt.subplots(ncols=6, nrows=1, num=style_label,
-                            figsize=(14.8, 2.8), constrained_layout=True)
+                            figsize=(14.8, 2.7), constrained_layout=True)

     # make a suptitle, in the same style for all subfigures,
     # except those with dark backgrounds, which get a lighter color:
@@ -131,15 +126,10 @@ def plot_figure(style_label=""):
     plot_scatter(axs[0], prng)
     plot_image_and_patch(axs[1], prng)
     plot_bar_graphs(axs[2], prng)
-    plot_colored_lines(axs[3])
-    plot_histograms(axs[4], prng)
-    plot_colored_circles(axs[5], prng)
-
-    # add divider
-    rec = Rectangle((1 + 0.025, -2), 0.05, 16,
-                    clip_on=False, color='gray')
+    plot_colored_circles(axs[3], prng)
+    plot_colored_lines(axs[4])
+    plot_histograms(axs[5], prng)

-    axs[4].add_artist(rec)

 if __name__ == "__main__":

diff --git a/examples/units/bar_unit_demo.py b/examples/units/bar_unit_demo.py
index b64784cc5c..7b24a45315 100644
--- a/examples/units/bar_unit_demo.py
+++ b/examples/units/bar_unit_demo.py
@@ -18,21 +18,21 @@ import matplotlib.pyplot as plt


 N = 5
-tea_means = [15*cm, 10*cm, 8*cm, 12*cm, 5*cm]
-tea_std = [2*cm, 1*cm, 1*cm, 4*cm, 2*cm]
+men_means = [150*cm, 160*cm, 146*cm, 172*cm, 155*cm]
+men_std = [20*cm, 30*cm, 32*cm, 10*cm, 20*cm]

 fig, ax = plt.subplots()

 ind = np.arange(N)    # the x locations for the groups
 width = 0.35         # the width of the bars
-ax.bar(ind, tea_means, width, bottom=0*cm, yerr=tea_std, label='Tea')
+ax.bar(ind, men_means, width, bottom=0*cm, yerr=men_std, label='Men')

-coffee_means = (14*cm, 19*cm, 7*cm, 5*cm, 10*cm)
-coffee_std = (3*cm, 5*cm, 2*cm, 1*cm, 2*cm)
-ax.bar(ind + width, coffee_means, width, bottom=0*cm, yerr=coffee_std,
-       label='Coffee')
+women_means = (145*cm, 149*cm, 172*cm, 165*cm, 200*cm)
+women_std = (30*cm, 25*cm, 20*cm, 31*cm, 22*cm)
+ax.bar(ind + width, women_means, width, bottom=0*cm, yerr=women_std,
+       label='Women')

-ax.set_title('Cup height by group and beverage choice')
+ax.set_title('Scores by group and gender')
 ax.set_xticks(ind + width / 2, labels=['G1', 'G2', 'G3', 'G4', 'G5'])

 ax.legend()
diff --git a/lib/matplotlib/_mathtext.py b/lib/matplotlib/_mathtext.py
index 5cc2dc052c..44bb5a9e8f 100644
--- a/lib/matplotlib/_mathtext.py
+++ b/lib/matplotlib/_mathtext.py
@@ -475,14 +475,6 @@ class UnicodeFonts(TruetypeFonts):
     symbol can not be found in the font.
     """

-    # Some glyphs are not present in the `cmr10` font, and must be brought in
-    # from `cmsy10`. Map the Unicode indices of those glyphs to the indices at
-    # which they are found in `cmsy10`.
-    _cmr10_substitutions = {
-        0x00D7: 0x00A3,  # Multiplication sign.
-        0x2212: 0x00A1,  # Minus sign.
-    }
-
     def __init__(self, *args, **kwargs):
         # This must come first so the backend's owner is set correctly
         fallback_rc = mpl.rcParams['mathtext.fallback']
@@ -549,11 +541,11 @@ class UnicodeFonts(TruetypeFonts):
             found_symbol = False
             font = self._get_font(new_fontname)
             if font is not None:
-                if (uniindex in self._cmr10_substitutions
-                        and font.family_name == "cmr10"):
+                if font.family_name == "cmr10" and uniindex == 0x2212:
+                    # minus sign exists in cmsy10 (not cmr10)
                     font = get_font(
                         cbook._get_data_path("fonts/ttf/cmsy10.ttf"))
-                    uniindex = self._cmr10_substitutions[uniindex]
+                    uniindex = 0xa1
                 glyphindex = font.get_char_index(uniindex)
                 if glyphindex != 0:
                     found_symbol = True
diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py
index fdac0f3560..e5e34c9125 100644
--- a/lib/matplotlib/axes/_axes.py
+++ b/lib/matplotlib/axes/_axes.py
@@ -2634,11 +2634,8 @@ class Axes(_AxesBase):
             A list of label texts, that should be displayed. If not given, the
             label texts will be the data values formatted with *fmt*.

-        fmt : str or callable, default: '%g'
-            An unnamed %-style or {}-style format string for the label or a
-            function to call with the value as the first argument.
-            When *fmt* is a string and can be interpreted in both formats,
-            %-style takes precedence over {}-style.
+        fmt : str, default: '%g'
+            A format string for the label.

         label_type : {'edge', 'center'}, default: 'edge'
             The label type. Possible values:
@@ -2727,13 +2724,7 @@ class Axes(_AxesBase):
                 value = extrema

             if label_type == "center":
-                xy = (0.5, 0.5)
-                kwargs["xycoords"] = (
-                    lambda r, b=bar:
-                        mtransforms.Bbox.intersection(
-                            b.get_window_extent(r), b.get_clip_box()
-                        )
-                )
+                xy = xc, yc
             else:  # edge
                 if orientation == "vertical":
                     xy = xc, endpt
@@ -2766,14 +2757,7 @@ class Axes(_AxesBase):
             if np.isnan(dat):
                 lbl = ''

-            if lbl is None:
-                if isinstance(fmt, str):
-                    lbl = cbook._auto_format_str(fmt, value)
-                elif callable(fmt):
-                    lbl = fmt(value)
-                else:
-                    raise TypeError("fmt must be a str or callable")
-            annotation = self.annotate(lbl,
+            annotation = self.annotate(fmt % value if lbl is None else lbl,
                                        xy, xytext, textcoords="offset points",
                                        ha=ha, va=va, **kwargs)
             annotations.append(annotation)
@@ -3573,11 +3557,10 @@ class Axes(_AxesBase):
         eb_cap_style['color'] = ecolor

         barcols = []
-        caplines = {'x': [], 'y': []}
+        caplines = []

         # Vectorized fancy-indexer.
-        def apply_mask(arrays, mask):
-            return [array[mask] for array in arrays]
+        def apply_mask(arrays, mask): return [array[mask] for array in arrays]

         # dep: dependent dataset, indep: independent dataset
         for (dep_axis, dep, err, lolims, uplims, indep, lines_func,
@@ -3608,12 +3591,9 @@ class Axes(_AxesBase):
             #     return dep - elow * ~lolims, dep + ehigh * ~uplims
             # except that broadcast_to would strip units.
             low, high = dep + np.row_stack([-(1 - lolims), 1 - uplims]) * err
+
             barcols.append(lines_func(
                 *apply_mask([indep, low, high], everymask), **eb_lines_style))
-            if self.name == "polar" and dep_axis == "x":
-                for b in barcols:
-                    for p in b.get_paths():
-                        p._interpolation_steps = 2
             # Normal errorbars for points without upper/lower limits.
             nolims = ~(lolims | uplims)
             if nolims.any() and capsize > 0:
@@ -3626,7 +3606,7 @@ class Axes(_AxesBase):
                     line = mlines.Line2D(indep_masked, indep_masked,
                                          marker=marker, **eb_cap_style)
                     line.set(**{f"{dep_axis}data": lh_masked})
-                    caplines[dep_axis].append(line)
+                    caplines.append(line)
             for idx, (lims, hl) in enumerate([(lolims, high), (uplims, low)]):
                 if not lims.any():
                     continue
@@ -3640,29 +3620,15 @@ class Axes(_AxesBase):
                 line = mlines.Line2D(x_masked, y_masked,
                                      marker=hlmarker, **eb_cap_style)
                 line.set(**{f"{dep_axis}data": hl_masked})
-                caplines[dep_axis].append(line)
+                caplines.append(line)
                 if capsize > 0:
-                    caplines[dep_axis].append(mlines.Line2D(
+                    caplines.append(mlines.Line2D(
                         x_masked, y_masked, marker=marker, **eb_cap_style))
-        if self.name == 'polar':
-            for axis in caplines:
-                for l in caplines[axis]:
-                    # Rotate caps to be perpendicular to the error bars
-                    for theta, r in zip(l.get_xdata(), l.get_ydata()):
-                        rotation = mtransforms.Affine2D().rotate(theta)
-                        if axis == 'y':
-                            rotation.rotate(-np.pi / 2)
-                        ms = mmarkers.MarkerStyle(marker=marker,
-                                                  transform=rotation)
-                        self.add_line(mlines.Line2D([theta], [r], marker=ms,
-                                                    **eb_cap_style))
-        else:
-            for axis in caplines:
-                for l in caplines[axis]:
-                    self.add_line(l)
+
+        for l in caplines:
+            self.add_line(l)

         self._request_autoscale_view()
-        caplines = caplines['x'] + caplines['y']
         errorbar_container = ErrorbarContainer(
             (data_line, tuple(caplines), tuple(barcols)),
             has_xerr=(xerr is not None), has_yerr=(yerr is not None),
@@ -6225,7 +6191,7 @@ default: :rc:`scatter.edgecolors`

            - It supports only flat shading (no outlines)
            - It lacks support for log scaling of the axes.
-           - It does not have a pyplot wrapper.
+           - It does not have a have a pyplot wrapper.

         Parameters
         ----------
diff --git a/lib/matplotlib/axes/_secondary_axes.py b/lib/matplotlib/axes/_secondary_axes.py
index 5a65fee154..55aeafa391 100644
--- a/lib/matplotlib/axes/_secondary_axes.py
+++ b/lib/matplotlib/axes/_secondary_axes.py
@@ -1,5 +1,3 @@
-import numbers
-
 import numpy as np

 from matplotlib import _api, _docstring
@@ -19,7 +17,7 @@ class SecondaryAxis(_AxesBase):
         While there is no need for this to be private, it should really be
         called by those higher level functions.
         """
-        _api.check_in_list(["x", "y"], orientation=orientation)
+
         self._functions = functions
         self._parent = parent
         self._orientation = orientation
@@ -30,7 +28,7 @@ class SecondaryAxis(_AxesBase):
             self._axis = self.xaxis
             self._locstrings = ['top', 'bottom']
             self._otherstrings = ['left', 'right']
-        else:  # 'y'
+        elif self._orientation == 'y':
             super().__init__(self._parent.figure, [0, 1., 0.0001, 1], **kwargs)
             self._axis = self.yaxis
             self._locstrings = ['right', 'left']
@@ -42,7 +40,11 @@ class SecondaryAxis(_AxesBase):
         self.set_functions(functions)

         # styling:
-        otheraxis = self.yaxis if self._orientation == 'x' else self.xaxis
+        if self._orientation == 'x':
+            otheraxis = self.yaxis
+        else:
+            otheraxis = self.xaxis
+
         otheraxis.set_major_locator(mticker.NullLocator())
         otheraxis.set_ticks_position('none')

@@ -61,8 +63,8 @@ class SecondaryAxis(_AxesBase):

         Parameters
         ----------
-        align : {'top', 'bottom', 'left', 'right'}
-            Either 'top' or 'bottom' for orientation='x' or
+        align : str
+            either 'top' or 'bottom' for orientation='x' or
             'left' or 'right' for orientation='y' axis.
         """
         _api.check_in_list(self._locstrings, align=align)
@@ -90,22 +92,23 @@ class SecondaryAxis(_AxesBase):

         # This puts the rectangle into figure-relative coordinates.
         if isinstance(location, str):
-            _api.check_in_list(self._locstrings, location=location)
-            self._pos = 1. if location in ('top', 'right') else 0.
-        elif isinstance(location, numbers.Real):
-            self._pos = location
+            if location in ['top', 'right']:
+                self._pos = 1.
+            elif location in ['bottom', 'left']:
+                self._pos = 0.
+            else:
+                raise ValueError(
+                    f"location must be {self._locstrings[0]!r}, "
+                    f"{self._locstrings[1]!r}, or a float, not {location!r}")
         else:
-            raise ValueError(
-                f"location must be {self._locstrings[0]!r}, "
-                f"{self._locstrings[1]!r}, or a float, not {location!r}")
-
+            self._pos = location
         self._loc = location

         if self._orientation == 'x':
             # An x-secondary axes is like an inset axes from x = 0 to x = 1 and
             # from y = pos to y = pos + eps, in the parent's transAxes coords.
             bounds = [0, self._pos, 1., 1e-10]
-        else:  # 'y'
+        else:
             bounds = [self._pos, 0, 1e-10, 1]

         # this locator lets the axes move in the parent axes coordinates.
@@ -158,7 +161,9 @@ class SecondaryAxis(_AxesBase):
                              'and the second being the inverse')
         self._set_scale()

-    def draw(self, renderer):
+    # Should be changed to draw(self, renderer) once the deprecation of
+    # renderer=None and of inframe expires.
+    def draw(self, *args, **kwargs):
         """
         Draw the secondary axes.

@@ -170,7 +175,7 @@ class SecondaryAxis(_AxesBase):
         self._set_lims()
         # this sets the scale in case the parent has set its scale.
         self._set_scale()
-        super().draw(renderer)
+        super().draw(*args, **kwargs)

     def _set_scale(self):
         """
@@ -180,18 +185,22 @@ class SecondaryAxis(_AxesBase):
         if self._orientation == 'x':
             pscale = self._parent.xaxis.get_scale()
             set_scale = self.set_xscale
-        else:  # 'y'
+        if self._orientation == 'y':
             pscale = self._parent.yaxis.get_scale()
             set_scale = self.set_yscale
         if pscale == self._parentscale:
             return

+        if pscale == 'log':
+            defscale = 'functionlog'
+        else:
+            defscale = 'function'
+
         if self._ticks_set:
             ticks = self._axis.get_ticklocs()

         # need to invert the roles here for the ticks to line up.
-        set_scale('functionlog' if pscale == 'log' else 'function',
-                  functions=self._functions[::-1])
+        set_scale(defscale, functions=self._functions[::-1])

         # OK, set_scale sets the locators, but if we've called
         # axsecond.set_ticks, we want to keep those.
@@ -209,7 +218,7 @@ class SecondaryAxis(_AxesBase):
         if self._orientation == 'x':
             lims = self._parent.get_xlim()
             set_lim = self.set_xlim
-        else:  # 'y'
+        if self._orientation == 'y':
             lims = self._parent.get_ylim()
             set_lim = self.set_ylim
         order = lims[0] < lims[1]
@@ -240,7 +249,7 @@ class SecondaryAxis(_AxesBase):
             self.spines.bottom.set_color(color)
             self.spines.top.set_color(color)
             self.xaxis.label.set_color(color)
-        else:  # 'y'
+        else:
             self.tick_params(axis='y', colors=color)
             self.spines.left.set_color(color)
             self.spines.right.set_color(color)
diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py
index 2f5dd6dcc0..66279bf1bc 100644
--- a/lib/matplotlib/axis.py
+++ b/lib/matplotlib/axis.py
@@ -871,11 +871,8 @@ class Axis(martist.Artist):
         - units
         - registered callbacks
         """
-        self.label._reset_visual_defaults()
-        self.offsetText._reset_visual_defaults()
-        self.labelpad = mpl.rcParams['axes.labelpad']

-        self._init()
+        self.label.set_text('')  # self.set_label_text would change isDefault_

         self._set_scale('linear')

@@ -2191,13 +2188,6 @@ class XAxis(Axis):

     def __init__(self, *args, **kwargs):
         super().__init__(*args, **kwargs)
-        self._init()
-
-    def _init(self):
-        """
-        Initialize the label and offsetText instance values and
-        `label_position` / `offset_text_position`.
-        """
         # x in axes coords, y in display coords (to be updated at draw time by
         # _update_label_positions and _update_offset_text_position).
         self.label.set(
@@ -2207,7 +2197,6 @@ class XAxis(Axis):
                 self.axes.transAxes, mtransforms.IdentityTransform()),
         )
         self.label_position = 'bottom'
-
         self.offsetText.set(
             x=1, y=0,
             verticalalignment='top', horizontalalignment='right',
@@ -2450,13 +2439,6 @@ class YAxis(Axis):

     def __init__(self, *args, **kwargs):
         super().__init__(*args, **kwargs)
-        self._init()
-
-    def _init(self):
-        """
-        Initialize the label and offsetText instance values and
-        `label_position` / `offset_text_position`.
-        """
         # x in display coords, y in axes coords (to be updated at draw time by
         # _update_label_positions and _update_offset_text_position).
         self.label.set(
diff --git a/lib/matplotlib/backend_bases.py b/lib/matplotlib/backend_bases.py
index db5f0f4309..bb17950b03 100644
--- a/lib/matplotlib/backend_bases.py
+++ b/lib/matplotlib/backend_bases.py
@@ -158,7 +158,7 @@ class RendererBase:

     * `draw_path`
     * `draw_image`
-    * `draw_gouraud_triangles`
+    * `draw_gouraud_triangle`

     The following methods *should* be implemented in the backend for
     optimization reasons:
@@ -286,7 +286,6 @@ class RendererBase:
             gc, master_transform, paths, [], offsets, offsetTrans, facecolors,
             edgecolors, linewidths, [], [antialiased], [None], 'screen')

-    @_api.deprecated("3.7", alternative="draw_gouraud_triangles")
     def draw_gouraud_triangle(self, gc, points, colors, transform):
         """
         Draw a Gouraud-shaded triangle.
@@ -318,7 +317,9 @@ class RendererBase:
         transform : `matplotlib.transforms.Transform`
             An affine transform to apply to the points.
         """
-        raise NotImplementedError
+        transform = transform.frozen()
+        for tri, col in zip(triangles_array, colors_array):
+            self.draw_gouraud_triangle(gc, tri, col, transform)

     def _iter_collection_raw_paths(self, master_transform, paths,
                                    all_transforms):
@@ -524,8 +525,6 @@ class RendererBase:
             The font properties.
         angle : float
             The rotation angle in degrees anti-clockwise.
-        ismath : bool or "TeX"
-            If True, use mathtext parser. If "TeX", use *usetex* mode.
         mtext : `matplotlib.text.Text`
             The original text object to be rendered.

diff --git a/lib/matplotlib/backends/backend_svg.py b/lib/matplotlib/backends/backend_svg.py
index 9d714739c0..738fe44c6f 100644
--- a/lib/matplotlib/backends/backend_svg.py
+++ b/lib/matplotlib/backends/backend_svg.py
@@ -801,9 +801,7 @@ class RendererSVG(RendererBase):

     def draw_gouraud_triangle(self, gc, points, colors, trans):
         # docstring inherited
-        self._draw_gouraud_triangle(gc, points, colors, trans)

-    def _draw_gouraud_triangle(self, gc, points, colors, trans):
         # This uses a method described here:
         #
         #   http://www.svgopen.org/2005/papers/Converting3DFaceToSVG/index.html
@@ -938,7 +936,7 @@ class RendererSVG(RendererBase):
         self.writer.start('g', **self._get_clip_attrs(gc))
         transform = transform.frozen()
         for tri, col in zip(triangles_array, colors_array):
-            self._draw_gouraud_triangle(gc, tri, col, transform)
+            self.draw_gouraud_triangle(gc, tri, col, transform)
         self.writer.end('g')

     def option_scale_image(self):
@@ -1154,31 +1152,47 @@ class RendererSVG(RendererBase):
             if weight != 400:
                 font_parts.append(f'{weight}')

-            def _normalize_sans(name):
-                return 'sans-serif' if name in ['sans', 'sans serif'] else name
-
-            def _expand_family_entry(fn):
-                fn = _normalize_sans(fn)
-                # prepend generic font families with all configured font names
+            def _format_font_name(fn):
+                normalize_names = {
+                    'sans': 'sans-serif',
+                    'sans serif': 'sans-serif'
+                }
+                # A generic font family.  We need to do two things:
+                #  1. list all of the configured fonts with quoted names
+                #  2. append the generic name unquoted
                 if fn in fm.font_family_aliases:
+                    # fix spelling of sans-serif
+                    # we accept 3 ways CSS only supports 1
+                    fn = normalize_names.get(fn, fn)
                     # get all of the font names and fix spelling of sans-serif
-                    # (we accept 3 ways CSS only supports 1)
-                    for name in fm.FontManager._expand_aliases(fn):
-                        yield _normalize_sans(name)
-                # whether a generic name or a family name, it must appear at
-                # least once
-                yield fn
-
-            def _get_all_quoted_names(prop):
-                # only quote specific names, not generic names
-                return [name if name in fm.font_family_aliases else repr(name)
-                        for entry in prop.get_family()
-                        for name in _expand_family_entry(entry)]
+                    # if it comes back
+                    aliases = [
+                        normalize_names.get(_, _) for _ in
+                        fm.FontManager._expand_aliases(fn)
+                    ]
+                    # make sure the generic name appears at least once
+                    # duplicate is OK, next layer will deduplicate
+                    aliases.append(fn)
+
+                    for a in aliases:
+                        # generic font families must not be quoted
+                        if a in fm.font_family_aliases:
+                            yield a
+                        # specific font families must be quoted
+                        else:
+                            yield repr(a)
+                # specific font families must be quoted
+                else:
+                    yield repr(fn)
+
+            def _get_all_names(prop):
+                for f in prop.get_family():
+                    yield from _format_font_name(f)

             font_parts.extend([
                 f'{_short_float_fmt(prop.get_size())}px',
-                # ensure expansion, quoting, and dedupe of font names
-                ", ".join(dict.fromkeys(_get_all_quoted_names(prop)))
+                # ensure quoting and expansion of font names
+                ", ".join(dict.fromkeys(_get_all_names(prop)))
             ])
             style['font'] = ' '.join(font_parts)
             if prop.get_stretch() != 'normal':
diff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py
index 34c6ddb861..e497e8e8e1 100644
--- a/lib/matplotlib/cbook/__init__.py
+++ b/lib/matplotlib/cbook/__init__.py
@@ -1746,7 +1746,7 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):
         raise RuntimeError("matplotlib does not "
                            "support generators as input")
     else:
-        return next(val for val in obj if safe_isfinite(val))
+        return next((val for val in obj if safe_isfinite(val)), np.nan)


 def sanitize_sequence(data):
@@ -2336,30 +2336,3 @@ def _unpack_to_numpy(x):
         if isinstance(xtmp, np.ndarray):
             return xtmp
     return x
-
-
-def _auto_format_str(fmt, value):
-    """
-    Apply *value* to the format string *fmt*.
-
-    This works both with unnamed %-style formatting and
-    unnamed {}-style formatting. %-style formatting has priority.
-    If *fmt* is %-style formattable that will be used. Otherwise,
-    {}-formatting is applied. Strings without formatting placeholders
-    are passed through as is.
-
-    Examples
-    --------
-    >>> _auto_format_str('%.2f m', 0.2)
-    '0.20 m'
-    >>> _auto_format_str('{} m', 0.2)
-    '0.2 m'
-    >>> _auto_format_str('const', 0.2)
-    'const'
-    >>> _auto_format_str('%d or {}', 0.2)
-    '0 or {}'
-    """
-    try:
-        return fmt % (value,)
-    except (TypeError, ValueError):
-        return fmt.format(value)
diff --git a/lib/matplotlib/collections.py b/lib/matplotlib/collections.py
index 8aba85a67e..cef043e79d 100644
--- a/lib/matplotlib/collections.py
+++ b/lib/matplotlib/collections.py
@@ -2097,7 +2097,7 @@ class QuadMesh(Collection):
         """
         Convert a given mesh into a sequence of triangles, each point
         with its own color.  The result can be used to construct a call to
-        `~.RendererBase.draw_gouraud_triangles`.
+        `~.RendererBase.draw_gouraud_triangle`.
         """
         if isinstance(coordinates, np.ma.MaskedArray):
             p = coordinates.data
diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py
index 996949098f..2983e3fa51 100644
--- a/lib/matplotlib/colorbar.py
+++ b/lib/matplotlib/colorbar.py
@@ -923,7 +923,7 @@ class Colorbar:
             of locations.

         update_ticks : bool, default: True
-            This keyword argument is ignored and will be removed.
+            This keyword argument is ignored and will be be removed.
             Deprecated

          minor : bool
diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py
index d6a46780c0..6aab5222b7 100644
--- a/lib/matplotlib/contour.py
+++ b/lib/matplotlib/contour.py
@@ -11,13 +11,13 @@ from numpy import ma
 import matplotlib as mpl
 from matplotlib import _api, _docstring
 from matplotlib.backend_bases import MouseButton
-from matplotlib.text import Text
 import matplotlib.path as mpath
 import matplotlib.ticker as ticker
 import matplotlib.cm as cm
 import matplotlib.colors as mcolors
 import matplotlib.collections as mcoll
 import matplotlib.font_manager as font_manager
+import matplotlib.text as text
 import matplotlib.cbook as cbook
 import matplotlib.patches as mpatches
 import matplotlib.transforms as mtransforms
@@ -31,8 +31,7 @@ import matplotlib.transforms as mtransforms
 # per level.


-@_api.deprecated("3.7", alternative="Text.set_transform_rotates_text")
-class ClabelText(Text):
+class ClabelText(text.Text):
     """
     Unlike the ordinary text, the get_rotation returns an updated
     angle in the pixel coordinate assuming that the input rotation is
@@ -151,8 +150,10 @@ class ContourLabeler:
             or minus 90 degrees from level.

         use_clabeltext : bool, default: False
-            If ``True``, use `.Text.set_transform_rotates_text` to ensure that
-            label rotation is updated whenever the axes aspect changes.
+            If ``True``, `.ClabelText` class (instead of `.Text`) is used to
+            create labels. `ClabelText` recalculates rotation angles
+            of texts during the drawing time, therefore this can be used if
+            aspect of the axes changes.

         zorder : float or None, default: ``(2 + contour.get_zorder())``
             zorder of the contour labels.
@@ -252,10 +253,11 @@ class ContourLabeler:
         fig = self.axes.figure
         renderer = fig._get_renderer()
         return (
-            Text(0, 0, self.get_text(self.labelLevelList[nth], self.labelFmt),
-                 figure=fig,
-                 size=self.labelFontSizeList[nth],
-                 fontproperties=self.labelFontProps)
+            text.Text(0, 0,
+                      self.get_text(self.labelLevelList[nth], self.labelFmt),
+                      figure=fig,
+                      size=self.labelFontSizeList[nth],
+                      fontproperties=self.labelFontProps)
             .get_window_extent(renderer).width)

     @_api.deprecated("3.5")
@@ -265,13 +267,12 @@ class ContourLabeler:
             lev = self.get_text(lev, fmt)
         fig = self.axes.figure
         renderer = fig._get_renderer()
-        width = (Text(0, 0, lev, figure=fig,
-                      size=fsize, fontproperties=self.labelFontProps)
+        width = (text.Text(0, 0, lev, figure=fig,
+                           size=fsize, fontproperties=self.labelFontProps)
                  .get_window_extent(renderer).width)
         width *= 72 / fig.dpi
         return width

-    @_api.deprecated("3.7", alternative="Artist.set")
     def set_label_props(self, label, text, color):
         """Set the label properties - color, fontsize, text."""
         label.set_text(text)
@@ -416,32 +417,57 @@ class ContourLabeler:

         return rotation, nlc

-    def add_label(self, x, y, rotation, lev, cvalue):
-        """Add contour label without `.Text.set_transform_rotates_text`."""
-        data_x, data_y = self.axes.transData.inverted().transform((x, y))
-        t = Text(
-            data_x, data_y,
-            text=self.get_text(lev, self.labelFmt),
-            rotation=rotation,
-            horizontalalignment='center', verticalalignment='center',
-            zorder=self._clabel_zorder,
-            color=self.labelMappable.to_rgba(cvalue, alpha=self.alpha),
-            fontproperties=self.labelFontProps,
-            clip_box=self.axes.bbox)
+    def _get_label_text(self, x, y, rotation):
+        dx, dy = self.axes.transData.inverted().transform((x, y))
+        t = text.Text(dx, dy, rotation=rotation,
+                      horizontalalignment='center',
+                      verticalalignment='center', zorder=self._clabel_zorder)
+        return t
+
+    def _get_label_clabeltext(self, x, y, rotation):
+        # x, y, rotation is given in pixel coordinate. Convert them to
+        # the data coordinate and create a label using ClabelText
+        # class. This way, the rotation of the clabel is along the
+        # contour line always.
+        transDataInv = self.axes.transData.inverted()
+        dx, dy = transDataInv.transform((x, y))
+        drotation = transDataInv.transform_angles(np.array([rotation]),
+                                                  np.array([[x, y]]))
+        t = ClabelText(dx, dy, rotation=drotation[0],
+                       horizontalalignment='center',
+                       verticalalignment='center', zorder=self._clabel_zorder)
+
+        return t
+
+    def _add_label(self, t, x, y, lev, cvalue):
+        color = self.labelMappable.to_rgba(cvalue, alpha=self.alpha)
+
+        _text = self.get_text(lev, self.labelFmt)
+        self.set_label_props(t, _text, color)
         self.labelTexts.append(t)
         self.labelCValues.append(cvalue)
         self.labelXYs.append((x, y))
+
         # Add label to plot here - useful for manual mode label selection
         self.axes.add_artist(t)

+    def add_label(self, x, y, rotation, lev, cvalue):
+        """
+        Add contour label using :class:`~matplotlib.text.Text` class.
+        """
+        t = self._get_label_text(x, y, rotation)
+        self._add_label(t, x, y, lev, cvalue)
+
     def add_label_clabeltext(self, x, y, rotation, lev, cvalue):
-        """Add contour label with `.Text.set_transform_rotates_text`."""
-        self.add_label(x, y, rotation, lev, cvalue)
-        # Grab the last added text, and reconfigure its rotation.
-        t = self.labelTexts[-1]
-        data_rotation, = self.axes.transData.inverted().transform_angles(
-            [rotation], [[x, y]])
-        t.set(rotation=data_rotation, transform_rotates_text=True)
+        """
+        Add contour label using :class:`ClabelText` class.
+        """
+        # x, y, rotation is given in pixel coordinate. Convert them to
+        # the data coordinate and create a label using ClabelText
+        # class. This way, the rotation of the clabel is along the
+        # contour line always.
+        t = self._get_label_clabeltext(x, y, rotation)
+        self._add_label(t, x, y, lev, cvalue)

     def add_label_near(self, x, y, inline=True, inline_spacing=5,
                        transform=None):
@@ -559,10 +585,6 @@ class ContourLabeler:
             if inline:
                 paths[:] = additions

-    def remove(self):
-        for text in self.labelTexts:
-            text.remove()
-

 def _is_closed_polygon(X):
     """
@@ -1367,11 +1389,6 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):

         return (conmin, segmin, imin, xmin, ymin, d2min)

-    def remove(self):
-        super().remove()
-        for coll in self.collections:
-            coll.remove()
-

 @_docstring.dedent_interpd
 class QuadContourSet(ContourSet):
@@ -1583,7 +1600,7 @@ levels : int or array-like, optional

     If an int *n*, use `~matplotlib.ticker.MaxNLocator`, which tries
     to automatically choose no more than *n+1* "nice" contour levels
-    between minimum and maximum numeric values of *Z*.
+    between *vmin* and *vmax*.

     If array-like, draw contour lines at the specified levels.
     The values must be in increasing order.
diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py
index 97803c4007..672ea2c3b0 100644
--- a/lib/matplotlib/dates.py
+++ b/lib/matplotlib/dates.py
@@ -187,9 +187,10 @@ import matplotlib as mpl
 from matplotlib import _api, cbook, ticker, units

 __all__ = ('datestr2num', 'date2num', 'num2date', 'num2timedelta', 'drange',
-           'set_epoch', 'get_epoch', 'DateFormatter', 'ConciseDateFormatter',
-           'AutoDateFormatter', 'DateLocator', 'RRuleLocator',
-           'AutoDateLocator', 'YearLocator', 'MonthLocator', 'WeekdayLocator',
+           'epoch2num', 'num2epoch', 'set_epoch', 'get_epoch', 'DateFormatter',
+           'ConciseDateFormatter', 'AutoDateFormatter',
+           'DateLocator', 'RRuleLocator', 'AutoDateLocator', 'YearLocator',
+           'MonthLocator', 'WeekdayLocator',
            'DayLocator', 'HourLocator', 'MinuteLocator',
            'SecondLocator', 'MicrosecondLocator',
            'rrule', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU',
@@ -1736,6 +1737,16 @@ class MicrosecondLocator(DateLocator):
         self._wrapped_locator.set_axis(axis)
         return super().set_axis(axis)

+    @_api.deprecated("3.5", alternative="`.Axis.set_view_interval`")
+    def set_view_interval(self, vmin, vmax):
+        self._wrapped_locator.set_view_interval(vmin, vmax)
+        return super().set_view_interval(vmin, vmax)
+
+    @_api.deprecated("3.5", alternative="`.Axis.set_data_interval`")
+    def set_data_interval(self, vmin, vmax):
+        self._wrapped_locator.set_data_interval(vmin, vmax)
+        return super().set_data_interval(vmin, vmax)
+
     def __call__(self):
         # if no data have been set, this will tank with a ValueError
         try:
@@ -1767,6 +1778,52 @@ class MicrosecondLocator(DateLocator):
         return self._interval


+@_api.deprecated(
+    "3.5",
+    alternative="``[date2num(datetime.utcfromtimestamp(t)) for t in e]`` or "
+                "numpy.datetime64 types")
+def epoch2num(e):
+    """
+    Convert UNIX time to days since Matplotlib epoch.
+
+    Parameters
+    ----------
+    e : list of floats
+        Time in seconds since 1970-01-01.
+
+    Returns
+    -------
+    `numpy.array`
+        Time in days since Matplotlib epoch (see `~.dates.get_epoch()`).
+    """
+
+    dt = (np.datetime64('1970-01-01T00:00:00', 's') -
+          np.datetime64(get_epoch(), 's')).astype(float)
+
+    return (dt + np.asarray(e)) / SEC_PER_DAY
+
+
+@_api.deprecated("3.5", alternative="`num2date(e).timestamp()<.num2date>`")
+def num2epoch(d):
+    """
+    Convert days since Matplotlib epoch to UNIX time.
+
+    Parameters
+    ----------
+    d : list of floats
+        Time in days since Matplotlib epoch (see `~.dates.get_epoch()`).
+
+    Returns
+    -------
+    `numpy.array`
+        Time in seconds since 1970-01-01.
+    """
+    dt = (np.datetime64('1970-01-01T00:00:00', 's') -
+          np.datetime64(get_epoch(), 's')).astype(float)
+
+    return np.asarray(d) * SEC_PER_DAY - dt
+
+
 @_api.deprecated("3.6", alternative="`AutoDateLocator` and `AutoDateFormatter`"
                  " or vendor the code")
 def date_ticker_factory(span, tz=None, numticks=5):
diff --git a/lib/matplotlib/hatch.py b/lib/matplotlib/hatch.py
index 396baa55db..9c836cbf3c 100644
--- a/lib/matplotlib/hatch.py
+++ b/lib/matplotlib/hatch.py
@@ -188,7 +188,7 @@ def _validate_hatch_pattern(hatch):
             invalids = ''.join(sorted(invalids))
             _api.warn_deprecated(
                 '3.4',
-                removal='3.8',  # one release after custom hatches (#20690)
+                removal='3.7',  # one release after custom hatches (#20690)
                 message=f'hatch must consist of a string of "{valid}" or '
                         'None, but found the following invalid values '
                         f'"{invalids}". Passing invalid values is deprecated '
diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py
index 20d4a76e0d..9e5b903d59 100644
--- a/lib/matplotlib/legend.py
+++ b/lib/matplotlib/legend.py
@@ -286,9 +286,6 @@ handler_map : dict or None
     The custom dictionary mapping instances or types to a legend
     handler. This *handler_map* updates the default handler map
     found at `matplotlib.legend.Legend.get_legend_handler_map`.
-
-draggable : bool, default: False
-    Whether the legend can be dragged with the mouse.
 """)


@@ -345,8 +342,7 @@ class Legend(Artist):
         title_fontproperties=None,  # properties for the legend title
         alignment="center",       # control the alignment within the legend box
         *,
-        ncol=1,  # synonym for ncols (backward compatibility)
-        draggable=False  # whether the legend can be dragged with the mouse
+        ncol=1  # synonym for ncols (backward compatibility)
     ):
         """
         Parameters
@@ -541,9 +537,7 @@ class Legend(Artist):
             title_prop_fp.set_size(title_fontsize)

         self.set_title(title, prop=title_prop_fp)
-
         self._draggable = None
-        self.set_draggable(state=draggable)

         # set the text color

diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py
index 89bd3550f3..b583e320c7 100644
--- a/lib/matplotlib/offsetbox.py
+++ b/lib/matplotlib/offsetbox.py
@@ -350,12 +350,8 @@ class OffsetBox(martist.Artist):
         # docstring inherited
         if renderer is None:
             renderer = self.figure._get_renderer()
-        w, h, xd, yd = self.get_extent(renderer)
-        # Some subclasses redefine get_offset to take no args.
-        try:
-            px, py = self.get_offset(w, h, xd, yd, renderer)
-        except TypeError:
-            px, py = self.get_offset()
+        w, h, xd, yd, offsets = self.get_extent_offsets(renderer)
+        px, py = self.get_offset(w, h, xd, yd, renderer)
         return mtransforms.Bbox.from_bounds(px - xd, py - yd, w, h)

     def draw(self, renderer):
@@ -640,6 +636,15 @@ class DrawingArea(OffsetBox):
         """Return offset of the container."""
         return self._offset

+    def get_window_extent(self, renderer=None):
+        # docstring inherited
+        if renderer is None:
+            renderer = self.figure._get_renderer()
+        w, h, xd, yd = self.get_extent(renderer)
+        ox, oy = self.get_offset()  # w, h, xd, yd)
+
+        return mtransforms.Bbox.from_bounds(ox - xd, oy - yd, w, h)
+
     def get_extent(self, renderer):
         """Return width, height, xdescent, ydescent of box."""
         dpi_cor = renderer.points_to_pixels(1.)
@@ -768,6 +773,14 @@ class TextArea(OffsetBox):
         """Return offset of the container."""
         return self._offset

+    def get_window_extent(self, renderer=None):
+        # docstring inherited
+        if renderer is None:
+            renderer = self.figure._get_renderer()
+        w, h, xd, yd = self.get_extent(renderer)
+        ox, oy = self.get_offset()
+        return mtransforms.Bbox.from_bounds(ox - xd, oy - yd, w, h)
+
     def get_extent(self, renderer):
         _, h_, d_ = renderer.get_text_width_height_descent(
             "lp", self._text._fontproperties,
@@ -863,6 +876,14 @@ class AuxTransformBox(OffsetBox):
         """Return offset of the container."""
         return self._offset

+    def get_window_extent(self, renderer=None):
+        # docstring inherited
+        if renderer is None:
+            renderer = self.figure._get_renderer()
+        w, h, xd, yd = self.get_extent(renderer)
+        ox, oy = self.get_offset()  # w, h, xd, yd)
+        return mtransforms.Bbox.from_bounds(ox - xd, oy - yd, w, h)
+
     def get_extent(self, renderer):
         # clear the offset transforms
         _off = self.offset_transform.get_matrix()  # to be restored later
@@ -1040,14 +1061,34 @@ class AnchoredOffsetbox(OffsetBox):
         self._bbox_to_anchor_transform = transform
         self.stale = True

-    def get_offset(self, width, height, xdescent, ydescent, renderer):
+    def get_window_extent(self, renderer=None):
         # docstring inherited
-        bbox = Bbox.from_bounds(0, 0, width, height)
-        pad = (self.borderpad
-               * renderer.points_to_pixels(self.prop.get_size_in_points()))
-        bbox_to_anchor = self.get_bbox_to_anchor()
-        x0, y0 = _get_anchored_bbox(self.loc, bbox, bbox_to_anchor, pad)
-        return x0 + xdescent, y0 + ydescent
+        if renderer is None:
+            renderer = self.figure._get_renderer()
+
+        self._update_offset_func(renderer)
+        w, h, xd, yd = self.get_extent(renderer)
+        ox, oy = self.get_offset(w, h, xd, yd, renderer)
+        return Bbox.from_bounds(ox - xd, oy - yd, w, h)
+
+    def _update_offset_func(self, renderer, fontsize=None):
+        """
+        Update the offset func which depends on the dpi of the
+        renderer (because of the padding).
+        """
+        if fontsize is None:
+            fontsize = renderer.points_to_pixels(
+                self.prop.get_size_in_points())
+
+        def _offset(w, h, xd, yd, renderer):
+            bbox = Bbox.from_bounds(0, 0, w, h)
+            borderpad = self.borderpad * fontsize
+            bbox_to_anchor = self.get_bbox_to_anchor()
+            x0, y0 = _get_anchored_bbox(
+                self.loc, bbox, bbox_to_anchor, borderpad)
+            return x0 + xd, y0 + yd
+
+        self.set_offset(_offset)

     def update_frame(self, bbox, fontsize=None):
         self.patch.set_bounds(bbox.bounds)
@@ -1059,9 +1100,11 @@ class AnchoredOffsetbox(OffsetBox):
         if not self.get_visible():
             return

+        fontsize = renderer.points_to_pixels(self.prop.get_size_in_points())
+        self._update_offset_func(renderer, fontsize)
+
         # update the location and size of the legend
         bbox = self.get_window_extent(renderer)
-        fontsize = renderer.points_to_pixels(self.prop.get_size_in_points())
         self.update_frame(bbox, fontsize)
         self.patch.draw(renderer)

@@ -1187,6 +1230,14 @@ class OffsetImage(OffsetBox):
     def get_children(self):
         return [self.image]

+    def get_window_extent(self, renderer=None):
+        # docstring inherited
+        if renderer is None:
+            renderer = self.figure._get_renderer()
+        w, h, xd, yd = self.get_extent(renderer)
+        ox, oy = self.get_offset()
+        return mtransforms.Bbox.from_bounds(ox - xd, oy - yd, w, h)
+
     def get_extent(self, renderer):
         if self._dpi_cor:  # True, do correction
             dpi_cor = renderer.points_to_pixels(1.)
diff --git a/lib/matplotlib/pylab.py b/lib/matplotlib/pylab.py
index 289aa9050e..a9e30cfcd1 100644
--- a/lib/matplotlib/pylab.py
+++ b/lib/matplotlib/pylab.py
@@ -16,7 +16,8 @@ from matplotlib.cbook import flatten, silent_list
 import matplotlib as mpl

 from matplotlib.dates import (
-    date2num, num2date, datestr2num, drange, DateFormatter, DateLocator,
+    date2num, num2date, datestr2num, drange, epoch2num,
+    num2epoch, DateFormatter, DateLocator,
     RRuleLocator, YearLocator, MonthLocator, WeekdayLocator, DayLocator,
     HourLocator, MinuteLocator, SecondLocator, rrule, MO, TU, WE, TH, FR,
     SA, SU, YEARLY, MONTHLY, WEEKLY, DAILY, HOURLY, MINUTELY, SECONDLY,
diff --git a/lib/matplotlib/testing/decorators.py b/lib/matplotlib/testing/decorators.py
index b74ea4d5c4..46dfcf992b 100644
--- a/lib/matplotlib/testing/decorators.py
+++ b/lib/matplotlib/testing/decorators.py
@@ -264,12 +264,7 @@ def _pytest_image_comparison(baseline_images, extensions, tol,
                 kwargs['request'] = request

             if extension not in comparable_formats():
-                reason = {
-                    'pdf': 'because Ghostscript is not installed',
-                    'eps': 'because Ghostscript is not installed',
-                    'svg': 'because Inkscape is not installed',
-                }.get(extension, 'on this system')
-                pytest.skip(f"Cannot compare {extension} files {reason}")
+                pytest.skip(f"Cannot compare {extension} files on this system")

             img = _ImageComparisonBase(func, tol=tol, remove_text=remove_text,
                                        savefig_kwargs=savefig_kwargs)
diff --git a/lib/matplotlib/tests/baseline_images/test_axes/mixed_errorbar_polar_caps.png b/lib/matplotlib/tests/baseline_images/test_axes/mixed_errorbar_polar_caps.png
deleted file mode 100644
index bbe879779d..0000000000
Binary files a/lib/matplotlib/tests/baseline_images/test_axes/mixed_errorbar_polar_caps.png and /dev/null differ
diff --git a/lib/matplotlib/tests/baseline_images/test_axes/test_centered_bar_label_nonlinear.svg b/lib/matplotlib/tests/baseline_images/test_axes/test_centered_bar_label_nonlinear.svg
deleted file mode 100644
index cea1050932..0000000000
Binary files a/lib/matplotlib/tests/baseline_images/test_axes/test_centered_bar_label_nonlinear.svg and /dev/null differ
diff --git a/lib/matplotlib/tests/baseline_images/test_backend_ps/scatter.eps b/lib/matplotlib/tests/baseline_images/test_backend_ps/scatter.eps
deleted file mode 100644
index b21ff4234a..0000000000
--- a/lib/matplotlib/tests/baseline_images/test_backend_ps/scatter.eps
+++ /dev/null
@@ -1,306 +0,0 @@
-%!PS-Adobe-3.0 EPSF-3.0
-%%Title: scatter.eps
-%%Creator: Matplotlib v3.6.0.dev2701+g27bf604984.d20220719, https://matplotlib.org/
-%%CreationDate: Tue Jul 19 12:36:23 2022
-%%Orientation: portrait
-%%BoundingBox: 18 180 594 612
-%%HiResBoundingBox: 18.000000 180.000000 594.000000 612.000000
-%%EndComments
-%%BeginProlog
-/mpldict 10 dict def
-mpldict begin
-/_d { bind def } bind def
-/m { moveto } _d
-/l { lineto } _d
-/r { rlineto } _d
-/c { curveto } _d
-/cl { closepath } _d
-/ce { closepath eofill } _d
-/box {
-      m
-      1 index 0 r
-      0 exch r
-      neg 0 r
-      cl
-    } _d
-/clipbox {
-      box
-      clip
-      newpath
-    } _d
-/sc { setcachedevice } _d
-end
-%%EndProlog
-mpldict begin
-18 180 translate
-576 432 0 0 clipbox
-gsave
-0 0 m
-576 0 l
-576 432 l
-0 432 l
-cl
-1.000 setgray
-fill
-grestore
-/p0_0 {
-newpath
-translate
-72 141.529351 m
-17.327389 80.435325 l
-126.672611 80.435325 l
-cl
-
-} bind def
-/p0_1 {
-newpath
-translate
-72 158.4 m
--17.28 100.8 l
-72 43.2 l
-161.28 100.8 l
-cl
-
-} bind def
-/p0_2 {
-newpath
-translate
-72 141.529351 m
-11.959333 113.386062 l
-34.892827 67.849263 l
-109.107173 67.849263 l
-132.040667 113.386062 l
-cl
-
-} bind def
-/p0_3 {
-newpath
-translate
-72 158.4 m
--5.318748 129.6 l
--5.318748 72 l
-72 43.2 l
-149.318748 72 l
-149.318748 129.6 l
-cl
-
-} bind def
-1.000 setlinewidth
-1 setlinejoin
-0 setlinecap
-[] 0 setdash
-0.000 setgray
-gsave
-446.4 345.6 72 43.2 clipbox
-96.7145 132.649 p0_0
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-166.544 15.5782 p0_1
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-149.874 179.799 p0_2
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-34.7409 104.813 p0_3
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-145.839 37.968 p0_0
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-147.462 82.9425 p0_1
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-147.29 120.393 p0_2
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-151.565 52.8617 p0_3
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-165.375 85.5808 p0_0
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-12.8578 119.079 p0_1
-gsave
-1.000 1.000 0.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-0.900 0.200 0.100 setrgbcolor
-gsave
-446.4 345.6 72 43.2 clipbox
-326.215567 311.071597 m
-334.595085 306.881838 l
-334.595085 315.261356 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-184.274432 293.965646 m
-190.679432 290.763146 l
-190.679432 297.168146 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-276.081223 354.823805 m
-283.311607 351.208613 l
-283.311607 358.438997 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-411.593191 219.187935 m
-420.363106 214.802977 l
-420.363106 223.572893 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-141.383198 139.751386 m
-149.294063 135.795953 l
-149.294063 143.706818 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-154.058079 131.129187 m
-160.028366 128.144043 l
-160.028366 134.114331 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-247.767539 370.319257 m
-255.714503 366.345775 l
-255.714503 374.292739 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-410.16817 374.136435 m
-419.852735 369.294152 l
-419.852735 378.978717 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-450.836918 106.524611 m
-457.983473 102.951334 l
-457.983473 110.097888 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-gsave
-446.4 345.6 72 43.2 clipbox
-397.084416 298.708741 m
-402.739273 295.881312 l
-402.739273 301.53617 l
-cl
-gsave
-0.000 0.000 1.000 setrgbcolor
-fill
-grestore
-stroke
-grestore
-
-end
-showpage
diff --git a/lib/matplotlib/tests/test_axes.py b/lib/matplotlib/tests/test_axes.py
index 9fb95cbd68..d6d44bcdb2 100644
--- a/lib/matplotlib/tests/test_axes.py
+++ b/lib/matplotlib/tests/test_axes.py
@@ -896,14 +896,18 @@ def test_hexbin_extent():
     ax.hexbin("x", "y", extent=[.1, .3, .6, .7], data=data)


-@image_comparison(['hexbin_empty.png', 'hexbin_empty.png'], remove_text=True)
+@image_comparison(['hexbin_empty.png'], remove_text=True)
 def test_hexbin_empty():
     # From #3886: creating hexbin from empty dataset raises ValueError
-    fig, ax = plt.subplots()
+    ax = plt.gca()
     ax.hexbin([], [])
-    fig, ax = plt.subplots()
+
+
+@image_comparison(['hexbin_empty.png'], remove_text=True)
+def test_hexbin_log_empty():
     # From #23922: creating hexbin with log scaling from empty
     # dataset raises ValueError
+    ax = plt.gca()
     ax.hexbin([], [], bins='log')


@@ -3687,41 +3691,6 @@ def test_errorbar():
     ax.set_title("Simplest errorbars, 0.2 in x, 0.4 in y")


-@image_comparison(['mixed_errorbar_polar_caps'], extensions=['png'],
-                  remove_text=True)
-def test_mixed_errorbar_polar_caps():
-    """
-    Mix several polar errorbar use cases in a single test figure.
-
-    It is advisable to position individual points off the grid. If there are
-    problems with reproducibility of this test, consider removing grid.
-    """
-    fig = plt.figure()
-    ax = plt.subplot(111, projection='polar')
-
-    # symmetric errorbars
-    th_sym = [1, 2, 3]
-    r_sym = [0.9]*3
-    ax.errorbar(th_sym, r_sym, xerr=0.35, yerr=0.2, fmt="o")
-
-    # long errorbars
-    th_long = [np.pi/2 + .1, np.pi + .1]
-    r_long = [1.8, 2.2]
-    ax.errorbar(th_long, r_long, xerr=0.8 * np.pi, yerr=0.15, fmt="o")
-
-    # asymmetric errorbars
-    th_asym = [4*np.pi/3 + .1, 5*np.pi/3 + .1, 2*np.pi-0.1]
-    r_asym = [1.1]*3
-    xerr = [[.3, .3, .2], [.2, .3, .3]]
-    yerr = [[.35, .5, .5], [.5, .35, .5]]
-    ax.errorbar(th_asym, r_asym, xerr=xerr, yerr=yerr, fmt="o")
-
-    # overlapping errorbar
-    th_over = [2.1]
-    r_over = [3.1]
-    ax.errorbar(th_over, r_over, xerr=10, yerr=.2, fmt="o")
-
-
 def test_errorbar_colorcycle():

     f, ax = plt.subplots()
@@ -7834,24 +7803,14 @@ def test_bar_label_location_center():
     ys, widths = [1, 2], [3, -4]
     rects = ax.barh(ys, widths)
     labels = ax.bar_label(rects, label_type='center')
-    assert labels[0].xy == (0.5, 0.5)
+    assert labels[0].xy == (widths[0] / 2, ys[0])
     assert labels[0].get_ha() == 'center'
     assert labels[0].get_va() == 'center'
-    assert labels[1].xy == (0.5, 0.5)
+    assert labels[1].xy == (widths[1] / 2, ys[1])
     assert labels[1].get_ha() == 'center'
     assert labels[1].get_va() == 'center'


-@image_comparison(['test_centered_bar_label_nonlinear.svg'])
-def test_centered_bar_label_nonlinear():
-    _, ax = plt.subplots()
-    bar_container = ax.barh(['c', 'b', 'a'], [1_000, 5_000, 7_000])
-    ax.set_xscale('log')
-    ax.set_xlim(1, None)
-    ax.bar_label(bar_container, label_type='center')
-    ax.set_axis_off()
-
-
 def test_bar_label_location_errorbars():
     ax = plt.gca()
     xs, heights = [1, 2], [3, -4]
@@ -7865,24 +7824,14 @@ def test_bar_label_location_errorbars():
     assert labels[1].get_va() == 'top'


-@pytest.mark.parametrize('fmt', [
-    '%.2f', '{:.2f}', '{:.2f}'.format
-])
-def test_bar_label_fmt(fmt):
+def test_bar_label_fmt():
     ax = plt.gca()
     rects = ax.bar([1, 2], [3, -4])
-    labels = ax.bar_label(rects, fmt=fmt)
+    labels = ax.bar_label(rects, fmt='%.2f')
     assert labels[0].get_text() == '3.00'
     assert labels[1].get_text() == '-4.00'


-def test_bar_label_fmt_error():
-    ax = plt.gca()
-    rects = ax.bar([1, 2], [3, -4])
-    with pytest.raises(TypeError, match='str or callable'):
-        _ = ax.bar_label(rects, fmt=10)
-
-
 def test_bar_label_labels():
     ax = plt.gca()
     rects = ax.bar([1, 2], [3, -4])
diff --git a/lib/matplotlib/tests/test_backend_ps.py b/lib/matplotlib/tests/test_backend_ps.py
index b3e933a89a..a151dc4c4c 100644
--- a/lib/matplotlib/tests/test_backend_ps.py
+++ b/lib/matplotlib/tests/test_backend_ps.py
@@ -4,17 +4,15 @@ import io
 import re
 import tempfile

-import numpy as np
 import pytest

-from matplotlib import cbook, path, patheffects, font_manager as fm
+from matplotlib import cbook, patheffects, font_manager as fm
 from matplotlib._api import MatplotlibDeprecationWarning
 from matplotlib.figure import Figure
 from matplotlib.patches import Ellipse
 from matplotlib.testing._markers import needs_ghostscript, needs_usetex
 from matplotlib.testing.decorators import check_figures_equal, image_comparison
 import matplotlib as mpl
-import matplotlib.collections as mcollections
 import matplotlib.pyplot as plt


@@ -309,21 +307,3 @@ def test_multi_font_type42():

     fig = plt.figure()
     fig.text(0.15, 0.475, "There are 几个汉字 in between!")
-
-
-@image_comparison(["scatter.eps"])
-def test_path_collection():
-    rng = np.random.default_rng(19680801)
-    xvals = rng.uniform(0, 1, 10)
-    yvals = rng.uniform(0, 1, 10)
-    sizes = rng.uniform(30, 100, 10)
-    fig, ax = plt.subplots()
-    ax.scatter(xvals, yvals, sizes, edgecolor=[0.9, 0.2, 0.1], marker='<')
-    ax.set_axis_off()
-    paths = [path.Path.unit_regular_polygon(i) for i in range(3, 7)]
-    offsets = rng.uniform(0, 200, 20).reshape(10, 2)
-    sizes = [0.02, 0.04]
-    pc = mcollections.PathCollection(paths, sizes, zorder=-1,
-                                     facecolors='yellow', offsets=offsets)
-    ax.add_collection(pc)
-    ax.set_xlim(0, 1)
diff --git a/lib/matplotlib/tests/test_cbook.py b/lib/matplotlib/tests/test_cbook.py
index eda0c3b7eb..26748d1a57 100644
--- a/lib/matplotlib/tests/test_cbook.py
+++ b/lib/matplotlib/tests/test_cbook.py
@@ -895,19 +895,3 @@ def test_safe_first_element_with_none():
     datetime_lst[0] = None
     actual = cbook._safe_first_finite(datetime_lst)
     assert actual is not None and actual == datetime_lst[1]
-
-
-@pytest.mark.parametrize('fmt, value, result', [
-    ('%.2f m', 0.2, '0.20 m'),
-    ('{:.2f} m', 0.2, '0.20 m'),
-    ('{} m', 0.2, '0.2 m'),
-    ('const', 0.2, 'const'),
-    ('%d or {}', 0.2, '0 or {}'),
-    ('{{{:,.0f}}}', 2e5, '{200,000}'),
-    ('{:.2%}', 2/3, '66.67%'),
-    ('$%g', 2.54, '$2.54'),
-])
-def test_auto_format_str(fmt, value, result):
-    """Apply *value* to the format string *fmt*."""
-    assert cbook._auto_format_str(fmt, value) == result
-    assert cbook._auto_format_str(fmt, np.float64(value)) == result
diff --git a/lib/matplotlib/tests/test_contour.py b/lib/matplotlib/tests/test_contour.py
index a8cd656b1f..2c76f34cb1 100644
--- a/lib/matplotlib/tests/test_contour.py
+++ b/lib/matplotlib/tests/test_contour.py
@@ -682,13 +682,3 @@ def test_negative_linestyles(style):
     ax4.clabel(CS4, fontsize=9, inline=True)
     ax4.set_title(f'Single color - negative contours {style}')
     assert CS4.negative_linestyles == style
-
-
-def test_contour_remove():
-    ax = plt.figure().add_subplot()
-    orig_children = ax.get_children()
-    cs = ax.contour(np.arange(16).reshape((4, 4)))
-    cs.clabel()
-    assert ax.get_children() != orig_children
-    cs.remove()
-    assert ax.get_children() == orig_children
diff --git a/lib/matplotlib/tests/test_dates.py b/lib/matplotlib/tests/test_dates.py
index 5985b61351..fc5eed7f28 100644
--- a/lib/matplotlib/tests/test_dates.py
+++ b/lib/matplotlib/tests/test_dates.py
@@ -1240,6 +1240,19 @@ def test_change_interval_multiples():
     assert ax.get_xticklabels()[1].get_text() == 'Feb 01 2020'


+def test_epoch2num():
+    with _api.suppress_matplotlib_deprecation_warning():
+        mdates._reset_epoch_test_example()
+        mdates.set_epoch('0000-12-31')
+        assert mdates.epoch2num(86400) == 719164.0
+        assert mdates.num2epoch(719165.0) == 86400 * 2
+        # set back to the default
+        mdates._reset_epoch_test_example()
+        mdates.set_epoch('1970-01-01T00:00:00')
+        assert mdates.epoch2num(86400) == 1.0
+        assert mdates.num2epoch(2.0) == 86400 * 2
+
+
 def test_julian2num():
     mdates._reset_epoch_test_example()
     mdates.set_epoch('0000-12-31')
diff --git a/lib/matplotlib/tests/test_legend.py b/lib/matplotlib/tests/test_legend.py
index c0c5f79d71..16847e0be6 100644
--- a/lib/matplotlib/tests/test_legend.py
+++ b/lib/matplotlib/tests/test_legend.py
@@ -783,14 +783,6 @@ def test_get_set_draggable():
     assert not legend.get_draggable()


-@pytest.mark.parametrize('draggable', (True, False))
-def test_legend_draggable(draggable):
-    fig, ax = plt.subplots()
-    ax.plot(range(10), label='shabnams')
-    leg = ax.legend(draggable=draggable)
-    assert leg.get_draggable() is draggable
-
-
 def test_alpha_handles():
     x, n, hh = plt.hist([1, 2, 3], alpha=0.25, label='data', color='red')
     legend = plt.legend()
diff --git a/lib/matplotlib/tests/test_texmanager.py b/lib/matplotlib/tests/test_texmanager.py
index fbff21144e..29ed9d8659 100644
--- a/lib/matplotlib/tests/test_texmanager.py
+++ b/lib/matplotlib/tests/test_texmanager.py
@@ -1,8 +1,5 @@
-import os
 from pathlib import Path
 import re
-import subprocess
-import sys

 import matplotlib.pyplot as plt
 from matplotlib.texmanager import TexManager
@@ -60,15 +57,3 @@ def test_unicode_characters():
     with pytest.raises(RuntimeError):
         ax.set_title('\N{SNOWMAN}')
         fig.canvas.draw()
-
-
-@needs_usetex
-def test_openin_any_paranoid():
-    completed = subprocess.run(
-        [sys.executable, "-c",
-         'import matplotlib.pyplot as plt;'
-         'plt.rcParams.update({"text.usetex": True});'
-         'plt.title("paranoid");'
-         'plt.show(block=False);'],
-        env={**os.environ, 'openin_any': 'p'}, check=True, capture_output=True)
-    assert completed.stderr == b""
diff --git a/lib/matplotlib/tests/test_ticker.py b/lib/matplotlib/tests/test_ticker.py
index b474dfdd5e..e91d323602 100644
--- a/lib/matplotlib/tests/test_ticker.py
+++ b/lib/matplotlib/tests/test_ticker.py
@@ -1,7 +1,6 @@
 from contextlib import nullcontext
 import itertools
 import locale
-import logging
 import re

 import numpy as np
@@ -726,24 +725,6 @@ class TestScalarFormatter:
             ax.set_xticks([-1, 0, 1])
             fig.canvas.draw()

-    def test_cmr10_substitutions(self, caplog):
-        mpl.rcParams.update({
-            'font.family': 'cmr10',
-            'mathtext.fontset': 'cm',
-            'axes.formatter.use_mathtext': True,
-        })
-
-        # Test that it does not log a warning about missing glyphs.
-        with caplog.at_level(logging.WARNING, logger='matplotlib.mathtext'):
-            fig, ax = plt.subplots()
-            ax.plot([-0.03, 0.05], [40, 0.05])
-            ax.set_yscale('log')
-            yticks = [0.02, 0.3, 4, 50]
-            formatter = mticker.LogFormatterSciNotation()
-            ax.set_yticks(yticks, map(formatter, yticks))
-            fig.canvas.draw()
-            assert not caplog.text
-
     def test_empty_locs(self):
         sf = mticker.ScalarFormatter()
         sf.set_locs([])
diff --git a/lib/matplotlib/texmanager.py b/lib/matplotlib/texmanager.py
index e3b500f948..f53377cf55 100644
--- a/lib/matplotlib/texmanager.py
+++ b/lib/matplotlib/texmanager.py
@@ -290,16 +290,12 @@ class TexManager:
             # and thus replace() works atomically.  It also allows referring to
             # the texfile with a relative path (for pathological MPLCONFIGDIRs,
             # the absolute path may contain characters (e.g. ~) that TeX does
-            # not support; n.b. relative paths cannot traverse parents, or it
-            # will be blocked when `openin_any = p` in texmf.cnf).
-            cwd = Path(dvifile).parent
-            with TemporaryDirectory(dir=cwd) as tmpdir:
-                tmppath = Path(tmpdir)
+            # not support.)
+            with TemporaryDirectory(dir=Path(dvifile).parent) as tmpdir:
                 cls._run_checked_subprocess(
                     ["latex", "-interaction=nonstopmode", "--halt-on-error",
-                     f"--output-directory={tmppath.name}",
-                     f"{texfile.name}"], tex, cwd=cwd)
-                (tmppath / Path(dvifile).name).replace(dvifile)
+                     f"../{texfile.name}"], tex, cwd=tmpdir)
+                (Path(tmpdir) / Path(dvifile).name).replace(dvifile)
         return dvifile

     @classmethod
diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py
index abd5cb9598..ccf6ce879b 100644
--- a/lib/matplotlib/text.py
+++ b/lib/matplotlib/text.py
@@ -164,39 +164,6 @@ class Text(Artist):
         super().__init__()
         self._x, self._y = x, y
         self._text = ''
-        self._reset_visual_defaults(
-            text=text,
-            color=color,
-            fontproperties=fontproperties,
-            usetex=usetex,
-            parse_math=parse_math,
-            wrap=wrap,
-            verticalalignment=verticalalignment,
-            horizontalalignment=horizontalalignment,
-            multialignment=multialignment,
-            rotation=rotation,
-            transform_rotates_text=transform_rotates_text,
-            linespacing=linespacing,
-            rotation_mode=rotation_mode,
-        )
-        self.update(kwargs)
-
-    def _reset_visual_defaults(
-        self,
-        text='',
-        color=None,
-        fontproperties=None,
-        usetex=None,
-        parse_math=None,
-        wrap=False,
-        verticalalignment='baseline',
-        horizontalalignment='left',
-        multialignment=None,
-        rotation=None,
-        transform_rotates_text=False,
-        linespacing=None,
-        rotation_mode=None,
-    ):
         self.set_text(text)
         self.set_color(
             color if color is not None else mpl.rcParams["text.color"])
@@ -216,6 +183,7 @@ class Text(Artist):
             linespacing = 1.2  # Maybe use rcParam later.
         self.set_linespacing(linespacing)
         self.set_rotation_mode(rotation_mode)
+        self.update(kwargs)

     def update(self, kwargs):
         # docstring inherited
diff --git a/lib/matplotlib/ticker.py b/lib/matplotlib/ticker.py
index 9e68656971..dfacdf4aea 100644
--- a/lib/matplotlib/ticker.py
+++ b/lib/matplotlib/ticker.py
@@ -196,6 +196,21 @@ class TickHelper:
         if self.axis is None:
             self.axis = _DummyAxis(**kwargs)

+    @_api.deprecated("3.5", alternative="`.Axis.set_view_interval`")
+    def set_view_interval(self, vmin, vmax):
+        self.axis.set_view_interval(vmin, vmax)
+
+    @_api.deprecated("3.5", alternative="`.Axis.set_data_interval`")
+    def set_data_interval(self, vmin, vmax):
+        self.axis.set_data_interval(vmin, vmax)
+
+    @_api.deprecated(
+        "3.5",
+        alternative="`.Axis.set_view_interval` and `.Axis.set_data_interval`")
+    def set_bounds(self, vmin, vmax):
+        self.set_view_interval(vmin, vmax)
+        self.set_data_interval(vmin, vmax)
+

 class Formatter(TickHelper):
     """
diff --git a/lib/matplotlib/tri/tricontour.py b/lib/matplotlib/tri/tricontour.py
index ee9d85030c..df3b44d941 100644
--- a/lib/matplotlib/tri/tricontour.py
+++ b/lib/matplotlib/tri/tricontour.py
@@ -114,7 +114,7 @@ levels : int or array-like, optional

     If an int *n*, use `~matplotlib.ticker.MaxNLocator`, which tries to
     automatically choose no more than *n+1* "nice" contour levels between
-    between minimum and maximum numeric values of *Z*.
+    *vmin* and *vmax*.

     If array-like, draw contour lines at the specified levels.  The values must
     be in increasing order.
diff --git a/lib/mpl_toolkits/axes_grid1/axes_grid.py b/lib/mpl_toolkits/axes_grid1/axes_grid.py
index ea47ecaa54..b2fe5d2496 100644
--- a/lib/mpl_toolkits/axes_grid1/axes_grid.py
+++ b/lib/mpl_toolkits/axes_grid1/axes_grid.py
@@ -81,11 +81,9 @@ class Grid:
         ----------
         fig : `.Figure`
             The parent figure.
-        rect : (float, float, float, float), (int, int, int), int, or \
-    `~.SubplotSpec`
-            The axes position, as a ``(left, bottom, width, height)`` tuple,
-            as a three-digit subplot position code (e.g., ``(1, 2, 1)`` or
-            ``121``), or as a `~.SubplotSpec`.
+        rect : (float, float, float, float) or int
+            The axes position, as a ``(left, bottom, width, height)`` tuple or
+            as a three-digit subplot position code (e.g., "121").
         nrows_ncols : (int, int)
             Number of rows and columns in the grid.
         ngrids : int or None, default: None
@@ -141,7 +139,7 @@ class Grid:
             axes_class = functools.partial(cls, **kwargs)

         kw = dict(horizontal=[], vertical=[], aspect=aspect)
-        if isinstance(rect, (Number, SubplotSpec)):
+        if isinstance(rect, (str, Number, SubplotSpec)):
             self._divider = SubplotDivider(fig, rect, **kw)
         elif len(rect) == 3:
             self._divider = SubplotDivider(fig, *rect, **kw)
diff --git a/lib/mpl_toolkits/axes_grid1/inset_locator.py b/lib/mpl_toolkits/axes_grid1/inset_locator.py
index cfadcbe543..01c14e9baa 100644
--- a/lib/mpl_toolkits/axes_grid1/inset_locator.py
+++ b/lib/mpl_toolkits/axes_grid1/inset_locator.py
@@ -43,7 +43,7 @@ class InsetPosition:

         >>> parent_axes = plt.gca()
         >>> ax_ins = plt.axes([0, 0, 1, 1])
-        >>> ip = InsetPosition(parent_axes, [0.5, 0.1, 0.4, 0.2])
+        >>> ip = InsetPosition(ax, [0.5, 0.1, 0.4, 0.2])
         >>> ax_ins.set_axes_locator(ip)
         """
         self.parent = parent
@@ -70,11 +70,18 @@ class AnchoredLocatorBase(AnchoredOffsetbox):

     def __call__(self, ax, renderer):
         self.axes = ax
-        bbox = self.get_window_extent(renderer)
-        px, py = self.get_offset(bbox.width, bbox.height, 0, 0, renderer)
-        bbox_canvas = Bbox.from_bounds(px, py, bbox.width, bbox.height)
+
+        fontsize = renderer.points_to_pixels(self.prop.get_size_in_points())
+        self._update_offset_func(renderer, fontsize)
+
+        width, height, xdescent, ydescent = self.get_extent(renderer)
+
+        px, py = self.get_offset(width, height, 0, 0, renderer)
+        bbox_canvas = Bbox.from_bounds(px, py, width, height)
         tr = ax.figure.transFigure.inverted()
-        return TransformedBbox(bbox_canvas, tr)
+        bb = TransformedBbox(bbox_canvas, tr)
+
+        return bb


 class AnchoredSizeLocator(AnchoredLocatorBase):
diff --git a/lib/mpl_toolkits/axes_grid1/parasite_axes.py b/lib/mpl_toolkits/axes_grid1/parasite_axes.py
index 6cdffe2247..b959d1f48a 100644
--- a/lib/mpl_toolkits/axes_grid1/parasite_axes.py
+++ b/lib/mpl_toolkits/axes_grid1/parasite_axes.py
@@ -99,35 +99,20 @@ class HostAxesBase:
         self.parasites = []
         super().__init__(*args, **kwargs)

-    def get_aux_axes(
-            self, tr=None, viewlim_mode="equal", axes_class=None, **kwargs):
+    def get_aux_axes(self, tr=None, viewlim_mode="equal", axes_class=Axes):
         """
         Add a parasite axes to this host.

         Despite this method's name, this should actually be thought of as an
         ``add_parasite_axes`` method.

-        Parameters
-        ----------
-        tr : `.Transform` or None, default: None
-            If a `.Transform`, the following relation will hold:
-            ``parasite.transData = tr + host.transData``.
-            If None, the parasite's and the host's ``transData`` are unrelated.
-        viewlim_mode : {"equal", "transform", None}, default: "equal"
-            How the parasite's view limits are set: directly equal to the
-            parent axes ("equal"), equal after application of *tr*
-            ("transform"), or independently (None).
-        axes_class : subclass type of `~.axes.Axes`, optional
-            The `.axes.Axes` subclass that is instantiated.  If None, the base
-            class of the host axes is used.
-        kwargs
-            Other parameters are forwarded to the parasite axes constructor.
+        *tr* may be `.Transform`, in which case the following relation will
+        hold: ``parasite.transData = tr + host.transData``.  Alternatively, it
+        may be None (the default), no special relationship will hold between
+        the parasite's and the host's ``transData``.
         """
-        if axes_class is None:
-            axes_class = self._base_axes_class
         parasite_axes_class = parasite_axes_class_factory(axes_class)
-        ax2 = parasite_axes_class(
-            self, tr, viewlim_mode=viewlim_mode, **kwargs)
+        ax2 = parasite_axes_class(self, tr, viewlim_mode=viewlim_mode)
         # note that ax2.transData == tr + ax1.transData
         # Anything you draw in ax2 will match the ticks and grids of ax1.
         self.parasites.append(ax2)
diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py
index e9b57f6347..c506012463 100644
--- a/lib/mpl_toolkits/mplot3d/axes3d.py
+++ b/lib/mpl_toolkits/mplot3d/axes3d.py
@@ -52,10 +52,6 @@ class Axes3D(Axes):
     Axes._shared_axes["z"] = cbook.Grouper()

     dist = _api.deprecate_privatize_attribute("3.6")
-    vvec = _api.deprecate_privatize_attribute("3.7")
-    eye = _api.deprecate_privatize_attribute("3.7")
-    sx = _api.deprecate_privatize_attribute("3.7")
-    sy = _api.deprecate_privatize_attribute("3.7")

     def __init__(
             self, fig, rect=None, *args,
@@ -291,7 +287,9 @@ class Axes3D(Axes):
             'equalyz'   adapt the y and z axes to have equal aspect ratios.
             =========   ==================================================

-        adjustable : None or {'box', 'datalim'}, optional
+        adjustable : None
+            Currently ignored by Axes3D
+
             If not *None*, this defines which parameter will be adjusted to
             meet the required aspect. See `.set_adjustable` for further
             details.
@@ -322,65 +320,34 @@ class Axes3D(Axes):
         """
         _api.check_in_list(('auto', 'equal', 'equalxy', 'equalyz', 'equalxz'),
                            aspect=aspect)
-        if adjustable is None:
-            adjustable = self._adjustable
-        _api.check_in_list(('box', 'datalim'), adjustable=adjustable)
         super().set_aspect(
             aspect='auto', adjustable=adjustable, anchor=anchor, share=share)
         self._aspect = aspect

         if aspect in ('equal', 'equalxy', 'equalxz', 'equalyz'):
-            ax_indices = self._equal_aspect_axis_indices(aspect)
+            if aspect == 'equal':
+                ax_indices = [0, 1, 2]
+            elif aspect == 'equalxy':
+                ax_indices = [0, 1]
+            elif aspect == 'equalxz':
+                ax_indices = [0, 2]
+            elif aspect == 'equalyz':
+                ax_indices = [1, 2]

             view_intervals = np.array([self.xaxis.get_view_interval(),
                                        self.yaxis.get_view_interval(),
                                        self.zaxis.get_view_interval()])
+            mean = np.mean(view_intervals, axis=1)
             ptp = np.ptp(view_intervals, axis=1)
-            if adjustable == 'datalim':
-                mean = np.mean(view_intervals, axis=1)
-                delta = max(ptp[ax_indices])
-                scale = self._box_aspect[ptp == delta][0]
-                deltas = delta * self._box_aspect / scale
-
-                for i, set_lim in enumerate((self.set_xlim3d,
-                                             self.set_ylim3d,
-                                             self.set_zlim3d)):
-                    if i in ax_indices:
-                        set_lim(mean[i] - deltas[i]/2., mean[i] + deltas[i]/2.)
-            else:  # 'box'
-                # Change the box aspect such that the ratio of the length of
-                # the unmodified axis to the length of the diagonal
-                # perpendicular to it remains unchanged.
-                box_aspect = np.array(self._box_aspect)
-                box_aspect[ax_indices] = ptp[ax_indices]
-                remaining_ax_indices = {0, 1, 2}.difference(ax_indices)
-                if remaining_ax_indices:
-                    remaining = remaining_ax_indices.pop()
-                    old_diag = np.linalg.norm(self._box_aspect[ax_indices])
-                    new_diag = np.linalg.norm(box_aspect[ax_indices])
-                    box_aspect[remaining] *= new_diag / old_diag
-                self.set_box_aspect(box_aspect)
-
-    def _equal_aspect_axis_indices(self, aspect):
-        """
-        Get the indices for which of the x, y, z axes are constrained to have
-        equal aspect ratios.
+            delta = max(ptp[ax_indices])
+            scale = self._box_aspect[ptp == delta][0]
+            deltas = delta * self._box_aspect / scale

-        Parameters
-        ----------
-        aspect : {'auto', 'equal', 'equalxy', 'equalxz', 'equalyz'}
-            See descriptions in docstring for `.set_aspect()`.
-        """
-        ax_indices = []  # aspect == 'auto'
-        if aspect == 'equal':
-            ax_indices = [0, 1, 2]
-        elif aspect == 'equalxy':
-            ax_indices = [0, 1]
-        elif aspect == 'equalxz':
-            ax_indices = [0, 2]
-        elif aspect == 'equalyz':
-            ax_indices = [1, 2]
-        return ax_indices
+            for i, set_lim in enumerate((self.set_xlim3d,
+                                         self.set_ylim3d,
+                                         self.set_zlim3d)):
+                if i in ax_indices:
+                    set_lim(mean[i] - deltas[i]/2., mean[i] + deltas[i]/2.)

     def set_box_aspect(self, aspect, *, zoom=1):
         """
@@ -880,13 +847,15 @@ class Axes3D(Axes):
             pb_aspect=box_aspect,
         )

-        # Look into the middle of the world coordinates:
+        # Look into the middle of the new coordinates:
         R = 0.5 * box_aspect

         # elev stores the elevation angle in the z plane
         # azim stores the azimuth angle in the x,y plane
+        # roll stores the roll angle about the view axis
         elev_rad = np.deg2rad(art3d._norm_angle(self.elev))
         azim_rad = np.deg2rad(art3d._norm_angle(self.azim))
+        roll_rad = np.deg2rad(art3d._norm_angle(self.roll))

         # Coordinates for a point that rotates around the box of data.
         # p0, p1 corresponds to rotating the box only around the
@@ -905,27 +874,27 @@ class Axes3D(Axes):
         # towards the middle of the box of data from a distance:
         eye = R + self._dist * ps

-        # vvec, self._vvec and self._eye are unused, remove when deprecated
-        vvec = R - eye
-        self._eye = eye
-        self._vvec = vvec / np.linalg.norm(vvec)
+        # TODO: Is this being used somewhere? Can it be removed?
+        self.eye = eye
+        self.vvec = R - eye
+        self.vvec = self.vvec / np.linalg.norm(self.vvec)

-        # Calculate the viewing axes for the eye position
-        u, v, w = self._calc_view_axes(eye)
-        self._view_u = u  # _view_u is towards the right of the screen
-        self._view_v = v  # _view_v is towards the top of the screen
-        self._view_w = w  # _view_w is out of the screen
+        # Define which axis should be vertical. A negative value
+        # indicates the plot is upside down and therefore the values
+        # have been reversed:
+        V = np.zeros(3)
+        V[self._vertical_axis] = -1 if abs(elev_rad) > 0.5 * np.pi else 1

         # Generate the view and projection transformation matrices
         if self._focal_length == np.inf:
             # Orthographic projection
-            viewM = proj3d._view_transformation_uvw(u, v, w, eye)
+            viewM = proj3d.view_transformation(eye, R, V, roll_rad)
             projM = proj3d.ortho_transformation(-self._dist, self._dist)
         else:
             # Perspective projection
             # Scale the eye dist to compensate for the focal length zoom effect
             eye_focal = R + self._dist * ps * self._focal_length
-            viewM = proj3d._view_transformation_uvw(u, v, w, eye_focal)
+            viewM = proj3d.view_transformation(eye_focal, R, V, roll_rad)
             projM = proj3d.persp_transformation(-self._dist,
                                                 self._dist,
                                                 self._focal_length)
@@ -935,7 +904,7 @@ class Axes3D(Axes):
         M = np.dot(projM, M0)
         return M

-    def mouse_init(self, rotate_btn=1, pan_btn=2, zoom_btn=3):
+    def mouse_init(self, rotate_btn=1, zoom_btn=3):
         """
         Set the mouse buttons for 3D rotation and zooming.

@@ -943,8 +912,6 @@ class Axes3D(Axes):
         ----------
         rotate_btn : int or list of int, default: 1
             The mouse button or buttons to use for 3D rotation of the axes.
-        pan_btn : int or list of int, default: 2
-            The mouse button or buttons to use to pan the 3D axes.
         zoom_btn : int or list of int, default: 3
             The mouse button or buttons to use to zoom the 3D axes.
         """
@@ -953,24 +920,27 @@ class Axes3D(Axes):
         # a regular list to avoid comparisons against None
         # which breaks in recent versions of numpy.
         self._rotate_btn = np.atleast_1d(rotate_btn).tolist()
-        self._pan_btn = np.atleast_1d(pan_btn).tolist()
         self._zoom_btn = np.atleast_1d(zoom_btn).tolist()

     def disable_mouse_rotation(self):
-        """Disable mouse buttons for 3D rotation, panning, and zooming."""
-        self.mouse_init(rotate_btn=[], pan_btn=[], zoom_btn=[])
+        """Disable mouse buttons for 3D rotation and zooming."""
+        self.mouse_init(rotate_btn=[], zoom_btn=[])

     def can_zoom(self):
         """
         Return whether this Axes supports the zoom box button functionality.
+
+        Axes3D objects do not use the zoom box button.
         """
-        return True
+        return False

     def can_pan(self):
         """
-        Return whether this Axes supports the pan button functionality.
+        Return whether this Axes supports the pan/zoom button functionality.
+
+        Axes3d objects do not use the pan/zoom button.
         """
-        return True
+        return False

     def sharez(self, other):
         """
@@ -1003,7 +973,7 @@ class Axes3D(Axes):
     def _button_press(self, event):
         if event.inaxes == self:
             self.button_pressed = event.button
-            self._sx, self._sy = event.xdata, event.ydata
+            self.sx, self.sy = event.xdata, event.ydata
             toolbar = getattr(self.figure.canvas, "toolbar")
             if toolbar and toolbar._nav_stack() is None:
                 self.figure.canvas.toolbar.push_current()
@@ -1011,9 +981,7 @@ class Axes3D(Axes):
     def _button_release(self, event):
         self.button_pressed = None
         toolbar = getattr(self.figure.canvas, "toolbar")
-        # backend_bases.release_zoom and backend_bases.release_pan call
-        # push_current, so check the navigation mode so we don't call it twice
-        if toolbar and self.get_navigate_mode() is None:
+        if toolbar:
             self.figure.canvas.toolbar.push_current()

     def _get_view(self):
@@ -1086,29 +1054,25 @@ class Axes3D(Axes):
         """
         Mouse moving.

-        By default, button-1 rotates, button-2 pans, and button-3 zooms;
-        these buttons can be modified via `mouse_init`.
+        By default, button-1 rotates and button-3 zooms; these buttons can be
+        modified via `mouse_init`.
         """

         if not self.button_pressed:
             return

-        if self.get_navigate_mode() is not None:
-            # we don't want to rotate if we are zooming/panning
-            # from the toolbar
-            return
-
         if self.M is None:
             return

         x, y = event.xdata, event.ydata
         # In case the mouse is out of bounds.
-        if x is None or event.inaxes != self:
+        if x is None:
             return

-        dx, dy = x - self._sx, y - self._sy
+        dx, dy = x - self.sx, y - self.sy
         w = self._pseudo_w
         h = self._pseudo_h
+        self.sx, self.sy = x, y

         # Rotation
         if self.button_pressed in self._rotate_btn:
@@ -1122,199 +1086,45 @@ class Axes3D(Axes):
             dazim = -(dy/h)*180*np.sin(roll) - (dx/w)*180*np.cos(roll)
             self.elev = self.elev + delev
             self.azim = self.azim + dazim
+            self.get_proj()
             self.stale = True
+            self.figure.canvas.draw_idle()

-        elif self.button_pressed in self._pan_btn:
-            # Start the pan event with pixel coordinates
-            px, py = self.transData.transform([self._sx, self._sy])
-            self.start_pan(px, py, 2)
-            # pan view (takes pixel coordinate input)
-            self.drag_pan(2, None, event.x, event.y)
-            self.end_pan()
+        elif self.button_pressed == 2:
+            # pan view
+            # get the x and y pixel coords
+            if dx == 0 and dy == 0:
+                return
+            minx, maxx, miny, maxy, minz, maxz = self.get_w_lims()
+            dx = 1-((w - dx)/w)
+            dy = 1-((h - dy)/h)
+            elev = np.deg2rad(self.elev)
+            azim = np.deg2rad(self.azim)
+            # project xv, yv, zv -> xw, yw, zw
+            dxx = (maxx-minx)*(dy*np.sin(elev)*np.cos(azim) + dx*np.sin(azim))
+            dyy = (maxy-miny)*(-dx*np.cos(azim) + dy*np.sin(elev)*np.sin(azim))
+            dzz = (maxz-minz)*(-dy*np.cos(elev))
+            # pan
+            self.set_xlim3d(minx + dxx, maxx + dxx)
+            self.set_ylim3d(miny + dyy, maxy + dyy)
+            self.set_zlim3d(minz + dzz, maxz + dzz)
+            self.get_proj()
+            self.figure.canvas.draw_idle()

         # Zoom
         elif self.button_pressed in self._zoom_btn:
-            # zoom view (dragging down zooms in)
-            scale = h/(h - dy)
-            self._scale_axis_limits(scale, scale, scale)
-
-        # Store the event coordinates for the next time through.
-        self._sx, self._sy = x, y
-        # Always request a draw update at the end of interaction
-        self.figure.canvas.draw_idle()
-
-    def drag_pan(self, button, key, x, y):
-        # docstring inherited
-
-        # Get the coordinates from the move event
-        p = self._pan_start
-        (xdata, ydata), (xdata_start, ydata_start) = p.trans_inverse.transform(
-            [(x, y), (p.x, p.y)])
-        self._sx, self._sy = xdata, ydata
-        # Calling start_pan() to set the x/y of this event as the starting
-        # move location for the next event
-        self.start_pan(x, y, button)
-        du, dv = xdata - xdata_start, ydata - ydata_start
-        dw = 0
-        if key == 'x':
-            dv = 0
-        elif key == 'y':
-            du = 0
-        if du == 0 and dv == 0:
-            return
-
-        # Transform the pan from the view axes to the data axes
-        R = np.array([self._view_u, self._view_v, self._view_w])
-        R = -R / self._box_aspect * self._dist
-        duvw_projected = R.T @ np.array([du, dv, dw])
-
-        # Calculate pan distance
-        minx, maxx, miny, maxy, minz, maxz = self.get_w_lims()
-        dx = (maxx - minx) * duvw_projected[0]
-        dy = (maxy - miny) * duvw_projected[1]
-        dz = (maxz - minz) * duvw_projected[2]
-
-        # Set the new axis limits
-        self.set_xlim3d(minx + dx, maxx + dx)
-        self.set_ylim3d(miny + dy, maxy + dy)
-        self.set_zlim3d(minz + dz, maxz + dz)
-
-    def _calc_view_axes(self, eye):
-        """
-        Get the unit vectors for the viewing axes in data coordinates.
-        `u` is towards the right of the screen
-        `v` is towards the top of the screen
-        `w` is out of the screen
-        """
-        elev_rad = np.deg2rad(art3d._norm_angle(self.elev))
-        roll_rad = np.deg2rad(art3d._norm_angle(self.roll))
-
-        # Look into the middle of the world coordinates
-        R = 0.5 * self._roll_to_vertical(self._box_aspect)
-
-        # Define which axis should be vertical. A negative value
-        # indicates the plot is upside down and therefore the values
-        # have been reversed:
-        V = np.zeros(3)
-        V[self._vertical_axis] = -1 if abs(elev_rad) > np.pi/2 else 1
-
-        u, v, w = proj3d._view_axes(eye, R, V, roll_rad)
-        return u, v, w
-
-    def _set_view_from_bbox(self, bbox, direction='in',
-                            mode=None, twinx=False, twiny=False):
-        """
-        Zoom in or out of the bounding box.
-        Will center the view on the center of the bounding box, and zoom by
-        the ratio of the size of the bounding box to the size of the Axes3D.
-        """
-        (start_x, start_y, stop_x, stop_y) = bbox
-        if mode == 'x':
-            start_y = self.bbox.min[1]
-            stop_y = self.bbox.max[1]
-        elif mode == 'y':
-            start_x = self.bbox.min[0]
-            stop_x = self.bbox.max[0]
-
-        # Clip to bounding box limits
-        start_x, stop_x = np.clip(sorted([start_x, stop_x]),
-                                  self.bbox.min[0], self.bbox.max[0])
-        start_y, stop_y = np.clip(sorted([start_y, stop_y]),
-                                  self.bbox.min[1], self.bbox.max[1])
-
-        # Move the center of the view to the center of the bbox
-        zoom_center_x = (start_x + stop_x)/2
-        zoom_center_y = (start_y + stop_y)/2
-
-        ax_center_x = (self.bbox.max[0] + self.bbox.min[0])/2
-        ax_center_y = (self.bbox.max[1] + self.bbox.min[1])/2
-
-        self.start_pan(zoom_center_x, zoom_center_y, 2)
-        self.drag_pan(2, None, ax_center_x, ax_center_y)
-        self.end_pan()
-
-        # Calculate zoom level
-        dx = abs(start_x - stop_x)
-        dy = abs(start_y - stop_y)
-        scale_u = dx / (self.bbox.max[0] - self.bbox.min[0])
-        scale_v = dy / (self.bbox.max[1] - self.bbox.min[1])
-
-        # Keep aspect ratios equal
-        scale = max(scale_u, scale_v)
-
-        # Zoom out
-        if direction == 'out':
-            scale = 1 / scale
-
-        self._zoom_data_limits(scale, scale, scale)
-
-    def _zoom_data_limits(self, scale_u, scale_v, scale_w):
-        """
-        Zoom in or out of a 3D plot.
-        Will scale the data limits by the scale factors. These will be
-        transformed to the x, y, z data axes based on the current view angles.
-        A scale factor > 1 zooms out and a scale factor < 1 zooms in.
-
-        For an axes that has had its aspect ratio set to 'equal', 'equalxy',
-        'equalyz', or 'equalxz', the relevant axes are constrained to zoom
-        equally.
-
-        Parameters
-        ----------
-        scale_u : float
-            Scale factor for the u view axis (view screen horizontal).
-        scale_v : float
-            Scale factor for the v view axis (view screen vertical).
-        scale_w : float
-            Scale factor for the w view axis (view screen depth).
-        """
-        scale = np.array([scale_u, scale_v, scale_w])
-
-        # Only perform frame conversion if unequal scale factors
-        if not np.allclose(scale, scale_u):
-            # Convert the scale factors from the view frame to the data frame
-            R = np.array([self._view_u, self._view_v, self._view_w])
-            S = scale * np.eye(3)
-            scale = np.linalg.norm(R.T @ S, axis=1)
-
-            # Set the constrained scale factors to the factor closest to 1
-            if self._aspect in ('equal', 'equalxy', 'equalxz', 'equalyz'):
-                ax_idxs = self._equal_aspect_axis_indices(self._aspect)
-                min_ax_idxs = np.argmin(np.abs(scale[ax_idxs] - 1))
-                scale[ax_idxs] = scale[ax_idxs][min_ax_idxs]
-
-        self._scale_axis_limits(scale[0], scale[1], scale[2])
-
-    def _scale_axis_limits(self, scale_x, scale_y, scale_z):
-        """
-        Keeping the center of the x, y, and z data axes fixed, scale their
-        limits by scale factors. A scale factor > 1 zooms out and a scale
-        factor < 1 zooms in.
-
-        Parameters
-        ----------
-        scale_x : float
-            Scale factor for the x data axis.
-        scale_y : float
-            Scale factor for the y data axis.
-        scale_z : float
-            Scale factor for the z data axis.
-        """
-        # Get the axis limits and centers
-        minx, maxx, miny, maxy, minz, maxz = self.get_w_lims()
-        cx = (maxx + minx)/2
-        cy = (maxy + miny)/2
-        cz = (maxz + minz)/2
-
-        # Scale the data range
-        dx = (maxx - minx)*scale_x
-        dy = (maxy - miny)*scale_y
-        dz = (maxz - minz)*scale_z
-
-        # Set the scaled axis limits
-        self.set_xlim3d(cx - dx/2, cx + dx/2)
-        self.set_ylim3d(cy - dy/2, cy + dy/2)
-        self.set_zlim3d(cz - dz/2, cz + dz/2)
+            # zoom view
+            # hmmm..this needs some help from clipping....
+            minx, maxx, miny, maxy, minz, maxz = self.get_w_lims()
+            df = 1-((h - dy)/h)
+            dx = (maxx-minx)*df
+            dy = (maxy-miny)*df
+            dz = (maxz-minz)*df
+            self.set_xlim3d(minx - dx, maxx + dx)
+            self.set_ylim3d(miny - dy, maxy + dy)
+            self.set_zlim3d(minz - dz, maxz + dz)
+            self.get_proj()
+            self.figure.canvas.draw_idle()

     def set_zlabel(self, zlabel, fontdict=None, labelpad=None, **kwargs):
         """
diff --git a/lib/mpl_toolkits/mplot3d/proj3d.py b/lib/mpl_toolkits/mplot3d/proj3d.py
index c9659456f3..2f23e3779b 100644
--- a/lib/mpl_toolkits/mplot3d/proj3d.py
+++ b/lib/mpl_toolkits/mplot3d/proj3d.py
@@ -72,86 +72,26 @@ def rotation_about_vector(v, angle):
     return R


-def _view_axes(E, R, V, roll):
-    """
-    Get the unit viewing axes in data coordinates.
-
-    Parameters
-    ----------
-    E : 3-element numpy array
-        The coordinates of the eye/camera.
-    R : 3-element numpy array
-        The coordinates of the center of the view box.
-    V : 3-element numpy array
-        Unit vector in the direction of the vertical axis.
-    roll : float
-        The roll angle in radians.
-
-    Returns
-    -------
-    u : 3-element numpy array
-        Unit vector pointing towards the right of the screen.
-    v : 3-element numpy array
-        Unit vector pointing towards the top of the screen.
-    w : 3-element numpy array
-        Unit vector pointing out of the screen.
-    """
-    w = (E - R)
-    w = w/np.linalg.norm(w)
-    u = np.cross(V, w)
+def view_transformation(E, R, V, roll):
+    n = (E - R)
+    n = n/np.linalg.norm(n)
+    u = np.cross(V, n)
     u = u/np.linalg.norm(u)
-    v = np.cross(w, u)  # Will be a unit vector
+    v = np.cross(n, u)  # Will be a unit vector

     # Save some computation for the default roll=0
     if roll != 0:
         # A positive rotation of the camera is a negative rotation of the world
-        Rroll = rotation_about_vector(w, -roll)
+        Rroll = rotation_about_vector(n, -roll)
         u = np.dot(Rroll, u)
         v = np.dot(Rroll, v)
-    return u, v, w

-
-def _view_transformation_uvw(u, v, w, E):
-    """
-    Return the view transformation matrix.
-
-    Parameters
-    ----------
-    u : 3-element numpy array
-        Unit vector pointing towards the right of the screen.
-    v : 3-element numpy array
-        Unit vector pointing towards the top of the screen.
-    w : 3-element numpy array
-        Unit vector pointing out of the screen.
-    E : 3-element numpy array
-        The coordinates of the eye/camera.
-    """
     Mr = np.eye(4)
     Mt = np.eye(4)
-    Mr[:3, :3] = [u, v, w]
+    Mr[:3, :3] = [u, v, n]
     Mt[:3, -1] = -E
-    M = np.dot(Mr, Mt)
-    return M
-

-def view_transformation(E, R, V, roll):
-    """
-    Return the view transformation matrix.
-
-    Parameters
-    ----------
-    E : 3-element numpy array
-        The coordinates of the eye/camera.
-    R : 3-element numpy array
-        The coordinates of the center of the view box.
-    V : 3-element numpy array
-        Unit vector in the direction of the vertical axis.
-    roll : float
-        The roll angle in radians.
-    """
-    u, v, w = _view_axes(E, R, V, roll)
-    M = _view_transformation_uvw(u, v, w, E)
-    return M
+    return np.dot(Mr, Mt)


 def persp_transformation(zfront, zback, focal_length):
diff --git a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/imagegrid_cbar_mode.png b/lib/mpl_toolkits/tests/baseline_images/test_axes_grid/imagegrid_cbar_mode.png
similarity index 100%
rename from lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/imagegrid_cbar_mode.png
rename to lib/mpl_toolkits/tests/baseline_images/test_axes_grid/imagegrid_cbar_mode.png
diff --git a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/image_grid_each_left_label_mode_all.png b/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/image_grid_each_left_label_mode_all.png
deleted file mode 100644
index 23abe8b964..0000000000
Binary files a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/image_grid_each_left_label_mode_all.png and /dev/null differ
diff --git a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/image_grid_single_bottom_label_mode_1.png b/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/image_grid_single_bottom_label_mode_1.png
deleted file mode 100644
index 1a0f4cd1fc..0000000000
Binary files a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/image_grid_single_bottom_label_mode_1.png and /dev/null differ
diff --git a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/insetposition.png b/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/insetposition.png
deleted file mode 100644
index e8676cfd6c..0000000000
Binary files a/lib/mpl_toolkits/tests/baseline_images/test_axes_grid1/insetposition.png and /dev/null differ
diff --git a/lib/mpl_toolkits/tests/baseline_images/test_mplot3d/aspects_adjust_box.png b/lib/mpl_toolkits/tests/baseline_images/test_mplot3d/aspects_adjust_box.png
deleted file mode 100644
index 7fb448f2c5..0000000000
Binary files a/lib/mpl_toolkits/tests/baseline_images/test_mplot3d/aspects_adjust_box.png and /dev/null differ
diff --git a/lib/mpl_toolkits/tests/test_axes_grid.py b/lib/mpl_toolkits/tests/test_axes_grid.py
new file mode 100644
index 0000000000..4d77b90e5e
--- /dev/null
+++ b/lib/mpl_toolkits/tests/test_axes_grid.py
@@ -0,0 +1,56 @@
+import numpy as np
+
+import matplotlib as mpl
+import matplotlib.ticker as mticker
+from matplotlib.testing.decorators import image_comparison
+import matplotlib.pyplot as plt
+from mpl_toolkits.axes_grid1 import ImageGrid
+
+
+# The original version of this test relied on mpl_toolkits's slightly different
+# colorbar implementation; moving to matplotlib's own colorbar implementation
+# caused the small image comparison error.
+@image_comparison(['imagegrid_cbar_mode.png'],
+                  remove_text=True, style='mpl20', tol=0.3)
+def test_imagegrid_cbar_mode_edge():
+    # Remove this line when this test image is regenerated.
+    plt.rcParams['pcolormesh.snap'] = False
+
+    X, Y = np.meshgrid(np.linspace(0, 6, 30), np.linspace(0, 6, 30))
+    arr = np.sin(X) * np.cos(Y) + 1j*(np.sin(3*Y) * np.cos(Y/2.))
+
+    fig = plt.figure(figsize=(18, 9))
+
+    positions = (241, 242, 243, 244, 245, 246, 247, 248)
+    directions = ['row']*4 + ['column']*4
+    cbar_locations = ['left', 'right', 'top', 'bottom']*2
+
+    for position, direction, location in zip(
+            positions, directions, cbar_locations):
+        grid = ImageGrid(fig, position,
+                         nrows_ncols=(2, 2),
+                         direction=direction,
+                         cbar_location=location,
+                         cbar_size='20%',
+                         cbar_mode='edge')
+        ax1, ax2, ax3, ax4, = grid
+
+        ax1.imshow(arr.real, cmap='nipy_spectral')
+        ax2.imshow(arr.imag, cmap='hot')
+        ax3.imshow(np.abs(arr), cmap='jet')
+        ax4.imshow(np.arctan2(arr.imag, arr.real), cmap='hsv')
+
+        # In each row/column, the "first" colorbars must be overwritten by the
+        # "second" ones.  To achieve this, clear out the axes first.
+        for ax in grid:
+            ax.cax.cla()
+            cb = ax.cax.colorbar(ax.images[0])
+
+
+def test_imagegrid():
+    fig = plt.figure()
+    grid = ImageGrid(fig, 111, nrows_ncols=(1, 1))
+    ax = grid[0]
+    im = ax.imshow([[1, 2]], norm=mpl.colors.LogNorm())
+    cb = ax.cax.colorbar(im)
+    assert isinstance(cb.locator, mticker.LogLocator)
diff --git a/lib/mpl_toolkits/tests/test_axes_grid1.py b/lib/mpl_toolkits/tests/test_axes_grid1.py
index ea9b55de48..374b8c721f 100644
--- a/lib/mpl_toolkits/tests/test_axes_grid1.py
+++ b/lib/mpl_toolkits/tests/test_axes_grid1.py
@@ -3,7 +3,6 @@ import platform

 import matplotlib as mpl
 import matplotlib.pyplot as plt
-import matplotlib.ticker as mticker
 from matplotlib import cbook
 from matplotlib.backend_bases import MouseEvent
 from matplotlib.colors import LogNorm
@@ -18,11 +17,10 @@ from mpl_toolkits.axes_grid1 import (
 from mpl_toolkits.axes_grid1.anchored_artists import (
     AnchoredSizeBar, AnchoredDirectionArrows)
 from mpl_toolkits.axes_grid1.axes_divider import (
-    Divider, HBoxDivider, make_axes_area_auto_adjustable, SubplotDivider)
+    Divider, HBoxDivider, make_axes_area_auto_adjustable)
 from mpl_toolkits.axes_grid1.axes_rgb import RGBAxes
 from mpl_toolkits.axes_grid1.inset_locator import (
-    zoomed_inset_axes, mark_inset, inset_axes, BboxConnectorPatch,
-    InsetPosition)
+    zoomed_inset_axes, mark_inset, inset_axes, BboxConnectorPatch)
 import mpl_toolkits.axes_grid1.mpl_axes

 import pytest
@@ -369,40 +367,6 @@ def test_axes_locatable_position():
                       0.03621495327102808)


-@image_comparison(['image_grid_each_left_label_mode_all.png'], style='mpl20',
-                  savefig_kwarg={'bbox_inches': 'tight'})
-def test_image_grid_each_left_label_mode_all():
-    imdata = np.arange(100).reshape((10, 10))
-
-    fig = plt.figure(1, (3, 3))
-    grid = ImageGrid(fig, (1, 1, 1), nrows_ncols=(3, 2), axes_pad=(0.5, 0.3),
-                     cbar_mode="each", cbar_location="left", cbar_size="15%",
-                     label_mode="all")
-    # 3-tuple rect => SubplotDivider
-    assert isinstance(grid.get_divider(), SubplotDivider)
-    assert grid.get_axes_pad() == (0.5, 0.3)
-    assert grid.get_aspect()  # True by default for ImageGrid
-    for ax, cax in zip(grid, grid.cbar_axes):
-        im = ax.imshow(imdata, interpolation='none')
-        cax.colorbar(im)
-
-
-@image_comparison(['image_grid_single_bottom_label_mode_1.png'], style='mpl20',
-                  savefig_kwarg={'bbox_inches': 'tight'})
-def test_image_grid_single_bottom():
-    imdata = np.arange(100).reshape((10, 10))
-
-    fig = plt.figure(1, (2.5, 1.5))
-    grid = ImageGrid(fig, (0, 0, 1, 1), nrows_ncols=(1, 3),
-                     axes_pad=(0.2, 0.15), cbar_mode="single",
-                     cbar_location="bottom", cbar_size="10%", label_mode="1")
-    # 4-tuple rect => Divider, isinstance will give True for SubplotDivider
-    assert type(grid.get_divider()) is Divider
-    for i in range(3):
-        im = grid[i].imshow(imdata, interpolation='none')
-    grid.cbar_axes[0].colorbar(im)
-
-
 @image_comparison(['image_grid.png'],
                   remove_text=True, style='mpl20',
                   savefig_kwarg={'bbox_inches': 'tight'})
@@ -604,60 +568,3 @@ def test_rgb_axes():
     g = rng.random((5, 5))
     b = rng.random((5, 5))
     ax.imshow_rgb(r, g, b, interpolation='none')
-
-
-@image_comparison(['insetposition.png'], remove_text=True)
-def test_insetposition():
-    fig, ax = plt.subplots(figsize=(2, 2))
-    ax_ins = plt.axes([0, 0, 1, 1])
-    ip = InsetPosition(ax, [0.2, 0.25, 0.5, 0.4])
-    ax_ins.set_axes_locator(ip)
-
-
-# The original version of this test relied on mpl_toolkits's slightly different
-# colorbar implementation; moving to matplotlib's own colorbar implementation
-# caused the small image comparison error.
-@image_comparison(['imagegrid_cbar_mode.png'],
-                  remove_text=True, style='mpl20', tol=0.3)
-def test_imagegrid_cbar_mode_edge():
-    # Remove this line when this test image is regenerated.
-    plt.rcParams['pcolormesh.snap'] = False
-
-    X, Y = np.meshgrid(np.linspace(0, 6, 30), np.linspace(0, 6, 30))
-    arr = np.sin(X) * np.cos(Y) + 1j*(np.sin(3*Y) * np.cos(Y/2.))
-
-    fig = plt.figure(figsize=(18, 9))
-
-    positions = (241, 242, 243, 244, 245, 246, 247, 248)
-    directions = ['row']*4 + ['column']*4
-    cbar_locations = ['left', 'right', 'top', 'bottom']*2
-
-    for position, direction, location in zip(
-            positions, directions, cbar_locations):
-        grid = ImageGrid(fig, position,
-                         nrows_ncols=(2, 2),
-                         direction=direction,
-                         cbar_location=location,
-                         cbar_size='20%',
-                         cbar_mode='edge')
-        ax1, ax2, ax3, ax4, = grid
-
-        ax1.imshow(arr.real, cmap='nipy_spectral')
-        ax2.imshow(arr.imag, cmap='hot')
-        ax3.imshow(np.abs(arr), cmap='jet')
-        ax4.imshow(np.arctan2(arr.imag, arr.real), cmap='hsv')
-
-        # In each row/column, the "first" colorbars must be overwritten by the
-        # "second" ones.  To achieve this, clear out the axes first.
-        for ax in grid:
-            ax.cax.cla()
-            cb = ax.cax.colorbar(ax.images[0])
-
-
-def test_imagegrid():
-    fig = plt.figure()
-    grid = ImageGrid(fig, 111, nrows_ncols=(1, 1))
-    ax = grid[0]
-    im = ax.imshow([[1, 2]], norm=mpl.colors.LogNorm())
-    cb = ax.cax.colorbar(im)
-    assert isinstance(cb.locator, mticker.LogLocator)
diff --git a/lib/mpl_toolkits/tests/test_axisartist_axislines.py b/lib/mpl_toolkits/tests/test_axisartist_axislines.py
index 7743cb35aa..1b239f2141 100644
--- a/lib/mpl_toolkits/tests/test_axisartist_axislines.py
+++ b/lib/mpl_toolkits/tests/test_axisartist_axislines.py
@@ -4,7 +4,7 @@ from matplotlib.testing.decorators import image_comparison
 from matplotlib.transforms import IdentityTransform

 from mpl_toolkits.axisartist.axislines import SubplotZero, Subplot
-from mpl_toolkits.axisartist import Axes, SubplotHost
+from mpl_toolkits.axisartist import Axes, SubplotHost, ParasiteAxes


 @image_comparison(['SubplotZero.png'], style='default')
@@ -81,7 +81,8 @@ def test_ParasiteAxesAuxTrans():
         ax1 = SubplotHost(fig, 1, 3, i+1)
         fig.add_subplot(ax1)

-        ax2 = ax1.get_aux_axes(IdentityTransform(), viewlim_mode=None)
+        ax2 = ParasiteAxes(ax1, IdentityTransform())
+        ax1.parasites.append(ax2)
         if name.startswith('pcolor'):
             getattr(ax2, name)(xx, yy, data[:-1, :-1])
         else:
diff --git a/lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py b/lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py
index 55e983e516..9a501daa2e 100644
--- a/lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py
+++ b/lib/mpl_toolkits/tests/test_axisartist_grid_helper_curvelinear.py
@@ -6,6 +6,7 @@ from matplotlib.projections import PolarAxes
 from matplotlib.transforms import Affine2D, Transform
 from matplotlib.testing.decorators import image_comparison

+from mpl_toolkits.axes_grid1.parasite_axes import ParasiteAxes
 from mpl_toolkits.axisartist import SubplotHost
 from mpl_toolkits.axes_grid1.parasite_axes import host_subplot_class_factory
 from mpl_toolkits.axisartist import angle_helper
@@ -65,7 +66,8 @@ def test_custom_transform():
     ax1 = SubplotHost(fig, 1, 1, 1, grid_helper=grid_helper)
     fig.add_subplot(ax1)

-    ax2 = ax1.get_aux_axes(tr, viewlim_mode="equal")
+    ax2 = ParasiteAxes(ax1, tr, viewlim_mode="equal")
+    ax1.parasites.append(ax2)
     ax2.plot([3, 6], [5.0, 10.])

     ax1.set_aspect(1.)
@@ -125,9 +127,10 @@ def test_polar_box():
     axis.get_helper().set_extremes(-180, 90)

     # A parasite axes with given transform
-    ax2 = ax1.get_aux_axes(tr, viewlim_mode="equal")
+    ax2 = ParasiteAxes(ax1, tr, viewlim_mode="equal")
     assert ax2.transData == tr + ax1.transData
     # Anything you draw in ax2 will match the ticks and grids of ax1.
+    ax1.parasites.append(ax2)
     ax2.plot(np.linspace(0, 30, 50), np.linspace(10, 10, 50))

     ax1.set_aspect(1.)
diff --git a/lib/mpl_toolkits/tests/test_mplot3d.py b/lib/mpl_toolkits/tests/test_mplot3d.py
index db371438cd..bd651d1ad5 100644
--- a/lib/mpl_toolkits/tests/test_mplot3d.py
+++ b/lib/mpl_toolkits/tests/test_mplot3d.py
@@ -5,8 +5,7 @@ import pytest

 from mpl_toolkits.mplot3d import Axes3D, axes3d, proj3d, art3d
 import matplotlib as mpl
-from matplotlib.backend_bases import (MouseButton, MouseEvent,
-                                      NavigationToolbar2)
+from matplotlib.backend_bases import MouseButton
 from matplotlib import cm
 from matplotlib import colors as mcolors, patches as mpatch
 from matplotlib.testing.decorators import image_comparison, check_figures_equal
@@ -45,25 +44,7 @@ def test_aspects():
                 ax.plot3D(*zip(start*scale, end*scale))
     for i, ax in enumerate(axs):
         ax.set_box_aspect((3, 4, 5))
-        ax.set_aspect(aspects[i], adjustable='datalim')
-
-
-@mpl3d_image_comparison(['aspects_adjust_box.png'], remove_text=False)
-def test_aspects_adjust_box():
-    aspects = ('auto', 'equal', 'equalxy', 'equalyz', 'equalxz')
-    fig, axs = plt.subplots(1, len(aspects), subplot_kw={'projection': '3d'},
-                            figsize=(11, 3))
-
-    # Draw rectangular cuboid with side lengths [4, 3, 5]
-    r = [0, 1]
-    scale = np.array([4, 3, 5])
-    pts = itertools.combinations(np.array(list(itertools.product(r, r, r))), 2)
-    for start, end in pts:
-        if np.sum(np.abs(start - end)) == r[1] - r[0]:
-            for ax in axs:
-                ax.plot3D(*zip(start*scale, end*scale))
-    for i, ax in enumerate(axs):
-        ax.set_aspect(aspects[i], adjustable='box')
+        ax.set_aspect(aspects[i])


 def test_axes3d_repr():
@@ -932,9 +913,7 @@ def test_axes3d_labelpad():
     ax.set_xlabel('X LABEL', labelpad=10)
     assert ax.xaxis.labelpad == 10
     ax.set_ylabel('Y LABEL')
-    ax.set_zlabel('Z LABEL', labelpad=20)
-    assert ax.zaxis.labelpad == 20
-    assert ax.get_zlabel() == 'Z LABEL'
+    ax.set_zlabel('Z LABEL')
     # or manually
     ax.yaxis.labelpad = 20
     ax.zaxis.labelpad = -40
@@ -978,8 +957,7 @@ def _test_proj_make_M():
     R = np.array([100, 100, 100])
     V = np.array([0, 0, 1])
     roll = 0
-    u, v, w = proj3d._view_axes(E, R, V, roll)
-    viewM = proj3d._view_transformation_uvw(u, v, w, E)
+    viewM = proj3d.view_transformation(E, R, V, roll)
     perspM = proj3d.persp_transformation(100, -100, 1)
     M = np.dot(perspM, viewM)
     return M
@@ -1045,8 +1023,7 @@ def test_proj_axes_cube_ortho():
     R = np.array([0, 0, 0])
     V = np.array([0, 0, 1])
     roll = 0
-    u, v, w = proj3d._view_axes(E, R, V, roll)
-    viewM = proj3d._view_transformation_uvw(u, v, w, E)
+    viewM = proj3d.view_transformation(E, R, V, roll)
     orthoM = proj3d.ortho_transformation(-1, 1)
     M = np.dot(orthoM, viewM)

@@ -1129,7 +1106,6 @@ def test_lines_dists_nowarning():

 def test_autoscale():
     fig, ax = plt.subplots(subplot_kw={"projection": "3d"})
-    assert ax.get_zscale() == 'linear'
     ax.margins(x=0, y=.1, z=.2)
     ax.plot([0, 1], [0, 1], [0, 1])
     assert ax.get_w_lims() == (0, 1, -.1, 1.1, -.2, 1.2)
@@ -1574,9 +1550,6 @@ def test_equal_box_aspect():
     ax.axis('off')
     ax.set_box_aspect((1, 1, 1))

-    with pytest.raises(ValueError, match="Argument zoom ="):
-        ax.set_box_aspect((1, 1, 1), zoom=-1)
-

 def test_colorbar_pos():
     num_plots = 2
@@ -1594,55 +1567,6 @@ def test_colorbar_pos():
     assert cbar.ax.get_position().extents[1] < 0.2


-def test_inverted_zaxis():
-    fig = plt.figure()
-    ax = fig.add_subplot(projection='3d')
-    assert not ax.zaxis_inverted()
-    assert ax.get_zlim() == (0, 1)
-    assert ax.get_zbound() == (0, 1)
-
-    # Change bound
-    ax.set_zbound((0, 2))
-    assert not ax.zaxis_inverted()
-    assert ax.get_zlim() == (0, 2)
-    assert ax.get_zbound() == (0, 2)
-
-    # Change invert
-    ax.invert_zaxis()
-    assert ax.zaxis_inverted()
-    assert ax.get_zlim() == (2, 0)
-    assert ax.get_zbound() == (0, 2)
-
-    # Set upper bound
-    ax.set_zbound(upper=1)
-    assert ax.zaxis_inverted()
-    assert ax.get_zlim() == (1, 0)
-    assert ax.get_zbound() == (0, 1)
-
-    # Set lower bound
-    ax.set_zbound(lower=2)
-    assert ax.zaxis_inverted()
-    assert ax.get_zlim() == (2, 1)
-    assert ax.get_zbound() == (1, 2)
-
-
-def test_set_zlim():
-    fig = plt.figure()
-    ax = fig.add_subplot(projection='3d')
-    assert ax.get_zlim() == (0, 1)
-    ax.set_zlim(zmax=2)
-    assert ax.get_zlim() == (0, 2)
-    ax.set_zlim(zmin=1)
-    assert ax.get_zlim() == (1, 2)
-
-    with pytest.raises(
-            TypeError, match="Cannot pass both 'bottom' and 'zmin'"):
-        ax.set_zlim(bottom=0, zmin=1)
-    with pytest.raises(
-            TypeError, match="Cannot pass both 'top' and 'zmax'"):
-        ax.set_zlim(top=0, zmax=1)
-
-
 def test_shared_axes_retick():
     fig = plt.figure()
     ax1 = fig.add_subplot(211, projection="3d")
@@ -1693,82 +1617,6 @@ def test_pan():
     assert z_center != pytest.approx(z_center0)


-@pytest.mark.parametrize("tool,button,key,expected",
-                         [("zoom", MouseButton.LEFT, None,  # zoom in
-                          ((0.00, 0.06), (0.01, 0.07), (0.02, 0.08))),
-                          ("zoom", MouseButton.LEFT, 'x',  # zoom in
-                          ((-0.01, 0.10), (-0.03, 0.08), (-0.06, 0.06))),
-                          ("zoom", MouseButton.LEFT, 'y',  # zoom in
-                          ((-0.07, 0.04), (-0.03, 0.08), (0.00, 0.11))),
-                          ("zoom", MouseButton.RIGHT, None,  # zoom out
-                          ((-0.09, 0.15), (-0.07, 0.17), (-0.06, 0.18))),
-                          ("pan", MouseButton.LEFT, None,
-                          ((-0.70, -0.58), (-1.03, -0.91), (-1.27, -1.15))),
-                          ("pan", MouseButton.LEFT, 'x',
-                          ((-0.96, -0.84), (-0.58, -0.46), (-0.06, 0.06))),
-                          ("pan", MouseButton.LEFT, 'y',
-                          ((0.20, 0.32), (-0.51, -0.39), (-1.27, -1.15)))])
-def test_toolbar_zoom_pan(tool, button, key, expected):
-    # NOTE: The expected zoom values are rough ballparks of moving in the view
-    #       to make sure we are getting the right direction of motion.
-    #       The specific values can and should change if the zoom movement
-    #       scaling factor gets updated.
-    fig = plt.figure()
-    ax = fig.add_subplot(projection='3d')
-    ax.scatter(0, 0, 0)
-    fig.canvas.draw()
-    xlim0, ylim0, zlim0 = ax.get_xlim3d(), ax.get_ylim3d(), ax.get_zlim3d()
-
-    # Mouse from (0, 0) to (1, 1)
-    d0 = (0, 0)
-    d1 = (1, 1)
-    # Convert to screen coordinates ("s").  Events are defined only with pixel
-    # precision, so round the pixel values, and below, check against the
-    # corresponding xdata/ydata, which are close but not equal to d0/d1.
-    s0 = ax.transData.transform(d0).astype(int)
-    s1 = ax.transData.transform(d1).astype(int)
-
-    # Set up the mouse movements
-    start_event = MouseEvent(
-        "button_press_event", fig.canvas, *s0, button, key=key)
-    stop_event = MouseEvent(
-        "button_release_event", fig.canvas, *s1, button, key=key)
-
-    tb = NavigationToolbar2(fig.canvas)
-    if tool == "zoom":
-        tb.zoom()
-        tb.press_zoom(start_event)
-        tb.drag_zoom(stop_event)
-        tb.release_zoom(stop_event)
-    else:
-        tb.pan()
-        tb.press_pan(start_event)
-        tb.drag_pan(stop_event)
-        tb.release_pan(stop_event)
-
-    # Should be close, but won't be exact due to screen integer resolution
-    xlim, ylim, zlim = expected
-    assert ax.get_xlim3d() == pytest.approx(xlim, abs=0.01)
-    assert ax.get_ylim3d() == pytest.approx(ylim, abs=0.01)
-    assert ax.get_zlim3d() == pytest.approx(zlim, abs=0.01)
-
-    # Ensure that back, forward, and home buttons work
-    tb.back()
-    assert ax.get_xlim3d() == pytest.approx(xlim0)
-    assert ax.get_ylim3d() == pytest.approx(ylim0)
-    assert ax.get_zlim3d() == pytest.approx(zlim0)
-
-    tb.forward()
-    assert ax.get_xlim3d() == pytest.approx(xlim, abs=0.01)
-    assert ax.get_ylim3d() == pytest.approx(ylim, abs=0.01)
-    assert ax.get_zlim3d() == pytest.approx(zlim, abs=0.01)
-
-    tb.home()
-    assert ax.get_xlim3d() == pytest.approx(xlim0)
-    assert ax.get_ylim3d() == pytest.approx(ylim0)
-    assert ax.get_zlim3d() == pytest.approx(zlim0)
-
-
 @mpl.style.context('default')
 @check_figures_equal(extensions=["png"])
 def test_scalarmap_update(fig_test, fig_ref):
diff --git a/pyproject.toml b/pyproject.toml
deleted file mode 100644
index ef70e18932..0000000000
--- a/pyproject.toml
+++ /dev/null
@@ -1,7 +0,0 @@
-[build-system]
-build-backend = "setuptools.build_meta"
-requires = [
-    "certifi>=2020.06.20",
-    "numpy>=1.19",
-    "setuptools_scm>=7",
-]
diff --git a/requirements/doc/doc-requirements.txt b/requirements/doc/doc-requirements.txt
index 98586608cb..ad0e44d16f 100644
--- a/requirements/doc/doc-requirements.txt
+++ b/requirements/doc/doc-requirements.txt
@@ -14,7 +14,7 @@ ipywidgets
 numpydoc>=1.0
 packaging>=20
 pydata-sphinx-theme>=0.9.0
-mpl-sphinx-theme
+mpl-sphinx-theme~=3.6.0
 sphinxcontrib-svg2pdfconverter>=1.1.0
 sphinx-gallery>=0.10
 sphinx-copybutton
diff --git a/requirements/testing/flake8.txt b/requirements/testing/flake8.txt
index a4d006b855..f987089730 100644
--- a/requirements/testing/flake8.txt
+++ b/requirements/testing/flake8.txt
@@ -5,5 +5,3 @@ flake8>=3.8
 pydocstyle>=5.1.0
 # 1.4.0 adds docstring-convention=all
 flake8-docstrings>=1.4.0
-# fix bug where flake8 aborts checking on syntax error
-flake8-force
diff --git a/setup.py b/setup.py
index f0ee4eeda0..d1f1de7078 100644
--- a/setup.py
+++ b/setup.py
@@ -34,9 +34,6 @@ import setuptools.command.build_ext
 import setuptools.command.build_py
 import setuptools.command.sdist

-# sys.path modified to find setupext.py during pyproject.toml builds.
-sys.path.append(str(Path(__file__).resolve().parent))
-
 import setupext
 from setupext import print_raw, print_status

@@ -71,12 +68,6 @@ def has_flag(self, flagname):

 class BuildExtraLibraries(setuptools.command.build_ext.build_ext):
     def finalize_options(self):
-        # If coverage is enabled then need to keep the .o and .gcno files in a
-        # non-temporary directory otherwise coverage info not collected.
-        cppflags = os.getenv('CPPFLAGS')
-        if cppflags and '--coverage' in cppflags:
-            self.build_temp = 'build'
-
         self.distribution.ext_modules[:] = [
             ext
             for package in good_packages
@@ -217,9 +208,8 @@ def update_matplotlibrc(path):
 class BuildPy(setuptools.command.build_py.build_py):
     def run(self):
         super().run()
-        if not self.editable_mode:
-            update_matplotlibrc(
-                Path(self.build_lib, "matplotlib/mpl-data/matplotlibrc"))
+        update_matplotlibrc(
+            Path(self.build_lib, "matplotlib/mpl-data/matplotlibrc"))


 class Sdist(setuptools.command.sdist.sdist):
@@ -281,8 +271,8 @@ setup(  # Finally, pass this all along to setuptools to do the heavy lifting.
         'Forum': 'https://discourse.matplotlib.org/',
         'Donate': 'https://numfocus.org/donate-to-matplotlib'
     },
-    long_description=Path("README.md").read_text(encoding="utf-8"),
-    long_description_content_type="text/markdown",
+    long_description=Path("README.rst").read_text(encoding="utf-8"),
+    long_description_content_type="text/x-rst",
     license="PSF",
     platforms="any",
     classifiers=[
@@ -310,6 +300,11 @@ setup(  # Finally, pass this all along to setuptools to do the heavy lifting.
     package_data=package_data,

     python_requires='>={}'.format('.'.join(str(n) for n in py_min_version)),
+    setup_requires=[
+        "certifi>=2020.06.20",
+        "numpy>=1.19",
+        "setuptools_scm>=7",
+    ],
     install_requires=[
         "contourpy>=1.0.1",
         "cycler>=0.10",
diff --git a/test_bar_nan.py b/test_bar_nan.py
new file mode 100644
index 0000000000..1d27af1bba
--- /dev/null
+++ b/test_bar_nan.py
@@ -0,0 +1,5 @@
+import numpy as np
+import matplotlib.pyplot as plt
+f, ax = plt.subplots()
+ax.bar([np.nan], [np.nan])
+plt.show()
diff --git a/tutorials/introductory/images.py b/tutorials/introductory/images.py
index 7673037c4a..3f816b5b6a 100644
--- a/tutorials/introductory/images.py
+++ b/tutorials/introductory/images.py
@@ -49,8 +49,7 @@ For now, let's get on with the implicit approach:
 """

 import matplotlib.pyplot as plt
-import numpy as np
-from PIL import Image
+import matplotlib.image as mpimg

 ###############################################################################
 # .. _importing_data:
@@ -73,14 +72,23 @@ from PIL import Image
 # <https://raw.githubusercontent.com/matplotlib/matplotlib/main/doc/_static/stinkbug.png>`_
 # to your computer for the rest of this tutorial.
 #
-# We use Pillow to open an image (with `PIL.Image.open`), and immediately
-# convert the `PIL.Image.Image` object into an 8-bit (``dtype=uint8``) numpy
-# array.
+# And here we go...

-img = np.asarray(Image.open('../../doc/_static/stinkbug.png'))
-print(repr(img))
+img = mpimg.imread('../../doc/_static/stinkbug.png')
+print(img)

 ###############################################################################
+# Note the dtype there - float32.  Matplotlib has rescaled the 8 bit
+# data from each channel to floating point data between 0.0 and 1.0.  As
+# a side note, the only datatype that Pillow can work with is uint8.
+# Matplotlib plotting can handle float32 and uint8, but image
+# reading/writing for any format other than PNG is limited to uint8
+# data.  Why 8 bits? Most displays can only render 8 bits per channel
+# worth of color gradation.  Why can they only render 8 bits/channel?
+# Because that's about all the human eye can see.  More here (from a
+# photography standpoint): `Luminous Landscape bit depth tutorial
+# <https://luminous-landscape.com/bit-depth/>`_.
+#
 # Each inner list represents a pixel.  Here, with an RGB image, there
 # are 3 values.  Since it's a black and white image, R, G, and B are all
 # similar.  An RGBA (where A is alpha, or transparency) has 4 values
@@ -178,7 +186,7 @@ plt.colorbar()
 # interesting regions is the histogram.  To create a histogram of our
 # image data, we use the :func:`~matplotlib.pyplot.hist` function.

-plt.hist(lum_img.ravel(), bins=range(256), fc='k', ec='k')
+plt.hist(lum_img.ravel(), bins=256, range=(0.0, 1.0), fc='k', ec='k')

 ###############################################################################
 # Most often, the "interesting" part of the image is around the peak,
@@ -186,23 +194,29 @@ plt.hist(lum_img.ravel(), bins=range(256), fc='k', ec='k')
 # below the peak.  In our histogram, it looks like there's not much
 # useful information in the high end (not many white things in the
 # image).  Let's adjust the upper limit, so that we effectively "zoom in
-# on" part of the histogram.  We do this by setting *clim*, the colormap
-# limits.
+# on" part of the histogram.  We do this by passing the clim argument to
+# imshow.  You could also do this by calling the
+# :meth:`~matplotlib.cm.ScalarMappable.set_clim` method of the image plot
+# object, but make sure that you do so in the same cell as your plot
+# command when working with the Jupyter Notebook - it will not change
+# plots from earlier cells.
 #
-# This can be done by passing a *clim* keyword argument in the call to
-# ``imshow``.
+# You can specify the clim in the call to ``plot``.

-plt.imshow(lum_img, clim=(0, 175))
+imgplot = plt.imshow(lum_img, clim=(0.0, 0.7))

 ###############################################################################
-# This can also be done by calling the
-# :meth:`~matplotlib.cm.ScalarMappable.set_clim` method of the returned image
-# plot object, but make sure that you do so in the same cell as your plot
-# command when working with the Jupyter Notebook - it will not change
-# plots from earlier cells.
-
+# You can also specify the clim using the returned object
+fig = plt.figure()
+ax = fig.add_subplot(1, 2, 1)
+imgplot = plt.imshow(lum_img)
+ax.set_title('Before')
+plt.colorbar(ticks=[0.1, 0.3, 0.5, 0.7], orientation='horizontal')
+ax = fig.add_subplot(1, 2, 2)
 imgplot = plt.imshow(lum_img)
-imgplot.set_clim(0, 175)
+imgplot.set_clim(0.0, 0.7)
+ax.set_title('After')
+plt.colorbar(ticks=[0.1, 0.3, 0.5, 0.7], orientation='horizontal')

 ###############################################################################
 # .. _Interpolation:
@@ -226,17 +240,19 @@ imgplot.set_clim(0, 175)
 # We'll use the Pillow library that we used to load the image also to resize
 # the image.

+from PIL import Image
+
 img = Image.open('../../doc/_static/stinkbug.png')
 img.thumbnail((64, 64))  # resizes image in-place
 imgplot = plt.imshow(img)

 ###############################################################################
-# Here we use the default interpolation ("nearest"), since we did not
+# Here we have the default interpolation, bilinear, since we did not
 # give :func:`~matplotlib.pyplot.imshow` any interpolation argument.
 #
-# Let's try some others. Here's "bilinear":
+# Let's try some others. Here's "nearest", which does no interpolation.

-imgplot = plt.imshow(img, interpolation="bilinear")
+imgplot = plt.imshow(img, interpolation="nearest")

 ###############################################################################
 # and bicubic:
diff --git a/tutorials/introductory/lifecycle.py b/tutorials/introductory/lifecycle.py
index da976a39de..b0181b4df7 100644
--- a/tutorials/introductory/lifecycle.py
+++ b/tutorials/introductory/lifecycle.py
@@ -26,7 +26,7 @@ explicit and implicit interfaces see :ref:`api_interfaces`.
 In the explicit object-oriented (OO) interface we directly utilize instances of
 :class:`axes.Axes` to build up the visualization in an instance of
 :class:`figure.Figure`.  In the implicit interface, inspired by and modeled on
-MATLAB, we use a global state-based interface which is encapsulated in the
+MATLAB, uses an global state-based interface which is is encapsulated in the
 :mod:`.pyplot` module to plot to the "current Axes".  See the :doc:`pyplot
 tutorials </tutorials/introductory/pyplot>` for a more in-depth look at the
 pyplot interface.
@@ -34,16 +34,16 @@ pyplot interface.
 Most of the terms are straightforward but the main thing to remember
 is that:

-* The `.Figure` is the final image, and may contain one or more `~.axes.Axes`.
-* The `~.axes.Axes` represents an individual plot (not to be confused with
-   `~.axis.Axis`, which refers to the x/y axis of a plot).
+* The Figure is the final image that may contain 1 or more Axes.
+* The Axes represent an individual plot (don't confuse this with the word
+  "axis", which refers to the x/y axis of a plot).

 We call methods that do the plotting directly from the Axes, which gives
 us much more flexibility and power in customizing our plot.

 .. note::

-   In general, use the explicit interface over the implicit pyplot interface
+   In general prefer the explicit interface over the implicit pyplot interface
    for plotting.

 Our data
diff --git a/tutorials/toolkits/axisartist.py b/tutorials/toolkits/axisartist.py
index 087a4fab20..2e539cc3f2 100644
--- a/tutorials/toolkits/axisartist.py
+++ b/tutorials/toolkits/axisartist.py
@@ -519,9 +519,10 @@ coordinates, or you may use Parasite Axes for convenience.::
     ax1 = SubplotHost(fig, 1, 2, 2, grid_helper=grid_helper)

     # A parasite axes with given transform
-    ax2 = ax1.get_aux_axes(tr, "equal")
+    ax2 = ParasiteAxesAuxTrans(ax1, tr, "equal")
     # note that ax2.transData == tr + ax1.transData
     # Anything you draw in ax2 will match the ticks and grids of ax1.
+    ax1.parasites.append(ax2)

 .. figure:: ../../gallery/axisartist/images/sphx_glr_demo_curvelinear_grid_001.png
    :target: ../../gallery/axisartist/demo_curvelinear_grid.html
--------
2025-01-21 04:38:02,357 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.mwaskom_s_seaborn-3187. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-21 04:38:02,357 - INFO - Logging LLM completions for instance mwaskom__seaborn-3187 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/deepseek-reasoner_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/mwaskom__seaborn-3187
