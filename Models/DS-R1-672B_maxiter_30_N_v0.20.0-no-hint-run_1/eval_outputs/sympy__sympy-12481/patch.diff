diff --git a/sympy/combinatorics/permutations.py b/sympy/combinatorics/permutations.py
index 136ed5a478..80decd196c 100644
--- a/sympy/combinatorics/permutations.py
+++ b/sympy/combinatorics/permutations.py
@@ -858,7 +858,18 @@ def __new__(cls, *args, **kwargs):
         ok = True
         if not args:  # a
             return _af_new(list(range(size or 0)))
-        elif len(args) > 1:  # c
+        elif len(args) > 1:
+                # Handle overlapping cycles through left-to-right composition
+                temp_perm = list(range(size))
+                for cycle in args:
+                    cycle = [int(i) for i in cycle]
+                    if len(cycle) < 2: continue
+                    for i in range(len(cycle)):
+                        src = cycle[i]
+                        dst = cycle[(i+1) % len(cycle)]
+                        temp_perm[src] = temp_perm[dst]
+                args = [_af_new(temp_perm)]
+                # Original validation code below (now operating on composed permutation)  # c
             return _af_new(Cycle(*args).list(size))
         if len(args) == 1:
             a = args[0]
