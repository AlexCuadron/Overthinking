diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py
index 5f41053283..83c2c849eb 100644
--- a/django/db/migrations/autodetector.py
+++ b/django/db/migrations/autodetector.py
@@ -188,7 +188,8 @@ class MigrationAutodetector:
         self.generate_renamed_fields()
         self.generate_renamed_indexes()
         # Generate removal of foo together.
-        self.generate_removed_altered_unique_together()
+        # Skip redundant unique_together removal if field has unique=True
+        self.generate_non_redundant_unique_together_removal()
         self.generate_removed_altered_index_together()
         # Generate field operations.
         self.generate_removed_fields()
@@ -1497,7 +1498,32 @@ class MigrationAutodetector:
                 )

     def generate_removed_altered_unique_together(self):
-        self._generate_removed_altered_foo_together(operations.AlterUniqueTogether)
+        """
+        Handle unique_together removals, skipping single-field constraints that
+        are redundant with unique=True fields
+        """
+        for (
+            old_value,
+            new_value,
+            app_label,
+            model_name,
+            dependencies,
+        ) in self._get_altered_foo_together_operations("unique_together"):
+            # Filter out single-field constraints with unique=True
+            filtered_old = [
+                constraint for constraint in old_value
+                if not (len(constraint) == 1 and
+                       self.to_state.models[app_label, model_name].fields[constraint[0]].unique)
+            ]
+            if filtered_old != new_value:
+                self.add_operation(
+                    app_label,
+                    operations.AlterUniqueTogether(
+                        name=model_name,
+                        unique_together=new_value if new_value else None,
+                    ),
+                    dependencies=dependencies,
+                )

     def generate_removed_altered_index_together(self):
         self._generate_removed_altered_foo_together(operations.AlterIndexTogether)
