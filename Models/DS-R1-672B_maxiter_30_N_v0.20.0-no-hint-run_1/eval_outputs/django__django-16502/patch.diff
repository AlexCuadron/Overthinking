diff --git a/django/core/servers/basehttp.py b/django/core/servers/basehttp.py
index fef5532e58..2801d1adf1 100644
--- a/django/core/servers/basehttp.py
+++ b/django/core/servers/basehttp.py
@@ -128,18 +128,17 @@ class ServerHandler(simple_server.ServerHandler):
             LimitedStream(stdin, content_length), stdout, stderr, environ, **kwargs
         )

+    def finish_response(self):
+        if self.environ.get('REQUEST_METHOD', '').upper() == 'HEAD':
+            self.result = []
+        super().finish_response()
+
     def cleanup_headers(self):
         super().cleanup_headers()
-        # HTTP/1.1 requires support for persistent connections. Send 'close' if
-        # the content length is unknown to prevent clients from reusing the
-        # connection.
         if "Content-Length" not in self.headers:
             self.headers["Connection"] = "close"
-        # Persistent connections require threading server.
         elif not isinstance(self.request_handler.server, socketserver.ThreadingMixIn):
             self.headers["Connection"] = "close"
-        # Mark the connection for closing if it's set as such above or if the
-        # application sent the header.
         if self.headers.get("Connection") == "close":
             self.request_handler.close_connection = True
