diff --git a/django/forms/models.py b/django/forms/models.py
index dafc11f995..82459bd065 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -1146,7 +1146,10 @@ class ModelChoiceIterator:
         self.queryset = field.queryset

     def __iter__(self):
-        if self.field.empty_label is not None:
+        # Remove empty label for RadioSelect when required
+        if (self.field.empty_label is not None
+            and not (isinstance(self.field.widget, forms.RadioSelect)
+                    and self.field.required)):
             yield ("", self.field.empty_label)
         queryset = self.queryset
         # Can't use iterator() when queryset uses prefetch_related()
diff --git a/test_radio_select.py b/test_radio_select.py
new file mode 100644
index 0000000000..d746695890
--- /dev/null
+++ b/test_radio_select.py
@@ -0,0 +1,27 @@
+import os
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'test_project.settings')
+import django
+django.setup()
+
+from django import forms
+from django.db import models
+
+class BatchData(models.Model):
+    name = models.CharField(max_length=100)
+
+class TestRun(models.Model):
+    data_file = models.ForeignKey(BatchData, on_delete=models.SET_NULL, null=True, blank=False)
+
+class TestRunForm(forms.ModelForm):
+    class Meta:
+        model = TestRun
+        fields = ['data_file']
+        widgets = {'data_file': forms.RadioSelect()}
+
+if __name__ == '__main__':
+    # Create test data
+    BatchData.objects.create(name='First Data File')
+
+    # Create form instance
+    form = TestRunForm()
+    print(form['data_file'])
\ No newline at end of file
