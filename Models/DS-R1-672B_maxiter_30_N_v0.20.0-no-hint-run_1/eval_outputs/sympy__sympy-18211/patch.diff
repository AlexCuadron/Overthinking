diff --git a/sympy/solvers/inequalities.py b/sympy/solvers/inequalities.py
index 9127d217f1..267280f181 100644
--- a/sympy/solvers/inequalities.py
+++ b/sympy/solvers/inequalities.py
@@ -522,9 +522,9 @@ def solve_univariate_inequality(expr, gen, relational=True, domain=S.Reals, cont
                 # this might raise ValueError on its own
                 # or it might give None...
                 solns = solvify(e, gen, domain)
-                if solns is None:
-                    # in which case we raise ValueError
-                    raise ValueError
+    if solns is None:
+        return ConditionSet(gen, e, domain)
+
             except (ValueError, NotImplementedError):
                 # replace gen with generic x since it's
                 # univariate anyway
diff --git a/sympy/solvers/solveset.py b/sympy/solvers/solveset.py
index 445be3e0e8..89c9ef5ae3 100644
--- a/sympy/solvers/solveset.py
+++ b/sympy/solvers/solveset.py
@@ -2131,11 +2131,13 @@ def solvify(f, symbol, domain):
     """
     solution_set = solveset(f, symbol, domain)
     result = None
-    if solution_set is S.EmptySet:
+    if solution_set is S.EmptySet or isinstance(solution_set, ConditionSet):
+    return None
         result = []

     elif isinstance(solution_set, ConditionSet):
-        raise NotImplementedError('solveset is unable to solve this equation.')
+    return None  # Signal to caller that equation needs ConditionSet
+        return None

     elif isinstance(solution_set, FiniteSet):
         result = list(solution_set)
