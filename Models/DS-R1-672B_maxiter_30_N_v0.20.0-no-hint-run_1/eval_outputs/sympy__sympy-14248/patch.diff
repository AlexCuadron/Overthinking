diff --git a/sympy/printing/str.py b/sympy/printing/str.py
index 0baefe0f7f..2593fbfba3 100644
--- a/sympy/printing/str.py
+++ b/sympy/printing/str.py
@@ -1,3 +1,23 @@
+def _print_MatAdd(self, expr):
+        terms = []
+        for term in expr.args:
+            if term.is_MatMul and term.args[0].is_Number and term.args[0] < 0:
+                terms.append("- %s" % self._print(-term))
+            else:
+                terms.append("+ %s" % self._print(term))
+        if terms and terms[0].startswith("+ "):
+            terms[0] = terms[0][2:]
+        return ' '.join(terms)
+def _print_MatAdd(self, expr):
+        terms = []
+        for term in expr.args:
+            if term.is_MatMul and term.args[0].is_Number and term.args[0] < 0:
+                terms.append("- %s" % self._print(-term))
+            else:
+                terms.append("+ %s" % self._print(term))
+        if terms and terms[0].startswith("+ "):
+            terms[0] = terms[0][2:]
+        return ' '.join(terms)
 """
 A Printer for generating readable representation of most sympy classes.
 """
@@ -578,6 +598,26 @@ def _print_mpq(self, expr):
     def _print_Float(self, expr):
         prec = expr._prec
         if prec < 5:
+def _print_MatAdd(self, expr):
+        terms = []
+        for term in expr.args:
+            if term.is_MatMul and term.args[0].is_Number and term.args[0] < 0:
+                terms.append("- %s" % self._print(-term))
+            else:
+                terms.append("+ %s" % self._print(term))
+        if terms and terms[0].startswith("+ "):
+            terms[0] = terms[0][2:]
+        return ' '.join(terms)
+def _print_MatAdd(self, expr):
+        terms = []
+        for term in expr.args:
+            if term.is_MatMul and term.args[0].is_Number and term.args[0] < 0:
+                terms.append("- %s" % self._print(-term))
+            else:
+                terms.append("+ %s" % self._print(term))
+        if terms and terms[0].startswith("+ "):
+            terms[0] = terms[0][2:]
+        return ' '.join(terms)
             dps = 0
         else:
             dps = prec_to_dps(expr._prec)
