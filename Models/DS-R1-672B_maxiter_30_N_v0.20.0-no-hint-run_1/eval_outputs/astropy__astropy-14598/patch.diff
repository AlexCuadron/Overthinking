diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py
index 1b3285ddce..ead0fe0a23 100644
--- a/astropy/io/fits/card.py
+++ b/astropy/io/fits/card.py
@@ -64,7 +64,7 @@ class Card(_Verify):

     # Used in cards using the CONTINUE convention which expect a string
     # followed by an optional comment
-    _strg = r"\'(?P<strg>([ -~]+?|\'\'|) *?)\'(?=$|/| )"
+    _strg = r"\'(?P<strg>(\'\'|[ -~])*)\'(?=$|/| |&)"
     _comm_field = r"(?P<comm_field>(?P<sepr>/ *)(?P<comm>(.|\n)*))"
     _strg_comment_RE = re.compile(f"({_strg})? *{_comm_field}?")

@@ -1058,7 +1058,21 @@ class Card(_Verify):

         # do the value string
         value = self._value.replace("'", "''")
-        words = _words_group(value, value_length)
+def _split_preserving_double_quotes(s, max_length):
+    chunks = []
+    pos = 0
+    while pos < len(s):
+        end = pos + max_length
+        if end > len(s):
+            end = len(s)
+        else:
+            # Avoid splitting '' across chunks
+            while end > pos and s[end-1] == "'" and (end == len(s) or s[end] != "'"):
+                end -= 1
+        chunks.append(s[pos:end])
+        pos = end
+    return chunks
+        words = _split_preserving_double_quotes(value, value_length)
         for idx, word in enumerate(words):
             if idx == 0:
                 headstr = "{:{len}}= ".format(self.keyword, len=KEYWORD_LENGTH)
@@ -1194,6 +1208,21 @@ class Card(_Verify):
                             fix_text=fix_text,
                             fix=self._fix_value,
                         )
+
+def _split_preserving_double_quotes(s, max_length):
+        chunks = []
+        pos = 0
+        while pos < len(s):
+            end = pos + max_length
+            if end > len(s):
+                end = len(s)
+            else:
+                # Avoid splitting '' across chunks
+                while end > pos and s[end-1] == "'" and (end == len(s) or s[end] != "'"):
+                    end -= 1
+            chunks.append(s[pos:end])
+            pos = end
+        return chunks
                     )

         # verify the comment (string), it is never fixable
