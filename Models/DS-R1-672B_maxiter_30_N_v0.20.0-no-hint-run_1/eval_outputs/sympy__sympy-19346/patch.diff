diff --git a/sympy/printing/repr.py b/sympy/printing/repr.py
index c936a692c0..1354e7fc50 100644
--- a/sympy/printing/repr.py
+++ b/sympy/printing/repr.py
@@ -102,6 +102,15 @@ def _print_Function(self, expr):
         r += '(%s)' % ', '.join([self._print(a) for a in expr.args])
         return r

+    def _print_set(self, s):
+        from sympy.utilities import default_sort_key
+        return "set([%s])" % ", ".join(self._print(item) for item in sorted(s, key=default_sort_key))
+
+    def _print_dict(self, d):
+        from sympy.utilities import default_sort_key
+        items = sorted(d.items(), key=lambda item: default_sort_key(item[0]))
+        return "dict([%s])" % ", ".join("(%s, %s)" % (self._print(k), self._print(v)) for k, v in items)
+
     def _print_FunctionClass(self, expr):
         if issubclass(expr, AppliedUndef):
             return 'Function(%r)' % (expr.__name__)
@@ -205,6 +214,41 @@ def _print_Mul(self, expr, order=None):
             return clsname + "(*[%s])" % ", ".join(args)
         return clsname + "(%s)" % ", ".join(args)

+def _print_set(self, s):
+        from sympy.utilities import default_sort_key
+        return "set([%s])" % ", ".join(self._print(item) for item in sorted(s, key=default_sort_key))
+
+    def _print_dict(self, d):
+        from sympy.utilities import default_sort_key
+        items = sorted(d.items(), key=lambda item: default_sort_key(item[0]))
+        return "dict([%s])" % ", ".join("(%s, %s)" % (self._print(k), self._print(v)) for k, v in items)
+    def _print_set(self, s):
+        from sympy.utilities import default_sort_key
+        return "set([%s])" % ", ".join(self._print(item) for item in sorted(s, key=default_sort_key))
+
+    def _print_dict(self, d):
+        from sympy.utilities import default_sort_key
+        items = sorted(d.items(), key=lambda item: default_sort_key(item[0]))
+        return "dict([%s])" % ", ".join("(%s, %s)" % (self._print(k), self._print(v)) for k, v in items)
+
+    def _print_set(self, s):
+        from sympy.utilities import default_sort_key
+        return "set([%s])" % ", ".join(self._print(item) for item in sorted(s, key=default_sort_key))
+
+    def _print_dict(self, d):
+        from sympy.utilities import default_sort_key
+        items = sorted(d.items(), key=lambda item: default_sort_key(item[0]))
+        return "dict([%s])" % ", ".join("(%s, %s)" % (self._print(k), self._print(v)) for k, v in items)
+
+    def _print_set(self, s):
+        from sympy.utilities import default_sort_key
+        return "set([%s])" % ", ".join(self._print(item) for item in sorted(s, key=default_sort_key))
+
+    def _print_dict(self, d):
+        from sympy.utilities import default_sort_key
+        items = sorted(d.items(), key=lambda item: default_sort_key(item[0]))
+        return "dict([%s])" % ", ".join("(%s, %s)" % (self._print(k), self._print(v)) for k, v in items)
+
     def _print_Rational(self, expr):
         return 'Rational(%s, %s)' % (self._print(expr.p), self._print(expr.q))
