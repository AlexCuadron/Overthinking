diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py
index 773f545af..2dd4c2553 100644
--- a/src/_pytest/unittest.py
+++ b/src/_pytest/unittest.py
@@ -117,6 +117,12 @@ class TestCaseFunction(Function):
         self._explicit_tearDown = None
         self._testcase = self.parent.obj(self.name)
         self._obj = getattr(self._testcase, self.name)
+
+        # Prevent tearDown from running for skipped tests when using --pdb
+        if self.config.getoption("usepdb"):
+            self._explicit_tearDown = self._testcase.tearDown
+            setattr(self._testcase, "tearDown", lambda *args: None)
+
         if hasattr(self, "_request"):
             self._request._fillfixtures()

@@ -214,16 +220,15 @@ class TestCaseFunction(Function):
         if is_async_function(self.obj):
             self._testcase(self)
         else:
+            if self.config.getoption("usepdb"):
+                self._explicit_tearDown = self._testcase.tearDown
+                setattr(self._testcase, "tearDown", lambda *args: None)
             # when --pdb is given, we want to postpone calling tearDown() otherwise
             # when entering the pdb prompt, tearDown() would have probably cleaned up
             # instance variables, which makes it difficult to debug
             # arguably we could always postpone tearDown(), but this changes the moment where the
             # TestCase instance interacts with the results object, so better to only do it
             # when absolutely needed
-            if self.config.getoption("usepdb"):
-                self._explicit_tearDown = self._testcase.tearDown
-                setattr(self._testcase, "tearDown", lambda *args: None)
-
             # we need to update the actual bound method with self.obj, because
             # wrap_pytest_function_for_tracing replaces self.obj by a wrapper
             setattr(self._testcase, self.name, self.obj)
