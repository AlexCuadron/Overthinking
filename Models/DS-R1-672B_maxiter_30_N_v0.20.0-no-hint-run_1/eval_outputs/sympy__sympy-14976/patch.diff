diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py
index f71bea25f5..9ef4323b57 100644
--- a/sympy/utilities/lambdify.py
+++ b/sympy/utilities/lambdify.py
@@ -413,8 +413,16 @@ def lambdify(args, expr, modules=None, printer=None, use_imps=True,
             if isinstance(m, dict):
                 for k in m:
                     user_functions[k] = k
+        if _module_present('mpmath', namespaces):
+            from sympy.printing.pycode import MpmathPrinter
+            class PatchedMpmathPrinter(MpmathPrinter):
+                def _print_Rational(self, expr):
+                    p = expr.p
+                    q = expr.q
+                    return f"mpf({p})/mpf({q})"
+            Printer = PatchedMpmathPrinter
         printer = Printer({'fully_qualified_modules': False, 'inline': True,
-                           'user_functions': user_functions})
+                               'user_functions': user_functions})

     # Get the names of the args, for creating a docstring
     if not iterable(args):
diff --git a/test_lambdify.py b/test_lambdify.py
new file mode 100644
index 0000000000..9d2c916441
--- /dev/null
+++ b/test_lambdify.py
@@ -0,0 +1,9 @@
+from sympy import Eq, rf, lambdify, S, nsolve
+from sympy.abc import x
+
+eqn = Eq(rf(18, x), 77 + S(1)/3)
+f = lambdify(x, eqn.lhs - eqn.rhs, 'mpmath')
+print(f(2))
+
+x0 = nsolve(eqn, 1.5, prec=64)
+print(rf(18, x0).evalf(64))
