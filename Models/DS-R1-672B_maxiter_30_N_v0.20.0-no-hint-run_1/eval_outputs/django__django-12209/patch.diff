diff --git a/django/db/models/base.py b/django/db/models/base.py
index e3b14a41a0..81f4ba390a 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -847,14 +847,18 @@ class Model(metaclass=ModelBase):
         if not pk_set and (force_update or update_fields):
             raise ValueError("Cannot force an update in save() with no primary key.")
         updated = False
-        # Skip an UPDATE when adding an instance and primary key has a default.
-        if (
-            not force_insert and
-            self._state.adding and
-            self._meta.pk.default and
-            self._meta.pk.default is not NOT_PROVIDED
-        ):
-            force_insert = True
+        # Determine if we should perform INSERT or UPDATE when adding with explicit pk
+        if not force_insert and self._state.adding:
+            if self.pk is not None:
+                # Check if the pk exists in the database
+                exists = cls._base_manager.using(using).filter(pk=self.pk).exists()
+                if exists:
+                    force_update = True
+                    self._state.adding = False
+                else:
+                    force_insert = True
+            elif self._meta.pk.default and self._meta.pk.default is not NOT_PROVIDED:
+                force_insert = True
         # If possible, try an UPDATE. If that doesn't update anything, do an INSERT.
         if pk_set and not force_insert:
             base_qs = cls._base_manager.using(using)
