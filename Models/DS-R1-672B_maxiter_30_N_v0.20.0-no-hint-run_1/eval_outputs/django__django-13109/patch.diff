diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py
index d517d7269b..0f0a5d982b 100644
--- a/django/db/models/fields/related.py
+++ b/django/db/models/fields/related.py
@@ -914,7 +914,7 @@ class ForeignKey(ForeignObject):
             return

         using = router.db_for_read(self.remote_field.model, instance=model_instance)
-        qs = self.remote_field.model._default_manager.using(using).filter(
+        qs = self.remote_field.model._base_manager.using(using).filter(
             **{self.remote_field.field_name: value}
         )
         qs = qs.complex_filter(self.get_limit_choices_to())
@@ -984,7 +984,7 @@ class ForeignKey(ForeignObject):
                              (self.name, self.remote_field.model))
         return super().formfield(**{
             'form_class': forms.ModelChoiceField,
-            'queryset': self.remote_field.model._default_manager.using(using),
+            'queryset': self.remote_field.model._base_manager.using(using),
             'to_field_name': self.remote_field.field_name,
             **kwargs,
             'blank': self.blank,
@@ -1668,7 +1668,7 @@ class ManyToManyField(RelatedField):
     def formfield(self, *, using=None, **kwargs):
         defaults = {
             'form_class': forms.ModelMultipleChoiceField,
-            'queryset': self.remote_field.model._default_manager.using(using),
+            'queryset': self.remote_field.model._base_manager.using(using),
             **kwargs,
         }
         # If initial is passed in, it's a list of related objects, but the
