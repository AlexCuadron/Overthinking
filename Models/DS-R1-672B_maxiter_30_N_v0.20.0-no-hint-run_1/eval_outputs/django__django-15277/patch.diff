diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index f30b523346..88c9ca9f28 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -1010,7 +1010,8 @@ class CharField(Field):
     def __init__(self, *args, db_collation=None, **kwargs):
         super().__init__(*args, **kwargs)
         self.db_collation = db_collation
-        self.validators.append(validators.MaxLengthValidator(self.max_length))
+        if self.max_length is not None:
+            self.validators.append(validators.MaxLengthValidator(self.max_length))

     def check(self, **kwargs):
         databases = kwargs.get('databases') or []
diff --git a/test_charfield.py b/test_charfield.py
new file mode 100644
index 0000000000..1eb18b9216
--- /dev/null
+++ b/test_charfield.py
@@ -0,0 +1,21 @@
+from django.db.models import CharField
+from django.core import validators
+
+# Test case from PR description
+field = CharField()
+print("CharField with no max_length has validators:", field.validators)
+
+field_with_length = CharField(max_length=255)
+has_validator = any(isinstance(v, validators.MaxLengthValidator) for v in field_with_length.validators)
+print("CharField with max_length has MaxLengthValidator:", has_validator)
+EOF > test_charfield.py
+from django.db.models import CharField
+from django.core import validators
+
+# Test case from PR description
+field = CharField()
+print("CharField with no max_length has validators:", field.validators)
+
+field_with_length = CharField(max_length=255)
+has_validator = any(isinstance(v, validators.MaxLengthValidator) for v in field_with_length.validators)
+print("CharField with max_length has MaxLengthValidator:", has_validator)
