diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py
index b192df4fbf..76a3dc7140 100644
--- a/django/db/models/fields/related_descriptors.py
+++ b/django/db/models/fields/related_descriptors.py
@@ -145,7 +145,19 @@ class ForwardManyToOneDescriptor:
             }
         else:
             query = {"%s__in" % self.field.related_query_name(): instances}
-        queryset = queryset.filter(**query)
+
+        # Handle sliced querysets by temporarily removing limits
+        low = queryset.query.low_mark
+        high = queryset.query.high_mark
+        if low != 0 or high is not None:
+            new_queryset = queryset.model.objects.all()
+            new_queryset.query = queryset.query.clone()
+            new_queryset.query.clear_limits()
+            new_queryset = new_queryset.filter(**query)
+            new_queryset.query.set_limits(low, high)
+            queryset = new_queryset
+        else:
+            queryset = queryset.filter(**query)

         # Since we're going to assign directly in the cache,
         # we must manage the reverse relation cache manually.
