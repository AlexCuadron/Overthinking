diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py
index 1877c3f92a..cf2c9662fd 100644
--- a/sympy/printing/pycode.py
+++ b/sympy/printing/pycode.py
@@ -202,6 +202,18 @@ def _print_Mod(self, expr):
         PREC = precedence(expr)
         return ('{} % {}'.format(*map(lambda x: self.parenthesize(x, PREC), expr.args)))

+    def _print_Tuple(self, expr):
+        if len(expr) == 1:
+            return "(%s,)" % self._print(expr[0])
+        else:
+            return "(%s)" % ", ".join(self._print(arg) for arg in expr)
+
+    def _print_tuple(self, expr):
+        if len(expr) == 1:
+            return "(%s,)" % self._print(expr[0])
+        else:
+            return "(%s)" % ", ".join(self._print(arg) for arg in expr)
+
     def _print_Piecewise(self, expr):
         result = []
         i = 0
diff --git a/sympy/printing/python.py b/sympy/printing/python.py
index 44ffd5ed74..ddbd097c5d 100644
--- a/sympy/printing/python.py
+++ b/sympy/printing/python.py
@@ -36,6 +36,12 @@ def _print_Symbol(self, expr):
             self.symbols.append(symbol)
         return StrPrinter._print_Symbol(self, expr)

+    def _print_Tuple(self, expr):
+        if len(expr) == 1:
+            return "(%s,)" % self._print(expr[0])
+        else:
+            return "(%s)" % ", ".join(self._print(arg) for arg in expr)
+
     def _print_module(self, expr):
         raise ValueError('Modules in the expression are unacceptable')
