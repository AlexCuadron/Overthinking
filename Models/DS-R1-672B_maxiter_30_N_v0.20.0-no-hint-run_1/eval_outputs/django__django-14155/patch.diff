diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 9b00e24509..bca81dd7a1 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -38,6 +38,14 @@ class ResolverMatch:
         self.route = route
         self.tried = tried

+        if isinstance(self.func, functools.partial):
+            self.partial_args = self.func.args
+            self.partial_kwargs = self.func.keywords
+            self.func = self.func.func
+        else:
+            self.partial_args = ()
+            self.partial_kwargs = {}
+
         # If a URLRegexResolver doesn't have a namespace or app_name, it passes
         # in an empty value.
         self.app_names = [x for x in app_names if x] if app_names else []
@@ -45,12 +53,12 @@ class ResolverMatch:
         self.namespaces = [x for x in namespaces if x] if namespaces else []
         self.namespace = ':'.join(self.namespaces)

-        if not hasattr(func, '__name__'):
+        if not hasattr(self.func, '__name__'):
             # A class-based view
-            self._func_path = func.__class__.__module__ + '.' + func.__class__.__name__
+            self._func_path = self.func.__class__.__module__ + '.' + self.func.__class__.__name__
         else:
             # A function-based view
-            self._func_path = func.__module__ + '.' + func.__name__
+            self._func_path = self.func.__module__ + '.' + self.func.__name__

         view_path = url_name or self._func_path
         self.view_name = ':'.join(self.namespaces + [view_path])
@@ -59,8 +67,8 @@ class ResolverMatch:
         return (self.func, self.args, self.kwargs)[index]

     def __repr__(self):
-        return "ResolverMatch(func=%s, args=%s, kwargs=%s, url_name=%s, app_names=%s, namespaces=%s, route=%s)" % (
-            self._func_path, self.args, self.kwargs, self.url_name,
+        return "ResolverMatch(func=%s, args=%s, kwargs=%s, partial_args=%s, partial_kwargs=%s, url_name=%s, app_names=%s, namespaces=%s, route=%s)" % (
+            self._func_path, self.args, self.kwargs, self.partial_args, self.partial_kwargs, self.url_name,
             self.app_names, self.namespaces, self.route,
         )
