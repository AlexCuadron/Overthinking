diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py
index 917717bb74..6e488fb9b3 100644
--- a/sympy/sets/sets.py
+++ b/sympy/sets/sets.py
@@ -1722,6 +1722,22 @@ def reduce(A, B):
         if B == S.UniversalSet or A.is_subset(B):
             return EmptySet()

+        if isinstance(A, FiniteSet):
+            remaining = []
+            ambiguous = []
+            for e in A:
+                contained = B.contains(e)
+                if contained == S.true:
+                    continue
+                elif contained == S.false:
+                    remaining.append(e)
+                else:
+                    ambiguous.append(e)
+            if not ambiguous:
+                return FiniteSet(*remaining)
+            from sympy import Union, Complement
+            return Union(FiniteSet(*remaining), Complement(FiniteSet(*ambiguous), B, evaluate=False))
+
         if isinstance(B, Union):
             return Intersection(s.complement(A) for s in B.args)

diff --git a/test_complement.py b/test_complement.py
new file mode 100644
index 0000000000..138d5d86ae
--- /dev/null
+++ b/test_complement.py
@@ -0,0 +1,5 @@
+from sympy import FiniteSet, Interval, Complement, symbols
+x, y = symbols('x y')
+a = FiniteSet(x, y, 2)
+b = Interval(-10, 10)
+print(Complement(a, b))
