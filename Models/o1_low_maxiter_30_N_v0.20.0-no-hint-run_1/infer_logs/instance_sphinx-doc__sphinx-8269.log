2025-01-22 23:25:10,026 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_vb886hed1lqhdmg5_u9zk9ldda9d7wsfd
2025-01-22 23:25:14,609 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_vb886hed1lqhdmg5_u9zk9ldda9d7wsfd] build finished.
2025-01-22 23:25:14,612 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_vb886hed1lqhdmg5_u9zk9ldda9d7wsfd] built successfully
2025-01-22 23:25:14,618 - INFO - [runtime 9e59379e-7a6e-4522-965a-3abf0c0e41e9-61db145f9a249190] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_vb886hed1lqhdmg5_u9zk9ldda9d7wsfd
2025-01-22 23:25:16,707 - INFO - [runtime 9e59379e-7a6e-4522-965a-3abf0c0e41e9-61db145f9a249190] Container started: openhands-runtime-9e59379e-7a6e-4522-965a-3abf0c0e41e9-61db145f9a249190. VSCode URL: None
2025-01-22 23:25:16,708 - INFO - [runtime 9e59379e-7a6e-4522-965a-3abf0c0e41e9-61db145f9a249190] Waiting for client to become ready at http://localhost:39053...
2025-01-22 23:25:44,804 - INFO - [runtime 9e59379e-7a6e-4522-965a-3abf0c0e41e9-61db145f9a249190] Runtime is ready.
2025-01-22 23:25:45,451 - INFO - ------------------------------
2025-01-22 23:25:45,451 - INFO - BEGIN Runtime Initialization Fn
2025-01-22 23:25:45,452 - INFO - ------------------------------
2025-01-22 23:25:45,452 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sphinx-doc__sphinx-8269' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-22 23:25:46,079 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:25:46,080 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-22 23:25:46,701 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:25:46,701 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-22 23:25:47,320 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:25:47,327 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-22 23:25:47,946 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=sphinx-doc__sphinx-8269
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:25:47,946 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-22 23:25:48,565 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:25:48,565 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-22 23:25:48,565 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-22 23:25:50,695 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sphinx-doc__sphinx__3.3
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:25:50,695 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sphinx-doc__sphinx__3.3
2025-01-22 23:25:51,323 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace/sphinx-doc__sphinx__3.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__3.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:25:51,323 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-22 23:25:51,945 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace/sphinx-doc__sphinx__3.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 1e2ccd8f0 Merge pull request #8007 from tk0miya/6518_autodoc_typehints_evaluation
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__3.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:25:51,945 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-22 23:25:52,567 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace/sphinx-doc__sphinx__3.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__3.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:25:52,567 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-22 23:25:53,186 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace/sphinx-doc__sphinx__3.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__3.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:25:53,186 - INFO - ------------------------------
2025-01-22 23:25:53,186 - INFO - END Runtime Initialization Fn
2025-01-22 23:25:53,186 - INFO - ------------------------------
2025-01-22 23:25:53,187 - INFO - Function calling not enabled for model openai/o1. Mocking function calling via prompting.
2025-01-22 23:25:53,193 - INFO - [runtime 9e59379e-7a6e-4522-965a-3abf0c0e41e9-61db145f9a249190] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-01-22 23:25:53,210 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-22 23:25:53,210 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-22 23:25:57,233 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-22 23:26:01,851 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-22 23:26:07,409 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-22 23:26:10,228 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-22 23:26:28,452 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-22 23:26:39,606 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-22 23:26:43,497 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-22 23:26:47,860 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-22 23:26:52,215 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-22 23:26:59,625 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-22 23:27:04,810 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-22 23:27:13,745 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-22 23:27:18,046 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-22 23:27:32,941 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-22 23:27:40,448 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-22 23:27:50,304 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-22 23:27:56,425 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-22 23:28:01,218 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-22 23:28:11,025 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-22 23:28:18,845 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-22 23:28:33,170 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-22 23:28:37,969 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-22 23:28:42,880 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-22 23:28:50,235 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-01-22 23:28:50,379 - INFO - ------------------------------
2025-01-22 23:28:50,379 - INFO - BEGIN Runtime Completion Fn
2025-01-22 23:28:50,379 - INFO - ------------------------------
2025-01-22 23:28:50,379 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sphinx-doc__sphinx__3.3
2025-01-22 23:28:51,000 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace/sphinx-doc__sphinx__3.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__3.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:28:51,000 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-22 23:28:51,622 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace/sphinx-doc__sphinx__3.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__3.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:28:51,622 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-22 23:28:52,244 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace/sphinx-doc__sphinx__3.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__3.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:28:52,244 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 1e2ccd8f0eca0870cf6f8fce6934e2da8eba9b72
2025-01-22 23:28:52,865 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "d579117e6aca",
  "working_dir": "/workspace/sphinx-doc__sphinx__3.3",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/linkcheck_test/Makefile b/linkcheck_test/Makefile
new file mode 100644
index 000000000..d0c3cbf10
--- /dev/null
+++ b/linkcheck_test/Makefile
@@ -0,0 +1,20 @@
+# Minimal makefile for Sphinx documentation
+#
+
+# You can set these variables from the command line, and also
+# from the environment for the first two.
+SPHINXOPTS    ?=
+SPHINXBUILD   ?= sphinx-build
+SOURCEDIR     = source
+BUILDDIR      = build
+
+# Put it first so that "make" without argument is like "make help".
+help:
+       @$(SPHINXBUILD) -M help "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
+
+.PHONY: help Makefile
+
+# Catch-all target: route all unknown targets to Sphinx using the new
+# "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).
+%: Makefile
+       @$(SPHINXBUILD) -M $@ "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
diff --git a/linkcheck_test/make.bat b/linkcheck_test/make.bat
new file mode 100644
index 000000000..6247f7e23
--- /dev/null
+++ b/linkcheck_test/make.bat
@@ -0,0 +1,35 @@
+@ECHO OFF
+
+pushd %~dp0
+
+REM Command file for Sphinx documentation
+
+if "%SPHINXBUILD%" == "" (
+       set SPHINXBUILD=sphinx-build
+)
+set SOURCEDIR=source
+set BUILDDIR=build
+
+if "%1" == "" goto help
+
+%SPHINXBUILD% >NUL 2>NUL
+if errorlevel 9009 (
+       echo.
+       echo.The 'sphinx-build' command was not found. Make sure you have Sphinx
+       echo.installed, then set the SPHINXBUILD environment variable to point
+       echo.to the full path of the 'sphinx-build' executable. Alternatively you
+       echo.may add the Sphinx directory to PATH.
+       echo.
+       echo.If you don't have Sphinx installed, grab it from
+       echo.http://sphinx-doc.org/
+       exit /b 1
+)
+
+%SPHINXBUILD% -M %1 %SOURCEDIR% %BUILDDIR% %SPHINXOPTS% %O%
+goto end
+
+:help
+%SPHINXBUILD% -M help %SOURCEDIR% %BUILDDIR% %SPHINXOPTS% %O%
+
+:end
+popd
diff --git a/linkcheck_test/source/conf.py b/linkcheck_test/source/conf.py
new file mode 100644
index 000000000..df500b753
--- /dev/null
+++ b/linkcheck_test/source/conf.py
@@ -0,0 +1,65 @@
+# Configuration file for the Sphinx documentation builder.
+#
+# This file only contains a selection of the most common options. For a full
+# list see the documentation:
+# https://www.sphinx-doc.org/en/master/usage/configuration.html
+
+# -- Path setup --------------------------------------------------------------
+
+# If extensions (or modules to document with autodoc) are in another directory,
+# add these directories to sys.path here. If the directory is relative to the
+# documentation root, use os.path.abspath to make it absolute, like shown here.
+#
+# import os
+# import sys
+# sys.path.insert(0, os.path.abspath('.'))
+
+
+# -- Project information -----------------------------------------------------
+
+project = 'proj'
+copyright = '2025, me'
+author = 'me'
+
+# The full version, including alpha/beta/rc tags
+release = '1.0'
+
+
+# -- General configuration ---------------------------------------------------
+
+# Add any Sphinx extension module names here, as strings. They can be
+# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
+# ones.
+extensions = [
+]
+
+# Add any paths that contain templates here, relative to this directory.
+templates_path = ['_templates']
+
+# The language for content autogenerated by Sphinx. Refer to documentation
+# for a list of supported languages.
+#
+# This is also used if you do content translation via gettext catalogs.
+# Usually you set "language" from the command line for these cases.
+language = 'en'
+
+# List of patterns, relative to source directory, that match files and
+# directories to ignore when looking for source files.
+# This pattern also affects html_static_path and html_extra_path.
+exclude_patterns = []
+
+
+# -- Options for HTML output -------------------------------------------------
+
+# The theme to use for HTML and HTML Help pages.  See the documentation for
+# a list of builtin themes.
+#
+html_theme = 'alabaster'
+
+# Add any paths that contain custom static files (such as style sheets) here,
+# relative to this directory. They are copied after the builtin static files,
+# so a file named "default.css" will overwrite the builtin "default.css".
+html_static_path = ['_static']
+linkcheck_anchors=True
+
+linkcheck_retries=1
diff --git a/linkcheck_test/source/index.rst b/linkcheck_test/source/index.rst
new file mode 100644
index 000000000..6c283764a
--- /dev/null
+++ b/linkcheck_test/source/index.rst
@@ -0,0 +1,22 @@
+.. proj documentation master file, created by
+   sphinx-quickstart on Wed Jan 22 23:28:42 2025.
+   You can adapt this file completely to your liking, but it should at least
+   contain the root `toctree` directive.
+
+Welcome to proj's documentation!
+================================
+
+.. toctree::
+   :maxdepth: 2
+   :caption: Contents:
+
+
+
+Indices and tables
+==================
+
+* :ref:`genindex`
+* :ref:`modindex`
+* :ref:`search`
+
+Nonexistent link: `foo <https://google.com/test.txt#test>`_
diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py
index 9b54afc7c..34a890fb2 100644
--- a/sphinx/builders/linkcheck.py
+++ b/sphinx/builders/linkcheck.py
@@ -163,13 +163,24 @@ class CheckExternalLinksBuilder(Builder):

             try:
                 if anchor and self.app.config.linkcheck_anchors:
-                    # Read the whole document and see if #anchor exists
-                    response = requests.get(req_url, stream=True, config=self.app.config,
-                                            auth=auth_info, **kwargs)
+                    # First try a HEAD request to capture HTTP errors like 404
+                    try:
+                        response = requests.head(req_url, config=self.app.config,
+                                                 auth=auth_info, **kwargs)
+                        response.raise_for_status()
+                    except HTTPError:
+                        # If HEAD fails, try GET (some servers may not allow HEAD)
+                        response = requests.get(req_url, stream=True,
+                                                config=self.app.config,
+                                                auth=auth_info, **kwargs)
+                        response.raise_for_status()
+                    # If we're here, we have a successful HTTP status code, so let's check the anchor
                     found = check_anchor(response, unquote(anchor))
-
                     if not found:
-                        raise Exception(__("Anchor '%s' not found") % anchor)
+                        if response.status_code != 200:
+                            response.raise_for_status()
+                        else:
+                            raise Exception(__("Anchor '%s' not found") % anchor)
                 else:
                     try:
                         # try a HEAD request first, which should be easier on
[The command completed with exit code 0.]
[Current working directory: /workspace/sphinx-doc__sphinx__3.3]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:28:52,866 - INFO - ------------------------------
2025-01-22 23:28:52,866 - INFO - END Runtime Completion Fn
2025-01-22 23:28:52,866 - INFO - ------------------------------
2025-01-22 23:28:52,866 - INFO - Got git diff for instance sphinx-doc__sphinx-8269:
--------
diff --git a/linkcheck_test/Makefile b/linkcheck_test/Makefile
new file mode 100644
index 000000000..d0c3cbf10
--- /dev/null
+++ b/linkcheck_test/Makefile
@@ -0,0 +1,20 @@
+# Minimal makefile for Sphinx documentation
+#
+
+# You can set these variables from the command line, and also
+# from the environment for the first two.
+SPHINXOPTS    ?=
+SPHINXBUILD   ?= sphinx-build
+SOURCEDIR     = source
+BUILDDIR      = build
+
+# Put it first so that "make" without argument is like "make help".
+help:
+       @$(SPHINXBUILD) -M help "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
+
+.PHONY: help Makefile
+
+# Catch-all target: route all unknown targets to Sphinx using the new
+# "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).
+%: Makefile
+       @$(SPHINXBUILD) -M $@ "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
diff --git a/linkcheck_test/make.bat b/linkcheck_test/make.bat
new file mode 100644
index 000000000..6247f7e23
--- /dev/null
+++ b/linkcheck_test/make.bat
@@ -0,0 +1,35 @@
+@ECHO OFF
+
+pushd %~dp0
+
+REM Command file for Sphinx documentation
+
+if "%SPHINXBUILD%" == "" (
+       set SPHINXBUILD=sphinx-build
+)
+set SOURCEDIR=source
+set BUILDDIR=build
+
+if "%1" == "" goto help
+
+%SPHINXBUILD% >NUL 2>NUL
+if errorlevel 9009 (
+       echo.
+       echo.The 'sphinx-build' command was not found. Make sure you have Sphinx
+       echo.installed, then set the SPHINXBUILD environment variable to point
+       echo.to the full path of the 'sphinx-build' executable. Alternatively you
+       echo.may add the Sphinx directory to PATH.
+       echo.
+       echo.If you don't have Sphinx installed, grab it from
+       echo.http://sphinx-doc.org/
+       exit /b 1
+)
+
+%SPHINXBUILD% -M %1 %SOURCEDIR% %BUILDDIR% %SPHINXOPTS% %O%
+goto end
+
+:help
+%SPHINXBUILD% -M help %SOURCEDIR% %BUILDDIR% %SPHINXOPTS% %O%
+
+:end
+popd
diff --git a/linkcheck_test/source/conf.py b/linkcheck_test/source/conf.py
new file mode 100644
index 000000000..df500b753
--- /dev/null
+++ b/linkcheck_test/source/conf.py
@@ -0,0 +1,65 @@
+# Configuration file for the Sphinx documentation builder.
+#
+# This file only contains a selection of the most common options. For a full
+# list see the documentation:
+# https://www.sphinx-doc.org/en/master/usage/configuration.html
+
+# -- Path setup --------------------------------------------------------------
+
+# If extensions (or modules to document with autodoc) are in another directory,
+# add these directories to sys.path here. If the directory is relative to the
+# documentation root, use os.path.abspath to make it absolute, like shown here.
+#
+# import os
+# import sys
+# sys.path.insert(0, os.path.abspath('.'))
+
+
+# -- Project information -----------------------------------------------------
+
+project = 'proj'
+copyright = '2025, me'
+author = 'me'
+
+# The full version, including alpha/beta/rc tags
+release = '1.0'
+
+
+# -- General configuration ---------------------------------------------------
+
+# Add any Sphinx extension module names here, as strings. They can be
+# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
+# ones.
+extensions = [
+]
+
+# Add any paths that contain templates here, relative to this directory.
+templates_path = ['_templates']
+
+# The language for content autogenerated by Sphinx. Refer to documentation
+# for a list of supported languages.
+#
+# This is also used if you do content translation via gettext catalogs.
+# Usually you set "language" from the command line for these cases.
+language = 'en'
+
+# List of patterns, relative to source directory, that match files and
+# directories to ignore when looking for source files.
+# This pattern also affects html_static_path and html_extra_path.
+exclude_patterns = []
+
+
+# -- Options for HTML output -------------------------------------------------
+
+# The theme to use for HTML and HTML Help pages.  See the documentation for
+# a list of builtin themes.
+#
+html_theme = 'alabaster'
+
+# Add any paths that contain custom static files (such as style sheets) here,
+# relative to this directory. They are copied after the builtin static files,
+# so a file named "default.css" will overwrite the builtin "default.css".
+html_static_path = ['_static']
+linkcheck_anchors=True
+
+linkcheck_retries=1
diff --git a/linkcheck_test/source/index.rst b/linkcheck_test/source/index.rst
new file mode 100644
index 000000000..6c283764a
--- /dev/null
+++ b/linkcheck_test/source/index.rst
@@ -0,0 +1,22 @@
+.. proj documentation master file, created by
+   sphinx-quickstart on Wed Jan 22 23:28:42 2025.
+   You can adapt this file completely to your liking, but it should at least
+   contain the root `toctree` directive.
+
+Welcome to proj's documentation!
+================================
+
+.. toctree::
+   :maxdepth: 2
+   :caption: Contents:
+
+
+
+Indices and tables
+==================
+
+* :ref:`genindex`
+* :ref:`modindex`
+* :ref:`search`
+
+Nonexistent link: `foo <https://google.com/test.txt#test>`_
diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py
index 9b54afc7c..34a890fb2 100644
--- a/sphinx/builders/linkcheck.py
+++ b/sphinx/builders/linkcheck.py
@@ -163,13 +163,24 @@ class CheckExternalLinksBuilder(Builder):

             try:
                 if anchor and self.app.config.linkcheck_anchors:
-                    # Read the whole document and see if #anchor exists
-                    response = requests.get(req_url, stream=True, config=self.app.config,
-                                            auth=auth_info, **kwargs)
+                    # First try a HEAD request to capture HTTP errors like 404
+                    try:
+                        response = requests.head(req_url, config=self.app.config,
+                                                 auth=auth_info, **kwargs)
+                        response.raise_for_status()
+                    except HTTPError:
+                        # If HEAD fails, try GET (some servers may not allow HEAD)
+                        response = requests.get(req_url, stream=True,
+                                                config=self.app.config,
+                                                auth=auth_info, **kwargs)
+                        response.raise_for_status()
+                    # If we're here, we have a successful HTTP status code, so let's check the anchor
                     found = check_anchor(response, unquote(anchor))
-
                     if not found:
-                        raise Exception(__("Anchor '%s' not found") % anchor)
+                        if response.status_code != 200:
+                            response.raise_for_status()
+                        else:
+                            raise Exception(__("Anchor '%s' not found") % anchor)
                 else:
                     try:
                         # try a HEAD request first, which should be easier on
--------
2025-01-22 23:28:54,619 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.sympy_s_sympy-17655. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-22 23:28:54,619 - INFO - Logging LLM completions for instance sympy__sympy-17655 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/sympy__sympy-17655
