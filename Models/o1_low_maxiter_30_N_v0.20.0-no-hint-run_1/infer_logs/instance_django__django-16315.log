2025-01-22 23:09:57,092 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_lgyuzzbz10cqek95_u9zk9ldda9d7wsfd
2025-01-22 23:13:23,002 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_lgyuzzbz10cqek95_u9zk9ldda9d7wsfd] build finished.
2025-01-22 23:13:23,034 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_lgyuzzbz10cqek95_u9zk9ldda9d7wsfd] with more generic tag [oh_v0.20.0_lgyuzzbz10cqek95]
2025-01-22 23:13:23,037 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_lgyuzzbz10cqek95_u9zk9ldda9d7wsfd, oh_v0.20.0_lgyuzzbz10cqek95] built successfully
2025-01-22 23:13:23,128 - INFO - [runtime c33137a6-5239-42b0-8478-4ab1b634dae3-1d2a8244e86cfb07] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_lgyuzzbz10cqek95_u9zk9ldda9d7wsfd
2025-01-22 23:13:24,082 - INFO - [runtime c33137a6-5239-42b0-8478-4ab1b634dae3-1d2a8244e86cfb07] Container started: openhands-runtime-c33137a6-5239-42b0-8478-4ab1b634dae3-1d2a8244e86cfb07. VSCode URL: None
2025-01-22 23:13:24,082 - INFO - [runtime c33137a6-5239-42b0-8478-4ab1b634dae3-1d2a8244e86cfb07] Waiting for client to become ready at http://localhost:32349...
2025-01-22 23:13:56,172 - INFO - [runtime c33137a6-5239-42b0-8478-4ab1b634dae3-1d2a8244e86cfb07] Runtime is ready.
2025-01-22 23:13:56,822 - INFO - ------------------------------
2025-01-22 23:13:56,823 - INFO - BEGIN Runtime Initialization Fn
2025-01-22 23:13:56,823 - INFO - ------------------------------
2025-01-22 23:13:56,823 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=django__django-16315' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-22 23:13:57,445 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:13:57,445 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-22 23:13:58,066 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:13:58,070 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-22 23:13:58,693 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:13:58,702 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-22 23:13:59,325 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=django__django-16315
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:13:59,329 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-22 23:13:59,951 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:13:59,952 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-22 23:13:59,952 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-22 23:14:05,610 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: django__django__4.2
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:14:05,611 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__4.2
2025-01-22 23:14:06,233 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace/django__django__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:14:06,233 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-22 23:14:07,360 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace/django__django__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 7d5329852f Fixed #34177 -- Fixed QuerySet.bulk_create() crash on "pk" in unique_fields.
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:14:07,361 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-22 23:14:07,984 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace/django__django__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:14:08,018 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-22 23:14:08,642 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace/django__django__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:14:08,642 - INFO - ------------------------------
2025-01-22 23:14:08,642 - INFO - END Runtime Initialization Fn
2025-01-22 23:14:08,642 - INFO - ------------------------------
2025-01-22 23:14:08,643 - INFO - Function calling not enabled for model openai/o1. Mocking function calling via prompting.
2025-01-22 23:14:08,650 - INFO - [runtime c33137a6-5239-42b0-8478-4ab1b634dae3-1d2a8244e86cfb07] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-01-22 23:14:08,700 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-22 23:14:08,701 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-22 23:14:12,582 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-22 23:14:21,656 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-22 23:14:24,834 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-22 23:14:29,830 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-22 23:14:32,765 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-22 23:14:39,924 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-22 23:15:01,333 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-22 23:15:07,045 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-22 23:15:13,146 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-22 23:15:16,327 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-22 23:15:21,386 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-22 23:15:24,735 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-22 23:15:28,900 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-22 23:15:32,390 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-22 23:15:38,201 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-22 23:15:47,150 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-22 23:15:54,227 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-22 23:16:03,018 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-22 23:16:23,357 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-22 23:16:39,712 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-22 23:16:46,105 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-22 23:16:49,757 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-22 23:16:58,242 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-22 23:17:08,129 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-22 23:17:14,463 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 25 GLOBAL STEP 25
2025-01-22 23:17:20,829 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 26 GLOBAL STEP 26
2025-01-22 23:17:26,598 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 27 GLOBAL STEP 27
2025-01-22 23:17:41,121 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 28 GLOBAL STEP 28
2025-01-22 23:17:53,857 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 29 GLOBAL STEP 29
2025-01-22 23:18:16,385 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 30 GLOBAL STEP 30
2025-01-22 23:18:16,386 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-01-22 23:18:16,386 - ERROR - RuntimeError: Agent reached maximum iteration in headless mode. Current iteration: 30, max iteration: 30
2025-01-22 23:18:16,387 - WARNING - Stopping agent due to traffic control
2025-01-22 23:18:16,389 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.ERROR
2025-01-22 23:18:16,952 - INFO - ------------------------------
2025-01-22 23:18:16,952 - INFO - BEGIN Runtime Completion Fn
2025-01-22 23:18:16,952 - INFO - ------------------------------
2025-01-22 23:18:16,953 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/django__django__4.2
2025-01-22 23:18:17,574 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace/django__django__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:18:17,579 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-22 23:18:18,201 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace/django__django__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:18:18,201 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-22 23:18:18,823 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace/django__django__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:18:18,823 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 7d5329852f19c6ae78c6f6f3d3e41835377bf295
2025-01-22 23:18:19,448 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "687bb9c1fdc1",
  "working_dir": "/workspace/django__django__4.2",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/django/db/models/query.py b/django/db/models/query.py
index be8580f2c4..a8e06ab13c 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -780,9 +780,46 @@ class QuerySet(AltersData):
         for parent in self.model._meta.get_parent_list():
             if parent._meta.concrete_model is not self.model._meta.concrete_model:
                 raise ValueError("Can't bulk create a multi-table inherited model")
-        if not objs:
+        # Additional comment to differentiate
+if not objs:
             return objs
         opts = self.model._meta
+
+        # Translate unique_fields from model field names to actual DB column names.
+        if unique_fields:
+            transformed = []
+            for name in unique_fields:
+                # If user said "pk", we kept it as opts.pk.name above, so handle that.
+                field = opts.get_field(name)
+                col = field.db_column if field.db_column else field.column
+                transformed.append(col)
+            unique_fields = transformed
+
+        # Also translate update_fields to the DB column names if provided.
+        if update_fields:
+            for idx, uf in enumerate(update_fields):
+                field_obj = opts.get_field(uf)
+                if field_obj.db_column:
+                    update_fields[idx] = field_obj.db_column
+                else:
+                    update_fields[idx] = field_obj.column
+# Translate unique_fields from model field names to actual DB column names.
+if unique_fields:
+    transformed = []
+    for name in unique_fields:
+        # If user said "pk", we kept it as opts.pk.name above, so handle that.
+        field = opts.get_field(name)
+        col = field.db_column if field.db_column else field.column
+        transformed.append(col)
+    unique_fields = transformed
+# Also translate update_fields to the DB column names if provided.
+if update_fields:
+    for idx, uf in enumerate(update_fields):
+        field_obj = opts.get_field(uf)
+        if field_obj.db_column:
+            update_fields[idx] = field_obj.db_column
+        else:
+            update_fields[idx] = field_obj.column
         if unique_fields:
             # Primary key is allowed in unique_fields.
             unique_fields = [
diff --git a/replicate_issue.py b/replicate_issue.py
new file mode 100644
index 0000000000..f145f46cf7
--- /dev/null
+++ b/replicate_issue.py
@@ -0,0 +1,49 @@
+import os
+import django
+from django.conf import settings
+from django.db import models
+
+# Configure settings if not already configured.
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=["__main__"],  # minimal config
+        DATABASES={
+            "default": {
+                "ENGINE": "django.db.backends.sqlite3",
+                "NAME": ":memory:",
+            }
+        },
+    )
+
+# Initialize Django.
+django.setup()
+
+class ActivityBlackListed(models.Model):
+    class Meta:
+        db_table = "Activity_BlackListed"
+    blacklistid = models.IntegerField(primary_key=True, db_column="BlacklistID")
+    sectorid = models.IntegerField(null=True, blank=True, db_column="SectorID")
+
+# Recreate the table in the test database for demonstration.
+with django.db.connection.schema_editor() as schema_editor:
+    schema_editor.create_model(ActivityBlackListed)
+
+def recreate_error():
+    # Attempt to trigger the error from the PR description
+    objs = [
+        ActivityBlackListed(blacklistid=1, sectorid=100),
+        ActivityBlackListed(blacklistid=2, sectorid=200),
+    ]
+    ActivityBlackListed.objects.bulk_create(
+        objs, update_conflicts=True,
+        update_fields=["sectorid"],
+        unique_fields=["blacklistid"]
+    )
+
+if __name__ == "__main__":
+    try:
+        recreate_error()
+        print("No error occurred. Possibly not replicated.")
+    except Exception as e:
+        print("Error occurred:")
+        print(e)
\ No newline at end of file
[The command completed with exit code 0.]
[Current working directory: /workspace/django__django__4.2]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:18:19,451 - INFO - ------------------------------
2025-01-22 23:18:19,451 - INFO - END Runtime Completion Fn
2025-01-22 23:18:19,451 - INFO - ------------------------------
2025-01-22 23:18:19,451 - INFO - Got git diff for instance django__django-16315:
--------
diff --git a/django/db/models/query.py b/django/db/models/query.py
index be8580f2c4..a8e06ab13c 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -780,9 +780,46 @@ class QuerySet(AltersData):
         for parent in self.model._meta.get_parent_list():
             if parent._meta.concrete_model is not self.model._meta.concrete_model:
                 raise ValueError("Can't bulk create a multi-table inherited model")
-        if not objs:
+        # Additional comment to differentiate
+if not objs:
             return objs
         opts = self.model._meta
+
+        # Translate unique_fields from model field names to actual DB column names.
+        if unique_fields:
+            transformed = []
+            for name in unique_fields:
+                # If user said "pk", we kept it as opts.pk.name above, so handle that.
+                field = opts.get_field(name)
+                col = field.db_column if field.db_column else field.column
+                transformed.append(col)
+            unique_fields = transformed
+
+        # Also translate update_fields to the DB column names if provided.
+        if update_fields:
+            for idx, uf in enumerate(update_fields):
+                field_obj = opts.get_field(uf)
+                if field_obj.db_column:
+                    update_fields[idx] = field_obj.db_column
+                else:
+                    update_fields[idx] = field_obj.column
+# Translate unique_fields from model field names to actual DB column names.
+if unique_fields:
+    transformed = []
+    for name in unique_fields:
+        # If user said "pk", we kept it as opts.pk.name above, so handle that.
+        field = opts.get_field(name)
+        col = field.db_column if field.db_column else field.column
+        transformed.append(col)
+    unique_fields = transformed
+# Also translate update_fields to the DB column names if provided.
+if update_fields:
+    for idx, uf in enumerate(update_fields):
+        field_obj = opts.get_field(uf)
+        if field_obj.db_column:
+            update_fields[idx] = field_obj.db_column
+        else:
+            update_fields[idx] = field_obj.column
         if unique_fields:
             # Primary key is allowed in unique_fields.
             unique_fields = [
diff --git a/replicate_issue.py b/replicate_issue.py
new file mode 100644
index 0000000000..f145f46cf7
--- /dev/null
+++ b/replicate_issue.py
@@ -0,0 +1,49 @@
+import os
+import django
+from django.conf import settings
+from django.db import models
+
+# Configure settings if not already configured.
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=["__main__"],  # minimal config
+        DATABASES={
+            "default": {
+                "ENGINE": "django.db.backends.sqlite3",
+                "NAME": ":memory:",
+            }
+        },
+    )
+
+# Initialize Django.
+django.setup()
+
+class ActivityBlackListed(models.Model):
+    class Meta:
+        db_table = "Activity_BlackListed"
+    blacklistid = models.IntegerField(primary_key=True, db_column="BlacklistID")
+    sectorid = models.IntegerField(null=True, blank=True, db_column="SectorID")
+
+# Recreate the table in the test database for demonstration.
+with django.db.connection.schema_editor() as schema_editor:
+    schema_editor.create_model(ActivityBlackListed)
+
+def recreate_error():
+    # Attempt to trigger the error from the PR description
+    objs = [
+        ActivityBlackListed(blacklistid=1, sectorid=100),
+        ActivityBlackListed(blacklistid=2, sectorid=200),
+    ]
+    ActivityBlackListed.objects.bulk_create(
+        objs, update_conflicts=True,
+        update_fields=["sectorid"],
+        unique_fields=["blacklistid"]
+    )
+
+if __name__ == "__main__":
+    try:
+        recreate_error()
+        print("No error occurred. Possibly not replicated.")
+    except Exception as e:
+        print("Error occurred:")
+        print(e)
\ No newline at end of file
--------
2025-01-22 23:18:24,558 - INFO - Using instance container image: docker.io/xingyaoww/sweb.eval.x86_64.psf_s_requests-6028. Please make sure this image exists. Submit an issue on https://github.com/All-Hands-AI/OpenHands if you run into any issues.
2025-01-22 23:18:24,559 - INFO - Logging LLM completions for instance psf__requests-6028 to evaluation/evaluation_outputs/outputs/princeton-nlp__SWE-bench_Verified-test/CodeActAgent/o1_maxiter_30_N_v0.20.0-no-hint-run_1/llm_completions/psf__requests-6028
