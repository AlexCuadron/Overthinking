2025-01-22 23:28:52,979 - INFO - Building image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_2sbhmh2nn3iv81dr_u9zk9ldda9d7wsfd
2025-01-22 23:28:59,658 - INFO - Image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_2sbhmh2nn3iv81dr_u9zk9ldda9d7wsfd] build finished.
2025-01-22 23:28:59,669 - INFO - Re-tagged image [ghcr.io/all-hands-ai/runtime:oh_v0.20.0_2sbhmh2nn3iv81dr_u9zk9ldda9d7wsfd] with more generic tag [oh_v0.20.0_2sbhmh2nn3iv81dr]
2025-01-22 23:28:59,683 - INFO - Image ghcr.io/all-hands-ai/runtime with tags [oh_v0.20.0_2sbhmh2nn3iv81dr_u9zk9ldda9d7wsfd, oh_v0.20.0_2sbhmh2nn3iv81dr] built successfully
2025-01-22 23:28:59,697 - INFO - [runtime 9f173bb6-59c3-47f2-955a-b407d93ae4c4-24904db15f7f98bd] Starting runtime with image: ghcr.io/all-hands-ai/runtime:oh_v0.20.0_2sbhmh2nn3iv81dr_u9zk9ldda9d7wsfd
2025-01-22 23:29:11,346 - INFO - [runtime 9f173bb6-59c3-47f2-955a-b407d93ae4c4-24904db15f7f98bd] Container started: openhands-runtime-9f173bb6-59c3-47f2-955a-b407d93ae4c4-24904db15f7f98bd. VSCode URL: None
2025-01-22 23:29:11,347 - INFO - [runtime 9f173bb6-59c3-47f2-955a-b407d93ae4c4-24904db15f7f98bd] Waiting for client to become ready at http://localhost:39093...
2025-01-22 23:29:39,415 - INFO - [runtime 9f173bb6-59c3-47f2-955a-b407d93ae4c4-24904db15f7f98bd] Runtime is ready.
2025-01-22 23:29:40,045 - INFO - ------------------------------
2025-01-22 23:29:40,045 - INFO - BEGIN Runtime Initialization Fn
2025-01-22 23:29:40,045 - INFO - ------------------------------
2025-01-22 23:29:40,045 - INFO - **CmdRunAction (source=None)**
COMMAND:
echo 'export SWE_INSTANCE_ID=sympy__sympy-17630' >> ~/.bashrc && echo 'export PIP_CACHE_DIR=~/.cache/pip' >> ~/.bashrc && echo "alias git='git --no-pager'" >> ~/.bashrc
2025-01-22 23:29:40,666 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:29:40,666 - INFO - **CmdRunAction (source=None)**
COMMAND:
export USER=$(whoami); echo USER=${USER} 
2025-01-22 23:29:41,287 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
USER=root
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:29:41,287 - INFO - **CmdRunAction (source=None)**
COMMAND:
mkdir -p /swe_util/eval_data/instances
2025-01-22 23:29:41,907 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:29:41,914 - INFO - **CmdRunAction (source=None)**
COMMAND:
cat ~/.bashrc
2025-01-22 23:29:42,533 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
source /opt/miniconda3/etc/profile.d/conda.sh && conda activate testbed
export SWE_INSTANCE_ID=sympy__sympy-17630
export PIP_CACHE_DIR=~/.cache/pip
alias git='git --no-pager'
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:29:42,534 - INFO - **CmdRunAction (source=None)**
COMMAND:
source ~/.bashrc
2025-01-22 23:29:43,153 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:29:43,153 - WARNING - Timeout greater than 600 seconds may not be supported by the runtime. Consider setting a lower timeout.
2025-01-22 23:29:43,153 - INFO - **CmdRunAction (source=None)**
COMMAND:
source /swe_util/instance_swe_entry.sh
2025-01-22 23:29:45,283 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
WORKSPACE_NAME: sympy__sympy__1.5
[The command completed with exit code 0.]
[Current working directory: /workspace]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:29:45,284 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sympy__sympy__1.5
2025-01-22 23:29:45,903 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace/sympy__sympy__1.5",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.5]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:29:45,903 - INFO - **CmdRunAction (source=None)**
COMMAND:
git reset --hard
2025-01-22 23:29:46,524 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace/sympy__sympy__1.5",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
HEAD is now at 58e78209c8 Merge pull request #17623 from cbm755/dollars_stirling
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.5]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:29:46,525 - INFO - **CmdRunAction (source=None)**
COMMAND:
for remote_name in $(git remote); do git remote remove "${remote_name}"; done
2025-01-22 23:29:47,146 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace/sympy__sympy__1.5",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.5]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:29:47,146 - INFO - **CmdRunAction (source=None)**
COMMAND:
which python
2025-01-22 23:29:47,775 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace/sympy__sympy__1.5",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
/opt/miniconda3/envs/testbed/bin/python
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.5]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:29:47,775 - INFO - ------------------------------
2025-01-22 23:29:47,775 - INFO - END Runtime Initialization Fn
2025-01-22 23:29:47,775 - INFO - ------------------------------
2025-01-22 23:29:47,776 - INFO - Function calling not enabled for model openai/o1. Mocking function calling via prompting.
2025-01-22 23:29:47,781 - INFO - [runtime 9f173bb6-59c3-47f2-955a-b407d93ae4c4-24904db15f7f98bd] Selected repo: None, loading microagents from /workspace/.openhands/microagents (inside runtime)
2025-01-22 23:29:47,798 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-01-22 23:29:47,799 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 0 GLOBAL STEP 0
2025-01-22 23:29:51,090 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 1 GLOBAL STEP 1
2025-01-22 23:29:53,727 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 2 GLOBAL STEP 2
2025-01-22 23:29:56,323 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 3 GLOBAL STEP 3
2025-01-22 23:30:00,752 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 4 GLOBAL STEP 4
2025-01-22 23:30:06,841 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 5 GLOBAL STEP 5
2025-01-22 23:30:11,027 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 6 GLOBAL STEP 6
2025-01-22 23:30:36,370 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 7 GLOBAL STEP 7
2025-01-22 23:30:39,676 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 8 GLOBAL STEP 8
2025-01-22 23:30:55,747 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 9 GLOBAL STEP 9
2025-01-22 23:30:58,695 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 10 GLOBAL STEP 10
2025-01-22 23:31:16,244 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 11 GLOBAL STEP 11
2025-01-22 23:31:33,982 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 12 GLOBAL STEP 12
2025-01-22 23:31:38,395 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 13 GLOBAL STEP 13
2025-01-22 23:32:00,111 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 14 GLOBAL STEP 14
2025-01-22 23:32:10,868 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 15 GLOBAL STEP 15
2025-01-22 23:32:29,976 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 16 GLOBAL STEP 16
2025-01-22 23:32:32,926 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 17 GLOBAL STEP 17
2025-01-22 23:32:54,985 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 18 GLOBAL STEP 18
2025-01-22 23:33:08,711 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 19 GLOBAL STEP 19
2025-01-22 23:33:18,041 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 20 GLOBAL STEP 20
2025-01-22 23:33:46,129 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 21 GLOBAL STEP 21
2025-01-22 23:33:57,593 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 22 GLOBAL STEP 22
2025-01-22 23:34:00,892 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 23 GLOBAL STEP 23
2025-01-22 23:34:23,624 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.AWAITING_USER_INPUT
2025-01-22 23:34:23,655 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.AWAITING_USER_INPUT to AgentState.RUNNING
2025-01-22 23:34:23,655 - INFO - [Agent Controller default] LEVEL 0 LOCAL STEP 24 GLOBAL STEP 24
2025-01-22 23:34:32,699 - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.FINISHED
2025-01-22 23:34:33,112 - INFO - ------------------------------
2025-01-22 23:34:33,112 - INFO - BEGIN Runtime Completion Fn
2025-01-22 23:34:33,112 - INFO - ------------------------------
2025-01-22 23:34:33,112 - INFO - **CmdRunAction (source=None)**
COMMAND:
cd /workspace/sympy__sympy__1.5
2025-01-22 23:34:33,732 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace/sympy__sympy__1.5",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.5]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:34:33,732 - INFO - **CmdRunAction (source=None)**
COMMAND:
git config --global core.pager ""
2025-01-22 23:34:34,351 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace/sympy__sympy__1.5",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.5]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:34:34,351 - INFO - **CmdRunAction (source=None)**
COMMAND:
git add -A
2025-01-22 23:34:34,970 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace/sympy__sympy__1.5",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--

[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.5]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:34:34,971 - INFO - **CmdRunAction (source=None)**
COMMAND:
git diff --no-color --cached 58e78209c8577b9890e957b624466e5beed7eb08
2025-01-22 23:34:35,589 - INFO - **CmdOutputObservation (source=None, exit code=0, metadata={
  "exit_code": 0,
  "pid": -1,
  "username": "root",
  "hostname": "2f13ae7a3dcf",
  "working_dir": "/workspace/sympy__sympy__1.5",
  "py_interpreter_path": "/opt/miniconda3/envs/testbed/bin/python",
  "prefix": "",
  "suffix": "\n[The command completed with exit code 0.]"
})**
--BEGIN AGENT OBSERVATION--
diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 95302a05ca..bb8b4d51a1 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -161,12 +161,7 @@ def structurally_equal(self, other):
             and self.rowblocksizes == other.rowblocksizes
             and self.colblocksizes == other.colblocksizes)

-    def _blockmul(self, other):
-        if (isinstance(other, BlockMatrix) and
-                self.colblocksizes == other.rowblocksizes):
-            return BlockMatrix(self.blocks*other.blocks)
-
-        return self * other
+    def _blockmul(self, other):\n    from sympy.matrices.immutable import ImmutableDenseMatrix\n\n    if isinstance(other, BlockMatrix) and self.colblocksizes == other.rowblocksizes:\n        product = self.blocks * other.blocks\n\n        # If product is not shaped like a matrix, treat as scalar\n        if not hasattr(product, 'shape'):\n            rsize = sum(self.rowblocksizes)\n            csize = sum(other.colblocksizes)\n            if product.is_zero:\n                return BlockMatrix([[ZeroMatrix(rsize, csize)]])\n            else:\n                if rsize == csize:\n                    from sympy import Identity\n                    return BlockMatrix([[product * Identity(rsize)]])\n                else:\n                    raise ValueError(\"Scalar result in non-square block multiplication.\")\n\n        # If single block 1x1\n        if product.shape == (1, 1):\n            val = product[0, 0]\n            rsize = sum(self.rowblocksizes)\n            csize = sum(other.colblocksizes)\n            if not isinstance(val, MatrixExpr):\n                if val.is_zero:\n                    val = ZeroMatrix(rsize, csize)\n                else:\n                    if rsize == csize:\n                        from sympy import Identity\n                        val = val*Identity(rsize)\n                    else:\n                        raise ValueError(\"Scalar result in non-square block multiplication.\")\n            return BlockMatrix([[val]])\n\n        # Otherwise interpret product as a matrix of blocks\n        R, C = self.blockshape\n        rows_list = []\n        for i in range(R):\n            row_list = []\n            rsize = self.rowblocksizes[i]\n            for j in range(C):\n                csize = other.colblocksizes[j]\n                val = product[i, j]\n                if not getattr(val, 'is_Matrix', False):\n                    if val.is_zero:\n                        val = ZeroMatrix(rsize, csize)\n                    else:\n                        if rsize == csize:\n                            from sympy import Identity\n                            val = val*Identity(rsize)\n                        else:\n                            raise ValueError(\"Scalar in a non-square block.\")\n                row_list.append(val)\n            rows_list.append(row_list)\n        return BlockMatrix(rows_list)\n\n    return self * other

     def _blockadd(self, other):
         if (isinstance(other, BlockMatrix)
[The command completed with exit code 0.]
[Current working directory: /workspace/sympy__sympy__1.5]
[Python interpreter: /opt/miniconda3/envs/testbed/bin/python]
--END AGENT OBSERVATION--
2025-01-22 23:34:35,615 - INFO - ------------------------------
2025-01-22 23:34:35,616 - INFO - END Runtime Completion Fn
2025-01-22 23:34:35,616 - INFO - ------------------------------
2025-01-22 23:34:35,616 - INFO - Got git diff for instance sympy__sympy-17630:
--------
diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 95302a05ca..bb8b4d51a1 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -161,12 +161,7 @@ def structurally_equal(self, other):
             and self.rowblocksizes == other.rowblocksizes
             and self.colblocksizes == other.colblocksizes)

-    def _blockmul(self, other):
-        if (isinstance(other, BlockMatrix) and
-                self.colblocksizes == other.rowblocksizes):
-            return BlockMatrix(self.blocks*other.blocks)
-
-        return self * other
+    def _blockmul(self, other):\n    from sympy.matrices.immutable import ImmutableDenseMatrix\n\n    if isinstance(other, BlockMatrix) and self.colblocksizes == other.rowblocksizes:\n        product = self.blocks * other.blocks\n\n        # If product is not shaped like a matrix, treat as scalar\n        if not hasattr(product, 'shape'):\n            rsize = sum(self.rowblocksizes)\n            csize = sum(other.colblocksizes)\n            if product.is_zero:\n                return BlockMatrix([[ZeroMatrix(rsize, csize)]])\n            else:\n                if rsize == csize:\n                    from sympy import Identity\n                    return BlockMatrix([[product * Identity(rsize)]])\n                else:\n                    raise ValueError(\"Scalar result in non-square block multiplication.\")\n\n        # If single block 1x1\n        if product.shape == (1, 1):\n            val = product[0, 0]\n            rsize = sum(self.rowblocksizes)\n            csize = sum(other.colblocksizes)\n            if not isinstance(val, MatrixExpr):\n                if val.is_zero:\n                    val = ZeroMatrix(rsize, csize)\n                else:\n                    if rsize == csize:\n                        from sympy import Identity\n                        val = val*Identity(rsize)\n                    else:\n                        raise ValueError(\"Scalar result in non-square block multiplication.\")\n            return BlockMatrix([[val]])\n\n        # Otherwise interpret product as a matrix of blocks\n        R, C = self.blockshape\n        rows_list = []\n        for i in range(R):\n            row_list = []\n            rsize = self.rowblocksizes[i]\n            for j in range(C):\n                csize = other.colblocksizes[j]\n                val = product[i, j]\n                if not getattr(val, 'is_Matrix', False):\n                    if val.is_zero:\n                        val = ZeroMatrix(rsize, csize)\n                    else:\n                        if rsize == csize:\n                            from sympy import Identity\n                            val = val*Identity(rsize)\n                        else:\n                            raise ValueError(\"Scalar in a non-square block.\")\n                row_list.append(val)\n            rows_list.append(row_list)\n        return BlockMatrix(rows_list)\n\n    return self * other

     def _blockadd(self, other):
         if (isinstance(other, BlockMatrix)
--------
