diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..a57484205a
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,61 @@
+import sys
+import os
+import django
+from django.conf import settings
+from django.db import models
+from django.db.models import F, Sum
+from django.db.models.functions import Coalesce
+
+# Minimal Django setup
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY="abc123",
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': os.path.join(BASE_DIR, 'test_db.sqlite3'),
+        }
+    },
+
+
+class TestAppConfig(AppConfig):
+    name = 'test_app'
+    label = 'test_app'
+
+INSTALLED_APPS=["test_app"]
+)
+
+django.setup()
+
+class TestModel(models.Model):
+    id = models.AutoField(primary_key=True)
+    class Meta:
+        app_label = 'test_app'
+# Define a minimal model
+class Book(models.Model):
+    id = models.AutoField(primary_key=True)
+
+if __name__ == "__main__":
+    # Migrate database and create some rows
+    from django.core.management import call_command
+
+    call_command("migrate", verbosity=0)
+
+    if not Book.objects.exists():
+        Book.objects.create()  # create at least one book
+        Book.objects.create()
+        Book.objects.create()
+
+    # Attempt to reproduce the bug:
+    try:
+        # Remove the aggregated param first to confirm it works
+        print("Without default param:", Book.objects.annotate(idx=F("id")).aggregate(Sum("id")))
+
+        # Now add the default param to confirm the bug
+        print("With default=0 param:", Book.objects.annotate(idx=F("id")).aggregate(Sum("id", default=0)))
+    except Exception as e:
+        print("Error hit!", e)
+        sys.exit(1)
+
+    sys.exit(0)
\ No newline at end of file
diff --git a/test_db.sqlite3 b/test_db.sqlite3
new file mode 100644
index 0000000000..e69de29bb2
