diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..a74f23b57f
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,34 @@
+import numpy as np
+from astropy.nddata import NDDataRef
+
+array = np.array([[0, 1, 0], [1, 0, 1], [0, 1, 0]])
+mask = np.array([[0, 1, 64], [8, 0, 1], [2, 1, 0]])
+
+nref_nomask = NDDataRef(array)
+nref_mask = NDDataRef(array, mask=mask)
+
+print("Testing multiply no mask by constant (no mask * no mask)...")
+result_1 = nref_nomask.multiply(1., handle_mask=np.bitwise_or)
+print("Result mask:", result_1.mask)
+
+print("Testing multiply no mask by itself (no mask * no mask)...")
+result_2 = nref_nomask.multiply(nref_nomask, handle_mask=np.bitwise_or)
+print("Result mask:", result_2.mask)
+
+print("Testing multiply mask by constant (mask * no mask)...")
+try:
+    result_3 = nref_mask.multiply(1., handle_mask=np.bitwise_or)
+    print("Result mask:", result_3.mask)
+except Exception as e:
+    print("Error occurred:", e)
+
+print("Testing multiply mask by itself (mask * mask)...")
+result_4 = nref_mask.multiply(nref_mask, handle_mask=np.bitwise_or)
+print("Result mask:", result_4.mask)
+
+print("Testing multiply mask by no mask (mask * no mask)...")
+try:
+    result_5 = nref_mask.multiply(nref_nomask, handle_mask=np.bitwise_or)
+    print("Result mask:", result_5.mask)
+except Exception as e:
+    print("Error occurred:", e)
\ No newline at end of file
