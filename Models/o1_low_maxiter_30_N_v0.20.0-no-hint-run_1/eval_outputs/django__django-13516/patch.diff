diff --git a/django/core/management/base.py b/django/core/management/base.py
index e6cbf8c64f..6100fc4967 100644
--- a/django/core/management/base.py
+++ b/django/core/management/base.py
@@ -151,6 +151,9 @@ class OutputWrapper(TextIOBase):
         self._out.write(style_func(msg))


+def flush(self):
+    if hasattr(self._out, 'flush'):
+        self._out.flush()
 class BaseCommand:
     """
     The base class from which all management commands ultimately
diff --git a/reproduce_flush_issue.py b/reproduce_flush_issue.py
new file mode 100644
index 0000000000..5a2bb1cac3
--- /dev/null
+++ b/reproduce_flush_issue.py
@@ -0,0 +1,19 @@
+import os
+import sys
+import django
+from django.core.management import call_command
+
+def main():
+    # Point to a minimal settings module. Adjust if needed.
+    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "test_settings")
+    django.setup()
+
+    # We'll run the 'migrate' command as an example.
+    # The issue described is that flush() is not honored
+    # and the output doesn't appear until the process completes.
+    print("Starting migrate... (If flush is broken, this may not appear immediately.)", flush=True)
+    call_command("migrate")
+    print("Migrate complete.")
+
+if __name__ == "__main__":
+    main()
\ No newline at end of file
diff --git a/test_settings.py b/test_settings.py
new file mode 100644
index 0000000000..f095ce1bd7
--- /dev/null
+++ b/test_settings.py
@@ -0,0 +1,11 @@
+SECRET_KEY = 'test'
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+]
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
\ No newline at end of file
