diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py
index 23c3a08c67..74c5c48c6a 100644
--- a/django/template/defaultfilters.py
+++ b/django/template/defaultfilters.py
@@ -184,6 +184,8 @@ def floatformat(text, arg=-1):
     units = len(tupl[1])
     units += -tupl[2] if m else tupl[2]
     prec = abs(p) + units + 1
+    if prec < 1:
+        prec = 1

     # Avoid conversion to scientific notation by accessing `sign`, `digits`,
     # and `exponent` from Decimal.as_tuple() directly.
diff --git a/reproduce_floatformat_error.py b/reproduce_floatformat_error.py
new file mode 100644
index 0000000000..ce0ae53d4d
--- /dev/null
+++ b/reproduce_floatformat_error.py
@@ -0,0 +1,33 @@
+from decimal import Decimal
+import sys
+
+# Attempt to replicate the issue described in the PR:
+# floatformat('0.00', 0) or floatformat(Decimal('0.00'), 0) both throw a ValueError.
+
+def main():
+    try:
+        from django.conf import settings
+        if not settings.configured:
+            settings.configure(
+                USE_I18N=False,
+                USE_L10N=False,
+                USE_TZ=False,
+            )
+        from django.template.defaultfilters import floatformat
+    except ImportError as e:
+        print("Could not import floatformat from django.template.defaultfilters:", e)
+        sys.exit(1)
+
+    values = [
+        ("string '0.00'", '0.00'),
+        ("Decimal('0.00')", Decimal('0.00')),
+    ]
+
+    for label, val in values:
+        try:
+            print(f"{label} floatformat(..., 0) =>", floatformat(val, 0))
+        except Exception as e:
+            print(f"{label} raised an exception:", e)
+
+if __name__ == "__main__":
+    main()
\ No newline at end of file
