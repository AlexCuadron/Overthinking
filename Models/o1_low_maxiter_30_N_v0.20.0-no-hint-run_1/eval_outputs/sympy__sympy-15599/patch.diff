diff --git a/repro.py b/repro.py
new file mode 100644
index 0000000000..d1f1b30b5e
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,6 @@
+from sympy import Symbol, Mod, sympify
+
+i = Symbol('i', integer=True)
+expr = sympify('3*i % 2')
+print(expr)
+
diff --git a/sympy/core/mod.py b/sympy/core/mod.py
index eae25630cc..1401eda05a 100644
--- a/sympy/core/mod.py
+++ b/sympy/core/mod.py
@@ -123,9 +123,11 @@ def doit(p, q):
             for arg in p.args:
                 both_l[isinstance(arg, cls)].append(arg)

-            if mod_l and all(inner.args[1] == q for inner in mod_l):
+            was = non_mod_l[:]
+            non_mod_l = [cls(x, q) for x in non_mod_l]
+            changed = was != non_mod_l
+            if changed or (mod_l and all(inner.args[1] == q for inner in mod_l)):
                 # finding distributive term
-                non_mod_l = [cls(x, q) for x in non_mod_l]
                 mod = []
                 non_mod = []
                 for j in non_mod_l:
