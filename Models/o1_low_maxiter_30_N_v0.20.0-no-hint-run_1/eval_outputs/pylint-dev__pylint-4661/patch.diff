diff --git a/bug_repro.py b/bug_repro.py
new file mode 100644
index 000000000..6ddc3230f
--- /dev/null
+++ b/bug_repro.py
@@ -0,0 +1,41 @@
+#!/usr/bin/env python3
+
+import os
+import subprocess
+import sys
+import shutil
+import tempfile
+
+def main():
+    # We'll run pylint on a simple python file and see if it creates a "~/.pylint.d" directory.
+    # For demonstration, let's create a small python file in a temp directory, run pylint, check for .pylint.d
+
+    temp_dir = tempfile.mkdtemp()
+    test_file_path = os.path.join(temp_dir, "test_sample.py")
+    with open(test_file_path, "w") as f:
+        f.write("print('Hello Pylint')")
+
+    print(f"Created test file at {test_file_path}")
+    cmd = ["pylint", test_file_path, "--persistent=y"]  # forcing creation of a persistent data directory
+    print(f"Running: {' '.join(cmd)}")
+    try:
+        subprocess.run(cmd, check=False)
+    except FileNotFoundError:
+        print("pylint not found! Perhaps install it first.")
+        sys.exit(1)
+
+    home_dir = os.path.expanduser("~")
+    pylint_dot_dir = os.path.join(home_dir, ".pylint.d")
+    if os.path.isdir(pylint_dot_dir):
+        print(f".pylint.d directory created in home directory: {pylint_dot_dir}")
+    else:
+        print("No .pylint.d directory found in home directory, maybe not reproduced?")
+
+    try:
+        shutil.rmtree(temp_dir)
+        print(f"Cleaned up temp directory {temp_dir}")
+    except:
+        pass
+
+if __name__ == "__main__":
+    main()
\ No newline at end of file
diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py
index 84774d0e3..5a03f4ad2 100644
--- a/pylint/config/__init__.py
+++ b/pylint/config/__init__.py
@@ -56,6 +56,7 @@ __all__ = [
 ]

 USER_HOME = os.path.expanduser("~")
+xdg_data_home = os.environ.get("XDG_DATA_HOME", os.path.join(USER_HOME, ".local", "share"))
 if "PYLINTHOME" in os.environ:
     PYLINT_HOME = os.environ["PYLINTHOME"]
     if USER_HOME == "~":
@@ -63,7 +64,7 @@ if "PYLINTHOME" in os.environ:
 elif USER_HOME == "~":
     PYLINT_HOME = ".pylint.d"
 else:
-    PYLINT_HOME = os.path.join(USER_HOME, ".pylint.d")
+    PYLINT_HOME = os.path.join(xdg_data_home, "pylint")


 def _get_pdata_path(base_name, recurs):
