diff --git a/before_fix.png b/before_fix.png
new file mode 100644
index 0000000000..c19584b2aa
Binary files /dev/null and b/before_fix.png differ
diff --git a/lib/matplotlib/backends/backend_agg.py b/lib/matplotlib/backends/backend_agg.py
index 7d038a998f..a333ad844a 100644
--- a/lib/matplotlib/backends/backend_agg.py
+++ b/lib/matplotlib/backends/backend_agg.py
@@ -206,7 +206,12 @@ class RendererAgg(RendererBase):
         # space) in the following call to draw_text_image).
         font.set_text(s, 0, flags=get_hinting_flag())
         font.draw_glyphs_to_bitmap(
-            antialiased=mpl.rcParams['text.antialiased'])
+            antialiased=(
+                mpl.rcParams['text.antialiased']
+                if mtext is None or mtext.get_antialiased() is None
+                else mtext.get_antialiased()
+            )
+        )
         d = font.get_descent() / 64.0
         # The descent needs to be adjusted for the angle.
         xo, yo = font.get_bitmap_offset()
diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py
index 4591316cf9..3aa190a34a 100644
--- a/lib/matplotlib/text.py
+++ b/lib/matplotlib/text.py
@@ -187,6 +187,18 @@ class Text(Artist):
             linespacing = 1.2  # Maybe use rcParam later.
         self.set_linespacing(linespacing)
         self.set_rotation_mode(rotation_mode)
+# Allow per-Text configurable antialias, defaulting to None => fall back to rcParams
+        self._antialiased = None
+
+        def set_antialiased(self, aa):
+            if aa is None:
+                self._antialiased = None
+            else:
+                self._antialiased = bool(aa)
+            self.stale = True
+
+        def get_antialiased(self):
+            return self._antialiased

     def update(self, kwargs):
         # docstring inherited
