diff --git a/doc/exts/pylint_options.py b/doc/exts/pylint_options.py
index ed5af3194..7c50ab274 100644
--- a/doc/exts/pylint_options.py
+++ b/doc/exts/pylint_options.py
@@ -19,7 +19,7 @@ from pylint.checkers import initialize as initialize_checkers
 from pylint.checkers.base_checker import BaseChecker
 from pylint.extensions import initialize as initialize_extensions
 from pylint.lint import PyLinter
-from pylint.typing import OptionDict
+from pylint.pl_typing import OptionDict
 from pylint.utils import get_rst_title


diff --git a/pylint/checkers/base/name_checker/checker.py b/pylint/checkers/base/name_checker/checker.py
index 3f30fd8f0..4f7f0fae3 100644
--- a/pylint/checkers/base/name_checker/checker.py
+++ b/pylint/checkers/base/name_checker/checker.py
@@ -29,7 +29,7 @@ from pylint.checkers.base.name_checker.naming_style import (
     _create_naming_options,
 )
 from pylint.checkers.utils import is_property_deleter, is_property_setter
-from pylint.typing import Options
+from pylint.pl_typing import Options

 if TYPE_CHECKING:
     from pylint.lint.pylinter import PyLinter
diff --git a/pylint/checkers/base/name_checker/naming_style.py b/pylint/checkers/base/name_checker/naming_style.py
index 3b7833049..e3ea29dae 100644
--- a/pylint/checkers/base/name_checker/naming_style.py
+++ b/pylint/checkers/base/name_checker/naming_style.py
@@ -8,7 +8,7 @@ import re
 from re import Pattern

 from pylint import constants
-from pylint.typing import OptionDict, Options
+from pylint.pl_typing import OptionDict, Options


 class NamingStyle:
diff --git a/pylint/checkers/base_checker.py b/pylint/checkers/base_checker.py
index 778345de8..68fdb783a 100644
--- a/pylint/checkers/base_checker.py
+++ b/pylint/checkers/base_checker.py
@@ -19,7 +19,7 @@ from pylint.constants import _MSG_ORDER, MAIN_CHECKER_NAME, WarningScope
 from pylint.exceptions import InvalidMessageError
 from pylint.interfaces import Confidence, IRawChecker, ITokenChecker, implements
 from pylint.message.message_definition import MessageDefinition
-from pylint.typing import (
+from pylint.pl_typing import (
     ExtraMessageOptions,
     MessageDefinitionTuple,
     OptionDict,
diff --git a/pylint/checkers/classes/class_checker.py b/pylint/checkers/classes/class_checker.py
index ba5edad64..63532b903 100644
--- a/pylint/checkers/classes/class_checker.py
+++ b/pylint/checkers/classes/class_checker.py
@@ -36,7 +36,7 @@ from pylint.checkers.utils import (
     uninferable_final_decorators,
 )
 from pylint.interfaces import HIGH, INFERENCE
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple

 if sys.version_info >= (3, 8):
     from functools import cached_property
diff --git a/pylint/checkers/deprecated.py b/pylint/checkers/deprecated.py
index 78d73586b..675765152 100644
--- a/pylint/checkers/deprecated.py
+++ b/pylint/checkers/deprecated.py
@@ -15,7 +15,7 @@ from astroid import nodes
 from pylint.checkers import utils
 from pylint.checkers.base_checker import BaseChecker
 from pylint.checkers.utils import get_import_name, infer_all, safe_infer
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple

 ACCEPTABLE_NODES = (
     astroid.BoundMethod,
diff --git a/pylint/checkers/design_analysis.py b/pylint/checkers/design_analysis.py
index c97393bcc..4b0c0c172 100644
--- a/pylint/checkers/design_analysis.py
+++ b/pylint/checkers/design_analysis.py
@@ -16,7 +16,7 @@ from astroid import nodes

 from pylint.checkers import BaseChecker
 from pylint.checkers.utils import only_required_for_messages
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple

 if TYPE_CHECKING:
     from pylint.lint import PyLinter
diff --git a/pylint/checkers/exceptions.py b/pylint/checkers/exceptions.py
index 38ecc437c..0ab872cda 100644
--- a/pylint/checkers/exceptions.py
+++ b/pylint/checkers/exceptions.py
@@ -16,7 +16,7 @@ from astroid import nodes, objects
 from pylint import checkers
 from pylint.checkers import utils
 from pylint.interfaces import HIGH
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple

 if TYPE_CHECKING:
     from pylint.lint import PyLinter
diff --git a/pylint/checkers/format.py b/pylint/checkers/format.py
index 7489207e5..63486a930 100644
--- a/pylint/checkers/format.py
+++ b/pylint/checkers/format.py
@@ -27,7 +27,7 @@ from pylint.checkers.utils import (
     only_required_for_messages,
 )
 from pylint.constants import WarningScope
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple
 from pylint.utils.pragma_parser import OPTION_PO, PragmaParserError, parse_pragma

 if TYPE_CHECKING:
diff --git a/pylint/checkers/imports.py b/pylint/checkers/imports.py
index 97d9d51f6..061c2f77b 100644
--- a/pylint/checkers/imports.py
+++ b/pylint/checkers/imports.py
@@ -26,7 +26,7 @@ from pylint.checkers.utils import (
 from pylint.exceptions import EmptyReportError
 from pylint.graph import DotBackend, get_cycles
 from pylint.reporters.ureports.nodes import Paragraph, Section, VerbatimText
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple
 from pylint.utils import IsortDriver

 if TYPE_CHECKING:
diff --git a/pylint/checkers/logging.py b/pylint/checkers/logging.py
index a82afcdef..6a606aa00 100644
--- a/pylint/checkers/logging.py
+++ b/pylint/checkers/logging.py
@@ -15,7 +15,7 @@ from astroid import nodes
 from pylint import checkers
 from pylint.checkers import utils
 from pylint.checkers.utils import infer_all
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple

 if TYPE_CHECKING:
     from pylint.lint import PyLinter
diff --git a/pylint/checkers/misc.py b/pylint/checkers/misc.py
index 623db8c78..3b1dc8173 100644
--- a/pylint/checkers/misc.py
+++ b/pylint/checkers/misc.py
@@ -13,7 +13,7 @@ from typing import TYPE_CHECKING
 from astroid import nodes

 from pylint.checkers import BaseRawFileChecker, BaseTokenChecker
-from pylint.typing import ManagedMessage
+from pylint.pl_typing import ManagedMessage
 from pylint.utils.pragma_parser import OPTION_PO, PragmaParserError, parse_pragma

 if TYPE_CHECKING:
diff --git a/pylint/checkers/newstyle.py b/pylint/checkers/newstyle.py
index 0aed97183..1a38aa331 100644
--- a/pylint/checkers/newstyle.py
+++ b/pylint/checkers/newstyle.py
@@ -17,7 +17,7 @@ from pylint.checkers.utils import (
     node_frame_class,
     only_required_for_messages,
 )
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple

 if TYPE_CHECKING:
     from pylint.lint import PyLinter
diff --git a/pylint/checkers/similar.py b/pylint/checkers/similar.py
index 77f2fc835..89e5ececd 100644
--- a/pylint/checkers/similar.py
+++ b/pylint/checkers/similar.py
@@ -50,7 +50,7 @@ from astroid import nodes

 from pylint.checkers import BaseChecker, BaseRawFileChecker, table_lines_from_stats
 from pylint.reporters.ureports.nodes import Table
-from pylint.typing import MessageDefinitionTuple, Options
+from pylint.pl_typing import MessageDefinitionTuple, Options
 from pylint.utils import LinterStats, decoding_stream

 if TYPE_CHECKING:
diff --git a/pylint/checkers/stdlib.py b/pylint/checkers/stdlib.py
index 884f72d90..93786808c 100644
--- a/pylint/checkers/stdlib.py
+++ b/pylint/checkers/stdlib.py
@@ -15,7 +15,7 @@ from astroid import nodes

 from pylint import interfaces
 from pylint.checkers import BaseChecker, DeprecatedMixin, utils
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple

 if TYPE_CHECKING:
     from pylint.lint import PyLinter
diff --git a/pylint/checkers/strings.py b/pylint/checkers/strings.py
index e7f14e20b..92ba111b6 100644
--- a/pylint/checkers/strings.py
+++ b/pylint/checkers/strings.py
@@ -20,7 +20,7 @@ from astroid import nodes
 from pylint.checkers import BaseChecker, BaseRawFileChecker, BaseTokenChecker, utils
 from pylint.checkers.utils import only_required_for_messages
 from pylint.interfaces import HIGH
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple

 if TYPE_CHECKING:
     from pylint.lint import PyLinter
diff --git a/pylint/checkers/typecheck.py b/pylint/checkers/typecheck.py
index dd289bfbe..eecc6d783 100644
--- a/pylint/checkers/typecheck.py
+++ b/pylint/checkers/typecheck.py
@@ -48,7 +48,7 @@ from pylint.checkers.utils import (
     supports_setitem,
 )
 from pylint.interfaces import INFERENCE
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple

 if sys.version_info >= (3, 8):
     from functools import cached_property
diff --git a/pylint/checkers/variables.py b/pylint/checkers/variables.py
index b945bfbd8..7b28e9da5 100644
--- a/pylint/checkers/variables.py
+++ b/pylint/checkers/variables.py
@@ -28,7 +28,7 @@ from pylint.checkers.utils import (
 )
 from pylint.constants import PY39_PLUS, TYPING_TYPE_CHECKS_GUARDS
 from pylint.interfaces import CONTROL_FLOW, HIGH, INFERENCE, INFERENCE_FAILURE
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple

 if sys.version_info >= (3, 8):
     from functools import cached_property
diff --git a/pylint/config/arguments_manager.py b/pylint/config/arguments_manager.py
index eda1a583d..d4ff49b7b 100644
--- a/pylint/config/arguments_manager.py
+++ b/pylint/config/arguments_manager.py
@@ -42,7 +42,7 @@ from pylint.config.option_parser import OptionParser
 from pylint.config.options_provider_mixin import OptionsProviderMixIn
 from pylint.config.utils import _convert_option_to_argument, _parse_rich_type_value
 from pylint.constants import MAIN_CHECKER_NAME
-from pylint.typing import DirectoryNamespaceDict, OptionDict
+from pylint.pl_typing import DirectoryNamespaceDict, OptionDict

 if sys.version_info >= (3, 11):
     import tomllib
diff --git a/pylint/config/arguments_provider.py b/pylint/config/arguments_provider.py
index 2ab44b161..4bb065cfb 100644
--- a/pylint/config/arguments_provider.py
+++ b/pylint/config/arguments_provider.py
@@ -13,7 +13,7 @@ from collections.abc import Iterator
 from typing import Any

 from pylint.config.arguments_manager import _ArgumentsManager
-from pylint.typing import OptionDict, Options
+from pylint.pl_typing import OptionDict, Options


 class UnsupportedAction(Exception):
diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py
index 2f0aac75f..bccf08560 100644
--- a/pylint/config/option_manager_mixin.py
+++ b/pylint/config/option_manager_mixin.py
@@ -20,7 +20,7 @@ from typing import Any, TextIO
 from pylint import utils
 from pylint.config.option import Option
 from pylint.config.option_parser import OptionParser
-from pylint.typing import OptionDict
+from pylint.pl_typing import OptionDict

 if sys.version_info >= (3, 11):
     import tomllib
diff --git a/pylint/config/options_provider_mixin.py b/pylint/config/options_provider_mixin.py
index 5b20a290f..068aa100b 100644
--- a/pylint/config/options_provider_mixin.py
+++ b/pylint/config/options_provider_mixin.py
@@ -7,7 +7,7 @@ import warnings

 from pylint.config.callback_actions import _CallbackAction
 from pylint.config.option import _validate
-from pylint.typing import Options
+from pylint.pl_typing import Options


 class UnsupportedAction(Exception):
diff --git a/pylint/constants.py b/pylint/constants.py
index a609f9cd6..d68cd587e 100644
--- a/pylint/constants.py
+++ b/pylint/constants.py
@@ -14,7 +14,7 @@ import astroid
 import platformdirs

 from pylint.__pkginfo__ import __version__
-from pylint.typing import MessageTypesFullName
+from pylint.pl_typing import MessageTypesFullName

 PY38_PLUS = sys.version_info[:2] >= (3, 8)
 PY39_PLUS = sys.version_info[:2] >= (3, 9)
diff --git a/pylint/lint/base_options.py b/pylint/lint/base_options.py
index d909e39c5..1d2fa3e58 100644
--- a/pylint/lint/base_options.py
+++ b/pylint/lint/base_options.py
@@ -28,7 +28,7 @@ from pylint.config.callback_actions import (
     _MessageHelpAction,
     _OutputFormatAction,
 )
-from pylint.typing import Options
+from pylint.pl_typing import Options

 if TYPE_CHECKING:
     from pylint.lint import PyLinter, Run
diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py
index 5cacc0371..635bc9965 100644
--- a/pylint/lint/expand_modules.py
+++ b/pylint/lint/expand_modules.py
@@ -11,7 +11,7 @@ from re import Pattern

 from astroid import modutils

-from pylint.typing import ErrorDescriptionDict, ModuleDescriptionDict
+from pylint.pl_typing import ErrorDescriptionDict, ModuleDescriptionDict


 def _modpath_from_file(filename: str, is_namespace: bool, path: list[str]) -> list[str]:
@@ -52,6 +52,7 @@ def _is_ignored_file(
     ignore_list_re: list[Pattern[str]],
     ignore_list_paths_re: list[Pattern[str]],
 ) -> bool:
+    element = element.replace("\\", "/")
     basename = os.path.basename(element)
     return (
         basename in ignore_list
diff --git a/pylint/lint/message_state_handler.py b/pylint/lint/message_state_handler.py
index 8415c8854..b6fb8d959 100644
--- a/pylint/lint/message_state_handler.py
+++ b/pylint/lint/message_state_handler.py
@@ -19,7 +19,7 @@ from pylint.constants import (
 )
 from pylint.interfaces import HIGH
 from pylint.message import MessageDefinition
-from pylint.typing import ManagedMessage
+from pylint.pl_typing import ManagedMessage
 from pylint.utils.pragma_parser import (
     OPTION_PO,
     InvalidPragmaError,
diff --git a/pylint/lint/parallel.py b/pylint/lint/parallel.py
index 646d26994..a40f10b0c 100644
--- a/pylint/lint/parallel.py
+++ b/pylint/lint/parallel.py
@@ -15,7 +15,7 @@ import dill
 from pylint import reporters
 from pylint.lint.utils import _patch_sys_path
 from pylint.message import Message
-from pylint.typing import FileItem
+from pylint.pl_typing import FileItem
 from pylint.utils import LinterStats, merge_stats

 try:
diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py
index e2bbf061e..47ab464a5 100644
--- a/pylint/lint/pylinter.py
+++ b/pylint/lint/pylinter.py
@@ -52,7 +52,7 @@ from pylint.message import Message, MessageDefinition, MessageDefinitionStore
 from pylint.reporters.base_reporter import BaseReporter
 from pylint.reporters.text import TextReporter
 from pylint.reporters.ureports import nodes as report_nodes
-from pylint.typing import (
+from pylint.pl_typing import (
     DirectoryNamespaceDict,
     FileItem,
     ManagedMessage,
diff --git a/pylint/message/message.py b/pylint/message/message.py
index 4efa3f124..aa0cca545 100644
--- a/pylint/message/message.py
+++ b/pylint/message/message.py
@@ -9,7 +9,7 @@ from warnings import warn

 from pylint.constants import MSG_TYPES
 from pylint.interfaces import UNDEFINED, Confidence
-from pylint.typing import MessageLocationTuple
+from pylint.pl_typing import MessageLocationTuple


 @dataclass(unsafe_hash=True)
diff --git a/pylint/typing.py b/pylint/pl_typing.py
similarity index 100%
rename from pylint/typing.py
rename to pylint/pl_typing.py
diff --git a/pylint/pyreverse/main.py b/pylint/pyreverse/main.py
index 043e2a3f3..4ee898a54 100644
--- a/pylint/pyreverse/main.py
+++ b/pylint/pyreverse/main.py
@@ -22,7 +22,7 @@ from pylint.pyreverse.utils import (
     check_if_graphviz_supports_format,
     insert_default_options,
 )
-from pylint.typing import Options
+from pylint.pl_typing import Options

 DIRECTLY_SUPPORTED_FORMATS = (
     "dot",
diff --git a/pylint/reporters/reports_handler_mix_in.py b/pylint/reporters/reports_handler_mix_in.py
index 32a7190e7..514c7a6f2 100644
--- a/pylint/reporters/reports_handler_mix_in.py
+++ b/pylint/reporters/reports_handler_mix_in.py
@@ -10,7 +10,7 @@ from typing import TYPE_CHECKING, DefaultDict, List, Tuple

 from pylint.exceptions import EmptyReportError
 from pylint.reporters.ureports.nodes import Section
-from pylint.typing import ReportsCallable
+from pylint.pl_typing import ReportsCallable
 from pylint.utils import LinterStats

 if TYPE_CHECKING:
diff --git a/pylint/utils/linterstats.py b/pylint/utils/linterstats.py
index 11338850c..d2647f218 100644
--- a/pylint/utils/linterstats.py
+++ b/pylint/utils/linterstats.py
@@ -7,7 +7,7 @@ from __future__ import annotations
 import sys
 from typing import cast

-from pylint.typing import MessageTypesFullName
+from pylint.pl_typing import MessageTypesFullName

 if sys.version_info >= (3, 8):
     from typing import Literal, TypedDict
diff --git a/pylint/utils/utils.py b/pylint/utils/utils.py
index 6a4277642..d999c7875 100644
--- a/pylint/utils/utils.py
+++ b/pylint/utils/utils.py
@@ -38,7 +38,7 @@ from typing import (
 from astroid import Module, modutils, nodes

 from pylint.constants import PY_EXTS
-from pylint.typing import OptionDict
+from pylint.pl_typing import OptionDict

 if sys.version_info >= (3, 8):
     from typing import Literal
diff --git a/tests/benchmark/test_baseline_benchmarks.py b/tests/benchmark/test_baseline_benchmarks.py
index 6fb1cdf18..9daa66936 100644
--- a/tests/benchmark/test_baseline_benchmarks.py
+++ b/tests/benchmark/test_baseline_benchmarks.py
@@ -18,7 +18,7 @@ from pylint.checkers import BaseRawFileChecker
 from pylint.lint import PyLinter, check_parallel
 from pylint.testutils import GenericTestReporter as Reporter
 from pylint.testutils._run import _Run as Run
-from pylint.typing import FileItem
+from pylint.pl_typing import FileItem
 from pylint.utils import register_plugins


diff --git a/tests/config/unittest_config.py b/tests/config/unittest_config.py
index 8c668aa52..fad45fa95 100644
--- a/tests/config/unittest_config.py
+++ b/tests/config/unittest_config.py
@@ -14,7 +14,7 @@ import pytest
 from pylint import config
 from pylint.checkers import BaseChecker
 from pylint.testutils import CheckerTestCase, set_config
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple


 def test__regexp_validator_valid() -> None:
diff --git a/tests/lint/unittest_expand_modules.py b/tests/lint/unittest_expand_modules.py
index 15f72d0c5..3d574e74f 100644
--- a/tests/lint/unittest_expand_modules.py
+++ b/tests/lint/unittest_expand_modules.py
@@ -12,7 +12,7 @@ import pytest
 from pylint.checkers import BaseChecker
 from pylint.lint.expand_modules import _is_in_ignore_list_re, expand_modules
 from pylint.testutils import CheckerTestCase, set_config
-from pylint.typing import MessageDefinitionTuple
+from pylint.pl_typing import MessageDefinitionTuple


 def test__is_in_ignore_list_re_match() -> None:
diff --git a/tests/lint/unittest_lint.py b/tests/lint/unittest_lint.py
index 3dbde39ce..025805e60 100644
--- a/tests/lint/unittest_lint.py
+++ b/tests/lint/unittest_lint.py
@@ -44,7 +44,7 @@ from pylint.message import Message
 from pylint.reporters import text
 from pylint.testutils import create_files
 from pylint.testutils._run import _Run as Run
-from pylint.typing import MessageLocationTuple
+from pylint.pl_typing import MessageLocationTuple
 from pylint.utils import FileState, print_full_documentation, tokenize_module

 if os.name == "java":
diff --git a/tests/message/unittest_message.py b/tests/message/unittest_message.py
index d0805e337..7138f3e47 100644
--- a/tests/message/unittest_message.py
+++ b/tests/message/unittest_message.py
@@ -9,7 +9,7 @@ from collections.abc import ValuesView
 from pylint.interfaces import HIGH
 from pylint.message import Message
 from pylint.message.message_definition import MessageDefinition
-from pylint.typing import MessageLocationTuple
+from pylint.pl_typing import MessageLocationTuple


 def test_new_message(message_definitions: ValuesView[MessageDefinition]) -> None:
diff --git a/tests/test_check_parallel.py b/tests/test_check_parallel.py
index 259c236d4..807539357 100644
--- a/tests/test_check_parallel.py
+++ b/tests/test_check_parallel.py
@@ -24,7 +24,7 @@ from pylint.lint.parallel import _worker_check_single_file as worker_check_singl
 from pylint.lint.parallel import _worker_initialize as worker_initialize
 from pylint.lint.parallel import check_parallel
 from pylint.testutils import GenericTestReporter as Reporter
-from pylint.typing import FileItem
+from pylint.pl_typing import FileItem
 from pylint.utils import LinterStats, ModuleStats


diff --git a/tests/testutils/test_output_line.py b/tests/testutils/test_output_line.py
index 2a21ce1fd..304d6a0e4 100644
--- a/tests/testutils/test_output_line.py
+++ b/tests/testutils/test_output_line.py
@@ -14,7 +14,7 @@ from pylint.constants import PY38_PLUS
 from pylint.interfaces import HIGH, INFERENCE, Confidence
 from pylint.message import Message
 from pylint.testutils.output_line import OutputLine
-from pylint.typing import MessageLocationTuple
+from pylint.pl_typing import MessageLocationTuple


 @pytest.fixture()
diff --git a/tests/unittest_reporting.py b/tests/unittest_reporting.py
index ebc4a225f..505bf592a 100644
--- a/tests/unittest_reporting.py
+++ b/tests/unittest_reporting.py
@@ -19,7 +19,7 @@ from pylint import checkers
 from pylint.lint import PyLinter
 from pylint.reporters import BaseReporter
 from pylint.reporters.text import ParseableTextReporter, TextReporter
-from pylint.typing import FileItem
+from pylint.pl_typing import FileItem

 if TYPE_CHECKING:
     from pylint.reporters.ureports.nodes import Section
