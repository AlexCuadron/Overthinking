diff --git a/xarray/coding/variables.py b/xarray/coding/variables.py
index b035ff82..7f079910 100644
--- a/xarray/coding/variables.py
+++ b/xarray/coding/variables.py
@@ -316,12 +316,31 @@ class UnsignedIntegerCoder(VariableCoder):
                     if "_FillValue" in attrs:
                         new_fill = unsigned_dtype.type(attrs["_FillValue"])
                         attrs["_FillValue"] = new_fill
+
+                elif unsigned == "false" and data.dtype.kind == "u":
+                    signed_dtype = np.dtype("i%s" % data.dtype.itemsize)
+                    transform = partial(np.asarray, dtype=signed_dtype)
+                    data = lazy_elemwise_func(data, transform, signed_dtype)
+                    if "_FillValue" in attrs:
+                        new_fill = signed_dtype.type(attrs["_FillValue"])
+                        attrs["_FillValue"] = new_fill
+
+                else:
+                    # If it's integer data but doesn't match the recognized 'unsigned' patterns, just warn
+                    warnings.warn(
+                        f"variable %r has _Unsigned={unsigned!r} on integer data, no known conversion performed." % name,
+                        SerializationWarning,
+                        stacklevel=3,
+                    )
             else:
-                warnings.warn(
-                    "variable %r has _Unsigned attribute but is not "
-                    "of integer type. Ignoring attribute." % name,
-                    SerializationWarning,
-                    stacklevel=3,
-                )
+                # Attempt a fallback for float or other data by forcing to byte
+                dt_char = "i" if unsigned == "false" else "u"
+                new_dtype = np.dtype(f"{dt_char}1")
+                transform = partial(np.asarray, dtype=new_dtype)
+                data = lazy_elemwise_func(data, transform, new_dtype)
+                if "_FillValue" in attrs:
+                    fillval = attrs["_FillValue"]
+                    new_fill = new_dtype.type(fillval)
+                    attrs["_FillValue"] = new_fill

         return Variable(dims, data, attrs, encoding)
