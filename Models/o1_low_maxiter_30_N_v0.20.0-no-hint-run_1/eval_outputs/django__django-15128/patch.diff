diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index aaf35ee37c..bbfdaac893 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -846,7 +846,30 @@ class Query(BaseExpression):
         relabelling any references to them in select columns and the where
         clause.
         """
-        assert set(change_map).isdisjoint(change_map.values())
+        # If there is overlap between the keys and values in change_map,
+# we handle it by picking fresh aliases to avoid collisions.
+temp_map = dict(change_map)
+used_alias_values = set(change_map.values())
+for old_alias in list(temp_map.keys()):
+    new_alias = temp_map[old_alias]
+    while new_alias in temp_map or new_alias in used_alias_values:
+        # increment suffix until we find an unused alias
+        if new_alias[0].isalpha():
+            # Example: if new_alias is 'T4', let's parse out the number
+            prefix = ''.join(filter(str.isalpha, new_alias))
+            suffix = new_alias[len(prefix):]
+            try:
+                suffix_int = int(suffix)
+            except ValueError:
+                suffix_int = 0
+            suffix_int += 1
+            new_alias = prefix + str(suffix_int)
+        else:
+            new_alias += 'x'  # fallback
+    used_alias_values.add(new_alias)
+    temp_map[old_alias] = new_alias
+
+change_map = temp_map

         # 1. Update references in "select" (normal columns plus aliases),
         # "group by" and "where".
