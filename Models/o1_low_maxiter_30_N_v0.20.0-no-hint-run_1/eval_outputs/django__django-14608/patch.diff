diff --git a/repro_formset_error.py b/repro_formset_error.py
new file mode 100644
index 0000000000..c0a9053cb7
--- /dev/null
+++ b/repro_formset_error.py
@@ -0,0 +1,60 @@
+import sys
+import os
+
+# We'll do a basic Django setup so we can run a minimal script that reproduces
+# the absence of 'nonform' CSS class in formset errors.
+
+# Minimal Django settings for standalone usage:
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'repro_settings')
+
+from django.conf import settings
+if not settings.configured:
+    settings.configure(
+        SECRET_KEY='secret-key',
+        DEBUG=True,
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+    )
+
+import django
+django.setup()
+
+from django import forms
+from django.forms import formsets
+
+# A simple form with a single required field
+class SimpleForm(forms.Form):
+    name = forms.CharField(required=True)
+
+# A formset for the above form
+SimpleFormSet = formsets.formset_factory(SimpleForm, extra=0, min_num=2, validate_min=True)
+
+def main():
+    # Provide no management form data, to simulate an error
+    # The formset will have a "not enough forms" type of error,
+    # which is considered a non-form error, typically shown in
+    # formset.non_form_errors().
+    data = {}
+    formset = SimpleFormSet(data=data, prefix='myformset')
+    if not formset.is_valid():
+        # Print out the errors and check if "nonform" is present in the rendered HTML
+        print("Formset valid? ", formset.is_valid())
+        print("Formset non-form errors: ", formset.non_form_errors())
+        html_output = str(formset.as_p())
+        print("=== Rendered Formset HTML ===")
+        print(html_output)
+        print("=== End of Rendered Formset HTML ===")
+        print("If we see a 'nonform' CSS class for the non-form errors, that means it's implemented properly.")
+    else:
+        print("Unexpected: The formset should have errors but it's marked valid.")
+
+if __name__ == '__main__':
+    main()
\ No newline at end of file
