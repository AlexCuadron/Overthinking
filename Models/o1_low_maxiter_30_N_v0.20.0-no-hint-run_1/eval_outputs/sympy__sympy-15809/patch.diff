diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py
index 5f9fe73c5c..73759a5fab 100644
--- a/sympy/functions/elementary/miscellaneous.py
+++ b/sympy/functions/elementary/miscellaneous.py
@@ -340,7 +340,11 @@ def real_root(arg, n=None, evaluate=None):
 class MinMaxBase(Expr, LatticeOp):
     def __new__(cls, *args, **assumptions):
         if not args:
-            raise ValueError("The Max/Min functions must have arguments.")
+            from sympy import oo, NegativeInfinity
+            if cls.__name__ == "Min":
+                return oo
+            elif cls.__name__ == "Max":
+                return -oo

         args = (sympify(arg) for arg in args)

@@ -762,6 +766,11 @@ def _eval_is_negative(self):
         return fuzzy_and(a.is_negative for a in self.args)


+def __new__(cls, *args, **kwargs):
+    from sympy import oo
+    if not args:
+        return oo
+    return super(Min, cls).__new__(cls, *args, **kwargs)
 class Min(MinMaxBase, Application):
     """
     Return, if possible, the minimum value of the list.
@@ -788,6 +797,11 @@ class Min(MinMaxBase, Application):
     Min(n, -7)

     See Also
+def __new__(cls, *args, **kwargs):
+    from sympy import NegativeInfinity
+    if not args:
+        return NegativeInfinity
+    return super(Max, cls).__new__(cls, *args, **kwargs)
     ========

     Max : find maximum values
