diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py
index c6b511f206..6b75038a54 100644
--- a/sympy/simplify/simplify.py
+++ b/sympy/simplify/simplify.py
@@ -251,10 +251,26 @@ def posify(eq):
             eq[i] = e.subs(reps)
         return f(eq), {r: s for s, r in reps.items()}

-    reps = {s: Dummy(s.name, positive=True)
-                 for s in eq.free_symbols if s.is_positive is None}
-    eq = eq.subs(reps)
-    return eq, {r: s for s, r in reps.items()}
+    def _copy_extra_assumptions(_src, _t):
+        for _a_ in ('finite','integer','rational','irrational','prime','composite','even','odd','real','extended_real'):
+            if getattr(_src, f'is_{_a_}') is True:
+                _t._assumptions[_a_] = True
+            if _a_ == 'finite':
+                _t._assumptions['infinite'] = False
+                _t._assumptions['extended_real'] = True
+    _r_ = {}
+    for _s_ in eq.free_symbols:
+        if _s_.is_positive is None:
+            _d_ = Dummy(_s_.name, positive=True)
+            if _s_.is_finite is True:
+                _d_.is_finite = True
+                _d_._assumptions['finite'] = True
+                _d_._assumptions['infinite'] = False
+                _d_._assumptions['extended_real'] = True
+            _copy_extra_assumptions(_s_, _d_)
+            _r_[_s_] = _d_
+    eq = eq.subs(_r_)
+    return eq, {v: k for k, v in _r_.items()}


 def hypersimp(f, k):
