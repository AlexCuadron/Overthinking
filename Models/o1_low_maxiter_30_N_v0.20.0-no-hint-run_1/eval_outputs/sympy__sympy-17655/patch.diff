diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..017b02b197
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,18 @@
+import sys
+from sympy import geometry as ge
+import sympy
+
+def main():
+    point1 = ge.Point(0,0)
+    point2 = ge.Point(1,1)
+    print("This line works fine:")
+    print(point1 + point2 * sympy.sympify(2.0))
+    print("This line should generate the error:")
+    print(point1 + sympy.sympify(2.0) * point2)
+
+if __name__ == "__main__":
+    try:
+        main()
+    except Exception as e:
+        print("Caught exception:", e)
+        sys.exit(1)
\ No newline at end of file
diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py
index 7c978c47be..a091b33106 100644
--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -216,6 +216,18 @@ def __add__(self, other):
         try:
             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))
         except TypeError:
+            from sympy.core.mul import Mul
+            if isinstance(other, Mul):
+                factors = other.as_ordered_factors()
+                factor = None
+                pt = None
+                for f in factors:
+                    if f.is_number:
+                        factor = f if factor is None else factor*f
+                    elif isinstance(f, Point):
+                        pt = f
+                if factor is not None and pt is not None:
+                    return self.__add__(pt*factor)
             raise GeometryError("Don't know how to add {} and a Point object".format(other))

         coords = [simplify(a + b) for a, b in zip(s, o)]
