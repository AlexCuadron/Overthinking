diff --git a/db.sqlite3 b/db.sqlite3
new file mode 100644
index 0000000000..19206f1ddc
Binary files /dev/null and b/db.sqlite3 differ
diff --git a/manage.py b/manage.py
new file mode 100644
index 0000000000..68a62dff60
--- /dev/null
+++ b/manage.py
@@ -0,0 +1,15 @@
+#!/usr/bin/env python
+import os
+import sys
+
+if __name__ == "__main__":
+    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "reproduce_error_settings")
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
\ No newline at end of file
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..65d746f444
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,35 @@
+import os
+import django
+from django.conf import settings
+from django.db import models
+import uuid
+
+# We'll create a minimal Django settings configuration dynamically:
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+settings.configure(
+    SECRET_KEY='testkey',
+    DEBUG=True,
+    INSTALLED_APPS=[
+        'testapp1',
+        'testapp2',
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+        }
+    },
+    MIDDLEWARE=[],
+)
+
+django.setup()
+
+# We simulate the scenario described in the PR:
+# testapp1/models.py has a model App1 with "another_app" as UUIDField,
+# testapp2/models.py has a model App2 with a UUID primary key.
+
+# Then we'll attempt to switch "another_app" in App1 to a ForeignKey(App2),
+# and we'll run makemigrations and migrate to see if the migration indeed
+# has the correct dependency or fails with the mentioned error.
+
+print("Reproduce script loaded. Next step: run makemigrations/migrate manually.")
\ No newline at end of file
diff --git a/reproduce_error_settings.py b/reproduce_error_settings.py
new file mode 100644
index 0000000000..80ddfca8e3
--- /dev/null
+++ b/reproduce_error_settings.py
@@ -0,0 +1,27 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+
+SECRET_KEY = 'testkey'
+DEBUG = True
+ALLOWED_HOSTS = []
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'testapp1',
+    'testapp2',
+]
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+MIDDLEWARE = []
+
+ROOT_URLCONF = None
+
+TEMPLATES = []
\ No newline at end of file
diff --git a/testapp1/apps.py b/testapp1/apps.py
new file mode 100644
index 0000000000..2cfcb4bade
--- /dev/null
+++ b/testapp1/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class TestApp1Config(AppConfig):
+    name = 'testapp1'
\ No newline at end of file
diff --git a/testapp1/migrations/0001_initial.py b/testapp1/migrations/0001_initial.py
new file mode 100644
index 0000000000..7d861bc77b
--- /dev/null
+++ b/testapp1/migrations/0001_initial.py
@@ -0,0 +1,23 @@
+# Generated by Django 3.0 on 2025-01-22 17:02
+
+from django.db import migrations, models
+import uuid
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='App1',
+            fields=[
+                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='identifier')),
+                ('text', models.CharField(max_length=100, verbose_name='text')),
+                ('another_app', models.UUIDField(blank=True, null=True, verbose_name='another app')),
+            ],
+        ),
+    ]
diff --git a/testapp1/migrations/__init__.py b/testapp1/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/testapp1/models.py b/testapp1/models.py
new file mode 100644
index 0000000000..05237a6831
--- /dev/null
+++ b/testapp1/models.py
@@ -0,0 +1,18 @@
+import uuid
+from django.db import models
+from django.utils.translation import gettext_lazy as _
+
+class App1(models.Model):
+    id = models.UUIDField(
+        primary_key=True,
+        unique=True,
+        default=uuid.uuid4,
+        editable=False,
+        verbose_name=_('identifier')
+    )
+    text = models.CharField(max_length=100, verbose_name=_('text'))
+    another_app = models.UUIDField(
+        null=True,
+        blank=True,
+        verbose_name=_('another app')
+    )
\ No newline at end of file
diff --git a/testapp2/apps.py b/testapp2/apps.py
new file mode 100644
index 0000000000..09ec334b9c
--- /dev/null
+++ b/testapp2/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class TestApp2Config(AppConfig):
+    name = 'testapp2'
\ No newline at end of file
diff --git a/testapp2/migrations/0001_initial.py b/testapp2/migrations/0001_initial.py
new file mode 100644
index 0000000000..3d6426e864
--- /dev/null
+++ b/testapp2/migrations/0001_initial.py
@@ -0,0 +1,22 @@
+# Generated by Django 3.0 on 2025-01-22 17:02
+
+from django.db import migrations, models
+import uuid
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='App2',
+            fields=[
+                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='identifier')),
+                ('text', models.CharField(max_length=100, verbose_name='text')),
+            ],
+        ),
+    ]
diff --git a/testapp2/migrations/__init__.py b/testapp2/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/testapp2/models.py b/testapp2/models.py
new file mode 100644
index 0000000000..27b5126909
--- /dev/null
+++ b/testapp2/models.py
@@ -0,0 +1,13 @@
+import uuid
+from django.db import models
+from django.utils.translation import gettext_lazy as _
+
+class App2(models.Model):
+    id = models.UUIDField(
+        primary_key=True,
+        unique=True,
+        default=uuid.uuid4,
+        editable=False,
+        verbose_name=_('identifier')
+    )
+    text = models.CharField(max_length=100, verbose_name=_('text'))
\ No newline at end of file
