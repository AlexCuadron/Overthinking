diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py
index 88b35fc435..24d5afeb2e 100644
--- a/django/utils/numberformat.py
+++ b/django/utils/numberformat.py
@@ -30,7 +30,7 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',
         # Format values with more than 200 digits (an arbitrary cutoff) using
         # scientific notation to avoid high memory usage in {:f}'.format().
         _, digits, exponent = number.as_tuple()
-        if abs(exponent) + len(digits) > 200:
+        if decimal_pos is None and abs(exponent) + len(digits) > 200:
             number = '{:e}'.format(number)
             coefficient, exponent = number.split('e')
             # Format the coefficient.
@@ -39,6 +39,11 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',
                 thousand_sep, force_grouping, use_l10n,
             )
             return '{}e{}'.format(coefficient, exponent)
+        elif decimal_pos is not None and abs(number) < Decimal('1e-{}'.format(decimal_pos)):
+            # The number is smaller in absolute value than what can be shown
+            # with the given decimal_pos, so display as 0... with decimal_pos digits.
+            # We'll finalize str_number below in the normal decimal handling logic.
+            str_number = '0'
         else:
             str_number = '{:f}'.format(number)
     else:
