diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 9b00e24509..c70826a22c 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -31,9 +31,17 @@ from .utils import get_callable

 class ResolverMatch:
     def __init__(self, func, args, kwargs, url_name=None, app_names=None, namespaces=None, route=None, tried=None):
-        self.func = func
-        self.args = args
-        self.kwargs = kwargs
+        if isinstance(func, functools.partial):
+            _unwrapped_func = func.func
+            _unwrapped_args = func.args + tuple(args)
+            _unwrapped_kwargs = {**func.keywords, **kwargs}
+            self.func = _unwrapped_func
+            self.args = _unwrapped_args
+            self.kwargs = _unwrapped_kwargs
+        else:
+            self.func = func
+            self.args = args
+            self.kwargs = kwargs
         self.url_name = url_name
         self.route = route
         self.tried = tried
@@ -59,10 +67,29 @@ class ResolverMatch:
         return (self.func, self.args, self.kwargs)[index]

     def __repr__(self):
-        return "ResolverMatch(func=%s, args=%s, kwargs=%s, url_name=%s, app_names=%s, namespaces=%s, route=%s)" % (
-            self._func_path, self.args, self.kwargs, self.url_name,
-            self.app_names, self.namespaces, self.route,
-        )
+        if isinstance(self.func, functools.partial):
+            func_module = self.func.func.__module__
+            func_name = getattr(self.func.func, '__name__', repr(self.func.func))
+            return "ResolverMatch(func=%s.%s, args=%s, kwargs=%s, url_name=%s, app_names=%s, namespaces=%s, route=%s)" % (
+                func_module,
+                func_name,
+                self.args,
+                self.kwargs,
+                self.url_name,
+                self.app_names,
+                self.namespaces,
+                self.route,
+            )
+        else:
+            return "ResolverMatch(func=%s, args=%s, kwargs=%s, url_name=%s, app_names=%s, namespaces=%s, route=%s)" % (
+                self._func_path,
+                self.args,
+                self.kwargs,
+                self.url_name,
+                self.app_names,
+                self.namespaces,
+                self.route,
+            )


 def get_resolver(urlconf=None):
